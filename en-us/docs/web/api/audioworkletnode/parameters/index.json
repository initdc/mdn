{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"AudioWorkletNode.parameters","mdn_url":"/en-US/docs/Web/API/AudioWorkletNode/parameters","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioWorkletNode/AudioWorkletNode\"><code>AudioWorkletNode()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><em><code>parameters</code></em></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletNode/port\"><code>port</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioWorkletNode/processorerror_event\"><code>processorerror</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Audio API</summary><ol><li><a href=\"/en-US/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The read-only <strong><code>parameters</code></strong> property of the\n  <a href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a> interface returns the associated\n  <a href=\"/en-US/docs/Web/API/AudioParamMap\"><code>AudioParamMap</code></a> â€” that is, a <code>Map</code>-like collection of\n  <a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a> objects. They are instantiated during creation of the\n  underlying <a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a> according to its\n  <a href=\"/en-US/docs/Web/API/AudioWorkletProcessor/parameterDescriptors\" title=\"parameterDescriptors\"><code>parameterDescriptors</code></a> static\n  getter.\n</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>\n  The <a href=\"/en-US/docs/Web/API/AudioParamMap\"><code>AudioParamMap</code></a> object containing <a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a> instances.\n  They can be automated in the same way as with default <code>AudioNode</code>s, and their\n  calculated values can be used in the <a href=\"/en-US/docs/Web/API/AudioWorkletProcessor/process\" title=\"process\"><code>process</code></a> method of your <a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a>.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  To demonstrate creation and usage of custom <code>AudioParam</code>s, we'll expand the\n  example from <a href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a> page. There we've created a simple node\n  which outputs white noise. Here, additionally, we'll create a custom gain parameter, so\n  we can directly change volume of the output (although you could use\n  <a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a> to achieve this as well).\n</p>\n<p>\n  First, we need to define a custom <code>AudioWorkletProcessor</code>, and register it.\n  Note that this should be done in a separate file.\n</p>\n<p>\n  We expand the processor by adding a static\n  <a href=\"/en-US/docs/Web/API/AudioWorkletProcessor/parameterDescriptors\" title=\"parameterDescriptors\"><code>parameterDescriptors</code></a>\n  getter. It will be used internally by the <code>AudioWorkletNode</code> constructor to\n  populate its <code>parameters</code> with instantiated <code>AudioParam</code> objects.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// white-noise-processor.js</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WhiteNoiseProcessor</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AudioWorkletProcessor</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">parameterDescriptors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"customGain\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">defaultValue</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">minValue</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">maxValue</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">automationRate</span><span class=\"token operator\">:</span> <span class=\"token string\">\"a-rate\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">inputs<span class=\"token punctuation\">,</span> outputs<span class=\"token punctuation\">,</span> parameters</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> outputs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    output<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">channel</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> channel<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        channel<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n          <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>\n          <span class=\"token punctuation\">(</span>parameters<span class=\"token punctuation\">[</span><span class=\"token string\">\"customGain\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span>\n            <span class=\"token operator\">?</span> parameters<span class=\"token punctuation\">[</span><span class=\"token string\">\"customGain\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n            <span class=\"token operator\">:</span> parameters<span class=\"token punctuation\">[</span><span class=\"token string\">\"customGain\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// note: a parameter contains an array of 128 values (one value for each of 128 samples),</span>\n        <span class=\"token comment\">// however it may contain a single value which is to be used for all 128 samples</span>\n        <span class=\"token comment\">// if no automation is scheduled for the moment.</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">registerProcessor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"white-noise-processor\"</span><span class=\"token punctuation\">,</span> WhiteNoiseProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  Next, in our main scripts file we'll load the processor, create an instance of\n  <code>AudioWorkletNode</code> passing it the name of the processor, and connect the node\n  to an audio graph.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> audioContext <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> audioContext<span class=\"token punctuation\">.</span>audioWorklet<span class=\"token punctuation\">.</span><span class=\"token function\">addModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"white-noise-processor.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> whiteNoiseNode <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioWorkletNode</span><span class=\"token punctuation\">(</span>\n  audioContext<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"white-noise-processor\"</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwhiteNoiseNode<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>audioContext<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Now we can change the gain on the node like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> gainParam <span class=\"token operator\">=</span> whiteNoiseNode<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"customGain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngainParam<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> audioContext<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngainParam<span class=\"token punctuation\">.</span><span class=\"token function\">linearRampToValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> audioContext<span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-audioworkletnode-parameters","title":"Web Audio API"}],"query":"api.AudioWorkletNode.parameters"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.AudioWorkletNode.parameters","dataURL":"/en-US/docs/Web/API/AudioWorkletNode/parameters/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Using the Web Audio API</a></li>\n</ul>"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The read-only parameters property of the\n  AudioWorkletNode interface returns the associated\n  AudioParamMap â€” that is, a Map-like collection of\n  AudioParam objects. They are instantiated during creation of the\n  underlying AudioWorkletProcessor according to its\n  parameterDescriptors static\n  getter.","popularity":0,"modified":"2022-09-22T21:37:38.000Z","other_translations":[{"title":"AudioWorkletNode.parameters","locale":"ko","native":"í•œêµ­ì–´"}],"source":{"folder":"en-us/web/api/audioworkletnode/parameters","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/audioworkletnode/parameters/index.md","last_commit_url":"https://github.com/mdn/content/commit/3a8ddeac2f0957b775b1c6c237f565b266c274c0","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/AudioWorkletNode","title":"AudioWorkletNode"},{"uri":"/en-US/docs/Web/API/AudioWorkletNode/parameters","title":"AudioWorkletNode.parameters"}],"pageTitle":"AudioWorkletNode.parameters - Web APIs | MDN","noIndexing":false}}