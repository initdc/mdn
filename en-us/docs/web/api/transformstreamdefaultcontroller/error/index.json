{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"TransformStreamDefaultController.error()","mdn_url":"/en-US/docs/Web/API/TransformStreamDefaultController/error","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>error()</code></strong> method of the <a href=\"/en-US/docs/Web/API/TransformStreamDefaultController\"><code>TransformStreamDefaultController</code></a> interface errors both sides of the stream. Any further interactions with it will fail with the given error message, and any chunks in the queue will be discarded.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">error(reason)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"reason\"><code>reason</code></dt>\n  <dd>\n    <p>A string containing the error message to be returned on any further interaction with the stream.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In this example the <code>error()</code> method is used when a chunk could not be transformed.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> transformContent <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* … */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">chunk<span class=\"token punctuation\">,</span> controller</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      chunk <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">applyMyTransformation</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      controller<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Unable to transform chunk: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>err<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// …</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// …</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://streams.spec.whatwg.org/#ts-default-controller-error","title":"Streams Standard"}],"query":"api.TransformStreamDefaultController.error"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.TransformStreamDefaultController.error","dataURL":"/en-US/docs/Web/API/TransformStreamDefaultController/error/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The error() method of the TransformStreamDefaultController interface errors both sides of the stream. Any further interactions with it will fail with the given error message, and any chunks in the queue will be discarded.","popularity":0,"modified":"2022-09-13T06:39:07.000Z","other_translations":[{"title":"TransformStreamDefaultController.error()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/transformstreamdefaultcontroller/error","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/transformstreamdefaultcontroller/error/index.md","last_commit_url":"https://github.com/mdn/content/commit/b9bcca1e96839aa9cddea3263196e0cf4656d387","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/TransformStreamDefaultController","title":"TransformStreamDefaultController"},{"uri":"/en-US/docs/Web/API/TransformStreamDefaultController/error","title":"TransformStreamDefaultController.error()"}],"pageTitle":"TransformStreamDefaultController.error() - Web APIs | MDN","noIndexing":false}}