{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"BarcodeDetector","mdn_url":"/en-US/docs/Web/API/BarcodeDetector","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/BarcodeDetector\"><code>BarcodeDetector</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/BarcodeDetector/BarcodeDetector\"><code>BarcodeDetector()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/BarcodeDetector/detect\"><code>detect()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/BarcodeDetector/getSupportedFormats\"><code>getSupportedFormats()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>BarcodeDetector</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Barcode_Detection_API\"><code>Barcode Detection API</code></a> allows detection of linear and two dimensional barcodes in images.</p>"}},{"type":"prose","value":{"id":"constructors","title":"Constructors","isH3":false,"content":"<dl>\n  <dt id=\"barcodedetector.barcodedetector\"><a href=\"/en-US/docs/Web/API/BarcodeDetector/BarcodeDetector\" title=\"BarcodeDetector.BarcodeDetector()\"><code>BarcodeDetector.BarcodeDetector()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Creates and returns a <code>BarcodeDetector</code> object, with optional <code>barcodeDetectorOptions</code></p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"detect\"><a href=\"/en-US/docs/Web/API/BarcodeDetector/detect\" title=\"detect()\"><code>detect()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which fulfills with an array of <code>detectedBarcode</code> objects with the following properties:</p>\n    <ul>\n      <li><code>boundingBox</code>: A <a href=\"/en-US/docs/Web/API/DOMRectReadOnly\"><code>DOMRectReadOnly</code></a>, which returns the dimensions of a rectangle representing the extent of a detected barcode, aligned with the image.</li>\n      <li><code>cornerPoints</code>: The x and y co-ordinates of the four corner points of the detected barcode relative to the image, starting with the top left and working clockwise. This may not be square due to perspective distortions within the image.</li>\n      <li><code>format</code>: The detected barcode format. (For a full list of formats see the [landing page])</li>\n      <li><code>rawValue</code>: A string decoded from the barcode data.</li>\n    </ul>\n  </dd>\n  <dt id=\"getsupportedformats\"><a href=\"/en-US/docs/Web/API/BarcodeDetector/getSupportedFormats\" title=\"getSupportedFormats()\"><code>getSupportedFormats()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which fulfills with an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of supported <a href=\"/en-US/docs/Web/API/Barcode_Detection_API#supported_barcode_formats\">barcode format types</a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"creating_a_detector","title":"Creating A Detector","isH3":true,"content":"<p>This example creates a new barcode detector object, with specified supported formats and tests for browser compatibility.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// create new detector</span>\n<span class=\"token keyword\">const</span> barcodeDetector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BarcodeDetector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">formats</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"code_39\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"codabar\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ean_13\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// check compatibility</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>barcodeDetector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Barcode Detector supported!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Barcode Detector is not supported by this browser.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"getting_supported_formats","title":"Getting Supported Formats","isH3":true,"content":"<p>The following example calls the <code>getSupportFormat()</code> static method and logs the results to the console.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// check supported types</span>\nBarcodeDetector<span class=\"token punctuation\">.</span><span class=\"token function\">getSupportedFormats</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">supportedFormats</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  supportedFormats<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">format</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"detect_barcodes","title":"Detect Barcodes","isH3":true,"content":"<p>This example uses the <code>detect()</code> method to detect the barcodes within the given image. These are iterated over and the barcode data is logged to the console.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>barcodeDetector\n  <span class=\"token punctuation\">.</span><span class=\"token function\">detect</span><span class=\"token punctuation\">(</span>imageEl<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">barcodes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    barcodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">barcode</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>barcode<span class=\"token punctuation\">.</span>rawData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/shape-detection-api/#barcode-detection-api","title":"Accelerated Shape Detection in Images"}],"query":"api.BarcodeDetector"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.BarcodeDetector","dataURL":"/en-US/docs/Web/API/BarcodeDetector/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.barcodefaq.com/\" class=\"external\" rel=\" noopener\">barcodefaq.com: A website with information about different barcodes and examples of the different types.</a></li>\n  <li><a href=\"https://web.dev/shape-detection/#barcodedetector\" class=\"external\" rel=\" noopener\">Accelerated Shape Detection in Images</a></li>\n</ul>"}}],"toc":[{"text":"Constructors","id":"constructors"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The BarcodeDetector interface of the Barcode Detection API allows detection of linear and two dimensional barcodes in images.","popularity":0.0008,"modified":"2022-09-15T18:16:38.000Z","other_translations":[{"title":"BarcodeDetector","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/barcodedetector","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/barcodedetector/index.md","last_commit_url":"https://github.com/mdn/content/commit/418f9cf461de0c7845665c0c677ad0667740f52a","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/BarcodeDetector","title":"BarcodeDetector"}],"pageTitle":"BarcodeDetector - Web APIs | MDN","noIndexing":false}}