{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WebHID API","mdn_url":"/en-US/docs/Web/API/WebHID_API","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebHID_API\">WebHID API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/HID\"><code>HID</code></a></li><li><a href=\"/en-US/docs/Web/API/HIDDevice\"><code>HIDDevice</code></a></li><li><a href=\"/en-US/docs/Web/API/HIDInputReportEvent\"><code>HIDInputReportEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/HIDConnectionEvent\"><code>HIDConnectionEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Navigator/hid\"><code>Navigator.hid</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>A Human Interface Device (HID) is a type of device that takes input from or provides output to humans. It also refers to the HID protocol, a standard for bi-directional communication between a host and a device that is designed to simplify the installation procedure. The HID protocol was originally developed for USB devices but has since been implemented over many other protocols, including Bluetooth.</p>"}},{"type":"prose","value":{"id":"interfaces","title":"Interfaces","isH3":false,"content":"<dl>\n  <dt id=\"hid\"><a href=\"/en-US/docs/Web/API/HID\"><code>HID</code></a></dt>\n  <dd>\n    <p>Provides methods for connecting to HID devices, listing attached HID devices and event handlers for connected HID devices.</p>\n  </dd>\n  <dt id=\"hiddevice\"><a href=\"/en-US/docs/Web/API/HIDDevice\"><code>HIDDevice</code></a></dt>\n  <dd>\n    <p>Represents an HID device. It's possible for a single physical device to be represented by multiple <code>HIDDevice</code> objects.</p>\n  </dd>\n  <dt id=\"hidinputreportevent\"><a href=\"/en-US/docs/Web/API/HIDInputReportEvent\"><code>HIDInputReportEvent</code></a></dt>\n  <dd>\n    <p>Passed to <a href=\"/en-US/docs/Web/API/HIDDevice/inputreport_event\"><code>HIDDevice.inputreport_event</code></a> when an input report is received from any associated HID device.</p>\n  </dd>\n  <dt id=\"hidconnectionevent\"><a href=\"/en-US/docs/Web/API/HIDConnectionEvent\"><code>HIDConnectionEvent</code></a></dt>\n  <dd>\n    <p>Passed to <a href=\"/en-US/docs/Web/API/HID/connect_event\"><code>HID.onconnect</code></a> and <a href=\"/en-US/docs/Web/API/HID/disconnect_event\"><code>HID.ondisconnect</code></a> when a device is connected or disconnected.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>You can connect to a device with the <a href=\"/en-US/docs/Web/API/HID/requestDevice\" title=\"requestDevice()\"><code>requestDevice()</code></a> method. In this case, we select from all the available devices.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> device <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>hid<span class=\"token punctuation\">.</span><span class=\"token function\">requestDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">filters</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// A popup titled `... wants to connect to a HID Device` with `Cancel` and `Connect` buttons will show up with a device list to select from.</span>\n<span class=\"token comment\">// Select one and click on `Connect` button. Then the device will be an array with the selected device in it.</span>\n</code></pre></div>\n<p>We can retrieve all the devices the website has been granted access to previously and log the device names to the console.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> devices <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>hid<span class=\"token punctuation\">.</span><span class=\"token function\">getDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndevices<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">device</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">HID: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>device<span class=\"token punctuation\">.</span>productName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>We can register event listeners for disconnection of any HID devices.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>navigator<span class=\"token punctuation\">.</span>hid<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'disconnect'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">HID disconnected: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">.</span>productName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// For example, when my connected keyboard gets disconnected, the log in the console will show:</span>\n<span class=\"token comment\">// HID disconnected: USB Keyboard</span>\n<span class=\"token comment\">// {</span>\n<span class=\"token comment\">//    bubbles: false</span>\n<span class=\"token comment\">//    cancelBubble: false</span>\n<span class=\"token comment\">//    cancelable: false</span>\n<span class=\"token comment\">//    composed: false</span>\n<span class=\"token comment\">//    currentTarget: HID {onconnect: null, ondisconnect: null}</span>\n<span class=\"token comment\">//    defaultPrevented: false</span>\n<span class=\"token comment\">//    device: HIDDevice {oninputreport: null, opened: false, vendorId: 6700, productId: 11555, productName: \"USB Keyboard\", â€¦}</span>\n<span class=\"token comment\">//    eventPhase: 0</span>\n<span class=\"token comment\">//    isTrusted: true</span>\n<span class=\"token comment\">//    path: []</span>\n<span class=\"token comment\">//    returnValue: true</span>\n<span class=\"token comment\">//    srcElement: HID {onconnect: null, ondisconnect: null}</span>\n<span class=\"token comment\">//    target: HID {onconnect: null, ondisconnect: null}</span>\n<span class=\"token comment\">//    timeStamp: 18176.600000023842</span>\n<span class=\"token comment\">//    type: \"disconnect\"</span>\n<span class=\"token comment\">// }</span>\n\n<span class=\"token comment\">// The event above is an instance of the HIDConnectionEvent interface.</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/webhid/#dom-hid","title":"WebHID API"}],"query":"api.HID"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.HID","dataURL":"/en-US/docs/Web/API/WebHID_API/bcd.json"}}],"toc":[{"text":"Interfaces","id":"interfaces"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"A Human Interface Device (HID) is a type of device that takes input from or provides output to humans. It also refers to the HID protocol, a standard for bi-directional communication between a host and a device that is designed to simplify the installation procedure. The HID protocol was originally developed for USB devices but has since been implemented over many other protocols, including Bluetooth.","popularity":0.0012,"modified":"2022-09-09T05:19:45.000Z","source":{"folder":"en-us/web/api/webhid_api","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/webhid_api/index.md","last_commit_url":"https://github.com/mdn/content/commit/f7dae62645a2c735ed6f6ed63f664bf279fdfc4b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WebHID_API","title":"WebHID API"}],"pageTitle":"WebHID API - Web APIs | MDN","noIndexing":false}}