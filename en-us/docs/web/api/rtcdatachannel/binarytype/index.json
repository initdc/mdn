{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"RTCDataChannel.binaryType","mdn_url":"/en-US/docs/Web/API/RTCDataChannel/binaryType","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><em><code>binaryType</code></em></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/bufferedAmount\"><code>bufferedAmount</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/bufferedAmountLowThreshold\"><code>bufferedAmountLowThreshold</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/id\"><code>id</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/label\"><code>label</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/maxPacketLifeTime\"><code>maxPacketLifeTime</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/maxRetransmits\"><code>maxRetransmits</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/negotiated\"><code>negotiated</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/ordered\"><code>ordered</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/protocol\"><code>protocol</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/readyState\"><code>readyState</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/RTCDataChannel/reliable\"><code>reliable</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/close\"><code>close()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/send\"><code>send()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/bufferedamountlow_event\"><code>bufferedamountlow</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/close_event\"><code>close</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/closing_event\"><code>closing</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/error_event\"><code>error</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/message_event\"><code>message</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/open_event\"><code>open</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebRTC</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The property <strong><code>binaryType</code></strong> on the\n  <a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> interface is a string which specifies\n  the type of object which should be used to represent binary data received\n  on the <a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>. Values allowed by the\n  <a href=\"/en-US/docs/Web/API/WebSocket/binaryType\"><code>WebSocket.binaryType</code></a> property are also permitted here:\n  <code>blob</code> if <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a> objects are being used or\n  <code>arraybuffer</code> if <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> objects are being used. The\n  default is <code>blob</code>.\n</p>\n<p>\n  When a binary message is received on the data channel, the resulting\n  <a href=\"/en-US/docs/Web/API/RTCDataChannel/message_event\" title=\"message\"><code>message</code></a> event's <a href=\"/en-US/docs/Web/API/MessageEvent/data\"><code>MessageEvent.data</code></a> property is an object of\n  the type specified by the <code>binaryType</code>.\n</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>A string that can have one of these values:</p>\n<dl>\n  <dt id=\"blob\"><code>\"blob\"</code></dt>\n  <dd>\n    <p>Received binary messages' contents will be contained in <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a> objects.</p>\n  </dd>\n  <dt id=\"arraybuffer\"><code>\"arraybuffer\"</code></dt>\n  <dd>\n    <p>\n      Received binary messages' contents will be contained in <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>\n      objects.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>\n  This code configures a data channel to receive binary data in\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> objects, and establishes a listener for <a href=\"/en-US/docs/Web/API/RTCDataChannel/message_event\" title=\"message\"><code>message</code></a>\n  events which constructs a string representing the received data as a list of hexadecimal\n  byte values.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> dc <span class=\"token operator\">=</span> peerConnection<span class=\"token punctuation\">.</span><span class=\"token function\">createDataChannel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Binary\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndc<span class=\"token punctuation\">.</span>binaryType <span class=\"token operator\">=</span> <span class=\"token string\">\"arraybuffer\"</span><span class=\"token punctuation\">;</span>\n\ndc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> byteArray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> hexString <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n  byteArray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    hexString <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>byte<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-pc/#dom-datachannel-binarytype","title":"WebRTC 1.0: Real-Time Communication Between Browsers"}],"query":"api.RTCDataChannel.binaryType"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCDataChannel.binaryType","dataURL":"/en-US/docs/Web/API/RTCDataChannel/binaryType/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Using_data_channels\">Using WebRTC data channels</a></li>\n  <li><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/RTCDataChannel/send\"><code>RTCDataChannel.send()</code></a></li>\n</ul>"}}],"toc":[{"text":"Value","id":"value"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The property binaryType on the\n  RTCDataChannel interface is a string which specifies\n  the type of object which should be used to represent binary data received\n  on the RTCDataChannel. Values allowed by the\n  WebSocket.binaryType property are also permitted here:\n  blob if Blob objects are being used or\n  arraybuffer if ArrayBuffer objects are being used. The\n  default is blob.","popularity":0,"modified":"2022-09-09T05:18:40.000Z","source":{"folder":"en-us/web/api/rtcdatachannel/binarytype","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/rtcdatachannel/binarytype/index.md","last_commit_url":"https://github.com/mdn/content/commit/e0e09b1df51489867f2e74c18586d168ba5e00d1","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/RTCDataChannel","title":"RTCDataChannel"},{"uri":"/en-US/docs/Web/API/RTCDataChannel/binaryType","title":"RTCDataChannel.binaryType"}],"pageTitle":"RTCDataChannel.binaryType - Web APIs | MDN","noIndexing":false}}