{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"IdleDetector","mdn_url":"/en-US/docs/Web/API/IdleDetector","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/IdleDetector\"><code>IdleDetector</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/IdleDetector/IdleDetector\"><code>IdleDetector()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/IdleDetector/screenState\"><code>screenState</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/IdleDetector/userState\"><code>userState</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/IdleDetector/requestPermission\"><code>requestPermission()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/IdleDetector/start\"><code>start()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/IdleDetector/change_event\"><code>change</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>IdleDetector</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Idle_Detection_API\" title=\"Idle\nDetection API\">Idle\nDetection API</a> provides methods and events for detecting user activity on a device or screen.</p>\n<p>This interface requires a secure context.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/IdleDetector\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"96\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"166\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      IdleDetector\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"idledetector\"><a href=\"/en-US/docs/Web/API/IdleDetector/IdleDetector\" title=\"IdleDetector()\"><code>IdleDetector()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Creates a new <code>IdleDetector</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<ul>\n  <li>\n    <a href=\"/en-US/docs/Web/API/IdleDetector/userState\"><code>IdleDetector.userState</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg>\n    <ul>\n      <li>: Returns a string indicating whether the users has interacted with either the screen or the device since the call to <code>start()</code>.</li>\n      <li>: Returns either <code>\"active\"</code> to indicate that the user has interacted with the</li>\n    </ul>device within the threshold provided to <code>start()</code> or <code>\"idle\"</code> if they have not.\n    This attribute returns <code>null</code> before <code>start()</code> is called.\n  </li>\n  <li><a href=\"/en-US/docs/Web/API/IdleDetector/screenState\"><code>IdleDetector.screenState</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg>\n    <ul>\n      <li>\n        : Returns a string indicating whether the screen is locked, one of\n        <code>\"locked\"</code> or <code>\"unlocked\"</code>. This attribute returns <code>null</code> before <code>start()</code>\n        is called.\n      </li>\n    </ul>\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":false,"content":"<dl>\n  <dt id=\"change\"><a href=\"/en-US/docs/Web/API/IdleDetector/change_event\" title=\"change\"><code>change</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Called when the value of <code>userState</code> or <code>screenState</code> has changed.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"idledetector.requestpermission\"><a href=\"/en-US/docs/Web/API/IdleDetector/requestPermission\"><code>IdleDetector.requestPermission()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>\n      Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves when the user has chosen\n      whether to grant the origin access to their idle state. Resolves with\n      <code>\"granted\"</code> on acceptance and <code>\"denied\"</code> on refusal.\n    </p>\n  </dd>\n  <dt id=\"idledetector.start\"><a href=\"/en-US/docs/Web/API/IdleDetector/start\"><code>IdleDetector.start()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>\n      Returns a <code>Promise</code> that resolves when the detector starts listening for\n      changes in the user's idle state. <code>userState</code> and <code>screenState</code> are given\n      initial values. This method takes an optional <code>options</code> object with the <code>threshold</code> in\n      milliseconds where inactivity should be reported and <code>signal</code> for an\n      <code>AbortSignal</code> to abort the idle detector.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  The following example shows creating a detector and logging changes to the\n  user's idle state. A button is used to get the necessary user activation before\n  requesting permission.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AbortController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> signal <span class=\"token operator\">=</span> controller<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">;</span>\n\nstartButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> IdleDetector<span class=\"token punctuation\">.</span><span class=\"token function\">requestPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token string\">\"granted\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Idle detection permission denied.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> idleDetector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IdleDetector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    idleDetector<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> userState <span class=\"token operator\">=</span> idleDetector<span class=\"token punctuation\">.</span>userState<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> screenState <span class=\"token operator\">=</span> idleDetector<span class=\"token punctuation\">.</span>screenState<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Idle change: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>userState<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>screenState<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">await</span> idleDetector<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">threshold</span><span class=\"token operator\">:</span> <span class=\"token number\">60_000</span><span class=\"token punctuation\">,</span>\n      signal<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IdleDetector is active.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Deal with initialization errors like permission denied,</span>\n    <span class=\"token comment\">// running outside of top-level frame, etc.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nstopButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  controller<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IdleDetector is stopped.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/idle-detection/#api-idledetector","title":"Idle Detection API"}],"query":"api.IdleDetector"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.IdleDetector","dataURL":"/en-US/docs/Web/API/IdleDetector/bcd.json"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Properties","id":"properties"},{"text":"Events","id":"events"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The IdleDetector interface of the Idle\nDetection API provides methods and events for detecting user activity on a device or screen.","popularity":0.0002,"modified":"2022-09-11T06:43:56.000Z","source":{"folder":"en-us/web/api/idledetector","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/idledetector/index.md","last_commit_url":"https://github.com/mdn/content/commit/ff3545b816d9a945d3793ecc330a3b6cbdc59c1c","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/IdleDetector","title":"IdleDetector"}],"pageTitle":"IdleDetector - Web APIs | MDN","noIndexing":false}}