{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"RTCRtpSender.setStreams()","mdn_url":"/en-US/docs/Web/API/RTCRtpSender/setStreams","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> method <strong><code>setStreams()</code></strong>\n  associates the sender's <a href=\"/en-US/docs/Web/API/RTCRtpSender/track\" title=\"track\"><code>track</code></a> with the specified\n  <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> or array of <code>MediaStream</code> objects.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">setStreams()\nsetStreams(mediaStream)\nsetStreams(mediaStreams)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"mediastream\"><code>mediaStream</code> or <code>mediaStreams</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      An <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> object or an array of multiple\n      <code>MediaStream</code> objectsâ€”identifying the streams to which the\n      <code>RTCRtpSender</code>'s <a href=\"/en-US/docs/Web/API/RTCRtpSender/track\" title=\"track\"><code>track</code></a> belongs. If\n      this parameter isn't specified, no new streams will be associated with the track.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the sender's connection is closed.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>\n  <code>setStreams()</code> is purely additive. It doesn't remove the track from any\n  streams; it adds it to new ones. If you specify streams to which the track already\n  belongs, that stream is unaffected.\n</p>\n<p>\n  Once the track has been added to all of the streams, renegotiation of the connection\n  will be triggered by the <a href=\"/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event\" title=\"negotiationneeded\"><code>negotiationneeded</code></a> event being dispatched to the <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> to\n  which the sender belongs.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  This example adds all of an <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>'s tracks to the specified\n  stream.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">addTracksToStream</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> senders <span class=\"token operator\">=</span> pc<span class=\"token punctuation\">.</span><span class=\"token function\">getSenders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  senders<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sender</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">.</span>track <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">.</span>transport<span class=\"token punctuation\">.</span>state <span class=\"token operator\">===</span> connected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      sender<span class=\"token punctuation\">.</span><span class=\"token function\">setStreams</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  After calling the <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method\n  <a href=\"/en-US/docs/Web/API/RTCPeerConnection/getSenders\" title=\"getSenders()\"><code>getSenders()</code></a> to get the list of the\n  connection's senders, the <code>addTracksToStream()</code> function iterates over the\n  list. For each sender, if the sender's track is non-null and its transport's state is\n  <code>connected</code>, we call <code>setStreams()</code> to add the track to the\n  <code>stream</code> specified.\n</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-pc/#dom-rtcrtpsender-setstreams","title":"WebRTC 1.0: Real-Time Communication Between Browsers"}],"query":"api.RTCRtpSender.setStreams"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCRtpSender.setStreams","dataURL":"/en-US/docs/Web/API/RTCRtpSender/setStreams/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The RTCRtpSender method setStreams()\n  associates the sender's track with the specified\n  MediaStream or array of MediaStream objects.","popularity":0,"modified":"2022-09-13T06:27:50.000Z","source":{"folder":"en-us/web/api/rtcrtpsender/setstreams","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/rtcrtpsender/setstreams/index.md","last_commit_url":"https://github.com/mdn/content/commit/16e398809d62247dbadc89ff4024a0ffa4781f0e","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/RTCRtpSender","title":"RTCRtpSender"},{"uri":"/en-US/docs/Web/API/RTCRtpSender/setStreams","title":"RTCRtpSender.setStreams()"}],"pageTitle":"RTCRtpSender.setStreams() - Web APIs | MDN","noIndexing":false}}