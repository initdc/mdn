{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"OscillatorNode","mdn_url":"/en-US/docs/Web/API/OscillatorNode","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/OscillatorNode/OscillatorNode\"><code>OscillatorNode()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/OscillatorNode/detune\"><code>detune</code></a></li><li><a href=\"/en-US/docs/Web/API/OscillatorNode/frequency\"><code>frequency</code></a></li><li><a href=\"/en-US/docs/Web/API/OscillatorNode/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/OscillatorNode/setPeriodicWave\"><code>setPeriodicWave()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Audio API</summary><ol><li><a href=\"/en-US/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>OscillatorNode</code></strong> interface represents a periodic waveform, such as a sine wave. It is an <a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a> audio-processing module that causes a specified frequency of a given wave to be createdâ€”in effect, a constant tone.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/AudioNode\">\n    <rect x=\"118\" y=\"0\" width=\"75\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"155.5\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      AudioNode\n    </text>\n  </a>\n  <line x1=\"193\" y1=\"14\" x2=\"223\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"193,14 203,9 203,19 193,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\">\n    <rect x=\"223\" y=\"0\" width=\"192\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"319\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      AudioScheduledSourceNode\n    </text>\n  </a>\n  <line x1=\"415\" y1=\"14\" x2=\"445\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"415,14 425,9 425,19 415,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/OscillatorNode\" aria-current=\"page\">\n    <rect x=\"445\" y=\"0\" width=\"112\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"501\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      OscillatorNode\n    </text>\n  </a></svg>\n<table class=\"properties\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">Number of inputs</th>\n      <td><code>0</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Number of outputs</th>\n      <td><code>1</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Channel count mode</th>\n      <td><code>max</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Channel count</th>\n      <td><code>2</code> (not used in the default count mode)</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Channel interpretation</th>\n      <td><code>speakers</code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"oscillatornode\"><a href=\"/en-US/docs/Web/API/OscillatorNode/OscillatorNode\" title=\"OscillatorNode()\"><code>OscillatorNode()</code></a></dt>\n  <dd>\n    <p>Creates a new instance of an <code>OscillatorNode</code> object, optionally providing an object specifying default values for the node's <a href=\"#properties\">properties</a>. As an alternative, you can use the <a href=\"/en-US/docs/Web/API/BaseAudioContext/createOscillator\"><code>BaseAudioContext.createOscillator()</code></a> factory method; see <a href=\"/en-US/docs/Web/API/AudioNode#creating_an_audionode\">Creating an AudioNode</a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p><em>Inherits properties from its parent, <a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a>, and adds the following properties:</em></p>\n<dl>\n  <dt id=\"oscillatornode.frequency\"><a href=\"/en-US/docs/Web/API/OscillatorNode/frequency\"><code>OscillatorNode.frequency</code></a></dt>\n  <dd>\n    <p>An <a href=\"/en-US/docs/Web/API/AudioParam#a-rate\">a-rate</a> <a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a> representing the frequency of oscillation in hertz (though the <code>AudioParam</code> returned is read-only, the value it represents is not). The default value is 440 Hz (a standard middle-A note).</p>\n  </dd>\n  <dt id=\"oscillatornode.detune\"><a href=\"/en-US/docs/Web/API/OscillatorNode/detune\"><code>OscillatorNode.detune</code></a></dt>\n  <dd>\n    <p>An <a href=\"/en-US/docs/Web/API/AudioParam#a-rate\">a-rate</a> <a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a> representing detuning of oscillation in cents (though the <code>AudioParam</code> returned is read-only, the value it represents is not). The default value is 0.</p>\n  </dd>\n  <dt id=\"oscillatornode.type\"><a href=\"/en-US/docs/Web/API/OscillatorNode/type\"><code>OscillatorNode.type</code></a></dt>\n  <dd>\n    <p>A string which specifies the shape of waveform to play; this can be one of a number of standard values, or <code>custom</code> to use a <a href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a> to describe a custom waveform. Different waves will produce different tones. Standard values are <code>\"sine\"</code>, <code>\"square\"</code>, <code>\"sawtooth\"</code>, <code>\"triangle\"</code> and <code>\"custom\"</code>. The default is <code>\"sine\"</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"event_handlers","title":"Event handlers","isH3":true,"content":"<dl>\n  <dt id=\"oscillatornode.onended\"><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode/ended_event\"><code>OscillatorNode.onended</code></a></dt>\n  <dd>\n    <p>Sets the event handler for the <a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode/ended_event\" title=\"ended\"><code>ended</code></a> event, which fires when the tone has stopped playing.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p><em>Inherits methods from its parent, <a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a>, and adds the following:</em></p>\n<dl>\n  <dt id=\"oscillatornode.setperiodicwave\"><a href=\"/en-US/docs/Web/API/OscillatorNode/setPeriodicWave\"><code>OscillatorNode.setPeriodicWave()</code></a></dt>\n  <dd>\n    <p>Sets a <a href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a> which describes a periodic waveform to be used instead of one of the standard waveforms; calling this sets the <code>type</code> to <code>custom</code>.</p>\n  </dd>\n  <dt id=\"oscillatornode.start\"><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode/start\"><code>OscillatorNode.start()</code></a></dt>\n  <dd>\n    <p>Specifies the exact time to start playing the tone.</p>\n  </dd>\n  <dt id=\"oscillatornode.stop\"><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode/stop\"><code>OscillatorNode.stop()</code></a></dt>\n  <dd>\n    <p>Specifies the time to stop playing the tone.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following example shows basic usage of an <a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a> to create an oscillator node and to start playing a tone on it. For an applied example, check out our <a href=\"https://mdn.github.io/webaudio-examples/violent-theremin/\" class=\"external\" rel=\" noopener\">Violent Theremin demo</a> (<a href=\"https://github.com/mdn/webaudio-examples/blob/master/violent-theremin/scripts/app.js\" class=\"external\" rel=\" noopener\">see app.js</a> for relevant code).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// create web audio api context</span>\n<span class=\"token keyword\">const</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create Oscillator node</span>\n<span class=\"token keyword\">const</span> oscillator <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createOscillator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\noscillator<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">'square'</span><span class=\"token punctuation\">;</span>\noscillator<span class=\"token punctuation\">.</span>frequency<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">440</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// value in hertz</span>\noscillator<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>audioCtx<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\noscillator<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#OscillatorNode","title":"Web Audio API"}],"query":"api.OscillatorNode"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.OscillatorNode","dataURL":"/en-US/docs/Web/API/OscillatorNode/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Using the Web Audio API</a></li>\n</ul>"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The OscillatorNode interface represents a periodic waveform, such as a sine wave. It is an AudioScheduledSourceNode audio-processing module that causes a specified frequency of a given wave to be createdâ€”in effect, a constant tone.","popularity":0.0011,"modified":"2022-09-11T15:59:25.000Z","other_translations":[{"title":"OscillatorNode","locale":"fr","native":"FranÃ§ais"},{"title":"OscillatorNode","locale":"ja","native":"æ—¥æœ¬èªž"},{"title":"OscillatorNode","locale":"zh-CN","native":"ä¸­æ–‡ (ç®€ä½“)"}],"source":{"folder":"en-us/web/api/oscillatornode","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/oscillatornode/index.md","last_commit_url":"https://github.com/mdn/content/commit/41a60bd5745ad1a068f858186e31bb538701e728","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/OscillatorNode","title":"OscillatorNode"}],"pageTitle":"OscillatorNode - Web APIs | MDN","noIndexing":false}}