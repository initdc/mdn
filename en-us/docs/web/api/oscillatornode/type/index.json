{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"OscillatorNode.type","mdn_url":"/en-US/docs/Web/API/OscillatorNode/type","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/OscillatorNode/OscillatorNode\"><code>OscillatorNode()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/OscillatorNode/detune\"><code>detune</code></a></li><li><a href=\"/en-US/docs/Web/API/OscillatorNode/frequency\"><code>frequency</code></a></li><li><em><code>type</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/OscillatorNode/setPeriodicWave\"><code>setPeriodicWave()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Audio API</summary><ol><li><a href=\"/en-US/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>type</code></strong> property of the <a href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a> interface specifies what shape of <a href=\"https://en.wikipedia.org/wiki/Waveform\" class=\"external\" rel=\" noopener\">waveform</a> the\n  oscillator will output. There are several common waveforms available, as well as an\n  option to specify a custom waveform shape. The shape of the waveform will affect the\n  tone that is produced.\n</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>\n  A string specifying the shape of oscillator wave. The different\n  available values are:\n</p>\n<dl>\n  <dt id=\"sine\"><code>sine</code></dt>\n  <dd>\n    <p>A <a href=\"https://en.wikipedia.org/wiki/Sine_wave\" class=\"external\" rel=\" noopener\">sine wave</a>. This is the default value.</p>\n  </dd>\n  <dt id=\"square\"><code>square</code></dt>\n  <dd>\n    <p>A <a href=\"https://en.wikipedia.org/wiki/Square_wave\" class=\"external\" rel=\" noopener\">square wave</a> with a <a href=\"https://en.wikipedia.org/wiki/Duty_cycle\" class=\"external\" rel=\" noopener\">duty cycle</a> of 0.5; that is, the signal is \"high\" for half of each period.</p>\n  </dd>\n  <dt id=\"sawtooth\"><code>sawtooth</code></dt>\n  <dd>\n    <p>A <a href=\"https://en.wikipedia.org/wiki/Sawtooth_wave\" class=\"external\" rel=\" noopener\">sawtooth wave</a>.</p>\n  </dd>\n  <dt id=\"triangle\"><code>triangle</code></dt>\n  <dd>\n    <p>A <a href=\"https://en.wikipedia.org/wiki/Triangle_wave\" class=\"external\" rel=\" noopener\">triangle wave</a>.</p>\n  </dd>\n  <dt id=\"custom\"><code>custom</code></dt>\n  <dd>\n    <p>\n      A custom waveform. You never set <code>type</code> to <code>custom</code> manually;\n      instead, use the <a href=\"/en-US/docs/Web/API/OscillatorNode/setPeriodicWave\" title=\"setPeriodicWave()\"><code>setPeriodicWave()</code></a>\n      method to provide the data representing the waveform. Doing so automatically sets the\n      <code>type</code> to <code>custom</code>.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>\n      Thrown if the value <code>custom</code> was specified. To set a custom waveform, just call\n      <a href=\"/en-US/docs/Web/API/OscillatorNode/setPeriodicWave\" title=\"setPeriodicWave()\"><code>setPeriodicWave()</code></a>. Doing so\n      automatically sets the type for you.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  The following example shows basic usage of an <a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a> to create\n  an oscillator node. For an applied example, check out our <a href=\"https://mdn.github.io/webaudio-examples/violent-theremin/\" class=\"external\" rel=\" noopener\">Violent Theremin demo</a> (<a href=\"https://github.com/mdn/webaudio-examples/blob/master/violent-theremin/scripts/app.js\" class=\"external\" rel=\" noopener\">see app.js</a> for relevant code).\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// create web audio api context</span>\n<span class=\"token keyword\">const</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create Oscillator node</span>\n<span class=\"token keyword\">const</span> oscillator <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createOscillator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\noscillator<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">'square'</span><span class=\"token punctuation\">;</span>\noscillator<span class=\"token punctuation\">.</span>frequency<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">440</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// value in hertz</span>\noscillator<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-oscillatornode-type","title":"Web Audio API"}],"query":"api.OscillatorNode.type"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.OscillatorNode.type","dataURL":"/en-US/docs/Web/API/OscillatorNode/type/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Using the Web Audio API</a></li>\n</ul>"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The type property of the OscillatorNode interface specifies what shape of waveform the\n  oscillator will output. There are several common waveforms available, as well as an\n  option to specify a custom waveform shape. The shape of the waveform will affect the\n  tone that is produced.","popularity":0.0003,"modified":"2022-09-11T19:36:48.000Z","source":{"folder":"en-us/web/api/oscillatornode/type","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/oscillatornode/type/index.md","last_commit_url":"https://github.com/mdn/content/commit/20a58f1383da377a634b48902bff9b4fde9227c3","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/OscillatorNode","title":"OscillatorNode"},{"uri":"/en-US/docs/Web/API/OscillatorNode/type","title":"OscillatorNode.type"}],"pageTitle":"OscillatorNode.type - Web APIs | MDN","noIndexing":false}}