{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"SourceBuffer.changeType()","mdn_url":"/en-US/docs/Web/API/SourceBuffer/changeType","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Media_Source_Extensions_API\">Media Source Extensions API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/SourceBuffer/appendWindowEnd\"><code>appendWindowEnd</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/appendWindowStart\"><code>appendWindowStart</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/audioTracks\"><code>audioTracks</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/buffered\"><code>buffered</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/mode\"><code>mode</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/textTracks\"><code>textTracks</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/timestampOffset\"><code>timestampOffset</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/updating\"><code>updating</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/videoTracks\"><code>videoTracks</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/SourceBuffer/abort\"><code>abort()</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/appendBuffer\"><code>appendBuffer()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/API/SourceBuffer/appendBufferAsync\"><code>appendBufferAsync()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/SourceBuffer/appendStream\"><code>appendStream()</code></a></li><li><em><code>changeType()</code></em></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/remove\"><code>remove()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/API/SourceBuffer/removeAsync\"><code>removeAsync()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Media Source Extensions</summary><ol><li><a href=\"/en-US/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality\"><code>HTMLVideoElement.getVideoPlaybackQuality()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code></a></li><li><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>TextTrack.sourceBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoTrack/sourceBuffer\"><code>VideoTrack.sourceBuffer</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>changeType()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface sets the MIME type that future calls to\n  <a href=\"/en-US/docs/Web/API/SourceBuffer/appendBuffer\" title=\"appendBuffer()\"><code>appendBuffer()</code></a> should expect the new media\n  data to conform to. This makes it possible to change codecs or container type\n  mid-stream.\n</p>\n<p>\n  One scenario in which this is helpful is to support adapting the media source to\n  changing bandwidth availability, by transitioning from one codec to another as resource\n  constraints change.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">changeType(type)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"type\"><code>type</code></dt>\n  <dd>\n    <p>\n      A string specifying the MIME type that future buffers will conform\n      to.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"typeerror\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>Thrown if the specified string is empty, rather than indicating a valid MIME type.</p>\n  </dd>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>\n      Thrown if the <a href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> is not a member of the parent media source's\n      <a href=\"/en-US/docs/Web/API/MediaSource/sourceBuffers\" title=\"sourceBuffers\"><code>sourceBuffers</code></a> list, or the buffer's\n      <a href=\"/en-US/docs/Web/API/SourceBuffer/updating\" title=\"updating\"><code>updating</code></a> property indicates that a previously\n      queued <a href=\"/en-US/docs/Web/API/SourceBuffer/appendBuffer\" title=\"appendBuffer()\"><code>appendBuffer()</code></a> or\n      <a href=\"/en-US/docs/Web/API/SourceBuffer/remove\" title=\"remove()\"><code>remove()</code></a> is still being processed.\n    </p>\n  </dd>\n  <dt id=\"notsupportederror\"><code>NotSupportedError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>\n      Thrown if the specified MIME type is not supported, or is not supported with the types of\n      <a href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> objects present in the\n      <a href=\"/en-US/docs/Web/API/MediaSource/sourceBuffers\"><code>MediaSource.sourceBuffers</code></a> list.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"usage_notes","title":"Usage notes","isH3":false,"content":"<p>\n  If the parent <a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a> is in its <code>\"ended\"</code>\n  <a href=\"/en-US/docs/Web/API/MediaSource/readyState\" title=\"readyState\"><code>readyState</code></a>, calling <code>changeType()</code>\n  will transition the media source to the <code>\"open\"</code> <code>readyState</code> and\n  fire a simple event named <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>sourceopen</code></a> at the parent media source.\n</p>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.SourceBuffer.changeType","dataURL":"/en-US/docs/Web/API/SourceBuffer/changeType/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Usage notes","id":"usage_notes"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The changeType() method of the\n  SourceBuffer interface sets the MIME type that future calls to\n  appendBuffer() should expect the new media\n  data to conform to. This makes it possible to change codecs or container type\n  mid-stream.","popularity":0,"modified":"2022-09-13T06:27:50.000Z","other_translations":[{"title":"SourceBuffer.changeType()","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/sourcebuffer/changetype","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/sourcebuffer/changetype/index.md","last_commit_url":"https://github.com/mdn/content/commit/16e398809d62247dbadc89ff4024a0ffa4781f0e","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/SourceBuffer","title":"SourceBuffer"},{"uri":"/en-US/docs/Web/API/SourceBuffer/changeType","title":"SourceBuffer.changeType()"}],"pageTitle":"SourceBuffer.changeType() - Web APIs | MDN","noIndexing":false}}