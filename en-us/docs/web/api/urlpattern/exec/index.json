{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"URLPattern.exec()","mdn_url":"/en-US/docs/Web/API/URLPattern/exec","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/URL_Pattern_API\">URL Pattern API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/URLPattern\"><code>URLPattern</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/URLPattern/URLPattern\"><code>URLPattern()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/URLPattern/hash\"><code>hash</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/URLPattern/hostname\"><code>hostname</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/URLPattern/password\"><code>password</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/URLPattern/pathname\"><code>pathname</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/URLPattern/port\"><code>port</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/URLPattern/protocol\"><code>protocol</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/URLPattern/search\"><code>search</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/URLPattern/username\"><code>username</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><em><code>exec()</code></em></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/URLPattern/test\"><code>test()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>exec()</code></strong> method of the <a href=\"/en-US/docs/Web/API/URLPattern\"><code>URLPattern</code></a> interface takes a URL or\n  object of URL parts, and returns either an object containing the results of\n  matching the URL to the pattern, or <code>null</code> if the URL does not match the\n  pattern.\n</p><div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">exec(input)\nexec(input, baseURL)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"input\"><code>input</code></dt>\n  <dd>\n    <p>\n      The URL or URL parts to match against. This can either be a\n      string, or an object providing the individual URL parts.\n      The object members can be any of <code>protocol</code>, <code>username</code>, <code>password</code>,\n      <code>hostname</code>, <code>port</code>, <code>pathname</code>, <code>search</code>, <code>hash</code>, or <code>baseURL</code>. Omitted\n      parts in the object will be treated as empty strings. If the input cannot be\n      parsed, or a relative URL without a base is provided, the method will return\n      <code>null</code>.\n    </p>\n  </dd>\n  <dt id=\"baseurl\"><code>baseURL</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      A string representing the base URL to use in cases where\n      <code>input</code> is a relative URL. If not specified, it defaults to <code>undefined</code>. If\n      this parameter cannot be parsed, the method will return <code>null</code>.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  An <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>object</code></a> with an <code>inputs</code> key containing the array of arguments\n  passed into the function, and keys for each of the URL parts containing the\n  matched input, and matched groups for that part.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  This example shows how to use the <code>exec()</code> method to match a URL against a\n  pattern. The example prints the result of the <code>exec()</code> calls to the console.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> pattern <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLPattern</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http{s}?://*.example.com/books/:id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Absolute URL strings</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://example.com/books/123'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// null</span>\n<span class=\"token keyword\">let</span> match <span class=\"token operator\">=</span> pattern<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://store.example.com/books/123'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>inputs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['https://store.example.com/books/123']</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>protocol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { input: \"https\", groups: {} }</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { input: \"\", groups: {} }</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { input: \"\", groups: {} }</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { input: \"store.example.com\", groups: { \"0\": \"store\" } }</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { input: \"\", groups: {} }</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { input: \"/books/123\", groups: { \"id\": \"123\" } }</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { input: \"\", groups: {} }</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { input: \"\", groups: {} }</span>\n\n<span class=\"token comment\">// Relative URL strings</span>\npattern<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/books/123'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://store.example.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns object</span>\npattern<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/books/123'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'data:text/plain,hello world!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns object</span>\npattern<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/books/123'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns null</span>\n\n<span class=\"token comment\">// Structured objects</span>\npattern<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">pathname</span><span class=\"token operator\">:</span> <span class=\"token string\">'/books/123'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">baseURL</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://store.example.com'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns object</span>\npattern<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">protocol</span><span class=\"token operator\">:</span> <span class=\"token string\">'https'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">hostname</span><span class=\"token operator\">:</span> <span class=\"token string\">'store.example.com'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">pathname</span><span class=\"token operator\">:</span> <span class=\"token string\">'/books/123'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns object</span>\npattern<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">protocol</span><span class=\"token operator\">:</span> <span class=\"token string\">'file'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">hostname</span><span class=\"token operator\">:</span> <span class=\"token string\">'store.example.com'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">pathname</span><span class=\"token operator\">:</span> <span class=\"token string\">'/books/123'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns null</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/urlpattern/#dom-urlpattern-exec","title":"URLPattern API"}],"query":"api.URLPattern.exec"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.URLPattern.exec","dataURL":"/en-US/docs/Web/API/URLPattern/exec/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>\n    A polyfill of <code>URLPattern</code> is available\n    <a href=\"https://github.com/kenchris/urlpattern-polyfill\" class=\"external\" rel=\" noopener\">on GitHub</a>\n  </li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The exec() method of the URLPattern interface takes a URL or\n  object of URL parts, and returns either an object containing the results of\n  matching the URL to the pattern, or null if the URL does not match the\n  pattern.","popularity":0,"modified":"2022-09-13T06:39:07.000Z","source":{"folder":"en-us/web/api/urlpattern/exec","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/urlpattern/exec/index.md","last_commit_url":"https://github.com/mdn/content/commit/b9bcca1e96839aa9cddea3263196e0cf4656d387","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/URLPattern","title":"URLPattern"},{"uri":"/en-US/docs/Web/API/URLPattern/exec","title":"URLPattern.exec()"}],"pageTitle":"URLPattern.exec() - Web APIs | MDN","noIndexing":false}}