{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"TaskController","mdn_url":"/en-US/docs/Web/API/TaskController","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Prioritized_Task_Scheduling_API\">Prioritized Task Scheduling API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/TaskController\"><code>TaskController</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/TaskController/TaskController\"><code>TaskController()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/TaskController/setPriority\"><code>setPriority()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Prioritized Task Scheduling API</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a href=\"/en-US/docs/Web/API/Scheduler\"><code>Scheduler</code></a></li><li><a href=\"/en-US/docs/Web/API/TaskPriorityChangeEvent\"><code>TaskPriorityChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/TaskSignal\"><code>TaskSignal</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/scheduler\"><code>Window.scheduler</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>TaskController</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Prioritized_Task_Scheduling_API\">Prioritized Task Scheduling API</a> represents a controller object that can be used to both abort and change the <a href=\"/en-US/docs/Web/API/Prioritized_Task_Scheduling_API#task_priorities\">priority</a> of one or more prioritized tasks.\n  If there is no need to change task priorities, then <a href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code></a> can be used instead.\n</p>\n<p>\n  A new <code>TaskController</code> instance is created using the <a href=\"/en-US/docs/Web/API/TaskController/TaskController\" title=\"TaskController()\"><code>TaskController()</code></a> constructor, optionally specifying a <a href=\"/en-US/docs/Web/API/Prioritized_Task_Scheduling_API#task_priorities\">priority</a> for its associated signal (a <a href=\"/en-US/docs/Web/API/TaskSignal\"><code>TaskSignal</code></a>).\n  If not specified, the signal will have a priority of <a href=\"/en-US/docs/Web/API/Prioritized_Task_Scheduling_API#user-visible\"><code>\"user-visible\"</code></a> by default.\n</p>\n<p>\n  The controller's signal can be passed as an argument to the <a href=\"/en-US/docs/Web/API/Scheduler/postTask\"><code>Scheduler.postTask()</code></a> method for one or more tasks.\n  For <a href=\"/en-US/docs/Web/API/Prioritized_Task_Scheduling_API#mutable_and_immutable_task_priority\">mutable tasks</a> (only) the task is initialized with the signal priority, and can later be changed by calling <a href=\"/en-US/docs/Web/API/TaskController/setPriority\"><code>TaskController.setPriority()</code></a>.\n  For immutable tasks, any priority initialized or set by the controller is ignored.\n</p>\n<p>Tasks can be aborted by calling <a href=\"/en-US/docs/Web/API/AbortController/abort\" title=\"abort()\"><code>abort()</code></a> on the controller.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/AbortController\">\n    <rect x=\"0\" y=\"0\" width=\"120\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"60\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      AbortController\n    </text>\n  </a>\n  <line x1=\"120\" y1=\"14\" x2=\"150\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"120,14 130,9 130,19 120,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/TaskController\" aria-current=\"page\">\n    <rect x=\"150\" y=\"0\" width=\"112\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"206\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      TaskController\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"taskcontroller\"><a href=\"/en-US/docs/Web/API/TaskController/TaskController\" title=\"TaskController()\"><code>TaskController()</code></a></dt>\n  <dd>\n    <p>Creates a new <code>TaskController</code> object, optionally specifying the priority of its associated <a href=\"#taskcontroller.signal\"><code>signal</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p><em>This interface also inherits the methods of its parent, <a href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code></a>.</em></p>\n<dl>\n  <dt id=\"taskcontroller.setpriority\"><a href=\"/en-US/docs/Web/API/TaskController/setPriority\"><code>TaskController.setPriority()</code></a></dt>\n  <dd>\n    <p>\n      Sets the priority of the controller's <a href=\"#taskcontroller.signal\"><code>signal</code></a>, and hence the priority of any tasks with which it is associated.\n      This notifies observers of the priority change by dispatching a <a href=\"/en-US/docs/Web/API/TaskSignal/prioritychange_event\"><code>prioritychange</code></a> event.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p><em>This interface also inherits the properties of its parent, <a href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code></a>.</em></p>\n<dl>\n  <dt id=\"taskcontroller.signal\"><code>TaskController.signal</code> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Returns a <a href=\"/en-US/docs/Web/API/TaskSignal\"><code>TaskSignal</code></a> object instance.\n      The signal is passed to tasks so that they can be aborted or re-prioritized by the controller.\n      The property is inherited from <a href=\"/en-US/docs/Web/API/AbortController#abortcontroller.signal\"><code>AbortController</code></a>.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Additional \"live\" examples can be found in: <a href=\"/en-US/docs/Web/API/Prioritized_Task_Scheduling_API#examples\">Prioritized Task Scheduling API &gt; Examples</a>.</p>\n</div>\n<p>First we create a task controller, setting the priority of its associated signal to <code>user-blocking</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Create a TaskController, setting its signal priority to 'user-blocking'</span>\n<span class=\"token keyword\">const</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TaskController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">priority</span><span class=\"token operator\">:</span> <span class=\"token string\">'user-blocking'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  We then add an event listener for <a href=\"/en-US/docs/Web/API/TaskSignal/prioritychange_event\"><code>prioritychange</code></a> events (here <code>addEventListener()</code> is called, but we could instead assign a handler to <code>TaskSignal.onprioritychange</code>).\n  The handler uses <a href=\"/en-US/docs/Web/API/TaskPriorityChangeEvent/previousPriority\">previousPolicy</a> on the event to get the original priority and <a href=\"/en-US/docs/Web/API/TaskSignal/priority\"><code>TaskSignal.priority</code></a> on the event target to get the new priority.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Listen for 'prioritychange' events on the controller's signal.</span>\ncontroller<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'prioritychange'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> previousPriority <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>previousPriority<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> newPriority <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Priority changed from </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>previousPriority<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>newPriority<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  We can also listen for <a href=\"/en-US/docs/Web/API/AbortSignal/abort_event\"><code>abort</code></a> events as shown below.\n  This same approach would be used if the controller was an <code>AbortController</code>.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>controller<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abort'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Task aborted'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  Next we post the task, passing the controller signal in the optional argument.\n  In this case the task is just an arrow function that resolves the promise by returning some text.\n  We use <code>then</code> and <code>catch</code> to handle when the task resolves or is rejected, logging the return text or the error in each case.\n  Note that in a later code block we abort the task, so only the <code>catch()</code> block will actually be run!\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Post task using the controller's signal.</span>\n<span class=\"token comment\">// The signal priority sets the initial priority of the task</span>\nscheduler<span class=\"token punctuation\">.</span><span class=\"token function\">postTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string\">'Task execute'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">signal</span><span class=\"token operator\">:</span> controller<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">taskResult</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>taskResult<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Aborted (won't run)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Catch error: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Log error</span>\n</code></pre></div>\n<p>\n  We can use the controller to manage the task.\n  Here we can change the priority using <a href=\"/en-US/docs/Web/API/TaskController/setPriority\"><code>TaskController.setPriority()</code></a>.\n  This will trigger the associated <code>prioritychange</code> event.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Change the priority to 'background' using the controller</span>\ncontroller<span class=\"token punctuation\">.</span><span class=\"token function\">setPriority</span><span class=\"token punctuation\">(</span><span class=\"token string\">'background'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Finally, the task can be aborted by calling <a href=\"/en-US/docs/Web/API/AbortController/abort\" title=\"abort()\"><code>abort()</code></a> on the controller.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Abort the task</span>\ncontroller<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The console output of this example would be:</p>\n<pre class=\"notranslate\">The priority changed from user-blocking to background.\nTask aborted\nCatch error: AbortError\n</pre>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/scheduling-apis/#sec-task-controller","title":"Prioritized Task Scheduling"}],"query":"api.TaskController"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.TaskController","dataURL":"/en-US/docs/Web/API/TaskController/bcd.json"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Methods","id":"methods"},{"text":"Properties","id":"properties"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The TaskController interface of the Prioritized Task Scheduling API represents a controller object that can be used to both abort and change the priority of one or more prioritized tasks.\n  If there is no need to change task priorities, then AbortController can be used instead.","popularity":0.0002,"modified":"2022-09-21T20:26:22.000Z","source":{"folder":"en-us/web/api/taskcontroller","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/taskcontroller/index.md","last_commit_url":"https://github.com/mdn/content/commit/8d27f508bd2c6270918fb3b047d73b57e8b949d3","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/TaskController","title":"TaskController"}],"pageTitle":"TaskController - Web APIs | MDN","noIndexing":false}}