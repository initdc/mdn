{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"ConstantSourceNode","mdn_url":"/en-US/docs/Web/API/ConstantSourceNode","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/ConstantSourceNode/ConstantSourceNode\"><code>ConstantSourceNode()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/ConstantSourceNode/offset\"><code>offset</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Audio API</summary><ol><li><a href=\"/en-US/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <code>ConstantSourceNode</code> interface—part of the Web Audio API—represents an audio source (based upon <a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a>) whose output is single unchanging value. This makes it useful for cases in which you need a constant value coming in from an audio source. In addition, it can be used like a constructible <a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a> by automating the value of its <a href=\"/en-US/docs/Web/API/ConstantSourceNode/offset\" title=\"offset\"><code>offset</code></a> or by connecting another node to it; see <a href=\"/en-US/docs/Web/API/Web_Audio_API/Controlling_multiple_parameters_with_ConstantSourceNode\">Controlling multiple parameters with ConstantSourceNode</a>.</p>\n<p>A <code>ConstantSourceNode</code> has no inputs and exactly one monaural (one-channel) output. The output's value is always the same as the value of the <a href=\"/en-US/docs/Web/API/ConstantSourceNode/offset\" title=\"offset\"><code>offset</code></a> parameter.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/AudioNode\">\n    <rect x=\"118\" y=\"0\" width=\"75\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"155.5\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      AudioNode\n    </text>\n  </a>\n  <line x1=\"193\" y1=\"14\" x2=\"223\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"193,14 203,9 203,19 193,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\">\n    <rect x=\"223\" y=\"0\" width=\"192\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"319\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      AudioScheduledSourceNode\n    </text>\n  </a>\n  <line x1=\"415\" y1=\"14\" x2=\"445\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"415,14 425,9 425,19 415,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/ConstantSourceNode\" aria-current=\"page\">\n    <rect x=\"445\" y=\"0\" width=\"144\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"517\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      ConstantSourceNode\n    </text>\n  </a></svg>\n<table class=\"properties\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">Number of inputs</th>\n      <td><code>0</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Number of outputs</th>\n      <td><code>1</code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"constantsourcenode\"><a href=\"/en-US/docs/Web/API/ConstantSourceNode/ConstantSourceNode\" title=\"ConstantSourceNode()\"><code>ConstantSourceNode()</code></a></dt>\n  <dd>\n    <p>Creates and returns a new <code>ConstantSourceNode</code> instance, optionally specifying an object which establishes initial values for the object's properties. As an alternative, you can use the <a href=\"/en-US/docs/Web/API/BaseAudioContext/createConstantSource\"><code>BaseAudioContext.createConstantSource()</code></a> factory method; see <a href=\"/en-US/docs/Web/API/AudioNode#creating_an_audionode\">Creating an AudioNode</a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p><em>Inherits properties from its parent interface, <a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a>, and adds the following properties:</em></p>\n<dl>\n  <dt id=\"offset\"><a href=\"/en-US/docs/Web/API/ConstantSourceNode/offset\" title=\"offset\"><code>offset</code></a></dt>\n  <dd>\n    <p>An <a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a> which specifies the value that this source continuously outputs. The default value is 1.0.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":true,"content":"<p><em>Inherits events from its parent interface, <a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a>.</em></p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Some browsers' implementations of these events are part of the <a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a> interface.</p>\n</div>\n<dl>\n  <dt id=\"ended\"><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode/ended_event\" title=\"ended\"><code>ended</code></a></dt>\n  <dd>\n    <p>Fired whenever the <a href=\"/en-US/docs/Web/API/ConstantSourceNode\" aria-current=\"page\"><code>ConstantSourceNode</code></a> data has stopped playing.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p><em>Inherits methods from its parent interface, <a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a>.</em></p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> Some browsers' implementations of these methods are part of the <a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a> interface.</p>\n</div>\n<dl>\n  <dt id=\"start\"><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode/start\" title=\"start()\"><code>start()</code></a></dt>\n  <dd>\n    <p>Schedules a sound to playback at an exact time.</p>\n  </dd>\n  <dt id=\"stop\"><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode/stop\" title=\"stop()\"><code>stop()</code></a></dt>\n  <dd>\n    <p>Schedules a sound to stop playback at an exact time.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>In the article <a href=\"/en-US/docs/Web/API/Web_Audio_API/Controlling_multiple_parameters_with_ConstantSourceNode\">Controlling multiple parameters with ConstantSourceNode</a>, a <code>ConstantSourceNode</code> is created to allow one slider control to change the gain on two <a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a>s. The three nodes are set up like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>gainNode2 <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">createGain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngainNode3 <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">createGain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngainNode2<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> gainNode3<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\nvolumeSliderControl<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> gainNode2<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\nconstantNode <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">createConstantSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconstantNode<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>gainNode2<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconstantNode<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>gainNode3<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconstantNode<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngainNode2<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngainNode3<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This code starts by creating the gain nodes and setting them and the volume control that will adjust their value all to 0.5. Then the <code>ConstantSourceNode</code> is created by calling <a href=\"/en-US/docs/Web/API/BaseAudioContext/createConstantSource\" title=\"AudioContext.createConstantSource()\"><code>AudioContext.createConstantSource()</code></a>, and the gain parameters of each of the two gain nodes are connected to the <code>ConstantSourceNode</code>. After starting the constant source by calling its <a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode/start\" title=\"start()\"><code>start()</code></a> method. Finally, the two gain nodes are connected to the audio destination (typically speakers or headphones).</p>\n<p>Now, whenever the value of <a href=\"/en-US/docs/Web/API/ConstantSourceNode/offset\" title=\"constantNode.offset\"><code>constantNode.offset</code></a> changes, the gain on both <code>gainNode2</code> and <code>gainNode3</code> will change to have that same value.</p>\n<p>To see this example in action, as well as to read the rest of the code from which these snippets were derived, see <a href=\"/en-US/docs/Web/API/Web_Audio_API/Controlling_multiple_parameters_with_ConstantSourceNode\">Controlling multiple parameters with ConstantSourceNode.</a></p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#ConstantSourceNode","title":"Web Audio API"}],"query":"api.ConstantSourceNode"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.ConstantSourceNode","dataURL":"/en-US/docs/Web/API/ConstantSourceNode/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Using the Web Audio API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li>\n</ul>"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The ConstantSourceNode interface—part of the Web Audio API—represents an audio source (based upon AudioScheduledSourceNode) whose output is single unchanging value. This makes it useful for cases in which you need a constant value coming in from an audio source. In addition, it can be used like a constructible AudioParam by automating the value of its offset or by connecting another node to it; see Controlling multiple parameters with ConstantSourceNode.","popularity":0.0003,"modified":"2022-09-09T05:07:36.000Z","source":{"folder":"en-us/web/api/constantsourcenode","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/constantsourcenode/index.md","last_commit_url":"https://github.com/mdn/content/commit/bf30e32f3b51f59080f2c76795beadb247a551eb","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/ConstantSourceNode","title":"ConstantSourceNode"}],"pageTitle":"ConstantSourceNode - Web APIs | MDN","noIndexing":false}}