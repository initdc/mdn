{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"History.replaceState()","mdn_url":"/en-US/docs/Web/API/History/replaceState","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/History_API\">History API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/History\"><code>History</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/History/length\"><code>length</code></a></li><li><a href=\"/en-US/docs/Web/API/History/scrollRestoration\"><code>scrollRestoration</code></a></li><li><a href=\"/en-US/docs/Web/API/History/state\"><code>state</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/History/back\"><code>back()</code></a></li><li><a href=\"/en-US/docs/Web/API/History/forward\"><code>forward()</code></a></li><li><a href=\"/en-US/docs/Web/API/History/go\"><code>go()</code></a></li><li><a href=\"/en-US/docs/Web/API/History/pushState\"><code>pushState()</code></a></li><li><em><code>replaceState()</code></em></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>History.replaceState()</code></strong> method modifies the current\n  history entry, replacing it with the state object and\n  URL passed in the method parameters. This method is particularly useful\n  when you want to update the state object or URL of the current history entry in response\n  to some user action.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">replaceState(stateObj, unused)\nreplaceState(stateObj, unused, url)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"stateobj\"><code>stateObj</code></dt>\n  <dd>\n    <p>\n      The state object is a JavaScript object which is associated with the history entry\n      passed to the <code>replaceState</code> method. The state object can be\n      <code>null</code>.\n    </p>\n  </dd>\n  <dt id=\"unused\"><code>unused</code></dt>\n  <dd>\n    <p>This parameter exists for historical reasons, and cannot be omitted; passing the empty string is traditional, and safe against future changes to the method.</p>\n  </dd>\n  <dt id=\"url\"><code>url</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      The URL of the history entry. The new URL must be of the same origin as the current\n      URL; otherwise replaceState throws an exception.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Suppose <code>https://www.mozilla.org/foo.html</code> executes the following JavaScript:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> stateObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">pushState</span><span class=\"token punctuation\">(</span>stateObj<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>On the next page you could then use <code>history.state</code> to access the <code>stateObj</code> that was just added.</p>\n<p>\n  The explanation of these two lines above can be found in the <a href=\"/en-US/docs/Web/API/History_API/Working_with_the_History_API#example_of_pushstate_method\">Example of <code>pushState()</code> method</a> section of the <a href=\"/en-US/docs/Web/API/History_API/Working_with_the_History_API\">Working with the History API</a> article. Then suppose\n  <code>https://www.mozilla.org/bar.html</code> executes the following\n  JavaScript:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>history<span class=\"token punctuation\">.</span><span class=\"token function\">replaceState</span><span class=\"token punctuation\">(</span>stateObj<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar2.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  This will cause the URL bar to display\n  <code>https://www.mozilla.org/bar2.html</code>, but won't cause the browser\n  to load <code>bar2.html</code> or even check that <code>bar2.html</code> exists.\n</p>\n<p>\n  Suppose now that the user navigates to\n  <code>https://www.microsoft.com</code>, then clicks the Back button. At this\n  point, the URL bar will display <code>https://www.mozilla.org/bar2.html</code>.\n  If the user now clicks Back again, the URL bar will\n  display <code>https://www.mozilla.org/foo.html</code>, and totally bypass bar.html.\n</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/history.html#dom-history-replacestate-dev","title":"HTML Standard"}],"query":"api.History.replaceState"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.History.replaceState","dataURL":"/en-US/docs/Web/API/History/replaceState/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The History.replaceState() method modifies the current\n  history entry, replacing it with the state object and\n  URL passed in the method parameters. This method is particularly useful\n  when you want to update the state object or URL of the current history entry in response\n  to some user action.","popularity":0.0075,"modified":"2022-09-13T05:48:35.000Z","other_translations":[{"title":"History.replaceState()","locale":"ja","native":"日本語"},{"title":"History.replaceState()","locale":"ko","native":"한국어"},{"title":"History.replaceState()","locale":"ru","native":"Русский"},{"title":"History.replaceState()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/history/replacestate","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/history/replacestate/index.md","last_commit_url":"https://github.com/mdn/content/commit/8573240024adc1eef906b4b2df35567144fd733e","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/History","title":"History"},{"uri":"/en-US/docs/Web/API/History/replaceState","title":"History.replaceState()"}],"pageTitle":"History.replaceState() - Web APIs | MDN","noIndexing":false}}