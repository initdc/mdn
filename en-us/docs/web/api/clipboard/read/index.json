{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Clipboard.read()","mdn_url":"/en-US/docs/Web/API/Clipboard/read","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Clipboard_API\">Clipboard API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/Clipboard\"><code>Clipboard</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><em><code>read()</code></em></li><li><a href=\"/en-US/docs/Web/API/Clipboard/readText\"><code>readText()</code></a></li><li><a href=\"/en-US/docs/Web/API/Clipboard/write\"><code>write()</code></a></li><li><a href=\"/en-US/docs/Web/API/Clipboard/writeText\"><code>writeText()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Clipboard API</summary><ol><li><a href=\"/en-US/docs/Web/API/ClipboardEvent\"><code>ClipboardEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/ClipboardItem\"><code>ClipboardItem</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/clipboard\"><code>Navigator.clipboard</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>read()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/Clipboard\"><code>Clipboard</code></a> interface requests a copy of the clipboard's contents,\n  delivering the data to the returned <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> when the promise is\n  resolved. Unlike <a href=\"/en-US/docs/Web/API/Clipboard/readText\" title=\"readText()\"><code>readText()</code></a>, the\n  <code>read()</code> method can return arbitrary data, such as images. This method can\n  also return text.\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> The asynchronous Clipboard and <a href=\"/en-US/docs/Web/API/Permissions_API\">Permissions APIs</a> are still in the\n    process of being integrated into most browsers, so they often deviate from the\n    official rules for permissions and the like. Be sure to review the <a href=\"#browser_compatibility\">compatibility table</a> before using these methods.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">read()\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with an array of <a href=\"/en-US/docs/Web/API/ClipboardItem\"><code>ClipboardItem</code></a> objects\n  containing the clipboard's contents. The promise is rejected if permission to access the\n  clipboard is not granted.\n</p>"}},{"type":"prose","value":{"id":"security","title":"Security","isH3":false,"content":"<p><a href=\"/en-US/docs/Web/Security/User_activation\">Transient user activation</a> is required. The user has to interact with the page or a UI element in order for this feature to work.</p>\n<p>\n  To read from the clipboard, you must first have the <code>\"clipboard-read\"</code>\n  permission.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"reading_image_data","title":"Reading image data","isH3":true,"content":"<p>This example uses the <code>read()</code> method to read image data from the clipboard.</p>\n<p>Try copying the butterfly image on the left using the \"Copy image\" context menu item, then click in the empty frame on the right.</p>\n<p>The example will check or ask for permission to read the clipboard, then fetch the image data and display the image data in the empty frame.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p>\n    <strong>Note:</strong> At this time, while Firefox does implement\n    <code>read()</code>, it does not recognize the <code>\"clipboard-read\"</code>\n    permission, so attempting to use the <a href=\"/en-US/docs/Web/API/Permissions_API\">Permissions API</a> to manage access to\n    the API will not work.\n  </p>\n</div>\n<h4 id=\"html\">HTML</h4>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>source<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>butterfly.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>A butterfly<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>destination<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre></div>\n<h4 id=\"css\">CSS</h4>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 1rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"javascript\">JavaScript</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> destinationImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#destination'</span><span class=\"token punctuation\">)</span>\ndestinationImage<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> pasteImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">pasteImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> permission <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>permissions<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'clipboard-read'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission<span class=\"token punctuation\">.</span>state <span class=\"token operator\">===</span> <span class=\"token string\">'denied'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Not allowed to read clipboard.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> clipboardContents <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>clipboard<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> clipboardContents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>item<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image/png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Clipboard contains non-image data.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image/png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      destinationImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"result\">Result</h4><iframe class=\"sample-code-frame\" title=\"Reading image data sample\" id=\"frame_reading_image_data\" src=\"https://yari-demos.prod.mdn.mozit.cloud/en-US/docs/Web/API/Clipboard/read/_sample_.reading_image_data.html\" loading=\"lazy\"></iframe>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/clipboard-apis/#dom-clipboard-read","title":"Clipboard API and events"}],"query":"api.Clipboard.read"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Clipboard.read","dataURL":"/en-US/docs/Web/API/Clipboard/read/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Clipboard_API\">Clipboard API</a></li>\n  <li><a href=\"https://async-clipboard-api.glitch.me/\" class=\"external\" rel=\" noopener\">Async Clipboard API demo on Glitch</a></li>\n  <li><a href=\"https://web.dev/async-clipboard/\" class=\"external\" rel=\" noopener\">Image support for Async Clipboard article</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Security","id":"security"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The read() method of the\n  Clipboard interface requests a copy of the clipboard's contents,\n  delivering the data to the returned Promise when the promise is\n  resolved. Unlike readText(), the\n  read() method can return arbitrary data, such as images. This method can\n  also return text.","popularity":0.002,"modified":"2022-09-22T16:39:52.000Z","other_translations":[{"title":"Clipboard.read()","locale":"ja","native":"日本語"},{"title":"Clipboard.read()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/clipboard/read","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/clipboard/read/index.md","last_commit_url":"https://github.com/mdn/content/commit/a243190b798aa57b6cc08b9ef3216aed8ab9c895","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Clipboard","title":"Clipboard"},{"uri":"/en-US/docs/Web/API/Clipboard/read","title":"Clipboard.read()"}],"pageTitle":"Clipboard.read() - Web APIs | MDN","noIndexing":false}}