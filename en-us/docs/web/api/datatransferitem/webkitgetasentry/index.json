{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"DataTransferItem.webkitGetAsEntry()","mdn_url":"/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API\">HTML Drag and Drop API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransferItem/kind\"><code>kind</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransferItem/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransferItem/getAsFile\"><code>getAsFile()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/DataTransferItem/getAsFileSystemHandle\"><code>getAsFileSystemHandle()</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransferItem/getAsString\"><code>getAsString()</code></a></li><li><em><code>webkitGetAsEntry()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for HTML Drag and Drop API</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a></li><li><a href=\"/en-US/docs/Web/API/DragEvent\"><code>DragEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>If the item described by the <a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> is a file, <code>webkitGetAsEntry()</code> returns a <a href=\"/en-US/docs/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a> or <a href=\"/en-US/docs/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a> representing it. If the item isn't a file, <code>null</code> is returned.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> This function is implemented as <code>webkitGetAsEntry()</code> in non-WebKit browsers including Firefox at this time; it may be renamed to\n    <code>getAsEntry()</code> in the future, so you should code defensively, looking for both.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">webkitGetAsEntry()\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  A <a href=\"/en-US/docs/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a>-based object describing the dropped item.\n  This will be either <a href=\"/en-US/docs/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a> or <a href=\"/en-US/docs/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a>.\n  The method aborts and returns <code>null</code> if the dropped item isn't a file, or if the <a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> object is not in read or read/write mode.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  In this example, a drop zone is created, which responds to the <a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"drop\"><code>drop</code></a> event\n  by scanning through the dropped files and directories, outputting a hierarchical\n  directory listing.\n</p>"}},{"type":"prose","value":{"id":"html_content","title":"HTML content","isH3":true,"content":"<p>The HTML establishes the drop zone itself, which is a <a href=\"/en-US/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> element with the ID <code>\"dropzone\"</code>, and an unordered list element with the ID <code>\"listing\"</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Drag files and/or directories to the box below!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dropzone<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>boxtitle<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Drop Files Here<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>Directory tree:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>listing<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"css_content","title":"CSS content","isH3":true,"content":"<p>The styles used by the example are shown here.</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">#dropzone</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 4px dashed red<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#boxtitle</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> table-cell<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">vertical-align</span><span class=\"token punctuation\">:</span> middle<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font</span><span class=\"token punctuation\">:</span> bold 2em <span class=\"token string\">\"Arial\"</span><span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font</span><span class=\"token punctuation\">:</span> 14px <span class=\"token string\">\"Arial\"</span><span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript_content","title":"JavaScript content","isH3":true,"content":"<p>\n  First, let's look at the recursive <code>scanFiles()</code> function.\n  This function takes as input a <a href=\"/en-US/docs/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> representing an entry in the file system to be scanned and processed (the <code>item</code> parameter), and an element into which to insert the list of contents (the <code>container</code> parameter).\n</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p>\n    <strong>Note:</strong> To read all files in a directory, <code>readEntries</code> needs to be called repeatedly until it returns an empty array.\n    In Chromium-based browsers, the following example will only return a max of 100 entries.\n  </p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> dropzone <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dropzone\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> listing <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"listing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">scanFiles</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  elem<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>isDirectory<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> directoryReader <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">createReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> directoryContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>directoryContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    directoryReader<span class=\"token punctuation\">.</span><span class=\"token function\">readEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entries</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      entries<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">scanFiles</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">,</span> directoryContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  <code>scanFiles()</code> begins by creating a new <a href=\"/en-US/docs/Web/HTML/Element/li\"><code>&lt;li&gt;</code></a> element to represent the item being scanned, inserts the name of the item into it as its text content, and then appends it to the container.\n  The container is always a list element in this example, as you'll see shortly.\n</p>\n<p>\n  Once the current item is in the list, the item's <a href=\"/en-US/docs/Web/API/FileSystemEntry/isDirectory\" title=\"isDirectory\"><code>isDirectory</code></a> property is checked.\n  If the item is a directory, we need to recurse into that directory.\n  The first step is to create a <a href=\"/en-US/docs/Web/API/FileSystemDirectoryReader\"><code>FileSystemDirectoryReader</code></a> to handle fetching the directory's contents.\n  That's done by calling the item's <a href=\"/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader\" title=\"createReader()\"><code>createReader()</code></a> method.\n  Then a new <a href=\"/en-US/docs/Web/HTML/Element/ul\"><code>&lt;ul&gt;</code></a> is created and appended to the parent list; this will contain the directory's contents in the next level down in the list's hierarchy.\n</p>\n<p>\n  After that, <a href=\"/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries\" title=\"directoryReader.readEntries()\"><code>directoryReader.readEntries()</code></a> is called to read in all the entries in the directory.\n  These are each, in turn, passed into a recursive call to <code>scanFiles()</code> to process them.\n  Any of them which are files are inserted into the list; any which are directories are inserted into the list and a new level of the list's hierarchy is added below, and so forth.\n</p>\n<p>Then come the event handlers. First, we prevent the <a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"dragover\"><code>dragover</code></a> event from being handled by the default handler, so that our drop zone can receive the drop:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>dropzone<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dragover\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The event handler that kicks everything off, of course, is the handler for the <a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"drop\"><code>drop</code></a> event:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>dropzone<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"drop\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> items <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">;</span>\n\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  listing<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>items<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> item <span class=\"token operator\">=</span> items<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">webkitGetAsEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">scanFiles</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> listing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  This fetches the list of <a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> objects representing the items dropped from <code>event.dataTransfer.items</code>.\n  Then we call <a href=\"/en-US/docs/Web/API/Event/preventDefault\"><code>Event.preventDefault()</code></a> to prevent the event from being handled further after we're done.\n</p>\n<p>\n  Now it's time to start building the list. First, the list is emptied by setting <a href=\"/en-US/docs/Web/API/Node/textContent\" title=\"listing.textContent\"><code>listing.textContent</code></a> to be empty.\n  That leaves us with an empty <a href=\"/en-US/docs/Web/HTML/Element/ul\"><code>&lt;ul&gt;</code></a> to begin inserting directory entries into.\n</p>\n<p>\n  Then we iterate over the items in the list of dropped items.\n  For each one, we call its <a href=\"/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry\" title=\"webkitGetAsEntry()\" aria-current=\"page\"><code>webkitGetAsEntry()</code></a> method to obtain a <a href=\"/en-US/docs/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> representing the file.\n  If that's successful, we call <code>scanFiles()</code> to process the item—either by adding it to the list if it's just a file or by adding it and walking down into it if it's a directory.\n</p>"}},{"type":"prose","value":{"id":"result","title":"Result","isH3":true,"content":"<p>You can see how this works by trying it out below. Find some files and directories and drag them in, and take a look at the resulting output.</p><iframe class=\"sample-code-frame\" title=\"Examples sample\" id=\"frame_examples\" width=\"600\" height=\"400\" src=\"https://yari-demos.prod.mdn.mozit.cloud/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry/_sample_.examples.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"<p>This API has no official W3C or WHATWG specification.</p>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.DataTransferItem.webkitGetAsEntry","dataURL":"/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/File_and_Directory_Entries_API\">File and Directory Entries API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/File_and_Directory_Entries_API/Introduction\">Introduction to the File and Directory Entries API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a>, <a href=\"/en-US/docs/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a>, and <a href=\"/en-US/docs/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a></li>\n  <li>Events: <a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"dragover\"><code>dragover</code></a> and <a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"drop\"><code>drop</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"If the item described by the DataTransferItem is a file, webkitGetAsEntry() returns a FileSystemFileEntry or FileSystemDirectoryEntry representing it. If the item isn't a file, null is returned.","popularity":0.0005,"modified":"2022-09-13T13:39:19.000Z","other_translations":[{"title":"DataTransferItem.webkitGetAsEntry()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/datatransferitem/webkitgetasentry","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/datatransferitem/webkitgetasentry/index.md","last_commit_url":"https://github.com/mdn/content/commit/77b8cdb3a05999ade4a269d0ef2443618bb7cd66","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/DataTransferItem","title":"DataTransferItem"},{"uri":"/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry","title":"DataTransferItem.webkitGetAsEntry()"}],"pageTitle":"DataTransferItem.webkitGetAsEntry() - Web APIs | MDN","noIndexing":false}}