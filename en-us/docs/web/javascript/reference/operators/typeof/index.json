{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"typeof","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Operators/typeof","locale":"en-US","native":"English (US)","sidebarHTML":"\n <ol>\n  <li><a href=\"/en-US/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Tutorials\"><strong>Tutorials:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Complete beginners</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript basics</a></li>\n        <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps\">JavaScript first steps</a></li>\n        <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks</a></li>\n        <li><a href=\"/en-US/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>JavaScript Guide</summary>\n      <ol>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Introduction\">Introduction</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Grammar_and_Types\">Grammar and types</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">Control flow and error handling</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration\">Loops and iteration</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Functions\">Functions</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators\">Expressions and operators</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Numbers_and_dates\">Numbers and dates</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Text_formatting\">Text formatting</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\">Regular expressions</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Indexed_collections\">Indexed collections</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Keyed_collections\">Keyed collections</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Working_with_Objects\">Working with objects</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">Details of the object model</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Using_promises\">Using promises</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Iterators_and_generators\">Iterators and generators</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Meta_programming\">Meta programming</a></li>\n          <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Modules\">JavaScript modules</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Intermediate</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">Client-side JavaScript frameworks</a></li>\n        <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">A re-introduction to JavaScript</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Data_structures\">JavaScript data structures</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness\">Equality comparisons and sameness</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Closures\">Closures</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Advanced</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">Inheritance and the prototype chain</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Typed_arrays\">JavaScript typed arrays</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Memory_Management\">Memory Management</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/EventLoop\">Concurrency model and Event Loop</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference\">References:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>Built-in objects</summary>\n        <ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Expressions &amp; operators</summary>\n      <ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Statements &amp; declarations</summary>\n      <ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Functions</summary>\n      <ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Classes</summary>\n      <ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Errors</summary>\n      <ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Misc</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/Web/JavaScript/JavaScript_technologies_overview\">JavaScript technologies overview</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Lexical_grammar\">Lexical grammar</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Data_structures\">JavaScript data structures</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">Enumerability and ownership of properties</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\">Iteration protocols</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">Transitioning to strict mode</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Template_literals\">Template literals</a></li>\n        <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">Deprecated features</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>typeof</code></strong> operator returns a string indicating the type of the operand's value.</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/expressions-typeof.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">typeof operand\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"operand\"><code>operand</code></dt>\n  <dd>\n    <p>An expression representing the object or <a href=\"/en-US/docs/Glossary/Primitive\">primitive</a> whose type is to be returned.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>The following table summarizes the possible return values of <code>typeof</code>. For more information about types and primitives, see also the <a href=\"/en-US/docs/Web/JavaScript/Data_structures\">JavaScript data structure</a> page.</p>\n<table>\n  <thead>\n    <tr>\n      <th>Type</th>\n      <th>Result</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/en-US/docs/Glossary/undefined\">Undefined</a></td>\n      <td><code>\"undefined\"</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Glossary/Null\">Null</a></td>\n      <td><code>\"object\"</code> (<a href=\"#typeof_null\">reason</a>)</td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Glossary/Boolean\">Boolean</a></td>\n      <td><code>\"boolean\"</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Glossary/Number\">Number</a></td>\n      <td><code>\"number\"</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Glossary/BigInt\">BigInt</a></td>\n      <td><code>\"bigint\"</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Glossary/String\">String</a></td>\n      <td><code>\"string\"</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></td>\n      <td><code>\"symbol\"</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Glossary/Function\">Function</a> (implements [[Call]] in ECMA-262 terms; <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/class\">classes</a> are functions as well)</td>\n      <td><code>\"function\"</code></td>\n    </tr>\n    <tr>\n      <td>Any other object</td>\n      <td><code>\"object\"</code></td>\n    </tr>\n  </tbody>\n</table>\n<p>This list of values is exhaustive. No spec-compliant engines are reported to produce (or had historically produced) values other than those listed. The old Internet Explorer was the only browser known to <a href=\"https://github.com/tc39/ecma262/issues/1440#issuecomment-461963872\" class=\"external\" rel=\" noopener\">implement additional return values</a>, before the spec removed the behavior of <code>typeof</code> returning implementation-defined strings for non-callable non-standard exotic objects.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"basic_usage","title":"Basic usage","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Numbers</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token number\">37</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token number\">3.14</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token number\">42</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">LN2</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token number\">Infinity</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token number\">NaN</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Despite being \"Not-A-Number\"</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Number tries to parse things into numbers</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shoe\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// including values that cannot be type coerced to a number</span>\n\n<span class=\"token keyword\">typeof</span> <span class=\"token number\">42n</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"bigint\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Strings</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token string\">\"bla\"</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">template literal</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token string\">\"1\"</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// note that a number within a string is still typeof string</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token keyword\">typeof</span> <span class=\"token number\">1</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// typeof always returns a string</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// String converts anything into a string, safer than toString</span>\n\n<span class=\"token comment\">// Booleans</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"boolean\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"boolean\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"boolean\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Boolean() will convert values based on if they're truthy or falsy</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token number\">1</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"boolean\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// two calls of the ! (logical NOT) operator are equivalent to Boolean()</span>\n\n<span class=\"token comment\">// Symbols</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"symbol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"symbol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> Symbol<span class=\"token punctuation\">.</span>iterator <span class=\"token operator\">===</span> <span class=\"token string\">\"symbol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Undefined</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> declaredButUndefinedVariable <span class=\"token operator\">===</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> undeclaredVariable <span class=\"token operator\">===</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Objects</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// use Array.isArray or Object.prototype.toString.call</span>\n<span class=\"token comment\">// to differentiate regular objects from arrays</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typeof</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token operator\">/</span>regex<span class=\"token operator\">/</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// The following are confusing, dangerous, and wasteful. Avoid them.</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Functions</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">C</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> Math<span class=\"token punctuation\">.</span>sin <span class=\"token operator\">===</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"typeof_null","title":"typeof null","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// This stands since the beginning of JavaScript</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>In the first implementation of JavaScript, JavaScript values were represented as a type tag and a value. The type tag for objects was <code>0</code>. <code>null</code> was represented as the NULL pointer (<code>0x00</code> in most platforms). Consequently, <code>null</code> had <code>0</code> as type tag, hence the <code>typeof</code> return value <code>\"object\"</code>. (<a href=\"https://2ality.com/2013/10/typeof-null.html\" class=\"external\" rel=\" noopener\">reference</a>)</p>\n<p>A fix was proposed for ECMAScript (via an opt-in), but <a href=\"https://web.archive.org/web/20160331031419/http://wiki.ecmascript.org:80/doku.php?id=harmony:typeof_null\" class=\"external\" rel=\" noopener\">was rejected</a>. It would have resulted in <code>typeof null === \"null\"</code>.</p>"}},{"type":"prose","value":{"id":"using_new_operator","title":"Using new operator","isH3":true,"content":"<p>All constructor functions called with <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a> will return non-primitives (<code>\"object\"</code> or <code>\"function\"</code>). Most return objects, with the notable exception being <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a>, which returns a function.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"String\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typeof</span> str<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"object\"</span>\n<span class=\"token keyword\">typeof</span> num<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"object\"</span>\n\n<span class=\"token keyword\">const</span> func <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typeof</span> func<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"function\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"need_for_parentheses_in_syntax","title":"Need for parentheses in syntax","isH3":true,"content":"<p>The <code>typeof</code> operator has higher <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">precedence</a> than binary operators like addition (<code>+</code>). Therefore, parentheses are needed to evaluate the type of an addition result.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Parentheses can be used for determining the data type of expressions.</span>\n<span class=\"token keyword\">const</span> someData <span class=\"token operator\">=</span> <span class=\"token number\">99</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typeof</span> someData <span class=\"token operator\">+</span> <span class=\"token string\">\" Wisen\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"number Wisen\"</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">(</span>someData <span class=\"token operator\">+</span> <span class=\"token string\">\" Wisen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"string\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"interaction_with_undeclared_and_uninitialized_variables","title":"Interaction with undeclared and uninitialized variables","isH3":true,"content":"<p><code>typeof</code> is generally always guaranteed to return a string for any operand it is supplied with. Even with undeclared identifiers, <code>typeof</code> will return <code>\"undefined\"</code> instead of throwing an error.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">typeof</span> undeclaredVariable<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"undefined\"</span>\n</code></pre></div>\n<p>However, using <code>typeof</code> on lexical declarations (<a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/let\"><code>let</code></a> <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/const\"><code>const</code></a>, and <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/class\"><code>class</code></a>) in the same block before the line of declaration will throw a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\"><code>ReferenceError</code></a>. Block scoped variables are in a <em><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/let#temporal_dead_zone_tdz\">temporal dead zone</a></em> from the start of the block until the initialization is processed, during which it will throw an error if accessed.</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">typeof</span> newLetVariable<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ReferenceError</span>\n<span class=\"token keyword\">typeof</span> newConstVariable<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ReferenceError</span>\n<span class=\"token keyword\">typeof</span> newClass<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ReferenceError</span>\n\n<span class=\"token keyword\">let</span> newLetVariable<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> newConstVariable <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">newClass</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"exceptional_behavior_of_document.all","title":"Exceptional behavior of document.all","isH3":true,"content":"<p>All current browsers expose a non-standard host object <a href=\"/en-US/docs/Web/API/Document/all\"><code>document.all</code></a> with type <code>undefined</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">typeof</span> document<span class=\"token punctuation\">.</span>all <span class=\"token operator\">===</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Although <code>document.all</code> is also <a href=\"/en-US/docs/Glossary/Falsy\">falsy</a> and <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Equality\">loosely equal</a> to <code>undefined</code>, it is not <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>. The case of <code>document.all</code> having type <code>\"undefined\"</code> is classified in the web standards as a \"willful violation\" of the original ECMAScript standard for web compatibility.</p>"}},{"type":"prose","value":{"id":"custom_method_that_gets_a_more_specific_type","title":"Custom method that gets a more specific type","isH3":true,"content":"<p><code>typeof</code> is very useful, but it's not as versatile as might be required. For example, <code>typeof []</code> is <code>\"object\"</code>, as well as <code>typeof new Date()</code>, <code>typeof /abc/</code>, etc.</p>\n<p>For greater specificity in checking types, here we present a custom <code>type(value)</code> function, which mostly mimics the behavior of <code>typeof</code>, but for non-primitives (i.e. objects and functions), it returns a more granular type name where possible.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"null\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> baseType <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> value<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Primitive types</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"object\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>baseType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> baseType<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Symbol.toStringTag often specifies the \"display name\" of the</span>\n  <span class=\"token comment\">// object's class. It's used in Object.prototype.toString().</span>\n  <span class=\"token keyword\">const</span> tag <span class=\"token operator\">=</span> value<span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>toStringTag<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> tag <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> tag<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// If it's a function whose source code starts with the \"class\" keyword</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n    baseType <span class=\"token operator\">===</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"class\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// The name of the constructor; for example `Array`, `GeneratorFunction`,</span>\n  <span class=\"token comment\">// `Number`, `String`, `Boolean` or `MyCustomClass`</span>\n  <span class=\"token keyword\">const</span> className <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> className <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span> <span class=\"token operator\">&amp;&amp;</span> className <span class=\"token operator\">!==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> className<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// At this point there's no robust way to get the type of value,</span>\n  <span class=\"token comment\">// so we use the base implementation.</span>\n  <span class=\"token keyword\">return</span> baseType<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>For checking potentially non-existent variables that would otherwise throw a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\"><code>ReferenceError</code></a>, use <code>typeof nonExistentVar === \"undefined\"</code> because this behavior cannot be mimicked with custom code.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-typeof-operator","title":"ECMAScript Language Specification"}],"query":"javascript.operators.typeof"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.operators.typeof","dataURL":"/en-US/docs/Web/JavaScript/Reference/Operators/typeof/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/instanceof\"><code>instanceof</code></a></li>\n  <li><a href=\"https://github.com/tc39/ecma262/issues/668\" class=\"external\" rel=\" noopener\"><code>document.all</code> willful violation of the standard</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The typeof operator returns a string indicating the type of the operand's value.","popularity":0.0551,"modified":"2022-09-13T07:11:16.000Z","other_translations":[{"title":"typeof","locale":"es","native":"Español"},{"title":"L'opérateur typeof","locale":"fr","native":"Français"},{"title":"typeof","locale":"ja","native":"日本語"},{"title":"typeof","locale":"ko","native":"한국어"},{"title":"typeof","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"typeof","locale":"ru","native":"Русский"},{"title":"typeof","locale":"zh-CN","native":"中文 (简体)"},{"title":"typeof","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/web/javascript/reference/operators/typeof","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/operators/typeof/index.md","last_commit_url":"https://github.com/mdn/content/commit/1533276490d15cff6ddcd201fc05562180058a99","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Operators","title":"Expressions and operators"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Operators/typeof","title":"typeof"}],"pageTitle":"typeof - JavaScript | MDN","noIndexing":false}}