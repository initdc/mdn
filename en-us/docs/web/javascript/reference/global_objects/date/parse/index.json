{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Date.parse()","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/@@toPrimitive\"><code>Date.prototype[@@toPrimitive]</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDate\"><code>Date.prototype.getDate()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay\"><code>Date.prototype.getDay()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getFullYear\"><code>Date.prototype.getFullYear()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getHours\"><code>Date.prototype.getHours()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMilliseconds\"><code>Date.prototype.getMilliseconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMinutes\"><code>Date.prototype.getMinutes()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMonth\"><code>Date.prototype.getMonth()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getSeconds\"><code>Date.prototype.getSeconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime\"><code>Date.prototype.getTime()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\"><code>Date.prototype.getTimezoneOffset()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDate\"><code>Date.prototype.getUTCDate()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDay\"><code>Date.prototype.getUTCDay()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCFullYear\"><code>Date.prototype.getUTCFullYear()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCHours\"><code>Date.prototype.getUTCHours()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMilliseconds\"><code>Date.prototype.getUTCMilliseconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMinutes\"><code>Date.prototype.getUTCMinutes()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMonth\"><code>Date.prototype.getUTCMonth()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCSeconds\"><code>Date.prototype.getUTCSeconds()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getYear\"><code>Date.prototype.getYear()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now\"><code>Date.now()</code></a></li><li><em><code>Date.parse()</code></em></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setDate\"><code>Date.prototype.setDate()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setFullYear\"><code>Date.prototype.setFullYear()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setHours\"><code>Date.prototype.setHours()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setMilliseconds\"><code>Date.prototype.setMilliseconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setMinutes\"><code>Date.prototype.setMinutes()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setMonth\"><code>Date.prototype.setMonth()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setSeconds\"><code>Date.prototype.setSeconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setTime\"><code>Date.prototype.setTime()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCDate\"><code>Date.prototype.setUTCDate()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCFullYear\"><code>Date.prototype.setUTCFullYear()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCHours\"><code>Date.prototype.setUTCHours()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMilliseconds\"><code>Date.prototype.setUTCMilliseconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMinutes\"><code>Date.prototype.setUTCMinutes()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMonth\"><code>Date.prototype.setUTCMonth()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCSeconds\"><code>Date.prototype.setUTCSeconds()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setYear\"><code>Date.prototype.setYear()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toDateString\"><code>Date.prototype.toDateString()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toGMTString\"><code>Date.prototype.toGMTString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\"><code>Date.prototype.toISOString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON\"><code>Date.prototype.toJSON()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleDateString\"><code>Date.prototype.toLocaleDateString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\"><code>Date.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\"><code>Date.prototype.toLocaleTimeString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toString\"><code>Date.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toTimeString\"><code>Date.prototype.toTimeString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\"><code>Date.prototype.toUTCString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC\"><code>Date.UTC()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/valueOf\"><code>Date.prototype.valueOf()</code></a></li></ol></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>Date.parse()</code></strong> method parses a string representation of\n  a date, and returns the number of milliseconds since January 1, 1970, 00:00:00 UTC or\n  <code>NaN</code> if the string is unrecognized or, in some cases, contains illegal date\n  values (e.g. 2015-02-31).\n</p>\n<p>Only the <a href=\"https://tc39.es/ecma262/#sec-date-time-string-format\" class=\"external\" rel=\" noopener\">ISO 8601 format</a> (<code>YYYY-MM-DDTHH:mm:ss.sssZ</code>) is explicitly specified to be supported. Other formats are implementation-defined and may not work across all browsers. A library can help if many different formats are to be accommodated.</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/date-parse.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">Date.parse(dateString)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"datestring\"><code>dateString</code></dt>\n  <dd>\n    <p>\n      A string representing <a href=\"#date_time_string_format\">a simplification of the ISO 8601 calendar date extended format</a>.\n      (Other formats may be used, but results are implementation-dependent.)\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  A number representing the milliseconds elapsed since January 1, 1970, 00:00:00 UTC and\n  the date obtained by parsing the given string representation of a date. If the argument\n  doesn't represent a valid date, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a> is returned.\n</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>\n  The <code>parse()</code> method takes a date string (such as\n  <code>\"2011-10-10T14:48:00\"</code>) and returns the number of milliseconds since January\n  1, 1970, 00:00:00 UTC.\n</p>\n<p>\n  This function is useful for setting date values based on string values, for example in\n  conjunction with the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setTime\"><code>setTime()</code></a> method and the\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> object.\n</p>"}},{"type":"prose","value":{"id":"date_time_string_format","title":"Date Time String Format","isH3":true,"content":"<p>\n  The standard string representation of a date time string is a simplification of the ISO\n  8601 calendar date extended format.\n  (See the section <a href=\"https://tc39.es/ecma262/#sec-date-time-string-format\" class=\"external\" rel=\" noopener\">Date Time String Format</a>\n  in the ECMAScript specification for more details.)\n</p>\n<p>\n  For example, <code>\"2011-10-10\"</code> (<em>date-only</em> form),\n  <code>\"2011-10-10T14:48:00\"</code> (<em>date-time</em> form), or\n  <code>\"2011-10-10T14:48:00.000+09:00\"</code> (<em>date-time</em> form with milliseconds\n  and time zone) can be passed and will be parsed. When the time zone offset is absent,\n  date-only forms are interpreted as a UTC time and date-time forms are interpreted as\n  local time.\n</p>\n<p>\n  While time zone specifiers are used during date string parsing to interpret the\n  argument, the value returned is always the number of milliseconds between January 1,\n  1970 00:00:00 UTC and the point in time represented by the argument or <code>NaN</code>.\n</p>\n<p>\n  Because <code>parse()</code> is a static method of <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a>, it is called as\n  <code>Date.parse()</code> rather than as a method of a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> instance.\n</p>"}},{"type":"prose","value":{"id":"fall-back_to_implementation-specific_date_formats","title":"Fall-back to implementation-specific date formats","isH3":true,"content":"<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> This section contains implementation-specific behavior that can be inconsistent\n    across implementations.\n  </p>\n</div>\n<p>\n  The ECMAScript specification states: If the String does not conform to the standard\n  format the function may fall back to any implementation–specific heuristics or\n  implementation–specific parsing algorithm. Unrecognizable strings or dates containing\n  illegal element values in ISO formatted strings shall cause <code>Date.parse()</code> to\n  return <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>.\n</p>\n<p>\n  However, invalid values in date strings not recognized as simplified ISO format as\n  defined by ECMA-262 may or may not result in <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>, depending on the browser\n  and values provided, e.g.:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Non-ISO string with invalid date values</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'23/25/2014'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  will be treated as a local date of 25 November, 2015 in Firefox 30 and an invalid date\n  in Safari 7.\n</p>\n<p>\n  However, if the string is recognized as an ISO format string and it contains invalid\n  values, it will return <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// ISO string with invalid values</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2014-25-23'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// throws \"RangeError: invalid date\"</span>\n</code></pre></div>\n<p>\n  SpiderMonkey's implementation-specific heuristic can be found in <a href=\"https://searchfox.org/mozilla-central/source/js/src/jsdate.cpp?rev=64553c483cd1#889\" class=\"external\" rel=\" noopener\"><code>jsdate.cpp</code></a>.\n  The string <code>\"10 06 2014\"</code> is an example of a non-conforming ISO format and\n  thus falls back to a custom routine. See also this <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1023155#c6\" class=\"external\" rel=\" noopener\">rough outline</a> on\n  how the parsing works.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'10 06 2014'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>will be treated as a local date of 6 October, 2014, and not 10 June, 2014.</p>\n<p>Other examples:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo-bar 2014'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// returns: \"Invalid Date\"</span>\n\nDate<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo-bar 2014'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// returns: NaN</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"differences_in_assumed_time_zone","title":"Differences in assumed time zone","isH3":true,"content":"<div class=\"notecard note\" id=\"sect2\">\n  <p>\n    <strong>Note:</strong> This section contains implementation-specific behavior that can be inconsistent\n    across implementations.\n  </p>\n</div>\n<p>Given a non-standard date string of <code>\"March 7, 2014\"</code>, <code>parse()</code> assumes a local time zone, but given a simplification of the ISO 8601 calendar date extended format such as <code>\"2014-03-07\"</code>, it will assume a time zone of UTC. Therefore <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> objects produced using those strings may represent different moments in time depending on the version of ECMAScript supported unless the system is set with a local time zone of UTC. This means that two date strings that appear equivalent may result in two different values depending on the format of the string that is being converted.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"using_date.parse","title":"Using Date.parse()","isH3":true,"content":"<p>The following calls all return <code>1546300800000</code>. The first will imply UTC time, and the others are specifying UTC timezone via the ISO date specification (<code>Z</code> and <code>+00:00</code>).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2019-01-01\"</span><span class=\"token punctuation\">)</span>\nDate<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2019-01-01T00:00:00.000Z\"</span><span class=\"token punctuation\">)</span>\nDate<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2019-01-01T00:00:00.000+00:00\"</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>\n  The following call, which does not specify a time zone will be set to 2019-01-01 at\n  00:00:00 in the local timezone of the system.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2019-01-01T00:00:00\"</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"non-standard_date_strings","title":"Non-standard date strings","isH3":true,"content":"<div class=\"notecard note\" id=\"sect3\">\n  <p>\n    <strong>Note:</strong> This section contains implementation-specific behavior that can be inconsistent\n    across implementations.\n  </p>\n</div>\n<p>\n  If <code>ipoDate</code> is an existing <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> object, it can be set to\n  August 9, 1995 (local time) as follows:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ipoDate<span class=\"token punctuation\">.</span><span class=\"token function\">setTime</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Aug 9, 1995'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Some other examples of parsing non-standard date strings:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Aug 9, 1995'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  Returns <code>807937200000</code> in time zone GMT-0300, and other values in other time\n  zones, since the string does not specify a time zone and is not ISO format, therefore\n  the time zone defaults to local.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Wed, 09 Aug 1995 00:00:00 GMT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  Returns <code>807926400000</code> no matter the local time zone as GMT (UTC) is\n  provided.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Wed, 09 Aug 1995 00:00:00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  Returns <code>807937200000</code> in time zone GMT-0300, and other values in other time\n  zones, since there is no time zone specifier in the argument and it is not ISO format,\n  so is treated as local.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Thu, 01 Jan 1970 00:00:00 GMT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  Returns <code>0</code> no matter the local time zone as a time zone GMT (UTC) is\n  provided.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Thu, 01 Jan 1970 00:00:00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  Returns <code>14400000</code> in time zone GMT-0400, and other values in other time\n  zones, since no time zone is provided and the string is not in ISO format, therefore the\n  local time zone is used.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Thu, 01 Jan 1970 00:00:00 GMT-0400'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  Returns <code>14400000</code> no matter the local time zone as a time zone GMT (UTC) is\n  provided.\n</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/numbers-and-dates.html#sec-date.parse","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Date.parse"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Date.parse","dataURL":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse/bcd.json"}},{"type":"prose","value":{"id":"compatibility_notes","title":"Compatibility notes","isH3":true,"content":"<ul>\n  <li>\n    Firefox 49 changed the parsing of 2-digit years to be aligned with the Google Chrome\n    browser instead of Internet Explorer. Now, 2-digit years that are less than\n    <code>50</code> are parsed as 21st century years. For example,\n    <code>04/16/17</code>, previously parsed as April 16, 1917, will be April 16, 2017\n    now. To avoid any interoperability issues or ambiguous years, it is recommended to use\n    the ISO 8601 format like <code>\"2017-04-16\"</code> (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1265136\" class=\"external\" rel=\" noopener\">bug 1265136</a>).\n  </li>\n  <li>\n    Google Chrome will accept a numerical string as a valid\n    <code>dateString</code> parameter. This means that, for instance, while\n    <code>!!Date.parse(\"42\")</code> evaluates to <code>false</code> in Firefox, it\n    evaluates to <code>true</code> in Google Chrome because <code>\"42\"</code> is\n    interpreted as the first of January 2042.\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC\"><code>Date.UTC()</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Date.parse() method parses a string representation of\n  a date, and returns the number of milliseconds since January 1, 1970, 00:00:00 UTC or\n  NaN if the string is unrecognized or, in some cases, contains illegal date\n  values (e.g. 2015-02-31).","popularity":0.0348,"modified":"2022-09-13T07:06:03.000Z","other_translations":[{"title":"Date.parse()","locale":"es","native":"Español"},{"title":"Date.parse()","locale":"fr","native":"Français"},{"title":"Date.parse()","locale":"ja","native":"日本語"},{"title":"Date.parse()","locale":"ko","native":"한국어"},{"title":"Date.parse()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Date.parse()","locale":"ru","native":"Русский"},{"title":"Date.parse()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/javascript/reference/global_objects/date/parse","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/global_objects/date/parse/index.md","last_commit_url":"https://github.com/mdn/content/commit/d6ce8fcbbc4a71ec9209f379e5ea9774bbf1f5ac","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date","title":"Date"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse","title":"Date.parse()"}],"pageTitle":"Date.parse() - JavaScript | MDN","noIndexing":false}}