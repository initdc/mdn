{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"String.prototype.matchAll()","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length\"><code>String length</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/@@iterator\"><code>String.prototype[@@iterator]()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/anchor\"><code>String.prototype.anchor()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/at\"><code>String.prototype.at()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/big\"><code>String.prototype.big()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/blink\"><code>String.prototype.blink()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/bold\"><code>String.prototype.bold()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\"><code>String.prototype.charAt()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\"><code>String.prototype.charCodeAt()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt\"><code>String.prototype.codePointAt()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/concat\"><code>String.prototype.concat()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\"><code>String.prototype.endsWith()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fixed\"><code>String.prototype.fixed()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fontcolor\"><code>String.prototype.fontcolor()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fontsize\"><code>String.prototype.fontsize()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode\"><code>String.fromCharCode()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\"><code>String.fromCodePoint()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\"><code>String.prototype.includes()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf\"><code>String.prototype.indexOf()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/italics\"><code>String.prototype.italics()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf\"><code>String.prototype.lastIndexOf()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/link\"><code>String.prototype.link()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\"><code>String.prototype.localeCompare()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\"><code>String.prototype.match()</code></a></li><li><em><code>String.prototype.matchAll()</code></em></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\"><code>String.prototype.normalize()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\"><code>String.prototype.padEnd()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\"><code>String.prototype.padStart()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw\"><code>String.raw()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\"><code>String.prototype.repeat()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace\"><code>String.prototype.replace()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll\"><code>String.prototype.replaceAll()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/search\"><code>String.prototype.search()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice\"><code>String.prototype.slice()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/small\"><code>String.prototype.small()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split\"><code>String.prototype.split()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\"><code>String.prototype.startsWith()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/strike\"><code>String.prototype.strike()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/sub\"><code>String.prototype.sub()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr\"><code>String.prototype.substr()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring\"><code>String.prototype.substring()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/sup\"><code>String.prototype.sup()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleLowerCase\"><code>String.prototype.toLocaleLowerCase()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleUpperCase\"><code>String.prototype.toLocaleUpperCase()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase\"><code>String.prototype.toLowerCase()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toString\"><code>String.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase\"><code>String.prototype.toUpperCase()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim\"><code>String.prototype.trim()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trimEnd\"><code>String.prototype.trimEnd()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trimStart\"><code>String.prototype.trimStart()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/valueOf\"><code>String.prototype.valueOf()</code></a></li></ol></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>matchAll()</code></strong> method returns an iterator of all results matching a string against a <a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\">regular expression</a>, including <a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Backreferences\">capturing groups</a>.</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/string-matchall.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">matchAll(regexp)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"regexp\"><code>regexp</code></dt>\n  <dd>\n    <p>A regular expression object, or any object that has a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/matchAll\"><code>Symbol.matchAll</code></a> method.</p>\n    <p>If <code>regexp</code> is not a <code>RegExp</code> object and does not have a <code>Symbol.matchAll</code> method, it is implicitly converted to a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a> by using <code>new RegExp(regexp, 'g')</code>.</p>\n    <p>If <code>regexp</code> <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#special_handling_for_regexes\">is a regex</a>, then it must have the global (<code>g</code>) flag set, or a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> is thrown.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>An <a href=\"/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\">iterable iterator</a> (which is not restartable) of matches. Each match is an array with the same shape as the return value of <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\"><code>RegExp.prototype.exec()</code></a>.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"typeerror\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>Thrown if the <code>regexp</code> <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#special_handling_for_regexes\">is a regex</a> that does not have the global (<code>g</code>) flag set (its <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/flags\"><code>flags</code></a> property does not contain <code>\"g\"</code>).</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>The implementation of <code>String.prototype.matchAll</code> itself is very simple — it simply calls the <code>Symbol.matchAll</code> method of the argument with the string as the first parameter (apart from the extra input validation that the regex is global). The actual implementation comes from <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@matchAll\"><code>RegExp.prototype[@@matchAll]()</code></a>.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"regexp.prototype.exec_and_matchall","title":"Regexp.prototype.exec() and matchAll()","isH3":true,"content":"<p>Without <code>matchAll()</code>, it's possible to use calls to <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\"><code>regexp.exec()</code></a> (and regexes with the <code>g</code> flag) in a loop to obtain all the matches:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> regexp <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">foo[a-z]*</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'table football, foosball'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> match<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>match <span class=\"token operator\">=</span> regexp<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Found </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>match<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> start=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>match<span class=\"token punctuation\">.</span>index<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> end=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>regexp<span class=\"token punctuation\">.</span>lastIndex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// expected output: \"Found football start=6 end=14.\"</span>\n  <span class=\"token comment\">// expected output: \"Found foosball start=16 end=24.\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>With <code>matchAll()</code> available, you can avoid the <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/while\"><code>while</code></a> loop and <code>exec</code> with <code>g</code>. Instead, you get an iterator to use with the more convenient <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for...of\"><code>for...of</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">array spreading</a>, or <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a> constructs:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> regexp <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">foo[a-z]*</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'table football, foosball'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> matches <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span>regexp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> match <span class=\"token keyword\">of</span> matches<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Found </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>match<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> start=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>match<span class=\"token punctuation\">.</span>index<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> end=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>match<span class=\"token punctuation\">.</span>index <span class=\"token operator\">+</span> match<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// expected output: \"Found football start=6 end=14.\"</span>\n<span class=\"token comment\">// expected output: \"Found foosball start=16 end=24.\"</span>\n\n<span class=\"token comment\">// matches iterator is exhausted after the for...of iteration</span>\n<span class=\"token comment\">// Call matchAll again to create a new iterator</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span>regexp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Array [ \"football\", \"foosball\" ]</span>\n</code></pre></div>\n<p><code>matchAll</code> will throw an exception if the <code>g</code> flag is missing.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> regexp <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[a-c]</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">;</span>\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span>regexp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// TypeError</span>\n</code></pre></div>\n<p><code>matchAll</code> internally makes a clone of the <code>regexp</code> — so, unlike <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\"><code>regexp.exec()</code></a>, <code>lastIndex</code> does not change as the string is scanned.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> regexp <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[a-c]</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">;</span>\nregexp<span class=\"token punctuation\">.</span>lastIndex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">;</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span>regexp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>regexp<span class=\"token punctuation\">.</span>lastIndex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Array [ \"1 b\", \"1 c\" ]</span>\n</code></pre></div>\n<p>However, this means that unlike using <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\"><code>regexp.exec()</code></a> in a loop, you can't mutate <code>lastIndex</code> to make the regex advance or rewind.</p>"}},{"type":"prose","value":{"id":"better_access_to_capturing_groups_than_string.prototype.match","title":"Better access to capturing groups (than String.prototype.match())","isH3":true,"content":"<p>Another compelling reason for <code>matchAll</code> is the improved access to capture groups.</p>\n<p>Capture groups are ignored when using <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\"><code>match()</code></a> with the global <code>g</code> flag:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> regexp <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">t(e)(st(\\d?))</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'test1test2'</span><span class=\"token punctuation\">;</span>\n\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>regexp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Array ['test1', 'test2']</span>\n</code></pre></div>\n<p>Using <code>matchAll</code>, you can access capture groups easily:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span>regexp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\narray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ['test1', 'e', 'st1', '1', index: 0, input: 'test1test2', length: 4]</span>\narray<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ['test2', 'e', 'st2', '2', index: 5, input: 'test1test2', length: 4]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"using_matchall_with_a_non-regexp_implementing_matchall","title":"Using matchAll() with a non-RegExp implementing @@matchAll","isH3":true,"content":"<p>If an object has a <code>Symbol.matchAll</code> method, it can be used as a custom matcher. The return value of <code>Symbol.matchAll</code> becomes the return value of <code>matchAll()</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"Hmm, this is interesting.\"</span><span class=\"token punctuation\">;</span>\n\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>matchAll<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"Yes, it's interesting.\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns [[\"Yes, it's interesting.\"]]</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/text-processing.html#sec-string.prototype.matchall","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.String.matchAll"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.String.matchAll","dataURL":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#ecmascript-string-and-regexp\" class=\"external\" rel=\" noopener\">Polyfill of <code>String.prototype.matchAll</code> in <code>core-js</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\"><code>String.prototype.match()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\">Using regular expressions in JavaScript</a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Backreferences\">Capturing groups</a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\"><code>RegExp.prototype.exec()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\"><code>RegExp.prototype.test()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@matchAll\"><code>RegExp.prototype[@@matchAll]()</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The matchAll() method returns an iterator of all results matching a string against a regular expression, including capturing groups.","popularity":0.0102,"modified":"2022-09-13T07:09:29.000Z","other_translations":[{"title":"String.prototype.matchAll()","locale":"es","native":"Español"},{"title":"String.prototype.matchAll()","locale":"fr","native":"Français"},{"title":"String.prototype.matchAll()","locale":"ja","native":"日本語"},{"title":"String.prototype.matchAll()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"String.prototype.matchAll()","locale":"ru","native":"Русский"},{"title":"String.prototype.matchAll()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/javascript/reference/global_objects/string/matchall","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/global_objects/string/matchall/index.md","last_commit_url":"https://github.com/mdn/content/commit/ce2909126eb09e44c9f48d9f65d072acae827749","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String","title":"String"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll","title":"String.prototype.matchAll()"}],"pageTitle":"String.prototype.matchAll() - JavaScript | MDN","noIndexing":false}}