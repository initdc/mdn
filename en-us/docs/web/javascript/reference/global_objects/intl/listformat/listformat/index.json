{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Intl.ListFormat() constructor","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/ListFormat","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl\"><code>Intl</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/@@toStringTag\"><code>Intl[@@toStringTag]</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/getCanonicalLocales\"><code>Intl.getCanonicalLocales()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/supportedValuesOf\"><code>Intl.supportedValuesOf()</code></a></li></ol></li><li><strong>Related pages:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator\"><code>Intl.Collator</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\"><code>Intl.DateTimeFormat</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat\"><code>Intl.ListFormat</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\"><code>Intl.NumberFormat</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/PluralRules\"><code>Intl.PluralRules</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\"><code>Intl.RelativeTimeFormat</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter\"><code>Intl.Segmenter</code></a></strong></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>Intl.ListFormat()</code></strong> constructor creates\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat\"><code>Intl.ListFormat</code></a> objects that enable language-sensitive list\n  formatting.\n</p><iframe class=\"interactive\" height=\"692\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/intl-listformat.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe><!-- The source for this interactive example is stored in a GitHub repository. If you'd like to contribute to the interactive examples project, please clone https://github.com/mdn/interactive-examples and send us a pull request. -->"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">new Intl.ListFormat()\nnew Intl.ListFormat(locales)\nnew Intl.ListFormat(locales, options)\n</pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>Intl.ListFormat()</code> can only be constructed with <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a>. Attempting to call it without <code>new</code> throws a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>.</p>\n</div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"locales\"><code>locales</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the <code>locales</code> argument, see <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_identification_and_negotiation\">Locale identification and negotiation</a>.</p>\n  </dd>\n  <dt id=\"options\"><code>options</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An object with some or all of the following properties:</p>\n    <dl>\n      <dt id=\"localematcher\"><code>localeMatcher</code></dt>\n      <dd>\n        <p>The locale-matching algorithm to use. Possible values:</p>\n        <ul>\n          <li><code>\"best fit\"</code> (default)</li>\n          <li><code>\"lookup\"</code></li>\n        </ul>\n        <p>\n          For information about this option, see the\n          <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_negotiation\">Intl</a>\n          page.\n        </p>\n      </dd>\n      <dt id=\"type\"><code>type</code></dt>\n      <dd>\n        <p>Indicates the type of grouping. Possible values:</p>\n        <ul>\n          <li><code>\"conjunction\"</code>, for \"and\"-based grouping of the list items: \"A, B, and C\" (default)</li>\n          <li><code>\"disjunction\"</code>, for \"or\"-based grouping of the list items: \"A, B, or C\"</li>\n          <li><code>\"unit\"</code>, for grouping the list items as a unit (neither \"and\"-based nor \"or\"-based): \"A, B, C\"</li>\n        </ul>\n      </dd>\n      <dt id=\"style\"><code>style</code></dt>\n      <dd>\n        <p>Indicates the grouping style (for example, whether list separators and conjunctions are included). Possible values:</p>\n        <ul>\n          <li><code>\"long\"</code>: \"A, B, and C\" (default)</li>\n          <li><code>\"short\"</code>: \"A, B, C\"</li>\n          <li><code>\"narrow\"</code>: \"A B C\"</li>\n        </ul>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"using_format","title":"Using format","isH3":true,"content":"<p>The following example shows how to create a List formatter using the English language.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Motorcycle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bus'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Car'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-GB'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'long'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'conjunction'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Motorcycle, Bus and Car</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-GB'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'long'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Motorcycle, Bus and Car</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'long'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Motorcycle, Bus, and Car</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-GB'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'short'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'conjunction'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Motorcycle, Bus and Car</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'short'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'conjunction'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Motorcycle, Bus, &amp; Car</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-GB'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'narrow'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'conjunction'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Motorcycle, Bus, Car</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-GB'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'long'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'disjunction'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Motorcycle, Bus or Car</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-GB'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'short'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'disjunction'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Motorcycle, Bus or Car</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-GB'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'narrow'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'disjunction'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Motorcycle, Bus or Car</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'narrow'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Motorcycle, Bus, Car</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-GB'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'narrow'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'unit'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Motorcycle Bus Car</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'long'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"30 degrees\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15 minutes\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"50 seconds\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 30 degrees, 15 minutes, and 50 seconds</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'narrow'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"30 degrees\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15 minutes\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"50 seconds\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 30 degrees, 15 minutes, 50 seconds</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>ListFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'narrow'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'unit'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"30°\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15′\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"50″\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 30° 15′ 50″</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma402/#sec-intl-listformat-constructor","title":"ECMAScript Internationalization API Specification"}],"query":"javascript.builtins.Intl.ListFormat.ListFormat"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Intl.ListFormat.ListFormat","dataURL":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/ListFormat/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat\"><code>Intl.ListFormat</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl\"><code>Intl</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Intl.ListFormat() constructor creates\n  Intl.ListFormat objects that enable language-sensitive list\n  formatting.","popularity":0.0005,"modified":"2022-09-13T07:06:03.000Z","other_translations":[{"title":"Constructeur Intl.ListFormat()","locale":"fr","native":"Français"},{"title":"Intl.ListFormat() コンストラクター","locale":"ja","native":"日本語"},{"title":"Construtor Intl.ListFormat()","locale":"pt-BR","native":"Português (do Brasil)"}],"source":{"folder":"en-us/web/javascript/reference/global_objects/intl/listformat/listformat","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/global_objects/intl/listformat/listformat/index.md","last_commit_url":"https://github.com/mdn/content/commit/d6ce8fcbbc4a71ec9209f379e5ea9774bbf1f5ac","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl","title":"Intl"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat","title":"Intl.ListFormat"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/ListFormat","title":"Intl.ListFormat() constructor"}],"pageTitle":"Intl.ListFormat() constructor - JavaScript | MDN","noIndexing":false}}