{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Intl.DisplayNames() constructor","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames/DisplayNames","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl\"><code>Intl</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/@@toStringTag\"><code>Intl[@@toStringTag]</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/getCanonicalLocales\"><code>Intl.getCanonicalLocales()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/supportedValuesOf\"><code>Intl.supportedValuesOf()</code></a></li></ol></li><li><strong>Related pages:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator\"><code>Intl.Collator</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\"><code>Intl.DateTimeFormat</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat\"><code>Intl.ListFormat</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\"><code>Intl.NumberFormat</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/PluralRules\"><code>Intl.PluralRules</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\"><code>Intl.RelativeTimeFormat</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter\"><code>Intl.Segmenter</code></a></strong></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>Intl.DisplayNames()</code></strong> constructor creates\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames\"><code>Intl.DisplayNames</code></a> objects that enable the consistent\n  translation of language, region and script display names.\n</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/intl-displaynames.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe><!-- The source for this interactive example is stored in a GitHub repository. If you'd like to contribute to the interactive examples project, please clone https://github.com/mdn/interactive-examples and send us a pull request. -->"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">new Intl.DisplayNames(locales, options)\n</pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>Intl.DisplayNames()</code> can only be constructed with <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a>. Attempting to call it without <code>new</code> throws a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>.</p>\n</div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"locales\"><code>locales</code></dt>\n  <dd>\n    <p>A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the <code>locales</code> argument, see <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_identification_and_negotiation\">Locale identification and negotiation</a>. The following Unicode extension key is allowed:</p>\n    <dl>\n      <dt id=\"nu\"><code>nu</code></dt>\n      <dd>\n        <p>\n          The numbering system to be used. Possible values include:\n          <code>\"arab\"</code>, <code>\"arabext\"</code>, <code>\"bali\"</code>,\n          <code>\"beng\"</code>, <code>\"deva\"</code>, <code>\"fullwide\"</code>,\n          <code>\"gujr\"</code>, <code>\"guru\"</code>, <code>\"hanidec\"</code>,\n          <code>\"khmr\"</code>, <code>\"knda\"</code>, <code>\"laoo\"</code>,\n          <code>\"latn\"</code>, <code>\"limb\"</code>, <code>\"mlym\"</code>,\n          <code>\"mong\"</code>, <code>\"mymr\"</code>, <code>\"orya\"</code>,\n          <code>\"tamldec\"</code>, <code>\"telu\"</code>, <code>\"thai\"</code>,\n          <code>\"tibt\"</code>.\n        </p>\n      </dd>\n    </dl>\n  </dd>\n  <dt id=\"options\"><code>options</code></dt>\n  <dd>\n    <p>An object with some or all of the following properties:</p>\n    <dl>\n      <dt id=\"localematcher\"><code>localeMatcher</code></dt>\n      <dd>\n        <p>\n          The locale matching algorithm to use. Possible values are\n          <code>\"lookup\"</code> and <code>\"best fit\"</code>; the default is\n          <code>\"best fit\"</code>. For information about this option, see the\n          <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_negotiation\">Intl</a> page.\n        </p>\n      </dd>\n      <dt id=\"style\"><code>style</code></dt>\n      <dd>\n        <p>The formatting style to use, the default is <code>\"long\"</code>.</p>\n        <ul>\n          <li><code>\"narrow\"</code></li>\n          <li><code>\"short\"</code></li>\n          <li><code>\"long\"</code></li>\n        </ul>\n      </dd>\n      <dt id=\"type\"><code>type</code></dt>\n      <dd>\n        <p>The type to use.</p>\n        <ul>\n          <li><code>\"calendar\"</code></li>\n          <li><code>\"currency\"</code></li>\n          <li><code>\"dateTimeField\"</code></li>\n          <li><code>\"language\"</code></li>\n          <li><code>\"region\"</code></li>\n          <li><code>\"script\"</code></li>\n        </ul>\n      </dd>\n      <dt id=\"languagedisplay\"><code>languageDisplay</code></dt>\n      <dd>\n        <p>The <code>languageDisplay</code> it's only usable along with type <code>language</code>, defaults to <code>dialect</code>.</p>\n        <ul>\n          <li><code>\"dialect\"</code></li>\n          <li><code>\"standard\"</code></li>\n        </ul>\n      </dd>\n      <dt id=\"fallback\"><code>fallback</code></dt>\n      <dd>\n        <p>The fallback to use, the default is <code>\"code\"</code>.</p>\n        <ul>\n          <li><code>\"code\"</code></li>\n          <li><code>\"none\"</code></li>\n        </ul>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"basic_usage","title":"Basic usage","isH3":true,"content":"<p>\n  In basic use without specifying a locale, a formatted string in the default locale and\n  with default options is returned.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>DisplayNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'language'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'US'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Expected output: 'us'</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"using_type_datetimefield","title":"Using type <code>dateTimeField</code>","isH3":true,"content":"<p>Example using <code>dateTimeField</code> as a type option, will return the localized date time names strings.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> dn <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>DisplayNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pt'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'dateTimeField'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'era'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'era'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'year'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'ano'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'month'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'mês'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'quarter'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'trimestre'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'weekOfYear'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'semana'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'weekday'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'dia da semana'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dayPeriod'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'AM/PM'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'day'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'dia'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hour'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'hora'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'minute'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'minuto'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'second'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'segundo'</span>\n</code></pre></div>","titleAsText":"Using type dateTimeField"}},{"type":"prose","value":{"id":"using_type_calendar","title":"Using type <code>calendar</code>","isH3":true,"content":"<p>Example using <code>calendar</code> as a type option, will return the localized calendar names strings.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> dn <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>DisplayNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'calendar'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'roc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'Minguo Calendar'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gregory'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'Gregorian Calendar'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chinese'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'Chinese Calendar'</span>\n</code></pre></div>","titleAsText":"Using type calendar"}},{"type":"prose","value":{"id":"using_type_language_with_languagedisplay","title":"Using type <code>language</code> with <code>languageDisplay</code>","isH3":true,"content":"<p>Example using <code>language</code> as a type with <code>languageDisplay</code> options.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Using `dialect` option</span>\n<span class=\"token keyword\">const</span> dnDialect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>DisplayNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'language'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">languageDisplay</span><span class=\"token operator\">:</span> <span class=\"token string\">'dialect'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dnDialect<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-GB'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'British English'</span>\n\n<span class=\"token comment\">// Using `standard` option</span>\n<span class=\"token keyword\">const</span> dnStd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>DisplayNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'language'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">languageDisplay</span><span class=\"token operator\">:</span> <span class=\"token string\">'standard'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dnStd<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-GB'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs 'English (United Kingdom)'</span>\n</code></pre></div>","titleAsText":"Using type language with languageDisplay"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma402/#sec-intl-displaynames-constructor","title":"ECMAScript Internationalization API Specification"}],"query":"javascript.builtins.Intl.DisplayNames.DisplayNames"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Intl.DisplayNames.DisplayNames","dataURL":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames/DisplayNames/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames\"><code>Intl.DisplayNames</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/supportedValuesOf\"><code>Intl.supportedValuesOf()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl\"><code>Intl</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Intl.DisplayNames() constructor creates\n  Intl.DisplayNames objects that enable the consistent\n  translation of language, region and script display names.","popularity":0.0008,"modified":"2022-09-13T07:06:03.000Z","other_translations":[{"title":"Intl.DisplayNames() constructor","locale":"fr","native":"Français"},{"title":"Intl.DisplayNames() コンストラクター","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/javascript/reference/global_objects/intl/displaynames/displaynames","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/global_objects/intl/displaynames/displaynames/index.md","last_commit_url":"https://github.com/mdn/content/commit/d6ce8fcbbc4a71ec9209f379e5ea9774bbf1f5ac","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl","title":"Intl"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames","title":"Intl.DisplayNames"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames/DisplayNames","title":"Intl.DisplayNames() constructor"}],"pageTitle":"Intl.DisplayNames() constructor - JavaScript | MDN","noIndexing":false}}