{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Reflect.set()","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/set","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect\"><code>Reflect</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/apply\"><code>Reflect.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/construct\"><code>Reflect.construct()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/defineProperty\"><code>Reflect.defineProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/deleteProperty\"><code>Reflect.deleteProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/get\"><code>Reflect.get()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getOwnPropertyDescriptor\"><code>Reflect.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getPrototypeOf\"><code>Reflect.getPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/has\"><code>Reflect.has()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/isExtensible\"><code>Reflect.isExtensible()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/ownKeys\"><code>Reflect.ownKeys()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/preventExtensions\"><code>Reflect.preventExtensions()</code></a></li><li><em><code>Reflect.set()</code></em></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf\"><code>Reflect.setPrototypeOf()</code></a></li></ol></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The static <strong><code>Reflect.set()</code></strong> method works like setting a\n  property on an object.\n</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/reflect-set.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">Reflect.set(target, propertyKey, value)\nReflect.set(target, propertyKey, value, receiver)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"target\"><code>target</code></dt>\n  <dd>\n    <p>The target object on which to set the property.</p>\n  </dd>\n  <dt id=\"propertykey\"><code>propertyKey</code></dt>\n  <dd>\n    <p>The name of the property to set.</p>\n  </dd>\n  <dt id=\"value\"><code>value</code></dt>\n  <dd>\n    <p>The value to set.</p>\n  </dd>\n  <dt id=\"receiver\"><code>receiver</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>The value of <code>this</code> provided for the call to the setter for <code>propertyKey</code> on <code>target</code>. If provided and <code>target</code> does not have a setter for <code>propertyKey</code>, the property will be set on <code>receiver</code> instead.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating whether or not setting the property was successful.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>\n  A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>, if <code>target</code> is not an\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a>.\n</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>\n  The <code>Reflect.set</code> method allows you to set a property on an object. It does\n  property assignment and is like the\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">property accessor</a> syntax as a function.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"using_reflect.set","title":"Using Reflect.set()","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Object</span>\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'prop'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// true</span>\nobj<span class=\"token punctuation\">.</span>prop  <span class=\"token comment\">// \"value\"</span>\n\n<span class=\"token comment\">// Array</span>\n<span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'duck'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'duck'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'duck'</span><span class=\"token punctuation\">]</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'goose'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// true</span>\narr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// \"goose\"</span>\n\n<span class=\"token comment\">// It can truncate an array.</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token string\">'length'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// true</span>\narr  <span class=\"token comment\">// [\"duck\"]</span>\n\n<span class=\"token comment\">// With just one argument, propertyKey and value are \"undefined\".</span>\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// true</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyDescriptor</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// { value: undefined, writable: true, enumerable: true, configurable: true }</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"different_target_and_receiver","title":"Different target and receiver","isH3":true,"content":"<p>When the <code>target</code> and <code>receiver</code> are different, <code>Reflect.set</code> will use the property descriptor of <code>target</code> (to find the setter or determine if the property is writable), but set the property on <code>receiver</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> receiver <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> receiver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token comment\">// target is {}; receiver is { a: 2 }</span>\n\n<span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> receiver <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> receiver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token comment\">// target is { a: 1 }; receiver is { a: 2 }</span>\n\n<span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">set</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> receiver <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> receiver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token comment\">// target is { a: [Setter] }; receiver is { b: 2 }</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/reflection.html#sec-reflect.set","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Reflect.set"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Reflect.set","dataURL":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/set/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#ecmascript-reflect\" class=\"external\" rel=\" noopener\">Polyfill of <code>Reflect.set</code> in <code>core-js</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect\"><code>Reflect</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The static Reflect.set() method works like setting a\n  property on an object.","popularity":0.0005,"modified":"2022-09-13T07:09:29.000Z","other_translations":[{"title":"Reflect.set()","locale":"es","native":"Español"},{"title":"Reflect.set()","locale":"fr","native":"Français"},{"title":"Reflect.set()","locale":"ja","native":"日本語"},{"title":"Reflect.set()","locale":"ko","native":"한국어"},{"title":"Reflect.set()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Reflect.set()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/javascript/reference/global_objects/reflect/set","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/global_objects/reflect/set/index.md","last_commit_url":"https://github.com/mdn/content/commit/ce2909126eb09e44c9f48d9f65d072acae827749","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect","title":"Reflect"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/set","title":"Reflect.set()"}],"pageTitle":"Reflect.set() - JavaScript | MDN","noIndexing":false}}