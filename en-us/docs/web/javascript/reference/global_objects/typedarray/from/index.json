{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"TypedArray.from()","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/from","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>TypedArray</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/@@species\"><code>get TypedArray[@@species]</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/buffer\"><code>TypedArray.prototype.buffer</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/byteLength\"><code>TypedArray.prototype.byteLength</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/byteOffset\"><code>TypedArray.prototype.byteOffset</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/BYTES_PER_ELEMENT\"><code>TypedArray.BYTES_PER_ELEMENT</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/length\"><code>TypedArray.prototype.length</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/name\"><code>TypedArray.name</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/@@iterator\"><code>TypedArray.prototype[@@iterator]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/at\"><code>TypedArray.prototype.at()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/copyWithin\"><code>TypedArray.prototype.copyWithin()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/entries\"><code>TypedArray.prototype.entries()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/every\"><code>TypedArray.prototype.every()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/fill\"><code>TypedArray.prototype.fill()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/filter\"><code>TypedArray.prototype.filter()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/find\"><code>TypedArray.prototype.find()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findIndex\"><code>TypedArray.prototype.findIndex()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findLast\"><code>TypedArray.prototype.findLast()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findLastIndex\"><code>TypedArray.prototype.findLastIndex()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/forEach\"><code>TypedArray.prototype.forEach()</code></a></li><li><em><code>TypedArray.from()</code></em></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/includes\"><code>TypedArray.prototype.includes()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/indexOf\"><code>TypedArray.prototype.indexOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/join\"><code>TypedArray.prototype.join()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/keys\"><code>TypedArray.prototype.keys()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/lastIndexOf\"><code>TypedArray.prototype.lastIndexOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/map\"><code>TypedArray.prototype.map()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/of\"><code>TypedArray.of()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reduce\"><code>TypedArray.prototype.reduce()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reduceRight\"><code>TypedArray.prototype.reduceRight()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reverse\"><code>TypedArray.prototype.reverse()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/set\"><code>TypedArray.prototype.set()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/slice\"><code>TypedArray.prototype.slice()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/some\"><code>TypedArray.prototype.some()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/sort\"><code>TypedArray.prototype.sort()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray\"><code>TypedArray.prototype.subarray()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/toLocaleString\"><code>TypedArray.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/toString\"><code>TypedArray.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/values\"><code>TypedArray.prototype.values()</code></a></li></ol></li><li><strong>Related pages:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\"><code>Int8Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\"><code>Int16Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\"><code>Uint16Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\"><code>Float64Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\"><code>BigInt64Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\"><code>BigUint64Array</code></a></strong></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>TypedArray.from()</code></strong> method creates a new\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#typedarray_objects\">typed array</a>\n  from an array-like or iterable object. This method is nearly the same as\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a>.\n</p><iframe class=\"interactive\" height=\"410\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/typedarray-from.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">// Arrow function\nTypedArray.from(arrayLike, (element) =&gt; { /* ... */ } )\nTypedArray.from(arrayLike, (element, index) =&gt; { /* ... */ } )\n\n// Mapping function\nTypedArray.from(arrayLike, mapFn)\nTypedArray.from(arrayLike, mapFn, thisArg)\n\n// Inline mapping function\nTypedArray.from(arrayLike, function mapFn(element) { /* ... */ })\nTypedArray.from(arrayLike, function mapFn(element, index) { /* ... */ })\nTypedArray.from(arrayLike, function mapFn(element) { /* ... */ }, thisArg)\nTypedArray.from(arrayLike, function mapFn(element, index) { /* ... */ }, thisArg)\n</pre></div>\n<p>Where <code>TypedArray</code> is one of:</p>\n<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\"><code>Int8Array</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\"><code>Int16Array</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\"><code>Uint16Array</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\"><code>Float64Array</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\"><code>BigInt64Array</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\"><code>BigUint64Array</code></a></li>\n</ul>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"arraylike\"><code>arrayLike</code></dt>\n  <dd>\n    <p>An array-like or iterable object to convert to a typed array.</p>\n  </dd>\n  <dt id=\"mapfn\"><code>mapFn</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Map function to call on every element of the typed array.</p>\n  </dd>\n  <dt id=\"thisarg\"><code>thisArg</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Value to use as <code>this</code> when executing <code>mapFn</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A new <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>TypedArray</code></a> instance.</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p><code>TypedArray.from()</code> lets you create typed arrays from:</p>\n<ul>\n  <li>\n    array-like objects (objects with a <code>length</code> property and indexed\n    elements); or\n  </li>\n  <li>\n    <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\">iterable objects</a> (objects\n    where you can get its elements, such as <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\"><code>Map</code></a> and <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\"><code>Set</code></a>).\n  </li>\n</ul>\n<p>\n  <code>TypedArray.from()</code> has the optional parameter\n  <code>mapFn</code>, which allows you to execute a\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>map()</code></a> function on each element of the typed array\n  (or subclass object) that is being created. This means that the following are\n  equivalent:\n</p>\n<ul>\n  <li><code>TypedArray.from(obj, mapFn, thisArg)</code></li>\n  <li><code>TypedArray.from(Array.prototype.map.call(obj, mapFn, thisArg))</code>.</li>\n</ul>\n<p>The <code>length</code> property of the <code>from()</code> method is <code>1</code>.</p>"}},{"type":"prose","value":{"id":"differences_from_array.from","title":"Differences from Array.from()","isH3":true,"content":"<p>\n  Some subtle distinctions between <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a> and\n  <code>TypedArray.from()</code>:\n</p>\n<ul>\n  <li>\n    If the <code>thisArg</code> value passed to\n    <code>TypedArray.from()</code> is not a constructor,\n    <code>TypedArray.from()</code> will throw a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>,\n    where <code>Array.from()</code> defaults to creating a new <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>.\n  </li>\n  <li><code>TypedArray.from()</code> uses <code>[[Set]]</code> where <code>Array.from()</code> uses <code>[[DefineOwnProperty]]</code>. Hence, when working with <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\"><code>Proxy</code></a> objects, it calls <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set\"><code>handler.set()</code></a> to create new elements rather than <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/defineProperty\"><code>handler.defineProperty()</code></a>.</li>\n  <li>\n    When the <code>source</code> parameter is an iterator, the\n    <code>TypedArray.from()</code> first collects all the values from the\n    iterator, then creates an instance of <code>thisArg</code> using the\n    count, then sets the values on the instance. <code>Array.from()</code> sets each\n    value as it receives them from the iterator, then sets its <code>length</code> at\n    the end.\n  </li>\n  <li>\n    When <code>Array.from()</code> gets an array-like which isn't an iterator, it\n    respects holes. <code>TypedArray.from()</code> will ensure the result\n    is dense.\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"from_an_iterable_object_set","title":"From an iterable object (Set)","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nUint8Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Uint8Array [ 1, 2, 3 ]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"from_a_string","title":"From a string","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Int16Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Int16Array [ 1, 2, 3 ]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"use_with_arrow_function_and_map","title":"Use with arrow function and map","isH3":true,"content":"<p>Using an arrow function as the map function to manipulate the elements</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Float32Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> x <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Float32Array [ 2, 4, 6 ]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"generate_a_sequence_of_numbers","title":"Generate a sequence of numbers","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Uint8Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token punctuation\">,</span> k</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Uint8Array [ 0, 1, 2, 3, 4 ]</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/indexed-collections.html#sec-%typedarray%.from","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.TypedArray.from"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.TypedArray.from","dataURL":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/from/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#ecmascript-typed-arrays\" class=\"external\" rel=\" noopener\">Polyfill of <code>TypedArray.from</code> in <code>core-js</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/of\"><code>TypedArray.of()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>Array.prototype.map()</code></a></li>\n  <li><a href=\"https://github.com/behnammodi/polyfill/blob/v0.0.1/int-8-array.polyfill.js\" class=\"external\" rel=\" noopener\">A polyfill</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The TypedArray.from() method creates a new\n  typed array\n  from an array-like or iterable object. This method is nearly the same as\n  Array.from().","popularity":0.0014,"modified":"2022-09-13T07:09:29.000Z","other_translations":[{"title":"TypedArray.from()","locale":"fr","native":"Français"},{"title":"TypedArray.from()","locale":"ja","native":"日本語"},{"title":"TypedArray.from()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/javascript/reference/global_objects/typedarray/from","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/global_objects/typedarray/from/index.md","last_commit_url":"https://github.com/mdn/content/commit/ce2909126eb09e44c9f48d9f65d072acae827749","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray","title":"TypedArray"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/from","title":"TypedArray.from()"}],"pageTitle":"TypedArray.from() - JavaScript | MDN","noIndexing":false}}