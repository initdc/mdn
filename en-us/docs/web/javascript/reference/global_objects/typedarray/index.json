{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"TypedArray","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>TypedArray</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/@@species\"><code>get TypedArray[@@species]</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/buffer\"><code>TypedArray.prototype.buffer</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/byteLength\"><code>TypedArray.prototype.byteLength</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/byteOffset\"><code>TypedArray.prototype.byteOffset</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/BYTES_PER_ELEMENT\"><code>TypedArray.BYTES_PER_ELEMENT</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/length\"><code>TypedArray.prototype.length</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/name\"><code>TypedArray.name</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/@@iterator\"><code>TypedArray.prototype[@@iterator]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/at\"><code>TypedArray.prototype.at()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/copyWithin\"><code>TypedArray.prototype.copyWithin()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/entries\"><code>TypedArray.prototype.entries()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/every\"><code>TypedArray.prototype.every()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/fill\"><code>TypedArray.prototype.fill()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/filter\"><code>TypedArray.prototype.filter()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/find\"><code>TypedArray.prototype.find()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findIndex\"><code>TypedArray.prototype.findIndex()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findLast\"><code>TypedArray.prototype.findLast()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findLastIndex\"><code>TypedArray.prototype.findLastIndex()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/forEach\"><code>TypedArray.prototype.forEach()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/from\"><code>TypedArray.from()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/includes\"><code>TypedArray.prototype.includes()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/indexOf\"><code>TypedArray.prototype.indexOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/join\"><code>TypedArray.prototype.join()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/keys\"><code>TypedArray.prototype.keys()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/lastIndexOf\"><code>TypedArray.prototype.lastIndexOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/map\"><code>TypedArray.prototype.map()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/of\"><code>TypedArray.of()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reduce\"><code>TypedArray.prototype.reduce()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reduceRight\"><code>TypedArray.prototype.reduceRight()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reverse\"><code>TypedArray.prototype.reverse()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/set\"><code>TypedArray.prototype.set()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/slice\"><code>TypedArray.prototype.slice()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/some\"><code>TypedArray.prototype.some()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/sort\"><code>TypedArray.prototype.sort()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray\"><code>TypedArray.prototype.subarray()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/toLocaleString\"><code>TypedArray.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/toString\"><code>TypedArray.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/values\"><code>TypedArray.prototype.values()</code></a></li></ol></li><li><strong>Related pages:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\"><code>Int8Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\"><code>Int16Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\"><code>Uint16Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\"><code>Float64Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\"><code>BigInt64Array</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\"><code>BigUint64Array</code></a></strong></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  A <strong><em>TypedArray</em></strong> object describes an array-like view of an\n  underlying <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">binary data buffer</a>.\n  There is no global property named <code>TypedArray</code>, nor is there a\n  directly visible <code>TypedArray</code> constructor. Instead, there are a number of\n  different global properties, whose values are typed array constructors for specific\n  element types, listed below. On the following pages you will find common properties and\n  methods that can be used with any typed array containing elements of any type.\n</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/typedarray-constructor.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>\n  The <code>TypedArray</code> constructor is a hidden global that serves as\n  the <code>[[Prototype]]</code> of all <code>TypedArray</code> constructors.\n  This constructor is not directly exposed: there is no global <code>%TypedArray%</code>\n  or <code>TypedArray</code> property. It is only directly accessible through\n  <code>Object.getPrototypeOf(Int8Array)</code> and similar. All\n  <code>TypedArray</code>s constructors inherit common properties from the\n  <code>%TypedArray%</code> constructor function. Additionally, all typed array prototypes\n  (<code>TypedArray.prototype</code>) have <code>%TypedArray%.prototype</code>\n  as their <code>[[Prototype]]</code>.\n</p>\n<p>\n  When creating an instance of a <code>TypedArray</code> (e.g.\n  <code>Int8Array</code>), an array buffer is created internally in memory or, if an\n  <code>ArrayBuffer</code> object is given as constructor argument, then this is used\n  instead. The buffer address is saved as an internal property of the instance and all the\n  methods of <code>%TypedArray%.prototype</code>, i.e. set value and get value\n  etc., operate on that array buffer address.\n</p>"}},{"type":"prose","value":{"id":"typedarray_objects","title":"TypedArray objects","isH3":true,"content":"<table>\n  <thead>\n    <tr>\n      <th>Type</th>\n      <th>Value Range</th>\n      <th>Size in bytes</th>\n      <th>Description</th>\n      <th>Web IDL type</th>\n      <th>Equivalent C type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\"><code>Int8Array</code></a></td>\n      <td>-128 to 127</td>\n      <td>1</td>\n      <td>8-bit two's complement signed integer</td>\n      <td><code>byte</code></td>\n      <td><code>int8_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a></td>\n      <td>0 to 255</td>\n      <td>1</td>\n      <td>8-bit unsigned integer</td>\n      <td><code>octet</code></td>\n      <td><code>uint8_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a></td>\n      <td>0 to 255</td>\n      <td>1</td>\n      <td>8-bit unsigned integer (clamped)</td>\n      <td><code>octet</code></td>\n      <td><code>uint8_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\"><code>Int16Array</code></a></td>\n      <td>-32768 to 32767</td>\n      <td>2</td>\n      <td>16-bit two's complement signed integer</td>\n      <td><code>short</code></td>\n      <td><code>int16_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\"><code>Uint16Array</code></a></td>\n      <td>0 to 65535</td>\n      <td>2</td>\n      <td>16-bit unsigned integer</td>\n      <td><code>unsigned short</code></td>\n      <td><code>uint16_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a></td>\n      <td>-2147483648 to 2147483647</td>\n      <td>4</td>\n      <td>32-bit two's complement signed integer</td>\n      <td><code>long</code></td>\n      <td><code>int32_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a></td>\n      <td>0 to 4294967295</td>\n      <td>4</td>\n      <td>32-bit unsigned integer</td>\n      <td><code>unsigned long</code></td>\n      <td><code>uint32_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a></td>\n      <td><code>-3.4E38</code> to <code>3.4E38</code> and <code>1.2E-38</code> is the min positive number</td>\n      <td>4</td>\n      <td>32-bit IEEE floating point number (7 significant digits e.g., <code>1.234567</code>)</td>\n      <td><code>unrestricted float</code></td>\n      <td><code>float</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\"><code>Float64Array</code></a></td>\n      <td><code>-1.8E308</code> to <code>1.8E308</code> and <code>5E-324</code> is the min positive number</td>\n      <td>8</td>\n      <td>64-bit IEEE floating point number (16 significant digits e.g., <code>1.23456789012345</code>)</td>\n      <td><code>unrestricted double</code></td>\n      <td><code>double</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\"><code>BigInt64Array</code></a></td>\n      <td>-2<sup>63</sup> to 2<sup>63</sup> - 1</td>\n      <td>8</td>\n      <td>64-bit two's complement signed integer</td>\n      <td><code>bigint</code></td>\n      <td><code>int64_t (signed long long)</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\"><code>BigUint64Array</code></a></td>\n      <td>0 to 2<sup>64</sup> - 1</td>\n      <td>8</td>\n      <td>64-bit unsigned integer</td>\n      <td><code>bigint</code></td>\n      <td><code>uint64_t (unsigned long long)</code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<p>\n  This object cannot be instantiated directly. Instead, you create an instance of an\n  array of a particular type, such as a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\"><code>Int8Array</code></a> or a\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\"><code>BigInt64Array</code></a>. These objects all have a common syntax for their\n  constructors:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">TypedArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">TypedArray</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">TypedArray</span><span class=\"token punctuation\">(</span>typedArray<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">TypedArray</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">TypedArray</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">TypedArray</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> byteOffset<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">TypedArray</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> byteOffset<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>Where <em>TypedArray</em> is a constructor for one of the concrete types.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> All <code>TypedArray</code> constructors can only be constructed with <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a>. Attempting to call one without <code>new</code> throws a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>.</p>\n</div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"length\"><code>length</code></dt>\n  <dd>\n    <p>\n      When called with a <code>length</code> argument, an internal array buffer\n      is created in memory, of size <code>length</code> <em>multiplied by\n<code>BYTES_PER_ELEMENT</code></em> bytes, containing zeros.\n    </p>\n  </dd>\n  <dt id=\"typedarray\"><code>typedArray</code></dt>\n  <dd>\n    <p>\n      When called with a <code>typedArray</code> argument, the <code>typedArray</code> gets copied\n      into a new typed array. For a <strong>non-<a href=\"/en-US/docs/Glossary/BigInt\">bigint</a></strong> <code>TypedArray</code>,\n      the <code>typedArray</code> parameter can be an object of only the\n      <strong>non</strong>-<a href=\"/en-US/docs/Glossary/BigInt\">bigint</a> typed array types (such as\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a>). Similarly, for a <strong><a href=\"/en-US/docs/Glossary/BigInt\">bigint</a></strong>\n      <code>TypedArray</code>, the <code>typedArray</code> parameter can be an object of only the\n      <a href=\"/en-US/docs/Glossary/BigInt\">bigint</a> typed array types (such as <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\"><code>BigInt64Array</code></a>).\n      Each value in <code>typedArray</code> is converted to the corresponding type of the\n      constructor before being copied into the new array. The length of the new\n      typed array will be same as the length of the <code>typedArray</code> argument.\n    </p>\n  </dd>\n  <dt id=\"object\"><code>object</code></dt>\n  <dd>\n    <p>\n      When called with an <code>object</code> argument, a new typed array is\n      created as if by the <code>TypedArray.from()</code> method.\n    </p>\n  </dd>\n  <dt id=\"sect2\">\n    <code>buffer</code>, <code>byteOffset</code>,\n    <code>length</code>\n  </dt>\n  <dd>\n    <p>\n      When called with a <code>buffer</code>, and optionally a\n      <code>byteOffset</code> and a <code>length</code> argument, a\n      new typed array view is created that views the specified <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>.\n      The <code>byteOffset</code> and <code>length</code> parameters\n      specify the memory range that will be exposed by the typed array view. If both are\n      omitted, all of <code>buffer</code> is viewed; if only\n      <code>length</code> is omitted, the remainder of\n      <code>buffer</code> is viewed.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"static_properties","title":"Static properties","isH3":false,"content":"<dl>\n  <dt id=\"typedarray.bytes_per_element\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/BYTES_PER_ELEMENT\"><code>TypedArray.BYTES_PER_ELEMENT</code></a></dt>\n  <dd>\n    <p>\n      Returns a number value of the element size for the different\n      <code>TypedArray</code> objects.\n    </p>\n  </dd>\n  <dt id=\"typedarray.name\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/name\"><code>TypedArray.name</code></a></dt>\n  <dd>\n    <p>Returns the string value of the constructor name (e.g., <code>\"Int8Array\"</code>).</p>\n  </dd>\n  <dt id=\"get_typedarrayspecies\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/@@species\"><code>get TypedArray[@@species]</code></a></dt>\n  <dd>\n    <p>The constructor function used to create derived objects.</p>\n  </dd>\n  <dt id=\"typedarray_2\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\" aria-current=\"page\"><code>TypedArray</code></a></dt>\n  <dd>\n    <p>Prototype for <code>TypedArray</code> objects.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"static_methods","title":"Static methods","isH3":false,"content":"<dl>\n  <dt id=\"typedarray.from\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/from\"><code>TypedArray.from()</code></a></dt>\n  <dd>\n    <p>\n      Creates a new <code>TypedArray</code> from an array-like or iterable\n      object. See also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.of\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/of\"><code>TypedArray.of()</code></a></dt>\n  <dd>\n    <p>\n      Creates a new <code>TypedArray</code> with a variable number of\n      arguments. See also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\"><code>Array.of()</code></a>.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"typedarray.prototype.buffer\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/buffer\"><code>TypedArray.prototype.buffer</code></a></dt>\n  <dd>\n    <p>\n      Returns the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> referenced by the typed array. Fixed at\n      construction time and thus <strong>read only</strong>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.bytelength\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/byteLength\"><code>TypedArray.prototype.byteLength</code></a></dt>\n  <dd>\n    <p>\n      Returns the length (in bytes) of the typed array. Fixed at construction time and\n      thus <strong>read only.</strong>\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.byteoffset\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/byteOffset\"><code>TypedArray.prototype.byteOffset</code></a></dt>\n  <dd>\n    <p>\n      Returns the offset (in bytes) of the typed array from the start of its\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>. Fixed at construction time and thus <strong>read\nonly.</strong>\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.length\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/length\"><code>TypedArray.prototype.length</code></a></dt>\n  <dd>\n    <p>\n      Returns the number of elements held in the typed array. Fixed at construction time\n      and thus <strong>read only.</strong>\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"typedarray.prototype.at\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/at\"><code>TypedArray.prototype.at()</code></a></dt>\n  <dd>\n    <p>Takes an integer value and returns the item at that index. This method allows for negative integers, which count back from the last item.</p>\n  </dd>\n  <dt id=\"typedarray.prototype.copywithin\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/copyWithin\"><code>TypedArray.prototype.copyWithin()</code></a></dt>\n  <dd>\n    <p>\n      Copies a sequence of array elements within the array. See also\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin\"><code>Array.prototype.copyWithin()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.entries\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/entries\"><code>TypedArray.prototype.entries()</code></a></dt>\n  <dd>\n    <p>\n      Returns a new <em>array iterator</em> object that contains the key/value pairs for each index\n      in the array. See also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/entries\"><code>Array.prototype.entries()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.every\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/every\"><code>TypedArray.prototype.every()</code></a></dt>\n  <dd>\n    <p>\n      Tests whether all elements in the array pass the test provided by a function. See\n      also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\"><code>Array.prototype.every()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.fill\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/fill\"><code>TypedArray.prototype.fill()</code></a></dt>\n  <dd>\n    <p>\n      Fills all the elements of an array from a start index to an end index with a static\n      value. See also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"><code>Array.prototype.fill()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.filter\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/filter\"><code>TypedArray.prototype.filter()</code></a></dt>\n  <dd>\n    <p>\n      Creates a new array with all of the elements of this array for which the provided\n      filtering function returns <code>true</code>. See also\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"><code>Array.prototype.filter()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.find\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/find\"><code>TypedArray.prototype.find()</code></a></dt>\n  <dd>\n    <p>\n      Returns the first <code>element</code> in the array that satisfies a provided testing function, or <code>undefined</code> if no appropriate element is found.\n      See also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\"><code>Array.prototype.find()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.findindex\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findIndex\"><code>TypedArray.prototype.findIndex()</code></a></dt>\n  <dd>\n    <p>\n      Returns the first index value of in the array that has an element that satisfies a provided testing function, or <code>-1</code> if no appropriate element was found.\n      See also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\"><code>Array.prototype.findIndex()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.findlast\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findLast\"><code>TypedArray.prototype.findLast()</code></a></dt>\n  <dd>\n    <p>\n      Returns the value of the last element in the array that satisfies a provided testing function, or <code>undefined</code> if no appropriate element is found.\n      See also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLast\"><code>Array.prototype.findLast()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.findlastindex\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findLastIndex\"><code>TypedArray.prototype.findLastIndex()</code></a></dt>\n  <dd>\n    <p>\n      Returns the index of the last element in the array that satisfies a provided testing function, or <code>-1</code> if no appropriate element was found.\n      See also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLastIndex\"><code>Array.prototype.findLastIndex()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.foreach\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/forEach\"><code>TypedArray.prototype.forEach()</code></a></dt>\n  <dd>\n    <p>\n      Calls a function for each element in the array. See also\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>Array.prototype.forEach()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.includes\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/includes\"><code>TypedArray.prototype.includes()</code></a></dt>\n  <dd>\n    <p>\n      Determines whether a typed array includes a certain element, returning\n      <code>true</code> or <code>false</code> as appropriate. See also\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\"><code>Array.prototype.includes()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.indexof\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/indexOf\"><code>TypedArray.prototype.indexOf()</code></a></dt>\n  <dd>\n    <p>\n      Returns the first (least) index of an element within the array equal to the\n      specified value, or <code>-1</code> if none is found. See also\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>Array.prototype.indexOf()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.join\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/join\"><code>TypedArray.prototype.join()</code></a></dt>\n  <dd>\n    <p>\n      Joins all elements of an array into a string. See also\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"><code>Array.prototype.join()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.keys\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/keys\"><code>TypedArray.prototype.keys()</code></a></dt>\n  <dd>\n    <p>\n      Returns a new array iterator that contains the keys for each index in the array. See\n      also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/keys\"><code>Array.prototype.keys()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.lastindexof\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/lastIndexOf\"><code>TypedArray.prototype.lastIndexOf()</code></a></dt>\n  <dd>\n    <p>\n      Returns the last (greatest) index of an element within the array equal to the\n      specified value, or <code>-1</code> if none is found. See also\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf\"><code>Array.prototype.lastIndexOf()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.map\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/map\"><code>TypedArray.prototype.map()</code></a></dt>\n  <dd>\n    <p>\n      Creates a new array with the results of calling a provided function on every element\n      in this array. See also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>Array.prototype.map()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.reduce\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reduce\"><code>TypedArray.prototype.reduce()</code></a></dt>\n  <dd>\n    <p>\n      Apply a function against an accumulator and each value of the array (from\n      left-to-right) as to reduce it to a single value. See also\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"><code>Array.prototype.reduce()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.reduceright\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reduceRight\"><code>TypedArray.prototype.reduceRight()</code></a></dt>\n  <dd>\n    <p>\n      Apply a function against an accumulator and each value of the array (from\n      right-to-left) as to reduce it to a single value. See also\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight\"><code>Array.prototype.reduceRight()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.reverse\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reverse\"><code>TypedArray.prototype.reverse()</code></a></dt>\n  <dd>\n    <p>\n      Reverses the order of the elements of an array — the first becomes the last, and the\n      last becomes the first. See also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\"><code>Array.prototype.reverse()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.set\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/set\"><code>TypedArray.prototype.set()</code></a></dt>\n  <dd>\n    <p>\n      Stores multiple values in the typed array, reading input values from a specified\n      array.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.slice\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/slice\"><code>TypedArray.prototype.slice()</code></a></dt>\n  <dd>\n    <p>\n      Extracts a section of an array and returns a new array. See also\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"><code>Array.prototype.slice()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.some\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/some\"><code>TypedArray.prototype.some()</code></a></dt>\n  <dd>\n    <p>\n      Returns <code>true</code> if at least one element in this array satisfies the\n      provided testing function. See also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"><code>Array.prototype.some()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.sort\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/sort\"><code>TypedArray.prototype.sort()</code></a></dt>\n  <dd>\n    <p>\n      Sorts the elements of an array in place and returns the array. See also\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"><code>Array.prototype.sort()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.subarray\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray\"><code>TypedArray.prototype.subarray()</code></a></dt>\n  <dd>\n    <p>\n      Returns a new <code>TypedArray</code> from the given start and end\n      element index.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.values\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/values\"><code>TypedArray.prototype.values()</code></a></dt>\n  <dd>\n    <p>\n      Returns a new <em>array iterator</em> object that contains the values for each index in the\n      array. See also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/values\"><code>Array.prototype.values()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.tolocalestring\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/toLocaleString\"><code>TypedArray.prototype.toLocaleString()</code></a></dt>\n  <dd>\n    <p>\n      Returns a localized string representing the array and its elements. See also\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toLocaleString\"><code>Array.prototype.toLocaleString()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototype.tostring\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/toString\"><code>TypedArray.prototype.toString()</code></a></dt>\n  <dd>\n    <p>\n      Returns a string representing the array and its elements. See also\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString\"><code>Array.prototype.toString()</code></a>.\n    </p>\n  </dd>\n  <dt id=\"typedarray.prototypeiterator\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/@@iterator\"><code>TypedArray.prototype[@@iterator]()</code></a></dt>\n  <dd>\n    <p>\n      Returns a new <em>array iterator</em> object that contains the values for each index in the\n      array.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"property_access","title":"Property access","isH3":true,"content":"<p>\n  You can reference elements in the array using standard array index syntax (that is,\n  using bracket notation). However, getting or setting indexed properties on typed arrays\n  will not search in the prototype chain for this property, even when the indices are out\n  of bound. Indexed properties will consult the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> and will never\n  look at object properties. You can still use named properties, just like with all\n  objects.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Setting and getting using standard array syntax</span>\n<span class=\"token keyword\">const</span> int16 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int16Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nint16<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>int16<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span>\n\n<span class=\"token comment\">// Indexed properties on prototypes are not consulted (Fx 25)</span>\n<span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\n<span class=\"token comment\">// even when out of bound</span>\n<span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n<span class=\"token comment\">// or with negative integers</span>\n<span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n\n<span class=\"token comment\">// Named properties are allowed, though (Fx 30)</span>\n<span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>foo <span class=\"token operator\">=</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"bar\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"cannot_be_frozen","title":"Cannot be frozen","isH3":true,"content":"<p>\n  <code>TypedArray</code>s that aren't empty cannot be frozen, as their\n  underlying <code>ArrayBuffer</code> could be mutated through another\n  <code>TypedArray</code> view of the buffer. This would mean that the object\n  would never genuinely be frozen.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">const</span> i8 <span class=\"token operator\">=</span> Int8Array<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">freeze</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// TypeError: Cannot freeze array buffer views with elements</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"byteoffset_must_be_aligned","title":"ByteOffset must be aligned","isH3":true,"content":"<p>\n  When constructing a <code>TypedArray</code> as a view onto an\n  <code>ArrayBuffer</code>, the <code>byteOffset</code> argument must be aligned to its\n  element size; in other words, the offset must be a multiple of\n  <code>BYTES_PER_ELEMENT</code>.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">const</span> i32 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int32Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// RangeError: start offset of Int32Array should be a multiple of 4</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js example-good notranslate\"><code><span class=\"token keyword\">const</span> i32 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int32Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"bytelength_must_be_aligned","title":"ByteLength must be aligned","isH3":true,"content":"<p>\n  Like the <code>byteOffset</code> parameter, the <code>byteLength</code> property of an\n  <code>ArrayBuffer</code> passed to a <code>TypedArray</code>'s constructor\n  must be a multiple of the constructor's <code>BYTES_PER_ELEMENT</code>.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">const</span> i32 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int32Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// RangeError: byte length of Int32Array should be a multiple of 4</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js example-good notranslate\"><code><span class=\"token keyword\">const</span> i32 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int32Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/indexed-collections.html#sec-typedarray-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.TypedArray"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.TypedArray","dataURL":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#ecmascript-typed-arrays\" class=\"external\" rel=\" noopener\">Polyfill of typed arrays in <code>core-js</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Typed_arrays\">JavaScript typed arrays</a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a></li>\n  <li>\n    <a href=\"/en-US/docs/Web/API/TextDecoder\">TextDecoder</a> — Helper that decode\n    strings from numerical data\n  </li>\n</ul>"}}],"toc":[{"text":"Description","id":"description"},{"text":"Constructor","id":"constructor"},{"text":"Static properties","id":"static_properties"},{"text":"Static methods","id":"static_methods"},{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"A TypedArray object describes an array-like view of an\n  underlying binary data buffer.\n  There is no global property named TypedArray, nor is there a\n  directly visible TypedArray constructor. Instead, there are a number of\n  different global properties, whose values are typed array constructors for specific\n  element types, listed below. On the following pages you will find common properties and\n  methods that can be used with any typed array containing elements of any type.","popularity":0.0071,"modified":"2022-09-12T13:06:56.000Z","other_translations":[{"title":"TypedArray","locale":"es","native":"Español"},{"title":"TypedArray","locale":"fr","native":"Français"},{"title":"TypedArray","locale":"ja","native":"日本語"},{"title":"TypedArray","locale":"ko","native":"한국어"},{"title":"TypedArray","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"TypedArray","locale":"ru","native":"Русский"},{"title":"ArrayBufferView","locale":"zh-CN","native":"中文 (简体)"},{"title":"TypedArray","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/web/javascript/reference/global_objects/typedarray","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/global_objects/typedarray/index.md","last_commit_url":"https://github.com/mdn/content/commit/9b38f886d21c5d0a428f58acb20c4d0fc6c2e098","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray","title":"TypedArray"}],"pageTitle":"TypedArray - JavaScript | MDN","noIndexing":false}}