{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"AsyncGeneratorFunction","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\"><code>AsyncGeneratorFunction</code></a></strong></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>AsyncGeneratorFunction</code> constructor</strong> creates a new <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/async_function*\">async generator function</a> object. In JavaScript, every async generator function is actually an <code>AsyncGeneratorFunction</code> object.</p>\n<p>Note that <code>AsyncGeneratorFunction</code> is not a global object. It could be obtained by evaluating the following code.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> AsyncGeneratorFunction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">new AsyncGeneratorFunction(functionBody)\nnew AsyncGeneratorFunction(arg0, functionBody)\nnew AsyncGeneratorFunction(arg0, arg1, functionBody)\nnew AsyncGeneratorFunction(arg0, arg1, /* … ,*/ argN, functionBody)\n\nAsyncGeneratorFunction(functionBody)\nAsyncGeneratorFunction(arg0, functionBody)\nAsyncGeneratorFunction(arg0, arg1, functionBody)\nAsyncGeneratorFunction(arg0, arg1, /* … ,*/ argN, functionBody)\n</pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>AsyncGeneratorFunction()</code> can be called with or without <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a>. Both create a new <code>AsyncGeneratorFunction</code> instance.</p>\n</div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"argn\"><code>argN</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Names to be used by the function as formal argument names. Each must be a string that corresponds to a valid JavaScript parameter (any of plain <a href=\"/en-US/docs/Glossary/Identifier\">identifier</a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters\">rest parameter</a>, or <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">destructured</a> parameter, optionally with a default), or a list of such strings separated with commas.</p>\n    <p>As the parameters are parsed in the same way as function declarations, whitespace and comments are accepted. For example: <code>\"x\", \"theValue = 42\", \"[a, b] /* numbers */\"</code> — or <code>\"x, theValue = 42, [a, b] /* numbers */\"</code>. (<code>\"x, theValue = 42\", \"[a, b]\"</code> is also correct, though very confusing to read.)</p>\n  </dd>\n  <dt id=\"functionbody\"><code>functionBody</code></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> containing the JavaScript statements comprising the function definition.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>Async generator function objects created with the <code>AsyncGeneratorFunction</code> constructor are parsed when the function is created. This is less efficient than declaring a generator function with an <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/async_function*\"><code>async function*</code> expression</a> and calling it within your code, because such functions are parsed with the rest of the code.</p>\n<p>All arguments passed to the function, except the last, are treated as the names of the identifiers of the parameters in the function to be created, in the order in which they are passed.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> Async generator functions created with the <code>AsyncGeneratorFunction</code> constructor do not create closures to their creation contexts; they are always created in the global scope.</p>\n  <p>When running them, they will only be able to access their own local variables and global ones, not the ones from the scope in which the <code>AsyncGeneratorFunction</code> constructor was called.</p>\n  <p>This is different from using <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\"><code>eval</code></a> with code for an async generator function expression.</p>\n</div>\n<p>Invoking the <code>AsyncGeneratorFunction</code> constructor as a function (without using the <code>new</code> operator) has the same effect as invoking it as a constructor.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"using_the_constructor","title":"Using the constructor","isH3":true,"content":"<p>The following example uses the <code>AsyncGeneratorFunction</code> constructor to create an async generator function.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> AsyncGeneratorFunction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> createAsyncGenerator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AsyncGeneratorFunction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yield a * 2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> asyncGen <span class=\"token operator\">=</span> <span class=\"token function\">createAsyncGenerator</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nasyncGen<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 20</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-asyncgeneratorfunction-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.AsyncGeneratorFunction"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.AsyncGeneratorFunction","dataURL":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/function*\"><code>function*</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/async_function*\"><code>async function*</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/function*\"><code>function*</code> expression</a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\"><code>AsyncGenerator</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator\"><code>Generator</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\"><code>GeneratorFunction</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\"><code>AsyncFunction</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\">Iterators and generators</a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Functions\">Functions</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The AsyncGeneratorFunction constructor creates a new async generator function object. In JavaScript, every async generator function is actually an AsyncGeneratorFunction object.","popularity":0.0005,"modified":"2022-09-13T07:01:32.000Z","source":{"folder":"en-us/web/javascript/reference/global_objects/asyncgeneratorfunction","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/global_objects/asyncgeneratorfunction/index.md","last_commit_url":"https://github.com/mdn/content/commit/87a9f73c410c9b9e91300695c8aa4931367243fb","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction","title":"AsyncGeneratorFunction"}],"pageTitle":"AsyncGeneratorFunction - JavaScript | MDN","noIndexing":false}}