{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Atomics.waitAsync()","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/waitAsync","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics\"><code>Atomics</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/add\"><code>Atomics.add()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/and\"><code>Atomics.and()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/compareExchange\"><code>Atomics.compareExchange()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/exchange\"><code>Atomics.exchange()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/isLockFree\"><code>Atomics.isLockFree()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/load\"><code>Atomics.load()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/notify\"><code>Atomics.notify()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/or\"><code>Atomics.or()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/store\"><code>Atomics.store()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/sub\"><code>Atomics.sub()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait\"><code>Atomics.wait()</code></a></li><li><em><code>Atomics.waitAsync()</code></em></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/xor\"><code>Atomics.xor()</code></a></li></ol></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The static <strong><code>Atomics.waitAsync()</code></strong> method waits asynchronously on a shared memory location and returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>.</p>\n<p>Unlike <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait\"><code>Atomics.wait()</code></a>, <code>waitAsync</code> is non-blocking and usable on the main thread.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This operation only works with a shared <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a> or <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\"><code>BigInt64Array</code></a>.</p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">Atomics.waitAsync(typedArray, index, value)\nAtomics.waitAsync(typedArray, index, value, timeout)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"typedarray\"><code>typedArray</code></dt>\n  <dd>\n    <p>A shared <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a> or <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\"><code>BigInt64Array</code></a>.</p>\n  </dd>\n  <dt id=\"index\"><code>index</code></dt>\n  <dd>\n    <p>The position in the <code>typedArray</code> to wait on.</p>\n  </dd>\n  <dt id=\"value\"><code>value</code></dt>\n  <dd>\n    <p>The expected value to test.</p>\n  </dd>\n  <dt id=\"timeout\"><code>timeout</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Time to wait in milliseconds. <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity\"><code>Infinity</code></a>, if no time is provided.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>An <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a> with the following properties:</p>\n<dl>\n  <dt id=\"async\"><code>async</code></dt>\n  <dd>\n    <p>A boolean indicating whether the <code>value</code> property is a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> or not.</p>\n  </dd>\n  <dt id=\"value_2\"><code>value</code></dt>\n  <dd>\n    <p>If <code>async</code> is <code>false</code>, it will be a string which is either <code>\"not-equal\"</code> or <code>\"timed-out\"</code> (only when the <code>timeout</code> parameter is <code>0</code>). If <code>async</code> is <code>true</code>, it will be a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled with a string value, either <code>\"ok\"</code> or <code>\"timed-out\"</code>. The promise is never rejected.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"using_waitasync","title":"Using waitAsync()","isH3":true,"content":"<p>Given a shared <code>Int32Array</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> sab <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SharedArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> int32 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int32Array</span><span class=\"token punctuation\">(</span>sab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  A reading thread is sleeping and waiting on location 0 which is expected to be 0.\n  The <code>result.value</code> will be a promise.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> Atomics<span class=\"token punctuation\">.</span><span class=\"token function\">waitAsync</span><span class=\"token punctuation\">(</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { async: true, value: Promise {&lt;pending&gt;} }</span>\n</code></pre></div>\n<p>In the reading thread or in another thread, the memory location 0 is called and the promise can be resolved with <code>\"ok\"</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Atomics<span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { async: true, value: Promise {&lt;fulfilled&gt;: 'ok'} }</span>\n</code></pre></div>\n<p>If it isn't resolving to <code>\"ok\"</code>, the value in the shared memory location wasn't the expected (the <code>value</code> would be <code>\"not-equal\"</code> instead of a promise) or the timeout was reached (the promise will resolve to <code>\"time-out\"</code>).</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"query":"javascript.builtins.Atomics.waitAsync","specifications":[]}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"data":null,"query":"javascript.builtins.Atomics.waitAsync","browsers":null}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics\"><code>Atomics</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait\"><code>Atomics.wait()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/notify\"><code>Atomics.notify()</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The static Atomics.waitAsync() method waits asynchronously on a shared memory location and returns a Promise.","popularity":0.0002,"modified":"2022-09-13T07:01:32.000Z","other_translations":[{"title":"Atomics.waitAsync()","locale":"fr","native":"Français"}],"source":{"folder":"en-us/web/javascript/reference/global_objects/atomics/waitasync","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/global_objects/atomics/waitasync/index.md","last_commit_url":"https://github.com/mdn/content/commit/87a9f73c410c9b9e91300695c8aa4931367243fb","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics","title":"Atomics"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/waitAsync","title":"Atomics.waitAsync()"}],"pageTitle":"Atomics.waitAsync() - JavaScript | MDN","noIndexing":false}}