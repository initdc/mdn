{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"RegExp() constructor","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@species\"><code>get RegExp[@@species]</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/dotAll\"><code>RegExp.prototype.dotAll</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/flags\"><code>RegExp.prototype.flags</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/global\"><code>RegExp.prototype.global</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/hasIndices\"><code>RegExp.prototype.hasIndices</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/ignoreCase\"><code>RegExp.prototype.ignoreCase</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/input\"><code>RegExp.input ($_)</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex\"><code>RegExp: lastIndex</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastMatch\"><code>RegExp.lastMatch ($&amp;)</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastParen\"><code>RegExp.lastParen ($+)</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/leftContext\"><code>RegExp.leftContext ($`)</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/multiline\"><code>RegExp.prototype.multiline</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/n\"><code>RegExp.$1-$9</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/rightContext\"><code>RegExp.rightContext ($')</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/source\"><code>RegExp.prototype.source</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/sticky\"><code>RegExp.prototype.sticky</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/unicode\"><code>RegExp.prototype.unicode</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@match\"><code>RegExp.prototype[@@match]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@matchAll\"><code>RegExp.prototype[@@matchAll]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@replace\"><code>RegExp.prototype[@@replace]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@search\"><code>RegExp.prototype[@@search]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@split\"><code>RegExp.prototype[@@split]()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/compile\"><code>RegExp.prototype.compile()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\"><code>RegExp.prototype.exec()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\"><code>RegExp.prototype.test()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/toString\"><code>RegExp.prototype.toString()</code></a></li></ol></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>RegExp</code></strong> constructor creates a regular expression object for matching text with a pattern.</p>\n<p>For an introduction to regular expressions, read the <a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\">Regular Expressions chapter</a> in the <a href=\"/en-US/docs/Web/JavaScript/Guide\">JavaScript Guide</a>.</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/regexp-constructor.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">new RegExp(pattern)\nnew RegExp(pattern, flags)\nRegExp(pattern)\nRegExp(pattern, flags)\n</pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>RegExp()</code> can be called with or without <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a>, but sometimes with different effects. See <a href=\"#return_value\">Return value</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"pattern\"><code>pattern</code></dt>\n  <dd>\n    <p>The text of the regular expression. This can also be another <code>RegExp</code> object.</p>\n  </dd>\n  <dt id=\"flags\"><code>flags</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>If specified, <code>flags</code> is a string that contains the flags to add. Alternatively, if a <code>RegExp</code> object is supplied for the <code>pattern</code>, the <code>flags</code> string will replace any of that object's flags (and <code>lastIndex</code> will be reset to <code>0</code>).</p>\n    <p><code>flags</code> may contain any combination of the following characters:</p>\n    <dl>\n      <dt id=\"d_indices\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/hasIndices\"><code>d</code> (indices)</a></dt>\n      <dd>\n        <p>Generate indices for substring matches.</p>\n      </dd>\n      <dt id=\"g_global\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/global\"><code>g</code> (global)</a></dt>\n      <dd>\n        <p>Find all matches rather than stopping after the first match.</p>\n      </dd>\n      <dt id=\"i_ignore_case\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/ignoreCase\"><code>i</code> (ignore case)</a></dt>\n      <dd>\n        <p>When matching, casing differences are ignored.</p>\n      </dd>\n      <dt id=\"m_multiline\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/multiline\"><code>m</code> (multiline)</a></dt>\n      <dd>\n        <p>Treat beginning and end assertions (<code>^</code> and <code>$</code>) as working over multiple lines. In other words, match the beginning or end of <em>each</em> line (delimited by <code>\\n</code> or <code>\\r</code>), not only the very beginning or end of the whole input string.</p>\n      </dd>\n      <dt id=\"s_dotall\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/dotAll\"><code>s</code> (dotAll)</a></dt>\n      <dd>\n        <p>Allows <code>.</code> to match newlines.</p>\n      </dd>\n      <dt id=\"u_unicode\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/unicode\"><code>u</code> (unicode)</a></dt>\n      <dd>\n        <p>Treat <code>pattern</code> as a sequence of Unicode code points.</p>\n      </dd>\n      <dt id=\"y_sticky\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/sticky\"><code>y</code> (sticky)</a></dt>\n      <dd>\n        <p>Matches only from the index indicated by the <code>lastIndex</code> property of this regular expression in the target string. Does not attempt to match from any later indexes.</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p><code>RegExp(pattern)</code> returns <code>pattern</code> directly if all of the following are true:</p>\n<ul>\n  <li><code>RegExp()</code> is called without <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a>;</li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#special_handling_for_regexes\"><code>pattern</code> is a regex</a>;</li>\n  <li><code>pattern.constructor === RegExp</code> (usually meaning it's not a subclass);</li>\n  <li><code>flags</code> is <code>undefined</code>.</li>\n</ul>\n<p>In all other cases, calling <code>RegExp()</code> with or without <code>new</code> both create a new <code>RegExp</code> object. If <code>pattern</code> is a regex, the new object's <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/source\">source</a> is <code>pattern.source</code>; otherwise, its source is <code>pattern</code> <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#string_coercion\">coerced to a string</a>. If the <code>flags</code> parameter is not <code>undefined</code>, the new object's <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/flags\"><code>flags</code></a> is the parameter's value; otherwise, its <code>flags</code> is <code>pattern.flags</code> (if <code>pattern</code> is a regex).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"syntaxerror\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a></dt>\n  <dd>\n    <p>Thrown if one of the following is true:</p>\n    <ul>\n      <li><code>pattern</code> cannot be parsed as a valid regular expression.</li>\n      <li><code>flags</code> contains repeated characters or any character outside of those allowed.</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"literal_notation_and_constructor","title":"Literal notation and constructor","isH3":true,"content":"<p>There are two ways to create a <code>RegExp</code> object: a <em>literal notation</em> and a <em>constructor</em>.</p>\n<ul>\n  <li>The <em>literal notation</em> takes a pattern between two slashes, followed by optional flags, after the second slash.</li>\n  <li>The <em>constructor function</em> takes either a string or a <code>RegExp</code> object as its first parameter and a string of optional flags as its second parameter.</li>\n</ul>\n<p>The following three expressions create the same regular expression:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">ab+c</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">ab+c</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// literal notation</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ab+c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// constructor</span>\n</code></pre></div>\n<p>Before regular expressions can be used, they have to be compiled. This process allows them to perform matches more efficiently. There are two ways to compile and get a <code>RegExp</code> object.</p>\n<p>The literal notation results in compilation of the regular expression when the expression is evaluated. On the other hand, the constructor of the <code>RegExp</code> object, <code>new RegExp('ab+c')</code>, results in runtime compilation of the regular expression.</p>\n<p>Use a string as the first argument to the <code>RegExp()</code> constructor when you want to <a href=\"#building_a_regular_expression_from_dynamic_inputs\">build the regular expression from dynamic input</a>.</p>"}},{"type":"prose","value":{"id":"building_a_regular_expression_from_dynamic_inputs","title":"Building a regular expression from dynamic inputs","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> breakfasts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'eggs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oatmeal'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'toast'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cereal'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> order <span class=\"token operator\">=</span> <span class=\"token string\">'Let me get some bacon and eggs, please'</span><span class=\"token punctuation\">;</span>\n\norder<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\\\\b(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>breakfasts<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'|'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)\\\\b</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Returns ['bacon', 'eggs']</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/text-processing.html#sec-regexp-constructor","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.RegExp.RegExp"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.RegExp.RegExp","dataURL":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#ecmascript-string-and-regexp\" class=\"external\" rel=\" noopener\">Polyfill of many modern <code>RegExp</code> features (<code>dotAll</code>, <code>sticky</code> flags, named capture groups, etc.) in <code>core-js</code></a></li>\n  <li>\n    <a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\">Regular Expressions</a> chapter\n    in the <a href=\"/en-US/docs/Web/JavaScript/Guide\">JavaScript Guide</a>\n  </li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\"><code>String.prototype.match()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace\"><code>String.prototype.replace()</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The RegExp constructor creates a regular expression object for matching text with a pattern.","popularity":0.0026,"modified":"2022-09-13T07:09:29.000Z","other_translations":[{"title":"Constructor RegExp()","locale":"es","native":"Español"},{"title":"Constructeur RegExp()","locale":"fr","native":"Français"},{"title":"RegExp() コンストラクター","locale":"ja","native":"日本語"},{"title":"RegExp() constructor","locale":"ko","native":"한국어"},{"title":"RegExp() constructor","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/javascript/reference/global_objects/regexp/regexp","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/global_objects/regexp/regexp/index.md","last_commit_url":"https://github.com/mdn/content/commit/ce2909126eb09e44c9f48d9f65d072acae827749","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp","title":"RegExp"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp","title":"RegExp() constructor"}],"pageTitle":"RegExp() constructor - JavaScript | MDN","noIndexing":false}}