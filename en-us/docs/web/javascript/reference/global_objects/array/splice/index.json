{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Array.prototype.splice()","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/@@species\"><code>get Array[@@species]</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/@@unscopables\"><code>Array.prototype[@@unscopables]</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>Array.prototype.length</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/@@iterator\"><code>Array.prototype[@@iterator]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at\"><code>Array.prototype.at()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\"><code>Array.prototype.concat()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin\"><code>Array.prototype.copyWithin()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/entries\"><code>Array.prototype.entries()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\"><code>Array.prototype.every()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"><code>Array.prototype.fill()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"><code>Array.prototype.filter()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\"><code>Array.prototype.find()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\"><code>Array.prototype.findIndex()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLast\"><code>Array.prototype.findLast()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLastIndex\"><code>Array.prototype.findLastIndex()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\"><code>Array.prototype.flat()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap\"><code>Array.prototype.flatMap()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>Array.prototype.forEach()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/group\"><code>Array.prototype.group()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/groupToMap\"><code>Array.prototype.groupToMap()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\"><code>Array.prototype.includes()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>Array.prototype.indexOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\"><code>Array.isArray()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"><code>Array.prototype.join()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/keys\"><code>Array.prototype.keys()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf\"><code>Array.prototype.lastIndexOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>Array.prototype.map()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\"><code>Array.of()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\"><code>Array.prototype.pop()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push\"><code>Array.prototype.push()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"><code>Array.prototype.reduce()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight\"><code>Array.prototype.reduceRight()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\"><code>Array.prototype.reverse()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\"><code>Array.prototype.shift()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"><code>Array.prototype.slice()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"><code>Array.prototype.some()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"><code>Array.prototype.sort()</code></a></li><li><em><code>Array.prototype.splice()</code></em></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toLocaleString\"><code>Array.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString\"><code>Array.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\"><code>Array.prototype.unshift()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/values\"><code>Array.prototype.values()</code></a></li></ol></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>splice()</code></strong> method changes the contents of an array by\n  removing or replacing existing elements and/or adding new elements <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" class=\"external\" rel=\" noopener\">in place</a>. To access part of an array without modifying it, see <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"><code>slice()</code></a>.\n</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/array-splice.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">splice(start)\nsplice(start, deleteCount)\nsplice(start, deleteCount, item1)\nsplice(start, deleteCount, item1, item2, itemN)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"start\"><code>start</code></dt>\n  <dd>\n    <p>The index at which to start changing the array.</p>\n    <p>\n      If greater than the length of the array, <code>start</code> will be set to the length of the array.\n      In this case, no element will be deleted but the method will behave as an adding function, adding as many elements as items provided.\n    </p>\n    <p>\n      If negative, it will begin that many elements from the end of the array.\n      (In this case, the origin <code>-1</code>, meaning <code>-n</code> is the index of the <code>n</code>th last element, and is therefore equivalent to the index of <code>array.length - n</code>.)\n      If <code>start</code> is <code>-Infinity</code>, it will begin from index <code>0</code>.\n    </p>\n  </dd>\n  <dt id=\"deletecount\"><code>deleteCount</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An integer indicating the number of elements in the array to remove from <code>start</code>.</p>\n    <p>If <code>deleteCount</code> is omitted, or if its value is equal to or larger than <code>array.length - start</code> (that is, if it is equal to or greater than the number of elements left in the array, starting at <code>start</code>), then all the elements from <code>start</code> to the end of the array will be deleted. However, it must not be omitted if there is any <code>item1</code> parameter.</p>\n    <p>\n      If <code>deleteCount</code> is <code>0</code> or negative, no elements are removed.\n      In this case, you should specify at least one new element (see below).\n    </p>\n  </dd>\n  <dt id=\"item1\"><code>item1</code>, …, <code>itemN</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>The elements to add to the array, beginning from <code>start</code>.</p>\n    <p>If you do not specify any elements, <code>splice()</code> will only remove elements from the array.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>An array containing the deleted elements.</p>\n<p>If only one element is removed, an array of one element is returned.</p>\n<p>If no elements are removed, an empty array is returned.</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>The <code>splice()</code> method is a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#copying_methods_and_mutating_methods\">mutating method</a>. It may change the content of <code>this</code>. If the specified number of elements to insert differs from the number of elements being removed, the array's <code>length</code> will be changed as well. At the same time, it uses <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/@@species\"><code>@@species</code></a> to create a new array instance to be returned.</p>\n<p>If the deleted portion is <a href=\"/en-US/docs/Web/JavaScript/Guide/Indexed_collections#sparse_arrays\">sparse</a>, the array returned by <code>splice()</code> is sparse as well, with those corresponding indices being empty slots.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"remove_0_zero_elements_before_index_2_and_insert_drum","title":"Remove 0 (zero) elements before index 2, and insert \"drum\"","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myFish <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'angel'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'clown'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mandarin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sturgeon'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> removed <span class=\"token operator\">=</span> myFish<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'drum'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// myFish is [\"angel\", \"clown\", \"drum\", \"mandarin\", \"sturgeon\"]</span>\n<span class=\"token comment\">// removed is [], no elements removed</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"remove_0_zero_elements_before_index_2_and_insert_drum_and_guitar","title":"Remove 0 (zero) elements before index 2, and insert \"drum\" and \"guitar\"","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myFish <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'angel'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'clown'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mandarin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sturgeon'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> removed <span class=\"token operator\">=</span> myFish<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'drum'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'guitar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// myFish is [\"angel\", \"clown\", \"drum\", \"guitar\", \"mandarin\", \"sturgeon\"]</span>\n<span class=\"token comment\">// removed is [], no elements removed</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"remove_1_element_at_index_3","title":"Remove 1 element at index 3","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myFish <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'angel'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'clown'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'drum'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mandarin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sturgeon'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> removed <span class=\"token operator\">=</span> myFish<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// myFish is [\"angel\", \"clown\", \"drum\", \"sturgeon\"]</span>\n<span class=\"token comment\">// removed is [\"mandarin\"]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"remove_1_element_at_index_2_and_insert_trumpet","title":"Remove 1 element at index 2, and insert \"trumpet\"","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myFish <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'angel'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'clown'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'drum'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sturgeon'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> removed <span class=\"token operator\">=</span> myFish<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trumpet'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// myFish is [\"angel\", \"clown\", \"trumpet\", \"sturgeon\"]</span>\n<span class=\"token comment\">// removed is [\"drum\"]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"remove_2_elements_from_index_0_and_insert_parrot_anemone_and_blue","title":"Remove 2 elements from index 0, and insert \"parrot\", \"anemone\" and \"blue\"","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myFish <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'angel'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'clown'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trumpet'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sturgeon'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> removed <span class=\"token operator\">=</span> myFish<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'parrot'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'anemone'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// myFish is [\"parrot\", \"anemone\", \"blue\", \"trumpet\", \"sturgeon\"]</span>\n<span class=\"token comment\">// removed is [\"angel\", \"clown\"]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"remove_2_elements_starting_from_index_2","title":"Remove 2 elements, starting from index 2","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myFish <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'parrot'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'anemone'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trumpet'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sturgeon'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> removed <span class=\"token operator\">=</span> myFish<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// myFish is [\"parrot\", \"anemone\", \"sturgeon\"]</span>\n<span class=\"token comment\">// removed is [\"blue\", \"trumpet\"]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"remove_1_element_from_index_-2","title":"Remove 1 element from index -2","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myFish <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'angel'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'clown'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mandarin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sturgeon'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> removed <span class=\"token operator\">=</span> myFish<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// myFish is [\"angel\", \"clown\", \"sturgeon\"]</span>\n<span class=\"token comment\">// removed is [\"mandarin\"]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"remove_all_elements_starting_from_index_2","title":"Remove all elements, starting from index 2","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myFish <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'angel'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'clown'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mandarin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sturgeon'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> removed <span class=\"token operator\">=</span> myFish<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// myFish is [\"angel\", \"clown\"]</span>\n<span class=\"token comment\">// removed is [\"mandarin\", \"sturgeon\"]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"using_splice_on_sparse_arrays","title":"Using splice() on sparse arrays","isH3":true,"content":"<p>The <code>splice()</code> method preserves the array's sparseness.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [empty, 3]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 4, empty, 6]</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.splice","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Array.splice"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Array.splice","dataURL":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push\"><code>push()</code></a> / <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\"><code>pop()</code></a>— add/remove elements from the end of the array</li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\"><code>unshift()</code></a> / <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\"><code>shift()</code></a>— add/remove elements from the beginning of the array</li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\"><code>concat()</code></a>— returns a new array comprised of this array joined with other array(s) and/or value(s)</li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The splice() method changes the contents of an array by\n  removing or replacing existing elements and/or adding new elements in place. To access part of an array without modifying it, see slice().","popularity":0.0994,"modified":"2022-09-25T21:46:52.000Z","other_translations":[{"title":"Array.prototype.splice()","locale":"es","native":"Español"},{"title":"Array.prototype.splice()","locale":"fr","native":"Français"},{"title":"Array.prototype.splice()","locale":"ja","native":"日本語"},{"title":"Array.prototype.splice()","locale":"ko","native":"한국어"},{"title":"Array.prototype.splice()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Array.prototype.splice()","locale":"ru","native":"Русский"},{"title":"Array.prototype.splice()","locale":"zh-CN","native":"中文 (简体)"},{"title":"Array.prototype.splice()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/web/javascript/reference/global_objects/array/splice","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/global_objects/array/splice/index.md","last_commit_url":"https://github.com/mdn/content/commit/41b8606db85fda5eb67b305b7fb3dc7f6442ca17","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array","title":"Array"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice","title":"Array.prototype.splice()"}],"pageTitle":"Array.prototype.splice() - JavaScript | MDN","noIndexing":false}}