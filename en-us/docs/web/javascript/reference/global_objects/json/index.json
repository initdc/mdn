{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"JSON","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON\"><code>JSON</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a></li></ol></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>JSON</code></strong> object contains methods for parsing <a href=\"https://json.org/\" class=\"external\" rel=\" noopener\">JavaScript Object Notation</a> (<a href=\"/en-US/docs/Glossary/JSON\">JSON</a>) and converting values to JSON. It can't be called or constructed.</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>Unlike most global objects, <code>JSON</code> is not a constructor. You cannot use it with a <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code> operator</a> or invoke the <code>JSON</code> object as a function. All properties and methods of <code>JSON</code> are static (just like the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a> object).</p>"}},{"type":"prose","value":{"id":"javascript_and_json_differences","title":"JavaScript and JSON differences","isH3":true,"content":"<p>JSON is a syntax for serializing objects, arrays, numbers, strings, booleans, and <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a>. It is based upon JavaScript syntax, but is distinct from JavaScript: most of JavaScript is <em>not</em> JSON. For example:</p>\n<dl>\n  <dt id=\"objects_and_arrays\">Objects and Arrays</dt>\n  <dd>\n    <p>Property names must be double-quoted strings; <a href=\"/en-US/docs/Web/JavaScript/Reference/Trailing_commas\">trailing commas</a> are forbidden.</p>\n  </dd>\n  <dt id=\"numbers\">Numbers</dt>\n  <dd>\n    <p>Leading zeros are prohibited. A decimal point must be followed by at least one digit. <code>NaN</code> and <code>Infinity</code> are unsupported.</p>\n  </dd>\n</dl>\n<p>Any JSON text is a valid JavaScript expression, but only after the <a href=\"https://github.com/tc39/proposal-json-superset\" class=\"external\" rel=\" noopener\">JSON superset</a> revision. Before the revision, U+2028 LINE SEPARATOR and U+2029 PARAGRAPH SEPARATOR are allowed in string literals and property keys in JSON; but the same use in JavaScript string literals is a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a>.</p>\n<p>Other differences include allowing only double-quoted strings and no support for <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> or comments. For those who wish to use a more human-friendly configuration format based on JSON, there is <a href=\"https://json5.org/\" class=\"external\" rel=\" noopener\">JSON5</a>, used by the Babel compiler, and the more commonly used <a href=\"https://en.wikipedia.org/wiki/YAML\" class=\"external\" rel=\" noopener\">YAML</a>.</p>\n<p>The same text may represent different values in JavaScript object literals vs. JSON as well. For more information, see <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#object_literal_syntax_vs._json\">Object literal syntax vs. JSON</a>.</p>"}},{"type":"prose","value":{"id":"full_json_grammar","title":"Full JSON grammar","isH3":true,"content":"<p>Valid JSON syntax is formally defined by the following grammar, expressed in <a href=\"https://en.wikipedia.org/wiki/Augmented_Backus%E2%80%93Naur_form\" class=\"external\" rel=\" noopener\">ABNF</a>, and copied from <a href=\"https://datatracker.ietf.org/doc/html/rfc8259\" class=\"external\" rel=\" noopener\">IETF JSON standard (RFC)</a>:</p>\n<pre class=\"notranslate\">JSON-text = object / array\nbegin-array     = ws %x5B ws  ; [ left square bracket\nbegin-object    = ws %x7B ws  ; { left curly bracket\nend-array       = ws %x5D ws  ; ] right square bracket\nend-object      = ws %x7D ws  ; } right curly bracket\nname-separator  = ws %x3A ws  ; : colon\nvalue-separator = ws %x2C ws  ; , comma\nws = *(\n     %x20 /              ; Space\n     %x09 /              ; Horizontal tab\n     %x0A /              ; Line feed or New line\n     %x0D                ; Carriage return\n     )\nvalue = false / null / true / object / array / number / string\nfalse = %x66.61.6c.73.65   ; false\nnull  = %x6e.75.6c.6c      ; null\ntrue  = %x74.72.75.65      ; true\nobject = begin-object [ member *( value-separator member ) ]\n         end-object\nmember = string name-separator value\narray = begin-array [ value *( value-separator value ) ] end-array\nnumber = [ minus ] int [ frac ] [ exp ]\ndecimal-point = %x2E       ; .\ndigit1-9 = %x31-39         ; 1-9\ne = %x65 / %x45            ; e E\nexp = e [ minus / plus ] 1*DIGIT\nfrac = decimal-point 1*DIGIT\nint = zero / ( digit1-9 *DIGIT )\nminus = %x2D               ; -\nplus = %x2B                ; +\nzero = %x30                ; 0\nstring = quotation-mark *char quotation-mark\nchar = unescaped /\n    escape (\n        %x22 /          ; \"    quotation mark  U+0022\n        %x5C /          ; \\    reverse solidus U+005C\n        %x2F /          ; /    solidus         U+002F\n        %x62 /          ; b    backspace       U+0008\n        %x66 /          ; f    form feed       U+000C\n        %x6E /          ; n    line feed       U+000A\n        %x72 /          ; r    carriage return U+000D\n        %x74 /          ; t    tab             U+0009\n        %x75 4HEXDIG )  ; uXXXX                U+XXXX\nescape = %x5C              ; \\\nquotation-mark = %x22      ; \"\nunescaped = %x20-21 / %x23-5B / %x5D-10FFFF\nHEXDIG = DIGIT / %x41-46 / %x61-66   ; 0-9, A-F, or a-f\n       ; HEXDIG equivalent to HEXDIG rule in [RFC5234]\nDIGIT = %x30-39            ; 0-9\n      ; DIGIT equivalent to DIGIT rule in [RFC5234]\n</pre>\n<p>Insignificant <a href=\"/en-US/docs/Glossary/Whitespace\">whitespace</a> may be present anywhere except within a <code>JSONNumber</code> (numbers must contain no whitespace) or <code>JSONString</code> (where it is interpreted as the corresponding character in the string, or would cause an error). The tab character (<a href=\"https://unicode-table.com/en/0009/\" class=\"external\" rel=\" noopener\">U+0009</a>), carriage return (<a href=\"https://unicode-table.com/en/000D/\" class=\"external\" rel=\" noopener\">U+000D</a>), line feed (<a href=\"https://unicode-table.com/en/000A/\" class=\"external\" rel=\" noopener\">U+000A</a>), and space (<a href=\"https://unicode-table.com/en/0020/\" class=\"external\" rel=\" noopener\">U+0020</a>) characters are the only valid whitespace characters.</p>"}},{"type":"prose","value":{"id":"static_methods","title":"Static methods","isH3":false,"content":"<dl>\n  <dt id=\"json.parse\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a></dt>\n  <dd>\n    <p>Parse a piece of string text as JSON, optionally transforming the produced value and its properties, and return the value.</p>\n  </dd>\n  <dt id=\"json.stringify\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a></dt>\n  <dd>\n    <p>Return a JSON string corresponding to the specified value, optionally including only certain properties or replacing property values in a user-defined manner.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"example_json","title":"Example JSON","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"browsers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"firefox\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Firefox\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"pref_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"about:config\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"releases\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"release_date\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2004-11-09\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"retired\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"engine\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gecko\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"engine_version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.7\"</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>You can use the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a> method to convert the above JSON string into a JavaScript object:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> jsonText <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">{\n  \"browsers\": {\n    \"firefox\": {\n      \"name\": \"Firefox\",\n      \"pref_url\": \"about:config\",\n      \"releases\": {\n        \"1\": {\n          \"release_date\": \"2004-11-09\",\n          \"status\": \"retired\",\n          \"engine\": \"Gecko\",\n          \"engine_version\": \"1.7\"\n        }\n      }\n    }\n  }\n}</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>jsonText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/structured-data.html#sec-json-object","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.JSON"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.JSON","dataURL":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON\"><code>Date.prototype.toJSON()</code></a></li>\n  <li><a href=\"https://json-diff.com/\" class=\"external\" rel=\" noopener\">JSON Diff</a> checker</li>\n  <li><a href=\"https://jsonbeautifier.org/\" class=\"external\" rel=\" noopener\">JSON Beautifier/editor</a></li>\n  <li><a href=\"https://jsonparser.org/\" class=\"external\" rel=\" noopener\">JSON Parser</a></li>\n  <li><a href=\"https://tools.learningcontainer.com/json-validator/\" class=\"external\" rel=\" noopener\">JSON Validator</a></li>\n</ul>"}}],"toc":[{"text":"Description","id":"description"},{"text":"Static methods","id":"static_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The JSON object contains methods for parsing JavaScript Object Notation (JSON) and converting values to JSON. It can't be called or constructed.","popularity":0.0166,"modified":"2022-09-22T03:43:22.000Z","other_translations":[{"title":"JSON","locale":"es","native":"Español"},{"title":"JSON","locale":"fr","native":"Français"},{"title":"JSON","locale":"ja","native":"日本語"},{"title":"JSON","locale":"ko","native":"한국어"},{"title":"JSON","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"JSON","locale":"ru","native":"Русский"},{"title":"JSON","locale":"zh-CN","native":"中文 (简体)"},{"title":"JSON","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/web/javascript/reference/global_objects/json","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/global_objects/json/index.md","last_commit_url":"https://github.com/mdn/content/commit/9010030c393cad71250a3813d29b4afc799f639f","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON","title":"JSON"}],"pageTitle":"JSON - JavaScript | MDN","noIndexing":false}}