{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"protocol_handlers","mdn_url":"/en-US/docs/Web/Manifest/protocol_handlers","locale":"en-US","native":"English (US)","sidebarHTML":"\n<ol><li><a href=\"/en-US/docs/Web/Manifest/background_color\">background_color</a></li><li><a href=\"/en-US/docs/Web/Manifest/categories\">categories</a></li><li><a href=\"/en-US/docs/Web/Manifest/description\">description</a></li><li><a href=\"/en-US/docs/Web/Manifest/display\">display</a></li><li><a href=\"/en-US/docs/Web/Manifest/display_override\">display_override</a></li><li><a href=\"/en-US/docs/Web/Manifest/icons\">icons</a></li><li><a href=\"/en-US/docs/Web/Manifest/name\">name</a></li><li><a href=\"/en-US/docs/Web/Manifest/orientation\">orientation</a></li><li><a href=\"/en-US/docs/Web/Manifest/prefer_related_applications\">prefer_related_applications</a></li><li><a href=\"/en-US/docs/Web/Manifest/protocol_handlers\">protocol_handlers</a></li><li><a href=\"/en-US/docs/Web/Manifest/related_applications\">related_applications</a></li><li><a href=\"/en-US/docs/Web/Manifest/scope\">scope</a></li><li><a href=\"/en-US/docs/Web/Manifest/screenshots\">screenshots</a></li><li><a href=\"/en-US/docs/Web/Manifest/share_target\">share_target</a></li><li><a href=\"/en-US/docs/Web/Manifest/short_name\">short_name</a></li><li><a href=\"/en-US/docs/Web/Manifest/shortcuts\">shortcuts</a></li><li><a href=\"/en-US/docs/Web/Manifest/start_url\">start_url</a></li><li><a href=\"/en-US/docs/Web/Manifest/theme_color\">theme_color</a></li></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<table class=\"properties\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">Type</th>\n      <td><code>Array</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Mandatory</th>\n      <td>No</td>\n    </tr>\n  </tbody>\n</table>\n<p>The <code>protocol_handlers</code> member specifies an array of objects that are protocols which this web app can register and handle. Protocol handlers register the application in an OS's application preferences; the registration associates a specific application with the given protocol scheme. For example, when using the protocol handler <code>mailto://</code> on a web page, registered email applications open.</p>\n<p>After registering a web app as a protocol handler, when a user clicks on a hyperlink with a specific scheme such as <code>mailto://</code> or <code>web+music://</code> from a browser or native app, the registered PWA would open and receive the URL.</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>In this example, a web app manifest declares that the app should be registered to handle the protocols <code>web+jngl</code> and <code>web+jnglstore</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token property\">\"protocol_handlers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"protocol\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"web+jngl\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/lookup?type=%s\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"protocol\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"web+jnglstore\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/shop?for=%s\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>A developer can add a field in the manifest.json to declare which protocols the web app can handle. As seen in the example above, the key is named <code>protocol_handlers</code> and it contains an array of protocol handler declaration objects.</p>\n<p>Registering applications to handle URL schemes is operating-system dependent. This association is usually done during application install but it can also be done afterwards from an app that has already been installed.</p>"}},{"type":"prose","value":{"id":"values","title":"Values","isH3":false,"content":"<p>Protocol handlers objects may contain the following values:</p>\n<table class=\"fullwidth-table standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Member</th>\n      <th scope=\"col\">Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>protocol</code></td>\n      <td>\n        A required string containing the protocol to be handled; e.g.:\n        <code>mailto</code>, <code>ms-word</code>, <code>web+jngl</code>.\n      </td>\n    </tr>\n    <tr>\n      <td><code>url</code></td>\n      <td>\n        Required HTTPS URL within the application\n        <a href=\"/en-US/docs/Web/Manifest/scope\">scope</a> that will handle the\n        protocol. The <code>%s</code> token will be replaced by the URL starting\n        with the protocol handler's scheme. If <code>url</code> is a relative\n        URL, the base URL will be the URL of the manifest.\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/manifest-incubations/#protocol_handlers-member","title":"Manifest Incubations"}],"query":"html.manifest.protocol_handlers"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"html.manifest.protocol_handlers","dataURL":"/en-US/docs/Web/Manifest/protocol_handlers/bcd.json"}}],"toc":[{"text":"Example","id":"example"},{"text":"Values","id":"values"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The protocol_handlers member specifies an array of objects that are protocols which this web app can register and handle. Protocol handlers register the application in an OS's application preferences; the registration associates a specific application with the given protocol scheme. For example, when using the protocol handler mailto:// on a web page, registered email applications open.","popularity":0.0004,"modified":"2022-09-09T05:38:45.000Z","other_translations":[{"title":"protocol_handlers","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/manifest/protocol_handlers","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/manifest/protocol_handlers/index.md","last_commit_url":"https://github.com/mdn/content/commit/f22e42182591e38590c9add80de91a51bce3cde2","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/Manifest","title":"Web app manifests"},{"uri":"/en-US/docs/Web/Manifest/protocol_handlers","title":"protocol_handlers"}],"pageTitle":"protocol_handlers - Web app manifests | MDN","noIndexing":false}}