{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Peer-to-peer communications with WebRTC","mdn_url":"/en-US/docs/Web/Guide/API/WebRTC/Peer-to-peer_communications_with_WebRTC","locale":"en-US","native":"English (US)","sidebarHTML":"\n <ol>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API\"><strong>WebRTC API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>WebRTC Guides</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Architecture\">WebRTC Architecture</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebRTC_API/WebRTC_Basics\">WebRTC Basics</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Protocols\">WebRTC Protocols</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Connectivity\">Dealing with connectivity</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Overview\">Overview of WebRTC interfaces</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Session_lifetime\">Lifetime of a WebRTC Session</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Using_data_channels\">Using data channels</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>WebRTC Tutorials</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/Web/API/WebRTC_API/adapter.js\">Interoperability with adapter.js</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Taking_still_photos\">Taking still photos from the camera</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Simple_RTCDataChannel_sample\">A simple data channel example</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs\">Building an internet-connected phone with Peer.js</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Interfaces</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/MediaStreamEvent\"><code>MediaStreamEvent</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/en-US/docs/MDN\">Documentation:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Contribute</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/MDN\">The MDN project</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong>WebRTC API</strong> is designed to allow JavaScript applications to create real-time connections containing audio and video streams as well as data channels for arbitrary data. These connections are created to directly link two users' browsers, without necessarily requiring any intermediary servers which support the WebRTC protocols. WebRTC also leverages the <a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\" title=\"getUserMedia()\"><code>getUserMedia()</code></a> method to get access to microphone and camera data. In this article, we'll take a look at how peer-to-peer connections are created and managed using WebRTC and its <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> interface.</p>\n<p>A high-level description of what happens in an <code>RTCPeerConnection</code> was shown in an <a href=\"https://hacks.mozilla.org/2013/05/embedding-webrtc-video-chat-right-into-your-website/\" class=\"external\" rel=\" noopener\">Hacks article</a> (see all WebRTC Hacks articles <a href=\"https://hacks.mozilla.org/category/webrtc/\" class=\"external\" rel=\" noopener\">here</a>):</p>\n<p>\n  <img src=\"/en-US/docs/Web/Guide/API/WebRTC/Peer-to-peer_communications_with_WebRTC/webrtc-basicsofhowitworks2.png\" alt=\"Simple pictograph describing the basics of RTCPeerConnection call setup\" width=\"898\" height=\"805\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"resources","title":"Resources","isH3":false,"content":"<ul>\n  <li>A good tutorial on basic features in WebRTC is at <a href=\"https://web.dev/webrtc-basics/\" class=\"external\" rel=\" noopener\">web.dev</a>. A collection of basic test pages to support development are at <a href=\"https://mozilla.github.io/webrtc-landing/\" class=\"external\" rel=\" noopener\">webrtc-landing</a>.</li>\n  <li>You can make simple person-to-person calls using <a href=\"https://github.com/webrtc/apprtc\" class=\"external\" rel=\" noopener\">apprtc</a>.</li>\n  <li>A high-level description of what happens in an <code>RTCPeerConnection</code> was shown in the <a href=\"https://hacks.mozilla.org/category/webrtc/\" class=\"external\" rel=\" noopener\">Mozilla Hacks</a> blog article <a href=\"https://hacks.mozilla.org/2013/05/embedding-webrtc-video-chat-right-into-your-website/\" class=\"external\" rel=\" noopener\">Embedding WebRTC video chat</a>.</li>\n</ul>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/mediacapture-main/","title":"Media Capture and Streams"},{"bcdSpecificationURL":"https://w3c.github.io/webrtc-pc/","title":"WebRTC 1.0: Real-Time Communication Between Browsers"}],"query":"undefined"}}],"toc":[{"text":"Resources","id":"resources"},{"text":"Specifications","id":"specifications"}],"summary":"The WebRTC API is designed to allow JavaScript applications to create real-time connections containing audio and video streams as well as data channels for arbitrary data. These connections are created to directly link two users' browsers, without necessarily requiring any intermediary servers which support the WebRTC protocols. WebRTC also leverages the getUserMedia() method to get access to microphone and camera data. In this article, we'll take a look at how peer-to-peer connections are created and managed using WebRTC and its RTCPeerConnection interface.","popularity":0.0007,"modified":"2022-09-12T13:06:56.000Z","other_translations":[{"title":"Comunicaciones peer-to-peer (P2P) con WebRTC","locale":"es","native":"Español"},{"title":"Communication de pair-à-pair avec WebRTC","locale":"fr","native":"Français"}],"source":{"folder":"en-us/web/guide/api/webrtc/peer-to-peer_communications_with_webrtc","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/guide/api/webrtc/peer-to-peer_communications_with_webrtc/index.md","last_commit_url":"https://github.com/mdn/content/commit/9b38f886d21c5d0a428f58acb20c4d0fc6c2e098","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/Guide","title":"Developer guides"},{"uri":"/en-US/docs/Web/Guide/API","title":"Guide to Web APIs"},{"uri":"/en-US/docs/Web/Guide/API/WebRTC/Peer-to-peer_communications_with_WebRTC","title":"Peer-to-peer communications with WebRTC"}],"pageTitle":"Peer-to-peer communications with WebRTC - Developer guides | MDN","noIndexing":false}}