{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Understandable","mdn_url":"/en-US/docs/Web/Accessibility/Understanding_WCAG/Understandable","locale":"en-US","native":"English (US)","sidebarHTML":"\n<ol><li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG/Keyboard\">Keyboard</a></li><li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG/Operable\">Operable</a></li><li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable\">Perceivable</a><ol><li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable\">Perceivable</a></li><li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable/Color_contrast\">Color contrast</a></li><li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable/Use_of_color\">Use of color</a></li></ol></li><li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG/Robust\">Robust</a></li><li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG/Text_labels_and_names\">Text labels and names</a></li><li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG/Understandable\">Understandable</a></li></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>This article provides practical advice on how to write your web content so that it conforms to the success criteria outlined in the <strong>Understandable</strong> principle of the Web Content Accessibility Guidelines (WCAG) 2.0 and 2.1. Understandable states that information and the operation of user interface must be understandable.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> To read the W3C definitions for Understandable and its guidelines and success criteria, see <a href=\"https://www.w3.org/TR/WCAG21/#understandable\" class=\"external\" rel=\" noopener\">Principle 3: Understandable — Information and the operation of user interface must be understandable</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"guideline_3.1_—_readable_make_text_content_readable_and_understandable","title":"Guideline 3.1 — Readable: Make text content readable and understandable","isH3":false,"content":"<p>This guideline focuses on making text content as understandable as possible.</p>\n<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Success criteria</th>\n      <th scope=\"col\">How to conform to the criteria</th>\n      <th scope=\"col\">Practical resource</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>3.1.1 Language of Page (A)</td>\n      <td>\n        The default human language of each web page should be detectable via\n        code. This is essential for purposes like making sure the reader has\n        arrived at a page written in a language suitable for them. The simplest\n        way to achieve this is to set the <a href=\"/en-US/docs/Web/HTML/Global_attributes#attr-lang\"><code>lang</code></a>\n        attribute on the page's <a href=\"/en-US/docs/Web/HTML/Element/html\"><code>&lt;html&gt;</code></a> element, giving\n        it a value equal to the language code that best represents the language\n        the page is written in.\n      </td>\n      <td>\n        See\n        <a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML#setting_the_primary_language_of_the_document\">Setting the primary language of the document</a>.\n      </td>\n    </tr>\n    <tr>\n      <td>3.1.2 Language of Parts (AA)</td>\n      <td>\n        <p>\n          In cases where the content of a page includes words or phrases that\n          are in a different language to the primary language, use the\n          <a href=\"/en-US/docs/Web/HTML/Global_attributes#attr-lang\"><code>lang</code></a> attribute on an element wrapped\n          around the term in question (e.g. a <a href=\"/en-US/docs/Web/HTML/Element/span\"><code>&lt;span&gt;</code></a>\n          if no semantic element is available) to set an appropriate language\n          for it.\n        </p>\n        <p>\n          You don't need to set a different language for words or phrases that\n          are the same regardless of language (for example proper names,\n          technical terms that aren't part of a specific language).\n        </p>\n      </td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>3.1.3 Unusual Words (AAA)</td>\n      <td>\n        Where technical terms, jargon, or idioms/slang are used, definitions\n        should be provided for such phrases/words. Your site should provide a\n        glossary that contains definitions of such words/terms that you can then\n        link to when they appear, or at the very least provide definitions\n        somewhere in the surrounding text, or in a\n        <a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#description_lists\">description list</a>\n        at the bottom of the page.\n      </td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>3.1.4 Abbreviations (AAA)</td>\n      <td>\n        <p>\n          Where abbreviations are used, you should provide an expansion of them,\n          or a definition as required.\n        </p>\n        <p>\n          The <a href=\"/en-US/docs/Web/HTML/Element/abbr\"><code>&lt;abbr&gt;</code></a> element is often thought of as\n          the preferred way to provide an expansion for an abbreviation — it\n          takes a <a href=\"/en-US/docs/Web/HTML/Global_attributes#attr-title\"><code>title</code></a> attribute that contains the\n          expansion, and this appears when the acronym is moused over. However,\n          the title contents are not accessible via keyboard, nor are they\n          reliably read out by screen readers. A better way to handle this is to\n          again provide links to glossary pages containing the acronym expansion\n          and explanation, or at the very least include them in the surrounding\n          text in context.\n        </p>\n      </td>\n      <td>\n        See\n        <a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#abbreviations\">Abbreviations</a>.\n      </td>\n    </tr>\n    <tr>\n      <td>3.1.5 Reading Level (AAA)</td>\n      <td>\n        <p>\n          If text is provided that requires a higher reading level that lower\n          secondary education level (typically children around 11-14 years old),\n          provide supplementary explainer material to help people who can't read\n          it, or provide an alternative version that is written at lower\n          secondary level.\n        </p>\n        <p>\n          This doesn't mean that all subject matter should be understood by\n          everyone, but that the style of writing should be accessible by\n          everyone. It is better to just write all content at lower secondary\n          level, even technical documentation like programming tutorials, unless\n          there is a good reason not to (e.g. an alternative style for poetic\n          effect), or they have to be written in a strict style (e.g. W3C\n          specs).\n        </p>\n      </td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>3.1.6 Pronunciation (AAA)</td>\n      <td>\n        <p>\n          A mechanism should be provided to give users access to pronunciation\n          of words where they are is needed to understand the content fully.\n        </p>\n        <p>\n          The HTML <a href=\"/en-US/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> element can be used to\n          create a control that allows the reader to play back an audio file\n          containing the correct pronunciation, and it also makes sense to\n          include a textual pronunciation guide after difficult words, in the\n          same way that you find in dictionary entries.\n        </p>\n      </td>\n      <td>\n        See\n        <a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Video and audio content</a>, and\n        <a href=\"http://www.oxfordlearnersdictionaries.com/us/about/pronunciation_english.html\" class=\"external\" rel=\" noopener\">Pronunciation Guide for English Dictionary</a>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> Also see the WCAG description for <a href=\"https://www.w3.org/TR/WCAG21/#readable\" class=\"external\" rel=\" noopener\">Guideline 3.1 Readable: Make text content readable and understandable</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"guideline_3.2_—_predictable_make_web_pages_appear_and_operate_in_predictable_ways","title":"Guideline 3.2 — Predictable: Make Web pages appear and operate in predictable ways","isH3":false,"content":"<p>This guideline focuses on making user interfaces intuitive and understandable.</p>\n<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Success criteria</th>\n      <th scope=\"col\">How to conform to the criteria</th>\n      <th scope=\"col\">Practical resource</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>3.2.1 On Focus (A)</td>\n      <td>\n        <p>\n          When a control or other page feature receives focus, it should not\n          change the context in a way that may confuse or disorientate the user.\n        </p>\n        <p>\n          This is a matter of sensible design — people don't want interfaces to\n          surprise them; they want things to be intuitive and behave as\n          expected. For example, focusing a navigation menu option should not\n          change the displayed page — it should be activated before the display\n          changes.\n        </p>\n      </td>\n      <td>\n        <a href=\"/en-US/docs/Web/API/Element/focus_event\"><code>Element.focus_event</code></a> contains some\n        useful information. Also see\n        <a href=\"/en-US/docs/Learn/Accessibility/HTML#building_keyboard_accessibility_back_in\">Building keyboard accessibility back in</a>\n        for some useful implementation ideas.\n      </td>\n    </tr>\n    <tr>\n      <td>3.2.2 On Input (A)</td>\n      <td>\n        <p>\n          When data is inputted into a control, or a setting is changed, context\n          should not be changed unexpectedly. The user should be warned/advised\n          of the impending change before it occurs.\n        </p>\n        <p>\n          Again, sensible design should be implemented. For example, if pressing\n          a button causes the application to exit the current view, the user\n          should be asked to confirm this action, save their work if\n          appropriate, etc.\n        </p>\n      </td>\n      <td><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\"><code>HTMLElement.oninput</code></a> is useful here.</td>\n    </tr>\n    <tr>\n      <td>3.2.3 Consistent Navigation (AA)</td>\n      <td>\n        <p>\n          Navigation menu/control style and positioning should be consistent\n          between different pages or views of a web page, and the existing items\n          should appear in the same order, even if for example new items are\n          added. If the user has initiated a change, e.g. choosing a different\n          color scheme or position for the navigation, their choice should be\n          respected across all pages.\n        </p>\n        <p>\n          Again, sensible design — make the navigation controls the same across\n          all pages or views.\n        </p>\n      </td>\n      <td>\n        See\n        <a href=\"/en-US/docs/Learn/Accessibility/HTML#page_layouts\">Page layouts</a>\n        for information on modern markup for layouts. See also\n        <a href=\"/en-US/docs/Learn/CSS/Styling_text/Styling_links#styling_links_as_buttons\">Styling links as buttons</a>\n        for a useful accessible navigation menu example.\n      </td>\n    </tr>\n    <tr>\n      <td>3.2.4 Consistent Identification (AA)</td>\n      <td>\n        <p>\n          Controls or components that have the same functionality should be\n          identified in the same way across different pages or views. A currency\n          converter appearing on every page of a world travel site for example\n          should be exactly the same, semantically and in terms of labels.\n        </p>\n        <p>Again, sensible design!</p>\n      </td>\n      <td>\n        \"Labels\" can refer to descriptive information in text content, or HTML\n        form labels. See\n        <a href=\"/en-US/docs/Learn/Accessibility/HTML#meaningful_text_labels\">Meaningful text labels</a>\n        for more information.\n      </td>\n    </tr>\n    <tr>\n      <td>3.2.5 Change on Request (AAA)</td>\n      <td>\n        <p>\n          Changes in context that could possibly confuse or disorient users\n          should only occur only when requested by the user, OR the user should\n          be able to turn them off.\n        </p>\n        <p>\n          If you need to have something that significantly changes the current\n          view (e.g. content or controls), let the user control when they want\n          that change to occur (e.g. what page to show, when to advance to the\n          next photo in the gallery...)\n        </p>\n        <p>\n          If you need to have something like a carousel on a page, provide an\n          option to stop it automatically advancing. Better to avoid such\n          functionality if possible.\n        </p>\n      </td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> Also see the WCAG description for <a href=\"https://www.w3.org/TR/WCAG21/#predictable\" class=\"external\" rel=\" noopener\">Guideline 3.2 Predictable: Make Web pages appear and operate in predictable ways</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"guideline_3.3_—_input_assistance_help_users_avoid_and_correct_mistakes","title":"Guideline 3.3 — Input Assistance: Help users avoid and correct mistakes","isH3":false,"content":"<p>This guideline centers around helping users enter correct information when required with the minimum of mistakes.</p>\n<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Success criteria</th>\n      <th scope=\"col\">How to conform to the criteria</th>\n      <th scope=\"col\">Practical resource</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>3.3.1 Error Identification (A)</td>\n      <td>\n        <p>\n          When a user is filling out a form or choosing between options, any\n          error that is detected should be clearly reported to the user, along\n          with the form control that the error relates to.\n        </p>\n        <p>\n          It is advisable to implement client-side error detection and handling,\n          via HTML form validation features, and/or JavaScript, whatever is\n          best for your situation. When an error is detected, an intuitive error\n          message should be shown next to the form input that is at fault to\n          help the user correct their inputs. For screen reader users, you can\n          use aria live regions to alert the user to a change on the page.\n        </p>\n        <div class=\"note notecard\" id=\"sect4\">\n          <p>\n            <strong>Note</strong>: Server-side validation should *always* be\n            used alongside client-side validation. Client-side validation is too\n            easy to turn off or otherwise get around, so it can't be relied on\n            alone.\n          </p>\n        </div>\n      </td>\n      <td>\n        See\n        <a href=\"/en-US/docs/Learn/Forms/Form_validation\">Form data validation</a>\n        for comprehensive validation information, and\n        <a href=\"/en-US/docs/Learn/Accessibility/WAI-ARIA_basics#dynamic_content_updates\">WAI-ARIA: Dynamic content updates</a>\n        for information on live regions.\n      </td>\n    </tr>\n    <tr>\n      <td>3.3.2 Labels or Instructions (A)</td>\n      <td>\n        <p>\n          Clear instructions should be provided when data input is required.\n          When a simple instruction or prompt is required, you can use\n          <a href=\"/en-US/docs/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a> elements for single inputs like name\n          or age, a combination or <a href=\"/en-US/docs/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a>s and\n          <a href=\"/en-US/docs/Web/HTML/Element/fieldset\"><code>&lt;fieldset&gt;</code></a>s/<a href=\"/en-US/docs/Web/HTML/Element/legend\"><code>&lt;legend&gt;</code></a>s\n          for multiple inputs that go together (like the elements of a date of\n          birth or postal address).\n        </p>\n        <p>\n          When more complex explanation is required, you can always include\n          explanatory paragraphs too, or maybe you need to try to make your\n          forms more intuitive.\n        </p>\n      </td>\n      <td>\n        <ul>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/HTML#meaningful_text_labels\">Meaningful text labels</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure an HTML form</a></li>\n          <li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG/Text_labels_and_names\">Text labels and names</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>3.3.3 Error Suggestion (AA)</td>\n      <td>\n        <p>\n          When an error is detected and suggestions for correction are known,\n          provide these to the user (e.g. suggesting alternatives when the user\n          is choosing a user name and has selected one that is already taken),\n          unless doing so would cause a security issue (e.g. when entering a\n          password) or context problem (e.g. they are trying to answer a\n          question in a quiz app).\n        </p>\n        <p>\n          In such cases, when this is appropriate, you'll probably use a\n          combination of JavaScript and server-side functionality to check if\n          the entry is correct, and if not, what viable suggestions can be given\n          to the user. Such suggestions should be displayed usefully in context,\n          just like error messages (see 3.3.1).\n        </p>\n      </td>\n      <td>No tutorial suggestions yet.</td>\n    </tr>\n    <tr>\n      <td>3.3.4 Error Prevention (Legal, Financial, Data) (AA)</td>\n      <td>\n        <p>\n          In the case of forms involved with entry of sensitive data (such as\n          legal agreements, e-commerce transactions, or personal data), at least\n          one of the following should be true:\n        </p>\n        <ul>\n          <li>Submissions are reversible.</li>\n          <li>\n            Data is checked for errors, and the user is given an opportunity to\n            correct them.\n          </li>\n          <li>\n            A mechanism is available for confirming and correcting information\n            before final submission.\n          </li>\n        </ul>\n      </td>\n      <td>\n        <p>\n          <strong>Reversible</strong> — for any view where data can be entered,\n          provide an equivalent view that allows you to edit or even delete an\n          entry, as appropriate (for example, see\n          <a href=\"/en-US/docs/Learn/Server-side/Django\">Django web framework</a>).\n        </p>\n        <p>\n          <strong>Checking data</strong> — as covered in 3.3.1, a combination of\n          client-side and server-side validation should be used to detect errors\n          and display helpful messages to the user to allow them to correct\n          their inputs.\n        </p>\n        <p>\n          <strong>Confirm and correct</strong> — where appropriate, after\n          filling in a series of form fields to perform a task (such as buying a\n          product), the user should be shown a confirmation screen where they\n          can review their inputs and correct anything that doesn't look right.\n          This pattern is commonly used on e-commerce sites like Amazon.\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td>3.3.5 Context-sensitive help is available (AAA)</td>\n      <td>\n        Provide instructions and other appropriate cues in context to aid form\n        completion and submission.\n      </td>\n      <td>\n        This really just builds on 3.3.1 and other similar criteria but requires\n        more thorough contextual help information and services, e.g. providing a\n        dedicated link to a help page or service on each page, providing\n        examples showing what successful completion should look like.\n      </td>\n    </tr>\n    <tr>\n      <td>3.3.6 Error Prevention (All) (AAA)</td>\n      <td>\n        This principle builds on 3.3.4, extending its requirements to all user\n        input situations, not just ones involving sensitive data.\n      </td>\n      <td>Again, see 3.3.4.</td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>Note:</strong> Also see the WCAG description for <a href=\"https://www.w3.org/TR/WCAG21/#input-assistance\" class=\"external\" rel=\" noopener\">Guideline 3.3 Input Assistance: Help users avoid and correct mistakes</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG\">WCAG</a>\n    <ol>\n      <li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable\">Perceivable</a></li>\n      <li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG/Operable\">Operable</a></li>\n      <li>Understandable</li>\n      <li><a href=\"/en-US/docs/Web/Accessibility/Understanding_WCAG/Robust\">Robust</a></li>\n    </ol>\n  </li>\n</ul>"}}],"toc":[{"text":"Guideline 3.1 — Readable: Make text content readable and understandable","id":"guideline_3.1_—_readable_make_text_content_readable_and_understandable"},{"text":"Guideline 3.2 — Predictable: Make Web pages appear and operate in predictable ways","id":"guideline_3.2_—_predictable_make_web_pages_appear_and_operate_in_predictable_ways"},{"text":"Guideline 3.3 — Input Assistance: Help users avoid and correct mistakes","id":"guideline_3.3_—_input_assistance_help_users_avoid_and_correct_mistakes"},{"text":"See also","id":"see_also"}],"summary":"This article provides practical advice on how to write your web content so that it conforms to the success criteria outlined in the Understandable principle of the Web Content Accessibility Guidelines (WCAG) 2.0 and 2.1. Understandable states that information and the operation of user interface must be understandable.","popularity":0.0003,"modified":"2022-09-30T18:42:31.000Z","other_translations":[{"title":"理解可能","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/accessibility/understanding_wcag/understandable","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/accessibility/understanding_wcag/understandable/index.md","last_commit_url":"https://github.com/mdn/content/commit/1e607fb7d77c5571973c0f6425492fc04e9189d5","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/Accessibility","title":"Accessibility"},{"uri":"/en-US/docs/Web/Accessibility/Understanding_WCAG","title":"Understanding the Web Content Accessibility Guidelines"},{"uri":"/en-US/docs/Web/Accessibility/Understanding_WCAG/Understandable","title":"Understandable"}],"pageTitle":"Understandable - Accessibility | MDN","noIndexing":false}}