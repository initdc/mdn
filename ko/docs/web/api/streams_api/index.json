{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Streams API","mdn_url":"/ko/docs/Web/API/Streams_API","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Streams_API\">Streams API</a></strong></li><li><strong><a href=\"/ko/docs/Web/API/Streams_API\"><code>Streams_API</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Streams</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ByteLengthQueuingStrategy\"><code>ByteLengthQueuingStrategy</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CountQueuingStrategy\"><code>CountQueuingStrategy</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/body\"><code>Response.body</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/WritableStream\"><code>WritableStream</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>Streams API는 Javascript를 이용해 네트워크를 통해 전송된 데이터 스트림에 접근하여 원하는 대로 처리가 가능한 API를 제공합니다.</p>"}},{"type":"prose","value":{"id":"개념과_사용법","title":"개념과 사용법","isH3":false,"content":"<p>Streaming은 네트워크를 통해 받은 리소스를 작은 조각으로 나누어, Bit 단위로 처리합니다. 이는 브라우저가 수신한 자원을 웹페이지에 표현할 때 주로 사용하는 방법입니다. — Video buffer는 재생되기 전 천천히 채워지며 가끔 이미지도 천천히 로딩되는 것을 보실 수 있을 겁니다..</p>\n<p>하지만 Javascript에서는 지금까지 불가능했습니다. 이전에는 (비디오나 텍스트 파일 등의) 리소스를 처리하기 위해서 우선, 전체 파일을 다운로드 받은 후 알맞은 포맷으로 파싱된 후에야, 전송된 전체 데이터를 처리할 수 있었습니다.</p>\n<p>With Javascript에 Stream이 도입된 후에는 모든 것이 바뀌었는데, 이제 Buffer, String 또는 blob 없이도 Javascript를 통해 Raw Data를 비트 단위로 처리할 수 있습니다.</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/15817/Concept.png\" alt=\"\" loading=\"lazy\">\n</p>\n<p>장점은 또 있습니다 — Stream의 시작 또는 종료를 감지할 수 있으며, 여러 stream을 엮어서 에러를 처리하거나 필요한 경우 stream을 취소할 수도 있습니다. 또한 stream이 읽어들이는 속도에 따라 반응할 수도 있지요.</p>\n<p>Stream의 주요한 기본 사용법은 응답 데이터를 stream으로 만드는 것입니다. <a href=\"/en-US/docs/Web/API/fetch\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">fetch request (en-US)</a>를 통해 정상적으로 전송된 응답 <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Body</code></a>는 <a href=\"/ko/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a>로 표현 가능합니다. 또한 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/getReader\"><code>ReadableStream.getReader()</code> <small>(en-US)</small></a>를 통해 Reader 객체를 얻어 데이터를 읽을 수도 있으며, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/cancel\"><code>ReadableStream.cancel()</code> <small>(en-US)</small></a>로 Stream을 취소하는 것 등이 가능합니다.</p>\n<p>조금 더 복잡한 사용법은 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/ReadableStream\"><code>ReadableStream()</code> <small>(en-US)</small></a> 생성자를 통해 사용자가 직접 Stream을 생성하는 것입니다. 예를 들자면 <a href=\"/ko/docs/Web/API/Service_Worker_API\">service worker</a>에 전달할 데이터를 Stream으로 만들 수도 있습니다.</p>\n<p><a href=\"/ko/docs/Web/API/WritableStream\"><code>WritableStream</code></a>을 사용하면 Stream에 데이터를 쓰는 것도 가능합니다..</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>참고:</strong> <a href=\"/ko/docs/Web/API/Streams_API/Concepts\">Streams API concepts</a>, <a href=\"/ko/docs/Web/API/Streams_API/Using_readable_streams\">Using readable streams</a>, <a href=\"/en-US/docs/Web/API/Streams_API/Using_writable_streams\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using writable streams (en-US)</a> — 페이지에서 stream에 관한 더 자세한 이론과 예제를 찾을 수 있습니다.</p>\n</div>"}},{"type":"prose","value":{"id":"스트림_인터페이스","title":"스트림 인터페이스","isH3":false,"content":""}},{"type":"prose","value":{"id":"읽기_스트림readable_streams","title":"읽기 스트림(Readable streams)","isH3":true,"content":"<dl>\n  <dt id=\"readablestream\"><a href=\"/ko/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a></dt>\n  <dd>\n    <p>데이터 읽기 스트림을 나타냅니다. <a href=\"/ko/docs/Web/API/Fetch_API\">Fetch API</a>의 결과 스트림이나 개발자가 정의한 스트림(예, 커스텀 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/ReadableStream\"><code>ReadableStream()</code> <small>(en-US)</small></a> 클래스)등을 핸들링할 수 있습니다.</p>\n  </dd>\n  <dt id=\"readablestreamdefaultreader_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>네트워크(예, fetch 요청)등에서 전달된 스트림 데이터를 처리하는 기본 Reader를 반환합니다.</p>\n  </dd>\n  <dt id=\"readablestreamdefaultcontroller_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p><a href=\"/ko/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a>의 상태나 내부 큐를 컨트롤 할 수 있는 기본 컨트롤러를 반환합니다. 기본 컨트롤러는 Byte 스트림 외의 스트림에만 해당합니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"쓰기_스트림writable_streams","title":"쓰기 스트림(writable streams)","isH3":true,"content":"<dl>\n  <dt id=\"writablestream\"><a href=\"/ko/docs/Web/API/WritableStream\"><code>WritableStream</code></a></dt>\n  <dd>\n    <p>목적지 스트림에 데이터를 쓰기 위한 표준 추상 인터페이스를 제공하는 객체입니다. 이 객체는 내장 백프레셔와 큐잉을 구현하고 있습니다.</p>\n  </dd>\n  <dt id=\"writablestreamdefaultwriter_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>쓰기 스트림에 데이터 조각들을 쓰기 위한 기본 Writer 객체를 반환한다.</p>\n  </dd>\n  <dt id=\"writablestreamdefaultcontroller_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p><a href=\"/ko/docs/Web/API/WritableStream\"><code>WritableStream</code></a> 상태를 컨트롤하는 기본 컨트롤러를 반환한다. <code>WritableStream</code>을 생성하면 해당 스트림을 컨트롤 하기 위해 <code>WritableStreamDefaultController</code> 인스턴스가 내부적으로 생성된다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"관련_스트림_api와_기능","title":"관련 스트림 API와 기능","isH3":true,"content":"<dl>\n  <dt id=\"bytelengthqueuingstrategy_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ByteLengthQueuingStrategy\"><code>ByteLengthQueuingStrategy</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>스트림을 생성할 때 기본으로 사용 할 내장 byte length queuing strategy를 제공합니다.</p>\n  </dd>\n  <dt id=\"countqueuingstrategy_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CountQueuingStrategy\"><code>CountQueuingStrategy</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>스트림을 생성할 때 기본적으로 사용 할 내장 chunk counting queuing strategy를 제공합니다..</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"외부_api_확장","title":"외부 API 확장","isH3":true,"content":"<dl>\n  <dt id=\"request\"><a href=\"/ko/docs/Web/API/Request\"><code>Request</code></a></dt>\n  <dd>\n    <p>새 <code>Request</code> 객체가 생성될 때 <code>RequestInit</code> 딕셔너리의 <code>body</code>에 <a href=\"/ko/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> 를 전달할 수 있습니다. 이 <code>Request</code>는 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/fetch\"><code>WindowOrWorkerGlobalScope.fetch()</code> <small>(en-US)</small></a> 에 전달되에서 스트림을 fetch하는데 사용됩니다.</p>\n  </dd>\n  <dt id=\"body\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Body</code></a></dt>\n  <dd>\n    <p><a href=\"/en-US/docs/Web/API/fetch\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">fetch request (en-US)</a> 성공 시 기본적으로 <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Body</code></a> <a href=\"/ko/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a>로 제공되며, reader를 붙여 데이터를 읽어들일 수 있습니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"bytestream_관련_인터페이스","title":"ByteStream 관련 인터페이스","isH3":true,"content":"<div class=\"notecard warning\" id=\"sect3\">\n  <p><strong>경고:</strong> <strong>중요</strong>: 아래 항목들은 아직 구현된 곳이 없으며, 스펙의 세부 사항이 구현할 수 있을 만큼 충분한 지 논의가 진행중입니다. 추후 변경될 수 있습니다.</p>\n</div>\n<dl>\n  <dt id=\"readablestreambyobreader_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>개발자가 직접 제공하여 stream data를 읽을 수 있는 BYOB (\"bring your own buffer\") reader를 표현합니다. (예 커스텀 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/ReadableStream\"><code>ReadableStream()</code> <small>(en-US)</small></a> 생성자).</p>\n  </dd>\n  <dt id=\"readablebytestreamcontroller_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p><a href=\"/ko/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a>의 상태와 내부 큐를 컨트롤 하는 컨트롤러 객체를 표현합니다. Byte stream 컨트롤러는 byte stream을 위한 컨트롤러입니다.</p>\n  </dd>\n  <dt id=\"readablestreambyobrequest_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code> <small>(en-US)</small></a>의 request를 표현합니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"예제","title":"예제","isH3":false,"content":"<p>Streams API 문서와 참조할 만한 예제를 함께 작성하였습니다 — <a href=\"https://github.com/mdn/dom-examples/tree/master/streams\" class=\"external\" rel=\" noopener\">mdn/dom-examples/streams</a> 를 참조하세요. 예제는 아래와 같습니다.:</p>\n<ul>\n  <li><a href=\"https://mdn.github.io/dom-examples/streams/simple-pump/\" class=\"external\" rel=\" noopener\">Simple stream pump</a>: ReadableStream에서 어떻게 데이터를 읽어들여 다른 곳으로 전달하는지 보여줍니다.</li>\n  <li><a href=\"https://mdn.github.io/dom-examples/streams/grayscale-png/\" class=\"external\" rel=\" noopener\">Grayscale a PNG</a>: PNG file의 ReadableStream을 통해 grayscale로 변경하는 방법을 보여줍니다.</li>\n  <li><a href=\"https://mdn.github.io/dom-examples/streams/simple-random-stream/\" class=\"external\" rel=\" noopener\">Simple random stream</a>: 커스텀 스트림을 통해 무작위 문자열을 생성하고, 데이터 청크로 큐잉한 뒤, 다시 읽어들이는 방법에 대해 설명합니다.</li>\n  <li><a href=\"https://mdn.github.io/dom-examples/streams/simple-tee-example/\" class=\"external\" rel=\" noopener\">Simple tee example</a>: 이 예제는 simple random stream 예제를 확장하여, 스트림을 분할하고 각 스트림이 독립적으로 데이터를 읽는 방법을 보여줍니다.</li>\n  <li><a href=\"https://mdn.github.io/dom-examples/streams/simple-writer/\" class=\"external\" rel=\" noopener\">Simple writer</a>: Writable stream에 데이터를 쓰는 방법을 설명하고, 스트림 데이터를 디코드하여 UI로 표현하는 방법을 보여줍니다.</li>\n  <li><a href=\"https://mdn.github.io/dom-examples/streams/png-transform-stream/\" class=\"external\" rel=\" noopener\">Unpack chunks of a PNG</a>: <a href=\"/en-US/docs/Web/API/ReadableStream/pipeThrough\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">pipeThrough() (en-US)</a> 을 통해 PNG file을 PNG 청크 스트림으로 변환하는 방식으로 ReadableStream을 다른 데이터 타입 스트림으로 전환하는 방법을 설명합니다.</li>\n</ul>\n<p>다른 개발자의 예제:</p>\n<ul>\n  <li><a href=\"https://fetch-progress.anthum.com/\" class=\"external\" rel=\" noopener\">Progress Indicators with Streams, Service Workers, &amp; Fetch</a>.</li>\n</ul>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"query":"api.ReadableStream,api.WritableStream","specifications":[]}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"data":null,"query":"api.ReadableStream,api.WritableStream","browsers":null}},{"type":"prose","value":{"id":"더_보기","title":"더 보기","isH3":false,"content":"<ul>\n  <li><a href=\"/ko/docs/Web/API/Streams_API/Concepts\">Streams API 개</a>념</li>\n  <li><a href=\"/ko/docs/Web/API/Streams_API/Using_readable_streams\">Readable stream 사용하기</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Streams_API/Using_writable_streams\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Writable stream 사용하기 (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"개념과 사용법","id":"개념과_사용법"},{"text":"스트림 인터페이스","id":"스트림_인터페이스"},{"text":"예제","id":"예제"},{"text":"Specifications","id":"specifications"},{"text":"브라우저 호환성","id":"브라우저_호환성"},{"text":"더 보기","id":"더_보기"}],"summary":"Streams API는 Javascript를 이용해 네트워크를 통해 전송된 데이터 스트림에 접근하여 원하는 대로 처리가 가능한 API를 제공합니다.","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Streams API","locale":"en-US","native":"English (US)"},{"title":"Streams API","locale":"fr","native":"Français"},{"title":"Streams API","locale":"ja","native":"日本語"},{"title":"Streams API","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Streams API","locale":"ru","native":"Русский"},{"title":"Stream API","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/web/api/streams_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/streams_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/Streams_API","title":"Streams API"}],"pageTitle":"Streams API - Web API | MDN","noIndexing":false}}