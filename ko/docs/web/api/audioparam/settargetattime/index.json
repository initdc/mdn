{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"AudioParam.setTargetAtTime()","mdn_url":"/ko/docs/Web/API/AudioParam/setTargetAtTime","locale":"ko","native":"한국어","hasMathML":true,"sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/ko/docs/Web/API/AudioParam\"><code>AudioParam</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/ko/docs/Web/API/AudioParam/defaultValue\"><code>defaultValue</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/maxValue\"><code>maxValue</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/minValue\"><code>minValue</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/value\"><code>value</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/ko/docs/Web/API/AudioParam/cancelAndHoldAtTime\"><code>cancelAndHoldAtTime()</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/cancelScheduledValues\"><code>cancelScheduledValues()</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/exponentialRampToValueAtTime\"><code>exponentialRampToValueAtTime()</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/linearRampToValueAtTime\"><code>linearRampToValueAtTime()</code></a></li><li><em><code>setTargetAtTime()</code></em></li><li><a href=\"/ko/docs/Web/API/AudioParam/setValueAtTime\"><code>setValueAtTime()</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/setValueCurveAtTime\"><code>setValueCurveAtTime()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Audio API</summary><ol><li><a href=\"/ko/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/ko/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/ko/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/ko/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/ko/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ko/docs/Web/API/AudioParam\"><code>AudioParam</code></a> 인터페이스의 <code>setTargetAtTime()</code> 메서드는 <code>AudioParam</code> 값에 점진적인 변화의 시작을 예정합니다. 이 메서드는 ADSR 엔벨로프의 decay 혹은 release 부분에 유용합니다.</p>"}},{"type":"prose","value":{"id":"구문","title":"구문","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> paramRef <span class=\"token operator\">=</span> param<span class=\"token punctuation\">.</span><span class=\"token function\">setTargetAtTime</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> startTime<span class=\"token punctuation\">,</span> timeConstant<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"매개변수","title":"매개변수","isH3":true,"content":"<dl>\n  <dt id=\"target\">target</dt>\n  <dd>\n    <p>주어진 시작 시간에 파라미터가 변화를 시작할 값.</p>\n  </dd>\n  <dt id=\"starttime\">startTime</dt>\n  <dd>\n    <p><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/currentTime\"><code>AudioContext.currentTime</code> <small>(en-US)</small></a>과 같은 시간 좌표계에서 지수적 변화가 시작될 시간. 만약 이 값이 <code>AudioContext.currentTime</code> 보다 작거나 같다면, 파라미터는 즉시 변화를 시작할 것입니다.</p>\n  </dd>\n  <dt id=\"timeconstant\">timeConstant</dt>\n  <dd>\n    <p>target 값을 향한 지수적 접근의 시간 상수 값 (초 단위로 주어짐). 이 값이 클수록, 변화는 더 느려질 것입니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"반환","title":"반환","isH3":true,"content":"<p>이 <code>AudioParam</code> 객체에 대한 참조. 이 인터페이스의 몇몇 오래된 브라우저 구현은 void를 반환합니다.</p>"}},{"type":"prose","value":{"id":"설명","title":"설명","isH3":false,"content":"<p>변화는 <code>startTime</code> 에 명시된 시간에 시작해 <code>target</code> 매개변수에 의해 주어진 값을 향해 지수적으로 움직입니다. <code>timeConstant</code> 매개변수에 의해 정의된 감소율은 지수적입니다. 그러므로 값은 절대 <code>target</code> 에 완벽히 도달하지 못할 것이지만, <code>timeConstant</code> 길이의 각 시간 단계 이후에, 값은 또 다른 \n  <math>\n    <semantics>\n      <mrow>\n        <mn>1</mn>\n        <mo>-</mo>\n        <msup>\n          <mi>e</mi>\n          <mrow>\n            <mo>-</mo>\n            <mn>1</mn>\n          </mrow>\n        </msup>\n        <mo>≈</mo>\n        <mn>63.2</mn>\n        <mtext>%</mtext>\n      </mrow>\n      <annotation encoding=\"TeX\">1 - e^{-1} \\대략 63.2%</annotation>\n    </semantics>\n  </math> 에 의해 <code>target</code> 에 다가가게 될 것입니다. (일차 선형 연속 시불변 시스템을 사용하는) 완전한 공식은 <a href=\"https://webaudio.github.io/web-audio-api/#dom-audioparam-settargetattime\" class=\"external\" rel=\" noopener\">Web\nAudio 명세서</a>에서 확인할 수 있습니다.\n</p>\n<p>만약 특정한 시간까지 target 값에 절대적으로 도달할 필요가 있다면, <a href=\"/ko/docs/Web/API/AudioParam/exponentialRampToValueAtTime\"><code>AudioParam.exponentialRampToValueAtTime()</code></a>를 사용할 수 있습니다. 그러나, 수학적인 이유로, 이 메서드는 현재 값이나 target 값이 <code>0</code> 이면 작동하지 않습니다.</p>"}},{"type":"prose","value":{"id":"좋은_timeconstant_고르기","title":"좋은 <code>timeConstant</code> 고르기","isH3":true,"content":"<p>위에서 언급되었다시피, 각 <code>timeConstant</code> 가 target 값을 향해 63.2% 만큼씩 움직이며, 값은 지수적으로 변화합니다. target 값에 도달하는 것에 대해 걱정할 필요가 없습니다. 한 번 충분히 가까워지고 나면, 듣는 사람은 추가적인 변화를 감지하지 못할 것입니다.</p>\n<p>사용하는 경우에 따라, target 값에 95% 만큼 도달하는 것은 충분할 것입니다. 그 경우, <code>timeConstant</code> 를 원하는 기간의 1/3만큼 설정할 수 있습니다.</p>\n<p>시간이 진행함에 따라 어떻게 값이 0%에서 100%로 변화하는지에 대해서는 아래의 표를 참고해 보세요.</p>\n<table>\n  <thead>\n    <tr>\n      <th><code>startTime</code> 이후로의 시간</th>\n      <th>값</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>0 * timeConstant</code></td>\n      <td>0%</td>\n    </tr>\n    <tr>\n      <td><code>0.5 * timeConstant</code></td>\n      <td>39.3%</td>\n    </tr>\n    <tr>\n      <td><code>1 * timeConstant</code></td>\n      <td>63.2%</td>\n    </tr>\n    <tr>\n      <td><code>2 * timeConstant</code></td>\n      <td>86.5%</td>\n    </tr>\n    <tr>\n      <td><code>3 * timeConstant</code></td>\n      <td>95.0%</td>\n    </tr>\n    <tr>\n      <td><code>4 * timeConstant</code></td>\n      <td>98.2%</td>\n    </tr>\n    <tr>\n      <td><code>5 * timeConstant</code></td>\n      <td>99.3%</td>\n    </tr>\n    <tr>\n      <td><code>n * timeConstant</code></td>\n      <td>\n        <math>\n          <semantics>\n            <mrow>\n              <mn>1</mn>\n            </mrow>\n          </semantics>\n        </math>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<math>\n  <semantics>\n    <mrow>\n      <mn>1</mn>\n      <mo>-</mo>\n      <msup>\n        <mi>e</mi>\n        <mrow>\n          <mo>-</mo>\n          <mi>n</mi>\n        </mrow>\n      </msup>\n    </mrow>\n    <annotation encoding=\"TeX\">1 - e^{-n}</annotation>\n  </semantics>\n</math>","titleAsText":"좋은 timeConstant 고르기"}},{"type":"prose","value":{"id":"예제","title":"예제","isH3":false,"content":"<p>이 예제에는 두 개의 제어 버튼을 가진 미디어 소스가 있습니다 (소스 코드는 <a href=\"https://github.com/mdn/webaudio-examples/blob/master/audio-param/index.html\" class=\"external\" rel=\" noopener\">webaudio-examples\nrepo</a>에서 볼 수 있고, <a href=\"https://mdn.github.io/webaudio-examples/audio-param/\" class=\"external\" rel=\" noopener\">작동 예제</a>도 볼 수 있습니다). 이 버튼이 눌렸을 때, <code>setTargetAtTime()</code> 이 사용되어 각각 gain 값을 1.0까지, 그리고 0까지 서서히 사라지게(fade) 하는데, 이 이펙트는 1초 후에 시작되고 이펙트가 지속되는 시간의 길이는 timeConstant에 의해 제어됩니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 오디오 컨텍스트를 생성합니다</span>\n<span class=\"token keyword\">var</span> AudioContext <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 예제를 위한 기본 변수를 설정합니다</span>\n<span class=\"token keyword\">var</span> myAudio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> pre <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pre'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> myScript <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\npre<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> myScript<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> atTimePlus <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.at-time-plus'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> atTimeMinus <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.at-time-minus'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// MediaElementAudioSourceNode를 생성합니다</span>\n<span class=\"token comment\">// HTMLMediaElement를 노드 내로 전달합니다</span>\n<span class=\"token keyword\">var</span> source <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createMediaElementSource</span><span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// gain 노드를 생성하고 gain 값을 0.5로 설정합니다</span>\n<span class=\"token keyword\">var</span> gainNode <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createGain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngainNode<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> currGain <span class=\"token operator\">=</span> gainNode<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// AudioBufferSourceNode를 gainNode에 연결하고</span>\n<span class=\"token comment\">// gainNode를 destination에 연결합니다</span>\nsource<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>gainNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngainNode<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>audioCtx<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// onclick이 발생했을 때 무언가를 하기 위해 버튼을 설정합니다</span>\natTimePlus<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  currGain <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n  gainNode<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span><span class=\"token function\">setTargetAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\natTimeMinus<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  currGain <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  gainNode<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span><span class=\"token function\">setTargetAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"명세서","id":"명세서","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-audioparam-settargetattime","title":"Web Audio API"}],"query":"api.AudioParam.setTargetAtTime"}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"query":"api.AudioParam.setTargetAtTime","dataURL":"/ko/docs/Web/API/AudioParam/setTargetAtTime/bcd.json"}},{"type":"prose","value":{"id":"같이_보기","title":"같이 보기","isH3":false,"content":"<ul>\n  <li><a href=\"/ko/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Web Audio API 사용하기</a></li>\n</ul>"}}],"toc":[{"text":"구문","id":"구문"},{"text":"설명","id":"설명"},{"text":"예제","id":"예제"},{"text":"명세서","id":"명세서"},{"text":"브라우저 호환성","id":"브라우저_호환성"},{"text":"같이 보기","id":"같이_보기"}],"summary":"AudioParam 인터페이스의 setTargetAtTime() 메서드는 AudioParam 값에 점진적인 변화의 시작을 예정합니다. 이 메서드는 ADSR 엔벨로프의 decay 혹은 release 부분에 유용합니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"AudioParam.setTargetAtTime()","locale":"en-US","native":"English (US)"}],"source":{"folder":"ko/web/api/audioparam/settargetattime","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/audioparam/settargetattime/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/AudioParam","title":"AudioParam"},{"uri":"/ko/docs/Web/API/AudioParam/setTargetAtTime","title":"AudioParam.setTargetAtTime()"}],"pageTitle":"AudioParam.setTargetAtTime() - Web API | MDN","noIndexing":false}}