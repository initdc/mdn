{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"AudioParam.linearRampToValueAtTime()","mdn_url":"/ko/docs/Web/API/AudioParam/linearRampToValueAtTime","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/ko/docs/Web/API/AudioParam\"><code>AudioParam</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/ko/docs/Web/API/AudioParam/defaultValue\"><code>defaultValue</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/maxValue\"><code>maxValue</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/minValue\"><code>minValue</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/value\"><code>value</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/ko/docs/Web/API/AudioParam/cancelAndHoldAtTime\"><code>cancelAndHoldAtTime()</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/cancelScheduledValues\"><code>cancelScheduledValues()</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/exponentialRampToValueAtTime\"><code>exponentialRampToValueAtTime()</code></a></li><li><em><code>linearRampToValueAtTime()</code></em></li><li><a href=\"/ko/docs/Web/API/AudioParam/setTargetAtTime\"><code>setTargetAtTime()</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/setValueAtTime\"><code>setValueAtTime()</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam/setValueCurveAtTime\"><code>setValueCurveAtTime()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Audio API</summary><ol><li><a href=\"/ko/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/ko/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/ko/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/ko/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/ko/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ko/docs/Web/API/AudioParam\"><code>AudioParam</code></a> 인터페이스의 <code>linearRampToValueAtTime()</code> 메서드는 <code>AudioParam</code> 의 값에 점진적인 선형 변화를 예정합니다. 변화는 <em>previous</em> 이벤트에 명시된 시간에 시작해, 선형적인 ramp를 따라 <code>value</code> 매개변수에 주어진 새로운 값으로 향하고, <code>endTime</code> 매개변수에 주어진 시간에 새로운 값에 도달합니다.</p>"}},{"type":"prose","value":{"id":"구문","title":"구문","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> AudioParam <span class=\"token operator\">=</span> AudioParam<span class=\"token punctuation\">.</span><span class=\"token function\">linearRampToValueAtTime</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> endTime<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"매개변수","title":"매개변수","isH3":true,"content":"<dl>\n  <dt id=\"value\">value</dt>\n  <dd>\n    <p><code>AudioParam</code> 이 주어진 시간까지 ramp할 값을 나타내는 부동점 number.</p>\n  </dd>\n  <dt id=\"endtime\">endTime</dt>\n  <dd>\n    <p>ramping이 시작된 이후 값의 변화가 멈출 정확한 시간 (초로 표현됨) 을 나타내는 double.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"반환","title":"반환","isH3":true,"content":"<p>이 <code>AudioParam</code> 객체에 대한 참조. 몇몇 브라우저에서 이 인터페이스의 오래된 구현은 void를 반환합니다.</p>"}},{"type":"prose","value":{"id":"예제","title":"예제","isH3":false,"content":"<p>이 예제에는 두 개의 제어 버튼을 가진 미디어 소스가 있습니다 (소스 코드는 <a href=\"https://github.com/mdn/webaudio-examples/tree/master/audio-param\" class=\"external\" rel=\" noopener\">audio-param\nrepo</a>에서 볼 수 있고, <a href=\"https://mdn.github.io/webaudio-examples/audio-param/\" class=\"external\" rel=\" noopener\">작동 예제</a>도 볼 수 있습니다). 이 버튼들이 눌렸을 때, <code>linearRampToValueAtTime()</code> 가 사용되어 각각 gain 값을 1.0까지, 그리고 0까지 서서히 사라지게(fade) 합니다. 비록 종종 <a href=\"/ko/docs/Web/API/AudioParam/exponentialRampToValueAtTime\"><code>AudioParam.exponentialRampToValueAtTime()</code></a>가 좀 더 자연스럽다고 여겨지긴 하지만 이것은 페이드 인/페이드 아웃 이펙트에 아주 유용합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 오디오 컨텍스트를 생성합니다</span>\n<span class=\"token keyword\">var</span> AudioContext <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 예제를 위한 기본 변수를 설정합니다</span>\n<span class=\"token keyword\">var</span> myAudio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> pre <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pre'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> myScript <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\npre<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> myScript<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> linearRampPlus <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.linear-ramp-plus'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> linearRampMinus <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.linear-ramp-minus'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// MediaElementAudioSourceNode를 생성합니다</span>\n<span class=\"token comment\">// HTMLMediaElement를 노드 내로 전달합니다</span>\n<span class=\"token keyword\">var</span> source <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createMediaElementSource</span><span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// gain 노드를 생성하고 gain 값을 0.5로 설정합니다</span>\n<span class=\"token keyword\">var</span> gainNode <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createGain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// AudioBufferSourceNode를 gainNode에 연결하고</span>\n<span class=\"token comment\">// gainNode를 destination에 연결합니다</span>\ngainNode<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsource<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>gainNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngainNode<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>audioCtx<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// onclick이 발생했을 때 무언가를 하기 위해 버튼을 설정합니다</span>\nlinearRampPlus<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  gainNode<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span><span class=\"token function\">linearRampToValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nlinearRampMinus<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  gainNode<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span><span class=\"token function\">linearRampToValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"명세서","id":"명세서","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-audioparam-linearramptovalueattime","title":"Web Audio API"}],"query":"api.AudioParam.linearRampToValueAtTime"}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"query":"api.AudioParam.linearRampToValueAtTime","dataURL":"/ko/docs/Web/API/AudioParam/linearRampToValueAtTime/bcd.json"}},{"type":"prose","value":{"id":"같이_보기","title":"같이 보기","isH3":false,"content":"<ul>\n  <li><a href=\"/ko/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Web Audio API 사용하기</a></li>\n</ul>"}}],"toc":[{"text":"구문","id":"구문"},{"text":"예제","id":"예제"},{"text":"명세서","id":"명세서"},{"text":"브라우저 호환성","id":"브라우저_호환성"},{"text":"같이 보기","id":"같이_보기"}],"summary":"AudioParam 인터페이스의 linearRampToValueAtTime() 메서드는 AudioParam 의 값에 점진적인 선형 변화를 예정합니다. 변화는 previous 이벤트에 명시된 시간에 시작해, 선형적인 ramp를 따라 value 매개변수에 주어진 새로운 값으로 향하고, endTime 매개변수에 주어진 시간에 새로운 값에 도달합니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"AudioParam.linearRampToValueAtTime()","locale":"en-US","native":"English (US)"}],"source":{"folder":"ko/web/api/audioparam/linearramptovalueattime","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/audioparam/linearramptovalueattime/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/AudioParam","title":"AudioParam"},{"uri":"/ko/docs/Web/API/AudioParam/linearRampToValueAtTime","title":"AudioParam.linearRampToValueAtTime()"}],"pageTitle":"AudioParam.linearRampToValueAtTime() - Web API | MDN","noIndexing":false}}