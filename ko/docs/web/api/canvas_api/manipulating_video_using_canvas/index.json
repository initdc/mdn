{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"캔버스(canvas)를 이용한 비디오 조작하기","mdn_url":"/ko/docs/Web/API/Canvas_API/Manipulating_video_using_canvas","locale":"ko","native":"한국어","sidebarHTML":"\n <ol>\n  <li><a href=\"/ko/docs/Web/API/Canvas_API\"><strong>Canvas API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Canvas 튜토리얼</summary>\n      <ol>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/Tutorial/Basic_usage\">기본 사용</a></li>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes\">도형 그리기</a></li>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors\">스타일 및 색상 적용하기</a></li>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/Tutorial/Drawing_text\">텍스트 그리기</a></li>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/Tutorial/Using_images\">이미지 사용하기</a></li>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/Tutorial/Transformations\">변형</a></li>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/Tutorial/Compositing\">합성 및 클리핑</a></li>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/Tutorial/Basic_animations\">기본 애니메이션</a></li>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">고급 애니메이션</a></li>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas\">픽셀 조작</a></li>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\">Canvas 최적화하기</a></li>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/Tutorial/Finale\">Finale</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>예제</summary>\n      <ol>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/A_basic_ray-caster\">기본 raycaster</a></li>\n        <li><a href=\"/ko/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">Canvas를 사용해 비디오 조작하기</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>인터페이스</summary>\n      <ol>\n        <li><a href=\"/ko/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/ko/docs/Web/API/ImageData\"><code>ImageData</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextMetrics\"><code>TextMetrics</code> <small>(en-US)</small></a></li>\n        <li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg> <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Path2D\"><code>Path2D</code> <small>(en-US)</small></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ko/docs/MDN\">문서:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>기여하기</summary>\n      <ol>\n        <li><a href=\"/ko/docs/MDN\">MDN 프로젝트</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>비디오에서 다양한 시각적 효과를 보여주기 위해,<code>캔버스</code>와 <a href=\"/ko/docs/Web/HTML/Element/Video\"><code>비디오</code></a>의 기능을 결합하여 실시간으로 비디오 데이터를 조작할 수 있습니다. 이 튜토리얼에서는 자바스크립트 코드로 어떻게 크로마 키잉(chroma-keying, 또한 \"녹색 스크린 효과, green screen effect\")을 구현할 수 있는지 보여줍니다.</p>\n<p><a href=\"https://media.prod.mdn.mozit.cloud/samples/video/chroma-key/index.xhtml\" class=\"external\" rel=\" noopener\">라이브 예제 보기</a></p>"}},{"type":"prose","value":{"id":"문서document_내용","title":"문서(document) 내용","isH3":false,"content":"<p>이 내용을 보여주기 위한 XHTML 문서는 아래와 같습니다.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n      <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#CCCCCC<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token selector\">#c2</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>foo.png<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token property\">background-repeat</span><span class=\"token punctuation\">:</span> no-repeat<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token selector\">div</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border</span> <span class=\"token punctuation\">:</span>1px solid #444444<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>10px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>#3B3B3B<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\">processor<span class=\"token punctuation\">.</span><span class=\"token function\">doLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video.ogv<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>160<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>96<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>160<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>96<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>여기에서 중요한 요소는:</p>\n<ol>\n  <li>이 문서에는 ID가 c1, c2인 두 개의 <a href=\"/ko/docs/Web/HTML/Element/canvas\"><code>캔버스</code></a>가 있습니다. 캔버스 c1은 비디오 원본의 현재 프레임을 보여주기 위해 사용되고, c2는 크로마 키잉 효과를 수행한 결과를 보여줍니다. c2에서 비디오의 녹색 배경을 대체할 정지 이미지를 미리 로드합니다.</li>\n  <li>자바스크립트 코드는 main.js에서 가져옵니다. 이 스크립트는 자바스크립트 1.8 기능을 사용했기 때문에 스크립트를 가져오는 22번째 줄에서 버전이 명시됩니다(원문: this script uses JavaScript 1.8 features, so that version is specified in line 22 when importing the script).</li>\n  <li>문서가 로드되면, processor.doLoad() 메서드가 실행됩니다.</li>\n</ol>"}},{"type":"prose","value":{"id":"자바스크립트_코드","title":"자바스크립트 코드","isH3":false,"content":"<p>main.js에 있는 자바스크립트 코드는 3개의 메서드로 구성됩니다.</p>"}},{"type":"prose","value":{"id":"크로마_키잉_플레이어_초기화","title":"크로마 키잉 플레이어 초기화","isH3":true,"content":"<p><code>doLoad()</code> 메서드는 문서가 최초에 로드될 때 호출됩니다. 이 메서드가 하는 일은 크로마 키잉 처리에서 쓰일 변수를 준비하고, 이벤트 리스너를 등록함으로써 사용자가 비디오 재생을 시작할 때 감지할 수 있도록 해줍니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  <span class=\"token keyword\">var</span> processor<span class=\"token punctuation\">;</span>\n\n  processor<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">doLoad</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">doLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'video'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>c1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx1 <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>c2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx2 <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>c2<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'play'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        self<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>videoWidth <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        self<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>videoHeight <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token function\">timerCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<p>이코드는 XHTML에서 중요한 요소인 비디오와 캔버스의 참조를 가져옵니다. 두 개의 캔버스에 대한 그래픽 컨텍스트의 참조도 가져옵니다. 이 참조들은 뒤에서 크로마 키잉 효과를 구현할 때 사용됩니다.</p>\n<p>그리고 <code>addEventListener()</code>는 비디오가 재생을 시작하기 위해 호출되기 때문에 사용자가 재생 버튼을 누를 때 알림을 받습니다. 재생이 시작되면 이 코드는 비디오의 가로, 세로를 이등분 한 값을 가져오고(크로마 키잉 효과를 수행할 때 이등분 함), <code>timerCallback()</code> 메서드를 호출하여 비디오를 보고 시각적 효과를 계산하기 시작합니다.</p>"}},{"type":"prose","value":{"id":"타이머_콜백","title":"타이머 콜백","isH3":true,"content":"<p>타이머 콜백은 비디오가 재생되기 시작(\"재생\" 이벤트가 발생)할 때 호출되는데, 매 프레임마다 키잉 효과를 주기 위해 주기적으로 호출 될 수 있도록 설정해 주어야 합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  processor<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">timerCallback</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">timerCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>paused <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>ended<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">computeFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token function\">timerCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<p>콜백에서 하는 첫 번 째 일은 비디오가 재생되고 있는지 확인하는 것인데, 만약 그렇지 않다면 콜백은 아무 일도 하지 않고 즉시 반환됩니다.</p>\n<p>그 후에 현재 비디오 프레임에서 크로마 키잉 효과를 주기 위한 <code>computeFrame()</code> 메서드를 호출합니다.</p>\n<p>콜백에서 마지막으로 하는 일은 <code>setTimeout()</code>을 호출하여 가능한 한 빨리 <code>timerCallback()</code> 메서드를 다시 호출할 수 있도록 하는 것입니다. 실제로는, 비디오 프레임 속도에 대한 기반 지식으로 호출할 수 있도록 합니다.</p>"}},{"type":"prose","value":{"id":"비디오_프레임_데이터_조작","title":"비디오 프레임 데이터 조작","isH3":true,"content":"<p>아래의 <code>computeFrame()</code> 메서드는 프레임 데이터를 가져와서 크로마 키잉 효과를 수행하는 역할을 합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  processor<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">computeFrame</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">computeFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx1<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> frame <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx1<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> l <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> r <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> g <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>g <span class=\"token operator\">&gt;</span> <span class=\"token number\">100</span> <span class=\"token operator\">&amp;&amp;</span> r <span class=\"token operator\">&gt;</span> <span class=\"token number\">100</span> <span class=\"token operator\">&amp;&amp;</span> b <span class=\"token operator\">&lt;</span> <span class=\"token number\">43</span><span class=\"token punctuation\">)</span>\n        frame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx2<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>위 과정이 계속 호출 되면, 아래와 같이 비디오 요소에 가장 최근 프레임의 비디오 데이터가 표출됩니다.</p>\n<img alt=\"video.png\" class=\"default internal\" src=\"/@api/deki/files/3282/=video.png\" loading=\"lazy\">\n<p>2번째 줄에서, 첫 번째 캔버스의 그래픽 컨텍스트 ctx1에 비디오 프레임이 복사 되는데, 원본의 절반 크기로 프레임을 그리기 위해 이전에 저장한 가로, 세로 값으로 지정합니다. 컨텍스트의 <code>drawImage()</code> 메서드에 비디오 요소를 전달하기만 하면 현재 비디오 프레임을 그릴 수 있습니다. 결과는 아래와 같습니다:</p>\n<img alt=\"sourcectx.png\" class=\"default internal\" src=\"/@api/deki/files/3284/=sourcectx.png\" loading=\"lazy\">\n<p>3번째 줄에서는 첫 번째 컨텍스트의 <code>getImageData()</code> 메서드를 호출해서 현재 비디오 프레임의 원시 그래픽 데이터 복사본을 가져옵니다. 이것은 조작할 수 있는 원시 32비트 픽셀 이미지 데이터를 제공합니다. 4번째 줄에서는 프레임의 이미지 데이터 전체 크기를 4로 나누어 이미지의 픽셀 수를 계산합니다.</p>\n<p>6번째 줄에서 시작하는 <code>for</code> 문은 프레임의 픽셀을 스캔하여, 빨간색, 녹색, 파란색 값을 추출하여 사전에 정의된 숫자와 비교합니다. 이 숫자는 <code>foo.png</code>에서 가져온 배경 이미지로 대체될 녹색 스크린 영역을 감지합니다.</p>\n<p>녹색 스크린이라고 간주된 매개변수 내의 프레임 이미지 데이터의 모든 픽셀은 투명해질 수 있도록 알파값이 0으로 대체됩니다. 결과적으로 최종 이미지는 100% 투명해진 녹색 스크린 영역을 갖게 되고, 13번째 줄에서 대상 컨텍스트에 고정된 배경 위로 올려져 그려집니다.</p>\n<p>결과 이미지는 아래와 같습니다:</p>\n<img alt=\"output.png\" class=\"default internal\" src=\"/@api/deki/files/3283/=output.png\" loading=\"lazy\">\n<p>이 과정은 비디오가 재생될 때마다 반복되므로, 매 프레임마다 처리되어 크로마 키잉 효과가 나타나는 것입니다.</p>\n<p><a href=\"https://media.prod.mdn.mozit.cloud/samples/video/chroma-key/index.xhtml\" class=\"external\" rel=\" noopener\">라이브 예제 보기</a></p>"}},{"type":"prose","value":{"id":"더_보기","title":"더 보기","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">오디오와 비디오 사용하기 (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"문서(document) 내용","id":"문서document_내용"},{"text":"자바스크립트 코드","id":"자바스크립트_코드"},{"text":"더 보기","id":"더_보기"}],"summary":"비디오에서 다양한 시각적 효과를 보여주기 위해,캔버스와 비디오의 기능을 결합하여 실시간으로 비디오 데이터를 조작할 수 있습니다. 이 튜토리얼에서는 자바스크립트 코드로 어떻게 크로마 키잉(chroma-keying, 또한 \"녹색 스크린 효과, green screen effect\")을 구현할 수 있는지 보여줍니다.","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Manipulating video using canvas","locale":"en-US","native":"English (US)"},{"title":"Manipular video por medio de canvas","locale":"es","native":"Español"},{"title":"Manipulation vidéo avec la balise canvas","locale":"fr","native":"Français"},{"title":"使用 canvas 处理视频","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/web/api/canvas_api/manipulating_video_using_canvas","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/canvas_api/manipulating_video_using_canvas/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/Canvas_API","title":"Canvas API"},{"uri":"/ko/docs/Web/API/Canvas_API/Manipulating_video_using_canvas","title":"캔버스(canvas)를 이용한 비디오 조작하기"}],"pageTitle":"캔버스(canvas)를 이용한 비디오 조작하기 - Web API | MDN","noIndexing":false}}