{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"The structured clone algorithm","mdn_url":"/ko/docs/Web/API/Web_Workers_API/Structured_clone_algorithm","locale":"ko","native":"한국어","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The structured clone 알고리즘은 복잡한 자바스크립트 객체의 직렬화을 위해서 <a href=\"https://www.w3.org/html/wg/drafts/html/master/infrastructure.html#safe-passing-of-structured-data\" class=\"external\" rel=\" noopener\">HTML5 specification</a>에 의해서 정의된 새로운 알고리즘 입니다. 이것은 순환그래프를 포함하는 객체의 직렬화를 지원하기 때문에 <a href=\"/en-US/JSON\">JSON</a>보다 더 유용합니다. — 객체는 같은 그래프에서 다른객체를 참조하는 객체를 참조할 수 있습니다. 이러한 케이스들에서는 structured clone알고리즘이 아마도 JSON보다 더 효율적일 것입니다.</p>\n<p>알고리즘은 본질적으로 원본 객체의 모든 필드를 거치고 각 필드의 값들을 새로운 객체로 복제합니다. 만약 필드가 객체를 가졌다면 모든 필드와 그 서브필드가 새로운 객체로 복제될 때 까지 재귀적으로 동작합니다.</p>"}},{"type":"prose","value":{"id":"json을_넘는_이득","title":"JSON을 넘는 이득","isH3":false,"content":"<p>JSON을 뛰어넘는 structured clone알고리즘의 여러가지 핵심 이득이 있습니다.</p>\n<ul>\n  <li>Structured clones은 <a href=\"/en-US/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a> 객체들도 복사할 수 있습니다..</li>\n  <li>Structured clones은 <a href=\"/ko/docs/Web/API/Blob\"><code>Blob</code></a>, <a href=\"/ko/docs/Web/API/File\"><code>File</code></a>와 <a href=\"/ko/docs/Web/API/FileList\"><code>FileList</code></a> 객체들도 복사할 수 있습니다..</li>\n  <li>Structured clones은 <a href=\"/ko/docs/Web/API/ImageData\"><code>ImageData</code></a> 객체들도 복사할 수 있습니다. 클론된<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>CanvasPixelArray</code> <small>(en-US)</small></a>크기(dimensions)는 원본과 match될 것이고 같은 픽셀 데이터의 복제를 가집니다.</li>\n  <li>Structured clones은 참조들의 순환 그래프들을 포함한 객체들을 올바르게 복제할 수 있습니다.</li>\n</ul>"}},{"type":"prose","value":{"id":"structured_clones과_함께_동작하지_않는_것들","title":"structured clones과 함께 동작하지 않는 것들","isH3":false,"content":"<ul>\n  <li><code>Error와</code> <a href=\"/en-US/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a> 객체들은 structured clone 알고리즘에 의해서 복제될 수 없습니다; 이것을 시도하면 <code>DATA_CLONE_ERR</code> exception을 던질 것 입니다.</li>\n  <li>DOM node들을 클론하려고 시도하는것도 동일하게 <code>DATA_CLONE_ERR</code> exception을 던질 것 입니다.</li>\n  <li>객체들의 몇몇 파라미터들은 보존되지 않습니다:\n    <ul>\n      <li><code>RegExp객체들의 liastIndex필드는 보존되지 않습니다.</code></li>\n      <li>Property descriptors, setters, 그리고 getters (이것들과 비슷한 메타데이터같은 기능들)은 복제되지 않습니다. 예를들어서 한 객체가 프로퍼티 디스크립터를 사용하여 읽기전용으로 마크되어져 있다면 이것은 읽기-쓰기가 가능하도록 복제 될 것입니다. 이것이 디폴트 조건이기 때문입니다.</li>\n      <li>프로토타입 체인은 거치지않고 복제되지 않습니다.</li>\n    </ul>\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"supported_types","title":"Supported types","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Object type</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/ko/docs/Web/JavaScript/Data_structures#primitive_values\">All primitive types</a></td>\n      <td>하지만 심볼들은 포함하지 않습니다.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a> object</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>String object</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></td>\n      <td>lastIndex필드는 보존되지 않습니다.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ko/docs/Web/API/Blob\"><code>Blob</code></a></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ko/docs/Web/API/File\"><code>File</code></a></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ko/docs/Web/API/FileList\"><code>FileList</code></a></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ko/docs/Web/API/ArrayBuffer\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">ArrayBuffer</a></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">ArrayBufferView (en-US)</a></td>\n      <td>이것은 기본적으로 int32Array나 기타같은 <a href=\"/ko/docs/Web/JavaScript/Typed_arrays\">typed arrays</a>의 모든것을 의미합니다.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ko/docs/Web/API/ImageData\"><code>ImageData</code></a></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></td>\n      <td>이것은 그냥 plain객체들을 포함합니다.(e.g. 객체 리터럴)</td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Map (en-US)</a></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"또_다른_방법_깊은_복사deep_copy‎","title":"또 다른 방법 : 깊은 복사(deep copy‎)","isH3":false,"content":"<p>객체의 깊은 복사(deep copy)를 원한다면(모든 프로토타입 체인과 내포된 속성들 까지도), 또다른 접근방식을 사용해야만 합니다. 아래의 예제를 확인하세요.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">objectToBeCloned</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Basis.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>objectToBeCloned <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> objectToBeCloned<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">var</span> objectClone<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Filter out special objects.</span>\n  <span class=\"token keyword\">var</span> Constructor <span class=\"token operator\">=</span> objectToBeCloned<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>Constructor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Implement other special objects here.</span>\n    <span class=\"token keyword\">case</span> <span class=\"token literal-property property\">RegExp</span><span class=\"token operator\">:</span>\n      objectClone <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">(</span>objectToBeCloned<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token literal-property property\">Date</span><span class=\"token operator\">:</span>\n      objectClone <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">(</span>objectToBeCloned<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      objectClone <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Clone each property.</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> prop <span class=\"token keyword\">in</span> objectToBeCloned<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    objectClone<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">clone</span><span class=\"token punctuation\">(</span>objectToBeCloned<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> objectClone<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>참고:</strong> 이 알고리즘은 실제로 <a href=\"/en-US/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a>, <a href=\"/en-US/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>, 와 <a href=\"/en-US/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a>스페셜 객체들을 구현했습니다. 필요에 따라서 다른 특수한 케이스들을 구현할 수 있습니다.</p>\n</div>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.w3.org/TR/html5/infrastructure.html#safe-passing-of-structured-data\" class=\"external\" rel=\" noopener\">HTML5 Specification: Safe passing of structured data</a></li>\n  <li><a href=\"/ko/docs/Web/API/Window/history\"><code>window.history</code></a></li>\n  <li><a href=\"/ko/docs/Web/API/Window/postMessage\"><code>window.postMessage()</code></a></li>\n  <li><a href=\"/ko/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n  <li><a href=\"/ko/docs/Components.utils.cloneInto\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Components.utils.cloneInto</a></li>\n</ul>"}}],"toc":[{"text":"JSON을 넘는 이득","id":"json을_넘는_이득"},{"text":"structured clones과 함께 동작하지 않는 것들","id":"structured_clones과_함께_동작하지_않는_것들"},{"text":"Supported types","id":"supported_types"},{"text":"또 다른 방법 : 깊은 복사(deep copy‎)","id":"또_다른_방법_깊은_복사deep_copy‎"},{"text":"See also","id":"see_also"}],"summary":"The structured clone 알고리즘은 복잡한 자바스크립트 객체의 직렬화을 위해서 HTML5 specification에 의해서 정의된 새로운 알고리즘 입니다. 이것은 순환그래프를 포함하는 객체의 직렬화를 지원하기 때문에 JSON보다 더 유용합니다. — 객체는 같은 그래프에서 다른객체를 참조하는 객체를 참조할 수 있습니다. 이러한 케이스들에서는 structured clone알고리즘이 아마도 JSON보다 더 효율적일 것입니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"The structured clone algorithm","locale":"en-US","native":"English (US)"},{"title":"L’algorithme de clonage structuré","locale":"fr","native":"Français"},{"title":"構造化複製アルゴリズム","locale":"ja","native":"日本語"},{"title":"Алгоритм структурированного клонирования","locale":"ru","native":"Русский"},{"title":"结构化克隆算法","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/web/api/web_workers_api/structured_clone_algorithm","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/web_workers_api/structured_clone_algorithm/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/Web_Workers_API","title":"Web Workers API"},{"uri":"/ko/docs/Web/API/Web_Workers_API/Structured_clone_algorithm","title":"The structured clone algorithm"}],"pageTitle":"The structured clone algorithm - Web API | MDN","noIndexing":false}}