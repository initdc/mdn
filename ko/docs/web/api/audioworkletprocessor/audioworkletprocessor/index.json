{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"AudioWorkletProcessor()","mdn_url":"/ko/docs/Web/API/AudioWorkletProcessor/AudioWorkletProcessor","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/ko/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><em><code>AudioWorkletProcessor()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ko/docs/Web/API/AudioWorkletProcessor/parameterDescriptors\"><code>parameterDescriptors (static getter)</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletProcessor/port\"><code>port</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ko/docs/Web/API/AudioWorkletProcessor/process\"><code>process()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Audio API</summary><ol><li><a href=\"/ko/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/ko/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/ko/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/ko/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/ko/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>AudioWorkletProcessor()</code></strong> 생성자는 <a href=\"/ko/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a>의 근본적인 오디오 프로세싱 메커니즘을 나타내는 새로운 <a href=\"/ko/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a> 객체를 생성합니다.</p>"}},{"type":"prose","value":{"id":"구문","title":"구문","isH3":false,"content":"<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>참고:</strong> <code>AudioWorkletProcessor</code> 와 이것으로부터 파생된 클래스들은\n    사용자에 의해 제공된 코드로부터 직접적으로 초기화될 수 없습니다.\n    대신, 이것들은 오직 연관된 <a href=\"/ko/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a>들의 생성에 의해서만 내부적으로 생성됩니다.\n  </p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioWorkletProcessor</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"매개변수","title":"매개변수","isH3":true,"content":"<dl>\n  <dt id=\"options\"><code>options</code></dt>\n  <dd>\n    <p><a href=\"/ko/docs/Web/API/AudioWorkletNode/AudioWorkletNode\" title=\"AudioWorkletNode constructor\"><code>AudioWorkletNode constructor</code></a>에 <em>options</em> 매개변수로서 전달되고 <a href=\"/ko/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\">structured clone algorithm</a>에 통과되는 객체. 사용 가능한 속성들은 다음과 같습니다:</p><!-- 명세는 이 객체를 다음으로 나타냅니다: AudioWorkletNodeOptions -->\n    <dl>\n      <dt id=\"numberofinputs\"><code>numberOfInputs</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p><a href=\"/ko/docs/Web/API/AudioNode/numberOfInputs\" title=\"numberOfInputs\"><code>numberOfInputs</code></a> 속성을 초기화할 값. 기본 값은 1입니다.</p>\n      </dd>\n      <dt id=\"numberofoutputs\"><code>numberOfOutputs</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p><a href=\"/ko/docs/Web/API/AudioNode/numberOfOutputs\" title=\"numberOfOutputs\"><code>numberOfOutputs</code></a> 속성을 초기화할 값. 기본 값은 1입니다.</p>\n      </dd>\n      <dt id=\"outputchannelcount\"><code>outputChannelCount</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>각 출력에 대한 채널의 수를 정의하는 <strong>배열</strong>. 예를 들자면, <em>outputChannelCount: [n, m]</em> 은 첫번째 출력의 채널의 수를 <em>n</em> 으로, 두번째 출력을 <em>m</em> 으로 명시합니다. 배열의 길이는 반드시 <code>numberOfOutputs</code> 와 일치해야 합니다.</p>\n      </dd>\n      <dt id=\"parameterdata\"><code>parameterData</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p><code>key</code> 가 사용자 정의 파라미터의 이름이고 <code>value</code> 가 이것의 초기 값인 채로, (이 노드의 <a href=\"/ko/docs/Web/API/AudioWorkletNode/parameters\" title=\"parameters\"><code>parameters</code></a> 속성에 있는) 이 노드의 사용자 정의 <a href=\"/ko/docs/Web/API/AudioParam\"><code>AudioParam</code></a>의 초기 값들을 포함하는 객체.</p>\n      </dd>\n      <dt id=\"processoroptions\"><code>processorOptions</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>근본적인 <a href=\"/ko/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a>의 사용자 정의 초기화에 사용될 수 있는 모든 추가적인 데이터</p>\n      </dd>\n    </dl>\n    <p>처음 두 개의 속성에 대해 기본 값이 있어서, <a href=\"/ko/docs/Web/API/AudioWorkletNode/AudioWorkletNode\" title=\"AudioWorkletNode constructor\"><code>AudioWorkletNode constructor</code></a>에 전달되는 <em>options</em> 객체가 없을지라도, 노드에 의해 <code>AudioWorkletProcessor</code> 생성자에 전달된 <em>options</em> 객체는 존재할 것이고 최소한 <code>numberOfInputs</code> 과 <code>numberOfOutputs</code> 을 가질 것이라는 데 주목하세요.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"반환_값","title":"반환 값","isH3":true,"content":"<p>새롭게 생성된 <a href=\"/ko/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a> 인스턴스.</p>"}},{"type":"prose","value":{"id":"예제","title":"예제","isH3":false,"content":"<p>이 예제에서 우리는 <a href=\"/ko/docs/Web/API/AudioWorkletNode/AudioWorkletNode\" title=\"AudioWorkletNode constructor\"><code>AudioWorkletNode constructor</code></a>에 사용자 정의 옵션들을 전달하고 어떻게 그것들의 <a href=\"/ko/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\">structured\nclone</a>이 우리의 <code>AudioWorkletProcessor</code> 생성자에 전달되는지 관찰합니다.</p>\n<p>우선, 우리는 사용자 정의 <a href=\"/ko/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a>를 정의하고 등록할 필요가 있습니다. 이 작업은 별도의 파일에서 이루어져야 한다는 것에 주의하세요.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// test-processor.js</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TestProcessor</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AudioWorkletProcessor</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>numberOfInputs<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>processorOptions<span class=\"token punctuation\">.</span>someUsefulVariable<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">process</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">inputs<span class=\"token punctuation\">,</span> outputs<span class=\"token punctuation\">,</span> parameters</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">registerProcessor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test-processor'</span><span class=\"token punctuation\">,</span> TestProcessor<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>다음으로, 메인 스크립트 파일에서 우리는 프로세서를 로드하고, <code>AudioWorkletNode</code> 에 프로세서의 이름과 <em>options</em> 객체를 전달하며 <code>AudioWorkletNode</code> 의 인스턴스를 생성합니다.</p>\n<p><em>options</em> 객체에서 우리는 <code>someUsefulVariable</code> 키 아래에서 <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Map</code></a> 인스턴스와 함께 <code>processorOptions</code> 를 전달합니다. 우리는 <code>numberOfInputs</code> 을 전달하지 않았고 어떻게 이것이 기본 값을 얻게 되는지 관찰해 봅시다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> audioContext <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">await</span> audioContext<span class=\"token punctuation\">.</span>audioWorklet<span class=\"token punctuation\">.</span><span class=\"token function\">addModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test-processor.js'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> testNode <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioWorkletNode</span><span class=\"token punctuation\">(</span>audioContext<span class=\"token punctuation\">,</span> <span class=\"token string\">'test-processor'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">processorOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">someUsefulVariable</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>콘솔 출력은 다음과 같을 것입니다:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span> <span class=\"token comment\">// AudioWorkletNode options.numberOfInputs가 기본 값으로 설정됨</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token function\">Map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">2</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string\">\"two\"</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// someUsefulVariable 아래의 복제된 map</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"명세","id":"명세","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-audioworkletprocessor-audioworkletprocessor","title":"Web Audio API"}],"query":"api.AudioWorkletProcessor.AudioWorkletProcessor"}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"query":"api.AudioWorkletProcessor.AudioWorkletProcessor","dataURL":"/ko/docs/Web/API/AudioWorkletProcessor/AudioWorkletProcessor/bcd.json"}},{"type":"prose","value":{"id":"같이_보기","title":"같이 보기","isH3":false,"content":"<ul>\n  <li><a href=\"/ko/docs/Web/API/AudioWorkletNode\" title=\"AudioWorkletNode\"><code>AudioWorkletNode</code></a> 인터페이스</li>\n</ul>"}}],"toc":[{"text":"구문","id":"구문"},{"text":"예제","id":"예제"},{"text":"명세","id":"명세"},{"text":"브라우저 호환성","id":"브라우저_호환성"},{"text":"같이 보기","id":"같이_보기"}],"summary":"AudioWorkletProcessor() 생성자는 AudioWorkletNode의 근본적인 오디오 프로세싱 메커니즘을 나타내는 새로운 AudioWorkletProcessor 객체를 생성합니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"AudioWorkletProcessor()","locale":"en-US","native":"English (US)"}],"source":{"folder":"ko/web/api/audioworkletprocessor/audioworkletprocessor","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/audioworkletprocessor/audioworkletprocessor/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/AudioWorkletProcessor","title":"AudioWorkletProcessor"},{"uri":"/ko/docs/Web/API/AudioWorkletProcessor/AudioWorkletProcessor","title":"AudioWorkletProcessor()"}],"pageTitle":"AudioWorkletProcessor() - Web API | MDN","noIndexing":false}}