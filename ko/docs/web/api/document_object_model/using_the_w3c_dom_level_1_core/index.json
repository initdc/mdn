{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"W3C DOM Level 1 Core 사용하기","mdn_url":"/ko/docs/Web/API/Document_Object_Model/Using_the_W3C_DOM_Level_1_Core","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/ko/docs/Web/API/Document_Object_Model/Introduction\">Introduction to the DOM</a></li><li><a href=\"/ko/docs/Web/API/Document_object_model/Using_the_W3C_DOM_Level_1_Core\">Using the W3C DOM Level 1 Core</a></li><li><a href=\"/ko/docs/Web/API/Document_Object_Model/Traversing_an_HTML_table_with_JavaScript_and_DOM_Interfaces\">Traversing an HTML table with JavaScript and DOM Interfaces</a></li><li><a href=\"/ko/docs/Web/API/Document_object_model/Locating_DOM_elements_using_selectors\">Locating DOM elements using selectors</a></li><li><a href=\"/ko/docs/Web/API/Document_object_model/How_to_create_a_DOM_tree\">How to create a DOM tree</a></li><li><a href=\"/ko/docs/Learn/JavaScript/Building_blocks/Events\">Introduction to events</a></li><li><a href=\"/ko/docs/Web/API/Document_Object_Model/Whitespace\">How whitespace is handled by HTML, CSS, and in the DOM</a></li><li><a href=\"/ko/docs/Web/API/Document_Object_Model/Examples\">Examples of web and XML development using the DOM</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/ko/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/ko/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a href=\"/ko/docs/Web/API/AbstractRange\"><code>AbstractRange</code></a></li><li><a href=\"/ko/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/ko/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/ko/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/ko/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/ko/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/ko/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/ko/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/ko/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/ko/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/ko/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/ko/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/ko/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/ko/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a href=\"/ko/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></li><li><a href=\"/ko/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/ko/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/ko/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/ko/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/ko/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/ko/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/ko/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/ko/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/ko/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/ko/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/ko/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/ko/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a href=\"/ko/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></li><li><a href=\"/ko/docs/Web/API/Range\"><code>Range</code></a></li><li><a href=\"/ko/docs/Web/API/StaticRange\"><code>StaticRange</code></a></li><li><a href=\"/ko/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/ko/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/ko/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/ko/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/ko/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/ko/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The W3C's DOM Level 1 Core 는 documents의 콘텐츠 트리를 변경하기 위한 강력한 객체형 모델입니다. 웹 스크립팅을 위한 초석이기도 한 이 모델은 Mozilla Firefox and Microsoft Internet Explorer를 포함한 주요 브라우저에서 지원합니다.</p>"}},{"type":"prose","value":{"id":"what_is_a_content_tree","title":"What is a content tree?","isH3":false,"content":"<p>많은 HTML 웹 페이지 저자(이하 개발자)는 HTML를 - 태그와 글자로 버무려진 - 평평한 무언가라고 생각할 수 있습니다. 하지만 HTML은, 그 이상의 의미를 가지고 있습니다. 모든 HTML 문서 (SGML document or XML document 또한) 트리 구조를 가지고 있습니다. 예를 들면 아래의 문서와 도면의 구조는 굉장히 유사합니다. (완전히 같지는 않습니다! <a href=\"/en-US/docs/Web/API/Document_Object_Model/Whitespace\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">whitespace in the DOM (en-US)</a> 문서를 참조하세요.)</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>My Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>Header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Paragraph<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>\n  <img src=\"/@api/deki/files/415/=Using_the_W3C_DOM_Level_1_Core-doctree.jpg\" alt=\"image:Using_the_W3C_DOM_Level_1_Core-doctree.jpg\" loading=\"lazy\">\n</p>\n<p>모질라에서 어떤 HTML 문서를 파싱할 때, 컨텐츠 트리를 만들고 이를 HTML 보여줄 때 사용합니다.</p>\n<p>DOM Level 1 Core에 대해서 설명하기 위한 용어에 대한 설명입니다. 위 도면에서 나온 모든 박스는 트리의 노드입니다. 한 노드 위의 선은 노드 간의 부모 - 자식 관계를 설명합니다. 상위 노드가 부모 노드이고, 하위 노드는 자식 노드입니다. 두 자식 노드를 같은 부모 노드를 가지고 있기 때문에 형제자매 노드라고 부를 수 있습니다. 비슷하게, ancestors와 descendants라는 용어를 사용할 수도 있습니다.</p>"}},{"type":"prose","value":{"id":"what_does_the_dom_level_1_core_let_me_do","title":"What does the DOM Level 1 Core let me do?","isH3":false,"content":"<p>The W3C DOM Level 1은 컨텐츠 트리를 웹 페이지 <em>개발자가 원하는 어떤 방식으로든</em> 바꿀 수 있게 합니다. 백지 상태에서 HTML 문서를 제작할 수 있을 만큼 강력합니다. 또한 스크립트 언어를 통해 언제 어디서든 HTML 문서를 개발자가 조작할 수 있도록 합니다. 자바스크립트를 통해서 개발자는 동적으로 DOM을 가장 쉽게 변경할 수 있습니다. 자바스크립트는 전역 객체의 <code>document</code> 객체를 통해 오래된 브라우저가 접근했던 그 방식대로, HTML 문서에 접근 가능합니다, 이 <code>document</code> 객체는 the W3C's DOM Level 1 spec의 <a href=\"https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#i-Document\" class=\"external\" rel=\" noopener\">Document interface</a> 가 적용되어 있습니다.</p>"}},{"type":"prose","value":{"id":"a_simple_example","title":"A simple example","isH3":false,"content":"<p>개발자가 상단의 HTML 문서에서 header의 내용을 바꾸고, 한 문단(Paragraph) 대신 두 문단으로 적용하고 싶다면, 아래와 같은 스크립트를 작성할 수 있습니다.</p>"}},{"type":"prose","value":{"id":"html_content","title":"HTML Content","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Change this document.<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>Header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Paragraph<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript_content","title":"JavaScript Content","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  <span class=\"token keyword\">function</span> <span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// document.getElementsByTagName(\"H2\") 는 &lt;h2&gt; 엘리먼트의</span>\n    <span class=\"token comment\">// NodeList를 반환(return)합니다. 0부터 시작합니다.</span>\n\n    <span class=\"token keyword\">var</span> header <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"H2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">item</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 헤더의 첫번째 자식 노드는 Text 노드입니다.</span>\n    header<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> <span class=\"token string\">\"A dynamic document\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 이제 헤더는 \"A dynamic document\"가 되었습니다.</span>\n\n    <span class=\"token keyword\">var</span> para <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"P\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">item</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    para<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> <span class=\"token string\">\"This is the first paragraph.\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 두번째 문단을 만들기 위한 새로운 Text 노드를 만들었습니다.</span>\n    <span class=\"token keyword\">var</span> newText <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is the second paragraph.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 두번째 문단을 만들기 위한 새로운 p 엘리먼트를 만들었습니다.</span>\n    <span class=\"token keyword\">var</span> newElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"P\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 새로운 p 엘리먼트에 텍스트를 넣어 문단을 만듭니다.</span>\n    newElement<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>newText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 생성한 문단을 HTML 문서 마지막에 넣기 위해</span>\n    <span class=\"token comment\">// (para의 부모인) HTML BODY에 append합니다.</span>\n    para<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>newElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"A simple example sample\" id=\"frame_a_simple_example\" width=\"800\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ko/docs/Web/API/Document_Object_Model/Using_the_W3C_DOM_Level_1_Core/_sample_.a_simple_example.html\" loading=\"lazy\"></iframe>\n<p><a href=\"/@api/deki/files/2866/=example.html\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">여기</a>에서 완성된 예시를 확인하실 수 있습니다.</p>"}},{"type":"prose","value":{"id":"how_can_i_learn_more","title":"How can I learn more?","isH3":false,"content":"<p>이제 DOM의 기본적인 개념에 대한 설명이 끝났습니다. <a href=\"/en-US/docs/Web/API/Document_Object_Model/Traversing_an_HTML_table_with_JavaScript_and_DOM_Interfaces\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOM Level 1 fundamental methods (en-US)</a> 에 대해서 궁금하시다면, 더 자세히 공부하실 수 있습니다.</p>\n<p>더욱 정확하고 엄밀한 설명은 W3C <a href=\"https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html\" class=\"external\" rel=\" noopener\">DOM Level 1 Core specification</a> 에서 확인하실 수 있습니다. 개발자에게 정보는 DOM 객체에 대한 설명과, 객체의 특성과 메소드에 대한 설명이 특히 유용합니다. <a href=\"/ko/docs/Web/API/Document_Object_Model\">MDN의 다른 DOM 관련 문서</a>도 참고 부탁 드립니다.</p>\n<p><strong>Original Document Information</strong></p>\n<ul>\n  <li>Author(s): L. David Baron &lt;dbaron at dbaron dot org&gt;</li>\n  <li>Copyright Information: © 1998-2005 by individual mozilla.org contributors; content available under a <a href=\"https://www.mozilla.org/foundation/licensing/website-content.html\" class=\"external\" rel=\" noopener\">Creative Commons license</a></li>\n</ul>"}}],"toc":[{"text":"What is a content tree?","id":"what_is_a_content_tree"},{"text":"What does the DOM Level 1 Core let me do?","id":"what_does_the_dom_level_1_core_let_me_do"},{"text":"A simple example","id":"a_simple_example"},{"text":"How can I learn more?","id":"how_can_i_learn_more"}],"summary":"The W3C's DOM Level 1 Core 는 documents의 콘텐츠 트리를 변경하기 위한 강력한 객체형 모델입니다. 웹 스크립팅을 위한 초석이기도 한 이 모델은 Mozilla Firefox and Microsoft Internet Explorer를 포함한 주요 브라우저에서 지원합니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using the W3C DOM Level 1 Core","locale":"en-US","native":"English (US)"},{"title":"Using the W3C DOM Level 1 Core","locale":"es","native":"Español"},{"title":"Utilisation du DOM Level 1 Core du W3C","locale":"fr","native":"Français"},{"title":"W3C DOM Level 1 Core の使用","locale":"ja","native":"日本語"},{"title":"使用 W3C DOM Level 1 核心","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/web/api/document_object_model/using_the_w3c_dom_level_1_core","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/document_object_model/using_the_w3c_dom_level_1_core/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/Document_Object_Model","title":"문서 객체 모델(DOM)"},{"uri":"/ko/docs/Web/API/Document_Object_Model/Using_the_W3C_DOM_Level_1_Core","title":"W3C DOM Level 1 Core 사용하기"}],"pageTitle":"W3C DOM Level 1 Core 사용하기 - Web API | MDN","noIndexing":false}}