{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"EventTarget.removeEventListener()","mdn_url":"/ko/docs/Web/API/EventTarget/removeEventListener","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/ko/docs/Web/API/EventTarget\"><code>EventTarget</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/ko/docs/Web/API/EventTarget/EventTarget\"><code>EventTarget()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/ko/docs/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a></li><li><a href=\"/ko/docs/Web/API/EventTarget/dispatchEvent\"><code>dispatchEvent()</code></a></li><li><em><code>removeEventListener()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for DOM</summary><ol><li><a href=\"/ko/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/ko/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a href=\"/ko/docs/Web/API/AbstractRange\"><code>AbstractRange</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Attr\"><code>Attr</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CDATASection\"><code>CDATASection</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/ko/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/ko/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMError\"><code>DOMError</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMPoint\"><code>DOMPoint</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/ko/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/ko/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/ko/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/ko/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/ko/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/ko/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/ko/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/Node\"><code>Node</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/Range\"><code>Range</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/Text\"><code>Text</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextEncoder\"><code>TextEncoder</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ko/docs/Web/API/EventTarget\"><code>EventTarget</code></a> 인터페이스의 <strong><code>EventTarget.removeEventListener()</code></strong> 메서드는 <a href=\"/ko/docs/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener()</code></a>로 이벤트 대상에 등록한 수신기를 제거합니다. 제거 대상 수신기의 식별은 이벤트 유형, 수신기 함수 참조, 그리고 식별에 관련된 다양한 옵션을 사용해 이뤄집니다. <a href=\"#%EC%A0%9C%EA%B1%B0%ED%95%A0_%EC%9D%B4%EB%B2%A4%ED%8A%B8_%EC%88%98%EC%8B%A0%EA%B8%B0%EC%9D%98_%EC%8B%9D%EB%B3%84\">제거할 이벤트 수신기의 식별</a>을 참고하세요.</p>\n<p><code>removeEventListener()</code>를 호출할 때, <code>EventTarget</code>에 등록된 <a href=\"/ko/docs/Web/API/EventTarget/addEventListener#%EC%9D%B4%EB%B2%A4%ED%8A%B8_%EC%88%98%EC%8B%A0%EA%B8%B0_%EC%BD%9C%EB%B0%B1\">이벤트 수신기</a> 중 어느 것에도 일치하지 않는 매개변수를 사용하면 아무 효과도 나타나지 않습니다.</p>\n<p><a href=\"/ko/docs/Web/API/EventTarget\"><code>EventTarget</code></a>의 어느 수신기 중 하나가 이벤트를 처리하는 중에 다른 수신기를 제거할 경우, 제거된 <a href=\"/ko/docs/Web/API/EventTarget/addEventListener#%EC%9D%B4%EB%B2%A4%ED%8A%B8_%EC%88%98%EC%8B%A0%EA%B8%B0_%EC%BD%9C%EB%B0%B1\">이벤트 수신기</a>는 현재 이벤트에 대해 발동하지 않습니다. 그러나 다시 부착할 수는 있습니다.</p>\n<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>경고:</strong> 같은 수신기를 다른 캡처 플래그 값으로 두 번, 즉 한 번은 <code>capture</code> 플래그를 지정하고 한 번은 지정하지 않은 채 부착하는 경우 각각 따로따로 제거해야 합니다. 캡처 플래그를 지정한 수신기의 제거는 비 캡처 수신기에 영향을 주지 않고, 그 반대도 마찬가지입니다.</p>\n</div>\n<p><a href=\"/ko/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>에 <a href=\"/ko/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a>을 지정한 후, 나중에 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbortSignal/abort\"><code>abort()</code> <small>(en-US)</small></a>를 호출해서 수신기를 제거하는 방법도 있습니다.</p>"}},{"type":"prose","value":{"id":"구문","title":"구문","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> listener<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> listener<span class=\"token punctuation\">,</span> useCapture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"매개변수","title":"매개변수","isH3":true,"content":"<dl>\n  <dt id=\"type\"><code>type</code></dt>\n  <dd>\n    <p>이벤트 수신기를 제거할 이벤트 유형입니다.</p>\n  </dd>\n  <dt id=\"listener\"><code>listener</code></dt>\n  <dd>\n    <p>이벤트 대상에서 제거할 수신기 <a href=\"/ko/docs/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> 함수입니다.</p>\n  </dd>\n  <dt id=\"options\"><code>options</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>제거할 이벤트 수신기의 특징을 나타내는 옵션 객체입니다.</p>\n    <p>가능한 옵션은 다음과 같습니다.</p>\n    <ul>\n      <li><code>capture</code>: 제거할 <a href=\"/ko/docs/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a>가 캡처링 수신기로 등록됐는지에 대한 여부를 나타내는 불리언 값입니다. 기본 값은 <code>false</code>입니다.</li>\n    </ul>\n  </dd>\n  <dt id=\"usecapture\"><code>useCapture</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>제거할 <a href=\"/ko/docs/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a>가 캡처링 수신기로 등록됐는지에 대한 여부를 나타내는 불리언 값입니다. 기본 값은 <code>false</code>입니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"반환_값","title":"반환 값.","isH3":true,"content":"<p>없음.</p>"}},{"type":"prose","value":{"id":"제거할_이벤트_수신기의_식별","title":"제거할 이벤트 수신기의 식별","isH3":true,"content":"<p><a href=\"/ko/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>로 이벤트 수신기를 추가했다면, 수신기를 제거해야 할 때가 오기도 합니다. 당연히 추가할 때 지정한 것과 같은 <code>type</code> 및 <code>listener</code>를 <code>removeEventListener()</code>의 매개변수로 지정해야 하겠지만, <code>options</code>나 <code>useCapture</code> 매개변수는 어떻게 해야 할까요?</p>\n<p><code>addEventListener()</code>는 옵션이 다르다면 이벤트 유형 하나에 같은 수신기를 여러 번 부착합니다. 그러나 <code>removeEventListener()</code>가 고려하는 옵션은 <code>capture</code>/<code>useCapture</code> 플래그 단 하나입니다. 따라서 <code>capture</code>/<code>useCapture</code> 값은 일치해야 하지만, 나머지 옵션은 일치하지 않아도 됩니다.</p>\n<p>다음의 <code>addEventListener()</code> 호출을 예시로 보겠습니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>이제 아래의 두 <code>removeEventListener()</code> 호출을 살펴보세요.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 실패</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 성공</span>\n</code></pre></div>\n<p>첫 번째 호출은 <code>useCapture</code>가 일치하지 않았기 때문에 실패하고, 두 번째 호출은 일치하기 때문에 성공합니다.</p>\n<p>이제 다음 코드를 확인하세요.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">passive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>위 코드에서는 <code>passive</code>를 <code>true</code>로 지정한 <code>option</code> 객체를 지정했습니다. 다른 옵션은 기본 값인 <code>false</code>가 됩니다.</p>\n<p>아래의 <code>removeEventListener()</code> 호출 각각을 살펴보세요. <code>capture</code>나 <code>useCapture</code>가 <code>true</code>인 호출은 실패하고, 나머지는 모두 성공합니다.</p>\n<p><code>removeEventListener()</code>에 영향을 주는 옵션은 <code>capture</code> 뿐입니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">passive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 성공</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">capture</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 성공</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">capture</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 실패</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">passive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 성공</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 성공</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// 실패</span>\n</code></pre></div>\n<p>다만 일부 브라우저 버전에서는 이 동작이 일관적이지 않으므로, 어쩔 수 없는 경우가 아니라면 <code>addEventListener()</code>에 지정한 옵션을 그대로 <code>removeEventListener()</code>에 제공하는 편이 낫습니다.</p>"}},{"type":"prose","value":{"id":"예제","title":"예제","isH3":false,"content":"<p>이 예제는 <code>click</code> 이벤트 수신기를 제거하는 <code>mouseover</code> 이벤트 수신기를 보입니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> clickTarget <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click-target'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> mouseOverTarget <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouse-over-target'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> toggle <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">makeBackgroundYellow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>toggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  toggle <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>toggle<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nclickTarget<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>\n  makeBackgroundYellow<span class=\"token punctuation\">,</span>\n  <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmouseOverTarget<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseover'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  clickTarget<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>\n    makeBackgroundYellow<span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"명세","id":"명세","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#ref-for-dom-eventtarget-removeeventlistener②","title":"DOM Standard"}],"query":"api.EventTarget.removeEventListener"}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"query":"api.EventTarget.removeEventListener","dataURL":"/ko/docs/Web/API/EventTarget/removeEventListener/bcd.json"}},{"type":"prose","value":{"id":"같이_보기","title":"같이 보기","isH3":false,"content":"<ul>\n  <li><a href=\"/ko/docs/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener()</code></a></li>\n</ul>"}}],"toc":[{"text":"구문","id":"구문"},{"text":"예제","id":"예제"},{"text":"명세","id":"명세"},{"text":"브라우저 호환성","id":"브라우저_호환성"},{"text":"같이 보기","id":"같이_보기"}],"summary":"EventTarget 인터페이스의 EventTarget.removeEventListener() 메서드는 EventTarget.addEventListener()로 이벤트 대상에 등록한 수신기를 제거합니다. 제거 대상 수신기의 식별은 이벤트 유형, 수신기 함수 참조, 그리고 식별에 관련된 다양한 옵션을 사용해 이뤄집니다. 제거할 이벤트 수신기의 식별을 참고하세요.","popularity":0.0008,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"EventTarget.removeEventListener()","locale":"en-US","native":"English (US)"},{"title":"EventTarget.removeEventListener()","locale":"es","native":"Español"},{"title":"element.removeEventListener","locale":"fr","native":"Français"},{"title":"EventTarget.removeEventListener()","locale":"ja","native":"日本語"},{"title":"EventTarget.removeEventListener()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Метод EventTarget.removeEventListener()","locale":"ru","native":"Русский"},{"title":"EventTarget.removeEventListener()","locale":"zh-CN","native":"中文 (简体)"},{"title":"EventTarget.removeEventListener()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ko/web/api/eventtarget/removeeventlistener","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/eventtarget/removeeventlistener/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/EventTarget","title":"EventTarget"},{"uri":"/ko/docs/Web/API/EventTarget/removeEventListener","title":"EventTarget.removeEventListener()"}],"pageTitle":"EventTarget.removeEventListener() - Web API | MDN","noIndexing":false}}