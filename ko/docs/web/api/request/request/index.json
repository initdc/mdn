{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Request()","mdn_url":"/ko/docs/Web/API/Request/Request","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Request\"><code>Request</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><em><code>Request()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/body\"><code>body</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/bodyUsed\"><code>bodyUsed</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/cache\"><code>cache</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/Request/credentials\"><code>credentials</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/destination\"><code>destination</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/headers\"><code>headers</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/integrity\"><code>integrity</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/method\"><code>method</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/mode\"><code>mode</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/priority\"><code>priority</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/redirect\"><code>redirect</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/referrer\"><code>referrer</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/referrerPolicy\"><code>referrerPolicy</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/url\"><code>url</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/arrayBuffer\"><code>arrayBuffer()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/blob\"><code>blob()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/clone\"><code>clone()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/formData\"><code>formData()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/json\"><code>json()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/text\"><code>text()</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Request()</code></strong> 생성자는 새로운 <a href=\"/ko/docs/Web/API/Request\"><code>Request</code></a> 객체를 생성하도록 도와줍니다.</p>"}},{"type":"prose","value":{"id":"문법","title":"문법","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> init<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"파라미터","title":"파라미터","isH3":true,"content":"<dl>\n  <dt id=\"input\"><em>input</em></dt>\n  <dd>\n    <p>취득한 리소스를 정의합니다. 이하의 값을 파라미터로 넣을 수 있습니다.* 취득하고 싶은 리소스의 URL을 담은 {domxref(\"USVString\")}}.</p>\n    <ul>\n      <li>Request 객체의 클론 생성을 위해 입력할 <a href=\"/ko/docs/Web/API/Request\"><code>Request</code></a> 객체. 기존의 request 객체로 새로운 동일한 객체를 생성할때, 다음과 같은 보안에 관련된 예외가 검출될 수 있습니다.</li>\n    </ul>\n  </dd>\n  <dt id=\"init\"><em>init</em> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>리퀘스트를 적용할 커스텀 설정을 포함한 옵션오브젝트. 설정 가능한 옵션은 다음과 같습니다.* <code>method</code>: <code>GET</code>, <code>POST</code>과 같은 리퀘스트 메소드.</p>\n    <ul>\n      <li><code>headers</code>: <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code> <small>(en-US)</small></a>객체 또는 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>ByteString</code> <small>(en-US)</small></a>를 포함하는 리퀘스트에 추가하는 헤더.</li>\n      <li><code>body</code>: 리퀘스트에 추가할 바디. <a href=\"/ko/docs/Web/API/Blob\"><code>Blob</code></a>이나, <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>BufferSource</code></a>, <a href=\"/ko/docs/Web/API/FormData\"><code>FormData</code></a>, <a href=\"/ko/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>, <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>USVString</code></a>, 또한 <a href=\"/ko/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> 객체를 사용할 수 있습니다.Request객체가 GET이나 HEAD메서드를 사용하는 경우, 바디를 포함하지 않습니다.</li>\n      <li><code>mode</code>: Request에서 사용할 모드. <code>cors</code>, <code>no-cors</code>, <code>same-origin</code>, 또한 <code>navigate</code>이 사용 가능하며, 기본값은 <code>cors</code>입니다. 47버전 이전의 크롬에서는 기본값이 <code>no-cors</code> 이며 크롬 47버전 이후로 <code>same-origin</code>가 사용 가능하게 되었습니다.</li>\n      <li><code>credentials</code>: Request에서 사용할 자격 증명서(Request Credential)입니다.<code>omit</code>, <code>same-origin</code>, 또는 <code>include</code>를 사용할 수 있습니다.기본값은 <code>omit</code>.이며, 크롬 47 이전의 기본값은 <code>same-origin</code> 입니다. 크롬 47 이후로부터<code>include</code>가 사용 가능하게 되었습니다.</li>\n      <li><code>cache</code>: Request에서 사용할 <a href=\"/en-US/docs/Web/API/Request/cache\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">cache mode (en-US)</a> 입니다.</li>\n      <li><code>redirect</code>: Request에서 사용할 리다이렉트 모드입니다. <code>follow</code>, <code>error</code>, <code>manual</code>.이 사용 가능합니다. 크롬 47 이전 버전에서의 기본값은 <code>manual</code> 이며, 47 이후로부터 <code>follow</code> 가 사용 가능하게 되었습니다.</li>\n      <li><code>referrer</code>: <code>no-referrer</code>나 <code>client</code>, URL을 지정하는 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>USVString</code></a>입니다.. 기본값은 <code>client</code>입니다.</li>\n      <li><code>integrity</code>: <code>sha256-BpfBw7ivV8q2jLiT13fxDYAe2tJllusRSZ273h2nFSE=</code>같은 Request의 하위 리소스 무결성(<a href=\"/en-US/docs/Web/Security/Subresource_Integrity\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">subresource integrity (en-US)</a>) 값을 포함합니다.</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"에러","title":"에러","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th><strong>타입</strong></th>\n      <th><strong>내용</strong></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>TypeError</code></td>\n      <td><a href=\"/en-US/docs/Mozilla/Firefox/Releases/43\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Firefox 43 (en-US)</a>부터, <code>http://user:password@example.com</code> 와 같인 credential을 포함하는 경우 <code>Request()</code> 는 타입 에러를 반환합니다.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"예시","title":"예시","isH3":false,"content":"<p><a href=\"https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-request\" class=\"external\" rel=\" noopener\">Fetch Request example</a>에서는, 생성자를 사용해 새로운 Requst 객체를 생성하고 나서 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/fetch\"><code>GlobalFetch.fetch</code> <small>(en-US)</small></a>인터페이스를 이용해 Request로 읽어온 결과를 취득하고 있습니다. 특정 사진을 가져와서 사용할 수 있게 만들기 위해서 MIME타입을 설정하고, Response의 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/blob\"><code>Body.blob</code> <small>(en-US)</small></a>를 반환합니다. 그 후로 오브젝트 URL을 생성해 <a href=\"/ko/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>요소를 표시하도록 합니다. <a href=\"https://mdn.github.io/fetch-examples/fetch-request/\" class=\"external\" rel=\" noopener\">Fetch Request live</a>를 참고해주시기 바랍니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> objectURL <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  myImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> objectURL<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><a href=\"https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-request-with-init\" class=\"external\" rel=\" noopener\">Fetch Request with init example</a>에서는 fetch()를 실행할 때 마다, init객체를 전달하는 것 이외에는 거의 동일한 기능을 수행합니다. <a href=\"https://mdn.github.io/fetch-examples/fetch-request-with-init/\" class=\"external\" rel=\" noopener\">Fetch Request init live</a> 를 참조해주시기 바랍니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> myHeaders <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyHeaders<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'image/jpeg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> myInit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> myHeaders<span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'cors'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">cache</span><span class=\"token operator\">:</span> <span class=\"token string\">'default'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">,</span>myInit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>동일한 효과를 얻기 위해 fetch 호출자에 init객체를 전달하는 것에 주목해주시기 바랍니다. 예를 들면...</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">,</span>myInit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Request 객체ㅡ이 클론을 생성하기 위해서 <code>Request()</code> 생성자에 <a href=\"/ko/docs/Web/API/Request\"><code>Request</code></a> 를 전달하고 있습니다.（이것은 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/clone\"><code>clone()</code> <small>(en-US)</small></a> 메서드의 호출자와 같습니다.）</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> copy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><strong>노트</strong>：마지막의 예시는 <a href=\"/en-US/docs/Web/API/Service_Worker_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">ServiceWorkers (en-US)</a>안에서만 사용 가능합니다。</p>"}},{"type":"prose","value":{"id":"사용","title":"사용","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>사용</th>\n      <th>상태</th>\n      <th>꼬릿말</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://fetch.spec.whatwg.org/#dom-request\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Fetch<br><small lang=\"ko\">The definition of 'Request()' in that specification.</small></a></td>\n      <td><span class=\"spec-living\">Living Standard</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"브라우저 지원현황","id":"브라우저_지원현황","isH3":false,"query":"api.Request.Request","dataURL":"/ko/docs/Web/API/Request/Request/bcd.json"}},{"type":"prose","value":{"id":"관련항목","title":"관련항목","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">ServiceWorker API (en-US)</a></li>\n  <li><a href=\"/ko/docs/Web/HTTP/CORS\">HTTP access control (CORS)</a></li>\n  <li><a href=\"/ko/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"문법","id":"문법"},{"text":"에러","id":"에러"},{"text":"예시","id":"예시"},{"text":"사용","id":"사용"},{"text":"브라우저 지원현황","id":"브라우저_지원현황"},{"text":"관련항목","id":"관련항목"}],"summary":"Request() 생성자는 새로운 Request 객체를 생성하도록 도와줍니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Request()","locale":"en-US","native":"English (US)"},{"title":"Request()","locale":"fr","native":"Français"},{"title":"Request()","locale":"ja","native":"日本語"},{"title":"Request()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Request()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/web/api/request/request","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/request/request/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/Request","title":"Request"},{"uri":"/ko/docs/Web/API/Request/Request","title":"Request()"}],"pageTitle":"Request() - Web API | MDN","noIndexing":false}}