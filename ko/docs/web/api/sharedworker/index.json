{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"SharedWorker","mdn_url":"/ko/docs/Web/API/SharedWorker","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Web_Workers_API\">Web Workers API</a></strong></li><li><strong><a href=\"/ko/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker/SharedWorker\"><code>SharedWorker()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker/port\"><code>port</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker/error_event\"><code>SharedWorker: error event</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/ko/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Workers API</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/Worker\"><code>Worker</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerLocation\"><code>WorkerLocation</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>SharedWorker</code>**</strong> **인터페이스는 윈도우 창이나 iframe, 워커등의 다른 브라우징 컨텍스트에서도 접근이 가능한 특정 종류의 워커를 의미합니다. 기존의 다른 종류의 워커들과 다른 전역 스코프를 갖는 인터페이스를 구현합니다. <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code> <small>(en-US)</small></a>.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>참고:</strong> <strong>참고 :</strong> SharedWorker 가 몇개의 다른 브라우징 컨텍스트에서 접근이 가능하면, 그 브라우징 컨텍스트들은 모두 정확히 같은 오리진을 공유해야 합니다. (같은 프로토콜, 호스트, 포트 등)</p>\n</div>"}},{"type":"prose","value":{"id":"생성자","title":"생성자","isH3":false,"content":"<dl>\n  <dt id=\"sharedworker_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker/SharedWorker\"><code>SharedWorker()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>특정 URL에서 스크립트를 실행하는 shared web worker를 생성합니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"속성","title":"속성","isH3":false,"content":"<p><em><a href=\"/ko/docs/Web/API/EventTarget\"><code>EventTarget</code></a></em> 의 속성들을 상속 받습니다. 그리고 <em><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker\"><code>AbstractWorker</code> <small>(en-US)</small></a></em> 의 속성들을 구현할 수 있습니다.</p>\n<dl>\n  <dt id=\"abstractworker.onerror_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker/error_event\"><code>AbstractWorker.onerror</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>워커에서 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ErrorEvent\"><code>ErrorEvent</code> <small>(en-US)</small></a> 타입의 에러가 발생했을 때 호출되는는 <a href=\"/ko/docs/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a></p>\n  </dd>\n  <dt id=\"sharedworker.port_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker/port\"><code>SharedWorker.port</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>shared worker를 제어하거나 통신하기 위해 사용되는 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessagePort\"><code>MessagePort</code> <small>(en-US)</small></a> 객체를 반환</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"메서드","title":"메서드","isH3":false,"content":"<p><em><a href=\"/ko/docs/Web/API/EventTarget\"><code>EventTarget</code></a></em> 의 속성들을 상속 받습니다. 그리고 <em><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker\"><code>AbstractWorker</code> <small>(en-US)</small></a></em> 의 속성들을 구현할 수 있습니다.</p>"}},{"type":"prose","value":{"id":"예제","title":"예제","isH3":false,"content":"<p><a href=\"https://github.com/mdn/simple-shared-worker\" class=\"external\" rel=\" noopener\">Basic shared worker example</a> (<a href=\"https://mdn.github.io/simple-shared-worker/\" class=\"external\" rel=\" noopener\">run shared worker</a>) 를 보시면 2개의 HTML 페이지가 있습니다. 각각 간단한 계산을 위해 자바스크립트를 사용합니다. 각기 다른 스크립트가 계산을 위해 같은 워커 파일을 사용합니다 — 두 개 페이지가 모두 다른 윈도우창에서 실행되더라도 같은 워커에 접근할 수 있습니다.</p>\n<p>아래 코드 스니펫은 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker/SharedWorker\"><code>SharedWorker()</code> <small>(en-US)</small></a> 생성자를 이용해 <code>SharedWorker</code> 객체를 생성합니다. 두 스크립트 모두 아래를 포함합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myWorker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SharedWorker</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"worker.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>두 스크립트는 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker/port\"><code>SharedWorker.port</code> <small>(en-US)</small></a> 속성으로 생성한 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessagePort\"><code>MessagePort</code> <small>(en-US)</small></a> 객체를 통해 워커에 접근할 수 있습니다. <code>addEventListener</code> 를 이용하여 <code>onmessage</code> 가 추가되면, port는 <code>start()</code> 메서드를 이용하여 수동으로 시작할 수 있습니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myWorker<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>포트가 시작되면, 양 스크립트는 워커에 메시지를 보내고 <code>port.postMessage()</code>와 <code>port.onmessage</code> 를 각각 이용하여 메시지를 처리합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>first<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onchange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    myWorker<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>second<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message posted to worker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  second<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onchange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    myWorker<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>second<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message posted to worker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  myWorker<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    result1<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message received from worker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>워커에서 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope/connect_event\"><code>SharedWorkerGlobalScope.onconnect</code> <small>(en-US)</small></a> 핸들러를 이용하여 위에 언급된 포트에 접속할 수 있습니다. 워커에 연관되어 있는 포트는 <code><a href=\"/ko/docs/Web/Reference/Events/connect\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">connect</a></code> 이벤트 포트 속성에 접근할 수 있습니다 — 그리고나서 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessagePort\"><code>MessagePort</code> <small>(en-US)</small></a> <code>start()</code> 메서드로 포트를 시작하고, onmessage 핸들러로 메인쓰레드에서 받은 메시지를 처리합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function-variable function\">onconnect</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> port <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>ports<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    port<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> workerResult <span class=\"token operator\">=</span> <span class=\"token string\">'Result: '</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      port<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>workerResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    port<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Required when using addEventListener. Otherwise called implicitly by onmessage setter.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"명세","id":"명세","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/workers.html#shared-workers-and-the-sharedworker-interface","title":"HTML Standard"}],"query":"api.SharedWorker"}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"query":"api.SharedWorker","dataURL":"/ko/docs/Web/API/SharedWorker/bcd.json"}},{"type":"prose","value":{"id":"같이_보기","title":"같이 보기","isH3":false,"content":"<ul>\n  <li><a href=\"/ko/docs/Web/API/Worker\"><code>Worker</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using web workers (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"생성자","id":"생성자"},{"text":"속성","id":"속성"},{"text":"메서드","id":"메서드"},{"text":"예제","id":"예제"},{"text":"명세","id":"명세"},{"text":"브라우저 호환성","id":"브라우저_호환성"},{"text":"같이 보기","id":"같이_보기"}],"summary":"SharedWorker** **인터페이스는 윈도우 창이나 iframe, 워커등의 다른 브라우징 컨텍스트에서도 접근이 가능한 특정 종류의 워커를 의미합니다. 기존의 다른 종류의 워커들과 다른 전역 스코프를 갖는 인터페이스를 구현합니다. SharedWorkerGlobalScope (en-US).","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"SharedWorker","locale":"en-US","native":"English (US)"},{"title":"SharedWorker","locale":"fr","native":"Français"},{"title":"SharedWorker","locale":"ja","native":"日本語"},{"title":"SharedWorker","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"SharedWorker","locale":"ru","native":"Русский"},{"title":"SharedWorker","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/web/api/sharedworker","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/sharedworker/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/SharedWorker","title":"SharedWorker"}],"pageTitle":"SharedWorker - Web API | MDN","noIndexing":false}}