{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"DOMParser","mdn_url":"/ko/docs/Web/API/DOMParser","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/ko/docs/Web/API/DOMParser\"><code>DOMParser</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMParser/DOMParser\"><code>DOMParser()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMParser/parseFromString\"><code>parseFromString()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for DOM</summary><ol><li><a href=\"/ko/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/ko/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a href=\"/ko/docs/Web/API/AbstractRange\"><code>AbstractRange</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Attr\"><code>Attr</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CDATASection\"><code>CDATASection</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/ko/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/ko/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMError\"><code>DOMError</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMPoint\"><code>DOMPoint</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/ko/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/ko/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/ko/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/ko/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/ko/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/ko/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/ko/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/ko/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/Node\"><code>Node</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/Range\"><code>Range</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/Text\"><code>Text</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextEncoder\"><code>TextEncoder</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>DOMParser</code></strong> 인터페이스는 DOM <a href=\"/ko/docs/Web/API/Document\"><code>Document</code></a> 문서에 맞는 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/XML\">XML <small>(en-US)</small></a> 및 <a href=\"/ko/docs/Glossary/HTML\">HTML</a> 소스 코드를 해석할 수 있는 기반을 제공한다 .</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>참고:</strong> <a href=\"/ko/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> 객체로도 인식 가능한 URL 주소로부터 직접 XML 및 HTML 문서를 해석하여 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLHttpRequest/response\"><code>response</code> <small>(en-US)</small></a> 속성을 통해 <code>Document</code> 객체로 제공한다.</p>\n</div>\n<p>반대로 DOM 구조를 XML 및 HTML 소스 코드로 제공하는 방식은 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLSerializer\"><code>XMLSerializer</code> <small>(en-US)</small></a> 인터페이스를 참고하도록 한다.</p>\n<p>HTML 문서의 경우, <a href=\"/ko/docs/Web/API/Element/innerHTML\"><code>Element.innerHTML</code></a> 속성과 <a href=\"/ko/docs/Web/API/Element/outerHTML\" title=\"outerHTML\"><code>outerHTML</code></a> 속성을 통해 DOM 구조를 새로운 방식으로 변경할 수 있다. 또한 이들 속성을 통해 HTML 구조의 하위에 있는 HTML 구조도 불러올 수 있다.</p>"}},{"type":"prose","value":{"id":"문법","title":"문법","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> domparser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>​​\n</code></pre></div>"}},{"type":"prose","value":{"id":"메소드","title":"메소드","isH3":false,"content":""}},{"type":"prose","value":{"id":"domparser.parsefromstring_en-us","title":"<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMParser/parseFromString\">DOMParser.parseFromString() <small>(en-US)</small></a>","isH3":true,"content":"<h4 id=\"문법_2\">문법</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> doc <span class=\"token operator\">=</span> domparser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">,</span> mimeType<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h4 id=\"반환\">반환</h4>\n<p><strong><a href=\"#argument02\"><code>mimeType</code></a></strong> 인자를 통해 정의한 형식에 따른 <a href=\"/ko/docs/Web/API/Document\"><code>Document</code></a> 또는<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code> <small>(en-US)</small></a> 문서를 반환한다.</p>\n<h4 id=\"인자\">인자</h4>\n<p>이 메소드에는 2개의 인자가 제공되는데, 모두 필수값이다.</p>\n<ul>\n  <li><code>string</code>\n    <ul>\n      <li>: 해석할 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 문자열. 반드시 <a href=\"/ko/docs/Glossary/HTML\">HTML</a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/XML\">xml <small>(en-US)</small></a>, <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\">xhtml+xml</a> 또는 <a href=\"/ko/docs/Glossary/SVG\">svg</a> 문서 형식에 맞아야 한다.</li>\n    </ul>\n  </li>\n  <li><code>mimeType</code>\n    <ul>\n      <li>\n        <table>\n          <thead>\n            <tr>\n              <th>: 아래 표에 정의한 형식을 반환 값으로 제공할 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 문자열.</th>\n              <th><code>mimeType</code></th>\n              <th><code>doc.constructor</code></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><code>text/html</code></td>\n              <td><code><a href=\"/ko/docs/Web/API/Document\"><code>Document</code></a></code></td>\n              <td></td>\n            </tr>\n            <tr>\n              <td><code>text/xml</code></td>\n              <td><code><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code> <small>(en-US)</small></a></code></td>\n              <td></td>\n            </tr>\n            <tr>\n              <td><code>application/xml</code></td>\n              <td><code><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code> <small>(en-US)</small></a></code></td>\n              <td></td>\n            </tr>\n            <tr>\n              <td><code>application/xhtml+xml</code></td>\n              <td><code><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code> <small>(en-US)</small></a></code></td>\n              <td></td>\n            </tr>\n            <tr>\n              <td><code>image/svg+xml</code></td>\n              <td><code><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code> <small>(en-US)</small></a></code></td>\n              <td></td>\n            </tr>\n          </tbody>\n        </table>\n      </li>\n    </ul>\n  </li>\n</ul>","titleAsText":"DOMParser.parseFromString() (en-US)"}},{"type":"prose","value":{"id":"예제","title":"예제","isH3":false,"content":""}},{"type":"prose","value":{"id":"xml_해석","title":"XML 해석","isH3":true,"content":"<p>parser 변수를 통해 새로이 해석할 객체를 만들었다면, 이제 <code>parseFromString()</code> 메소드를 통해 XML 문서를 해석할 수 있다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> parser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> doc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>stringContainingXMLSource<span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/xml\"</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h4 id=\"오류_대응\">오류 대응</h4>\n<p>만약 해석에 실패할 경우, <code>DOMParser</code> 객체는 예외를 발생시키지 않고, 아래와 같은 오류 문서를 반환한다.</p>\n<div class=\"code-example\"><pre class=\"brush: xml notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>parsererror</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.mozilla.org/newlayout/xml/parsererror.xml<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  (영문 오류 내용)\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sourcetext</span><span class=\"token punctuation\">&gt;</span></span>(오류가 발생한 XML 소스 조각)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sourcetext</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>parsererror</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>또한 해석 오류를 <a href=\"/ko/docs/Error_Console\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">오류 콘솔</a>에서도 볼 수 있으며, 여기에 후술할(역주: geckoRelease) 문서 URI도 포함된다</p>"}},{"type":"prose","value":{"id":"svg_및_html_해석","title":"SVG 및 HTML 해석","isH3":true,"content":"<p>The <code>DOMParser</code> 객체는 (Firefox 10.0 / Thunderbird 10.0 / SeaMonkey 2.7) 규격에 맞는 SVG 문서도 해석할 수 있으며,(Firefox 12.0 / Thunderbird 12.0 / SeaMonkey 2.9) 규격에 맞는 HTML 문서를 해석할 수 있다. MIME 형식에 따라 아래와 같이 다른 객체가 반환될 수 있다.</p>\n<ol>\n  <li>IME 형식이 <code>text/xml</code>이면, <code>XMLDocument</code> 객체가 반환된다.</li>\n  <li>MIME 형식이 <code>image/svg+xml</code>이면, <code>SVGDocument</code> 객체가 반환된다.</li>\n  <li>MIME 형식이 <code>text/html</code>이면, <code>HTMLDocument</code> 객체가 반환된다.</li>\n</ol>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> parser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> doc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>stringContainingXMLSource<span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/xml\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Document 객체가 반환되지만, SVGDocument 및 HTMLDocument 객체가 아니다.</span>\n\nparser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndoc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>stringContainingSVGSource<span class=\"token punctuation\">,</span> <span class=\"token string\">\"image/svg+xml\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// SVGDocument 객체가 반환되며, 이 또한 Document 객체이기도 하다.</span>\n\nparser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndoc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>stringContainingHTMLSource<span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// HTMLDocument 객체가 반환되며, 이 또한 Document 객체이기도 하다.</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"domparser_html_확장","title":"DOMParser HTML 확장","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/*\n * DOMParser HTML 확장\n * 2012-09-04\n *\n * By Eli Grey, http://eligrey.com\n * Public domain.\n * 이 구현체에 대한 보증이 없으므로 주의해서 사용할 것.\n */</span>\n\n<span class=\"token comment\">/*! @source https://gist.github.com/1129031 */</span>\n<span class=\"token comment\">/*global document, DOMParser*/</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">DOMParser</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> proto <span class=\"token operator\">=</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span>\n        nativeParse <span class=\"token operator\">=</span> proto<span class=\"token punctuation\">.</span>parseFromString<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Firefox/Opera/IE 에서 지원하지 않는 형식에 오류 발생</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// WebKit returns null on unsupported types</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// text/html parsing is natively supported</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n    proto<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">parseFromString</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">markup<span class=\"token punctuation\">,</span> type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\s*text\\/html\\s*(?:;|$)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span>\n              doc <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>implementation<span class=\"token punctuation\">.</span><span class=\"token function\">createHTMLDocument</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">;</span>\n                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>markup<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;!doctype'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    doc<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> markup<span class=\"token punctuation\">;</span>\n                  <span class=\"token punctuation\">}</span>\n                  <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    doc<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> markup<span class=\"token punctuation\">;</span>\n                  <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> doc<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">nativeParse</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>DOMParser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"규격","title":"규격","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Specification</th>\n      <th>Status</th>\n      <th>Comment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://html.spec.whatwg.org/multipage/#dom-parsing-and-serialization\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">HTML Living Standard<br><small lang=\"ko\">The definition of 'DOM parsing' in that specification.</small></a></td>\n      <td><span class=\"spec-living\">Living Standard</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"query":"api.DOMParser","dataURL":"/ko/docs/Web/API/DOMParser/bcd.json"}},{"type":"prose","value":{"id":"같이_보기","title":"같이 보기","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/Guide/Parsing_and_serializing_XML\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">XML 문서 직렬화와 해석 (en-US)</a></li>\n  <li><a href=\"/ko/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLSerializer\"><code>XMLSerializer</code> <small>(en-US)</small></a></li>\n  <li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a> - <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/JSON\"><code>JSON</code></a> 문서에 대해 같은 역할을 제공한다.</li>\n</ul>"}}],"toc":[{"text":"문법","id":"문법"},{"text":"메소드","id":"메소드"},{"text":"예제","id":"예제"},{"text":"DOMParser HTML 확장","id":"domparser_html_확장"},{"text":"규격","id":"규격"},{"text":"브라우저 호환성","id":"브라우저_호환성"},{"text":"같이 보기","id":"같이_보기"}],"summary":"The DOMParser 인터페이스는 DOM Document 문서에 맞는 XML (en-US) 및 HTML 소스 코드를 해석할 수 있는 기반을 제공한다 .","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"DOMParser","locale":"en-US","native":"English (US)"},{"title":"DOMParser","locale":"es","native":"Español"},{"title":"DOMParser","locale":"fr","native":"Français"},{"title":"DOMParser","locale":"ja","native":"日本語"},{"title":"DOMParser","locale":"ru","native":"Русский"},{"title":"DOMParser","locale":"zh-CN","native":"中文 (简体)"},{"title":"DOMParser","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ko/web/api/domparser","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/domparser/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/DOMParser","title":"DOMParser"}],"pageTitle":"DOMParser - Web API | MDN","noIndexing":false}}