{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ImageCapture","mdn_url":"/ko/docs/Web/API/ImageCapture","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/ImageCapture\"><code>ImageCapture</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ko/docs/Web/API/ImageCapture/ImageCapture\"><code>ImageCapture() constructor</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ko/docs/Web/API/ImageCapture/track\"><code>track</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ko/docs/Web/API/ImageCapture/getPhotoCapabilities\"><code>getPhotoCapabilities()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ko/docs/Web/API/ImageCapture/getPhotoSettings\"><code>getPhotoSettings()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ko/docs/Web/API/ImageCapture/grabFrame\"><code>grabFrame()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ko/docs/Web/API/ImageCapture/takePhoto\"><code>takePhoto()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ko/docs/Web/API/MediaStream_Image_Capture_API\">MediaStream Image Capture API</a>의 <strong><code>ImageCapture</code></strong> 인터페이스는 유효한 <a href=\"/ko/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>이 참조하는 카메라 또는 기타 촬영 장치를 통해 이미지나 사진을 촬영하기 위한 메서드를 제공합니다.</p>"}},{"type":"prose","value":{"id":"생성자","title":"생성자","isH3":false,"content":"<dl>\n  <dt id=\"imagecapture\"><a href=\"/ko/docs/Web/API/ImageCapture/ImageCapture\" title=\"ImageCapture()\"><code>ImageCapture()</code></a></dt>\n  <dd>\n    <p>비디오 스트림을 나타내는 <a href=\"/ko/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>에서 정지 프레임(사진)을 캡처하기 위한 <code>ImageCapture</code> 객체를 반환합니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"속성","title":"속성","isH3":false,"content":"<dl>\n  <dt id=\"imagecapture.track\"><a href=\"/ko/docs/Web/API/ImageCapture/track\"><code>ImageCapture.track</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>생성자에 전달한 <a href=\"/ko/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>의 참조를 반환합니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"메서드","title":"메서드","isH3":false,"content":"<p><code>ImageCapture</code> 인터페이스는 <a href=\"/ko/docs/Web/API/EventTarget\"><code>EventTarget</code></a>의 메서드를 상속하며, 다음 메서드도 포함합니다.</p>\n<dl>\n  <dt id=\"imagecapture.takephoto\"><a href=\"/ko/docs/Web/API/ImageCapture/takePhoto\"><code>ImageCapture.takePhoto()</code></a></dt>\n  <dd>\n    <p><a href=\"/ko/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>의 출처 비디오 캡처 장치를 통해 단일 노출 촬영을 한 후, 그 데이터를 담은 <a href=\"/ko/docs/Web/API/Blob\"><code>Blob</code></a>으로 이행하는 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>를 반환합니다.</p>\n  </dd>\n  <dt id=\"imagecapture.getphotocapabilities\"><a href=\"/ko/docs/Web/API/ImageCapture/getPhotoCapabilities\"><code>ImageCapture.getPhotoCapabilities()</code></a></dt>\n  <dd>\n    <p>가능한 설정 옵션을 담은 <a href=\"/ko/docs/Web/API/ImageCapture/getPhotoCapabilities\"><code>PhotoCapabilities</code></a> 객체로 이행하는 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>를 반환합니다.</p>\n  </dd>\n  <dt id=\"imagecapture.getphotosettings\"><a href=\"/ko/docs/Web/API/ImageCapture/getPhotoSettings\"><code>ImageCapture.getPhotoSettings()</code></a></dt>\n  <dd>\n    <p>현재 사진 설정을 담은 <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>PhotoSettings</code></a> 객체로 이행하는 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>를 반환합니다.</p>\n  </dd>\n  <dt id=\"imagecapture.grabframe\"><a href=\"/ko/docs/Web/API/ImageCapture/grabFrame\"><code>ImageCapture.grabFrame()</code></a></dt>\n  <dd>\n    <p><a href=\"/ko/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>의 라이브 비디오에서 스냅샷을 찍은 후, 성공했으면 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code> <small>(en-US)</small></a>을 반환합니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"예제","title":"예제","isH3":false,"content":"<p>다음 코드는 <a href=\"https://googlechrome.github.io/samples/image-capture/grab-frame-take-photo.html\" class=\"external\" rel=\" noopener\">Chrome의 Grab Frame - Take Photo Sample</a>에서 가져온 것입니다. <code>ImageCapture</code>는 이미지를 캡처할 도구가 필요하므로, 다음 예제는 브라우저 단말기의 미디어 장치(카메라)로 시작합니다.</p>\n<p>이 예제는 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code> <small>(en-US)</small></a>으로부터 추출한 <a href=\"/ko/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>부터 시작합니다. 그 다음엔 해당 트랙을 사용해 <code>takePhoto()</code>와 <code>grabFrame()</code>을 호출할 <code>ImageCapture</code> 객체를 생성합니다. 마침내, 최종 결과를 캔버스 객체에 적용합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> imageCapture<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">onGetUserMediaButtonClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mediaStream</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'video'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> mediaStream<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> track <span class=\"token operator\">=</span> mediaStream<span class=\"token punctuation\">.</span><span class=\"token function\">getVideoTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    imageCapture <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ImageCapture</span><span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">onGrabFrameButtonClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  imageCapture<span class=\"token punctuation\">.</span><span class=\"token function\">grabFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">imageBitmap</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#grabFrameCanvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">drawCanvas</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span> imageBitmap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">onTakePhotoButtonClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  imageCapture<span class=\"token punctuation\">.</span><span class=\"token function\">takePhoto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">blob</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">createImageBitmap</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">imageBitmap</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#takePhotoCanvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">drawCanvas</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span> imageBitmap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* Utils */</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">drawCanvas</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">canvas<span class=\"token punctuation\">,</span> img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token function\">getComputedStyle</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'px'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token function\">getComputedStyle</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'px'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> ratio  <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> img<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> img<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> img<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> ratio<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">-</span> img<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> ratio<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>\n      x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> ratio<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> ratio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'video'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'play'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#grabFrameButton'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#takePhotoButton'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"명세","id":"명세","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/mediacapture-image/#imagecaptureapi","title":"MediaStream Image Capture"}],"query":"api.ImageCapture"}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"query":"api.ImageCapture","dataURL":"/ko/docs/Web/API/ImageCapture/bcd.json"}}],"toc":[{"text":"생성자","id":"생성자"},{"text":"속성","id":"속성"},{"text":"메서드","id":"메서드"},{"text":"예제","id":"예제"},{"text":"명세","id":"명세"},{"text":"브라우저 호환성","id":"브라우저_호환성"}],"summary":"MediaStream Image Capture API의 ImageCapture 인터페이스는 유효한 MediaStreamTrack이 참조하는 카메라 또는 기타 촬영 장치를 통해 이미지나 사진을 촬영하기 위한 메서드를 제공합니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"ImageCapture","locale":"en-US","native":"English (US)"},{"title":"ImageCapture","locale":"pt-BR","native":"Português (do Brasil)"}],"source":{"folder":"ko/web/api/imagecapture","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/imagecapture/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/ImageCapture","title":"ImageCapture"}],"pageTitle":"ImageCapture - Web API | MDN","noIndexing":false}}