{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"AnalyserNode.smoothingTimeConstant","mdn_url":"/ko/docs/Web/API/AnalyserNode/smoothingTimeConstant","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/ko/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/ko/docs/Web/API/AnalyserNode/AnalyserNode\"><code>AnalyserNode()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/ko/docs/Web/API/AnalyserNode/fftSize\"><code>fftSize</code></a></li><li><a href=\"/ko/docs/Web/API/AnalyserNode/frequencyBinCount\"><code>frequencyBinCount</code></a></li><li><a href=\"/ko/docs/Web/API/AnalyserNode/maxDecibels\"><code>maxDecibels</code></a></li><li><a href=\"/ko/docs/Web/API/AnalyserNode/minDecibels\"><code>minDecibels</code></a></li><li><em><code>smoothingTimeConstant</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/ko/docs/Web/API/AnalyserNode/getByteFrequencyData\"><code>getByteFrequencyData()</code></a></li><li><a href=\"/ko/docs/Web/API/AnalyserNode/getByteTimeDomainData\"><code>getByteTimeDomainData()</code></a></li><li><a href=\"/ko/docs/Web/API/AnalyserNode/getFloatFrequencyData\"><code>getFloatFrequencyData()</code></a></li><li><a href=\"/ko/docs/Web/API/AnalyserNode/getFloatTimeDomainData\"><code>getFloatTimeDomainData()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/ko/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/ko/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Audio API</summary><ol><li><a href=\"/ko/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/ko/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/ko/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/ko/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/ko/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ko/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a> 인터페이스의 <strong><code>smoothingTimeConstant</code></strong> 속성은 마지막 분석 프레임의 에버리징(averaging) 상수를 나타내는 double 값입니다. 이것은 기본적으로 현재 버퍼와 <code>AnalyserNode</code>가 처리한 마지막 버퍼 사이의 평균이고, 더욱 매끄러운 시간에 대한 값 변화의 집합을 결과로 낳습니다.</p>"}},{"type":"prose","value":{"id":"구문","title":"구문","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> smoothValue <span class=\"token operator\">=</span> analyserNode<span class=\"token punctuation\">.</span>smoothingTimeConstant<span class=\"token punctuation\">;</span>\nanalyserNode<span class=\"token punctuation\">.</span>smoothingTimeConstant <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"값","title":"값","isH3":true,"content":"<p><code>0</code>에서 <code>1</code>까지의 범위 내의 double (<code>0</code>은 시간 에버리징이 없음을 의미). 기본값은 <code>0.8</code>입니다.</p>\n<p>만약 0이 설정된다면, 완료된 에버리징이 없는 것이지만, 1의 값은 \"값을 계산하는 동안 이전과 현재 버퍼를 많이 겹치기\"를 의미하는데, 이는 근본적으로 <a href=\"/ko/docs/Web/API/AnalyserNode/getFloatFrequencyData\"><code>AnalyserNode.getFloatFrequencyData</code></a>/<a href=\"/ko/docs/Web/API/AnalyserNode/getByteFrequencyData\"><code>AnalyserNode.getByteFrequencyData</code></a> 호출에 걸쳐 변화들을 매끄럽게 합니다.</p>\n<p>기술적인 측면에서, 우리는 <a href=\"https://webaudio.github.io/web-audio-api/#blackman-window\" class=\"external\" rel=\" noopener\">Blackman window</a>를 적용했고 값들을 시간에 대해 매끄럽게 합니다. 기본값은 대부분의 경우에 적합합니다.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>참고:</strong> 만약 범위 0-1 바깥의 값이 설정된다면, <code>INDEX_SIZE_ERR</code> 예외가 발생합니다.</p>\n</div>"}},{"type":"prose","value":{"id":"예제","title":"예제","isH3":false,"content":"<p>다음의 예제는 <code>AnalyserNode</code>를 생성하기 위한 <a href=\"/ko/docs/Web/API/AudioContext\"><code>AudioContext</code></a>와 그리고 나서 반복적으로 주파수 데이터를 수집하고 현재 오디오 입력의 \"winamp 막대그래프 스타일의\" 출력을 그리기 위한 <a href=\"/ko/docs/Web/API/Window/requestAnimationFrame\" title=\"requestAnimationFrame\"><code>requestAnimationFrame</code></a>과 <a href=\"/ko/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a>의 기본 사용을 보여줍니다. 더 완벽한 응용 예제/정보를 보려면 <a href=\"https://mdn.github.io/voice-change-o-matic/\" class=\"external\" rel=\" noopener\">Voice-change-O-matic</a> 데모를 확인하세요 (관련된 코드를 보려면 <a href=\"https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205\" class=\"external\" rel=\" noopener\">app.js 라인 128–205</a>를 참고하세요).</p>\n<p>만약 여러분이 <code>smoothingTimeConstant()</code>이 가진 영향에 대해 궁금하다면, 위의 예제를 복사해서 <code>analyser.smoothingTimeConstant = 0;</code>을 대신 설정해 보세요. 값 변화가 더욱 삐걱거리는 것을 인지하실 것입니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> analyser <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createAnalyser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nanalyser<span class=\"token punctuation\">.</span>minDecibels <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">;</span>\nanalyser<span class=\"token punctuation\">.</span>maxDecibels <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nanalyser<span class=\"token punctuation\">.</span>smoothingTimeConstant <span class=\"token operator\">=</span> <span class=\"token number\">0.85</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token operator\">...</span>\n\nanalyser<span class=\"token punctuation\">.</span>fftSize <span class=\"token operator\">=</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bufferLength <span class=\"token operator\">=</span> analyser<span class=\"token punctuation\">.</span>frequencyBinCount<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bufferLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> dataArray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>bufferLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncanvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">WIDTH</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">HEIGHT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  drawVisual <span class=\"token operator\">=</span> <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  analyser<span class=\"token punctuation\">.</span><span class=\"token function\">getByteFrequencyData</span><span class=\"token punctuation\">(</span>dataArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  canvasCtx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgb(0, 0, 0)'</span><span class=\"token punctuation\">;</span>\n  canvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">WIDTH</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">HEIGHT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> barWidth <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">WIDTH</span> <span class=\"token operator\">/</span> bufferLength<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> barHeight<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> bufferLength<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    barHeight <span class=\"token operator\">=</span> dataArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    canvasCtx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgb('</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>barHeight<span class=\"token operator\">+</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">',50,50)'</span><span class=\"token punctuation\">;</span>\n    canvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span><span class=\"token constant\">HEIGHT</span><span class=\"token operator\">-</span>barHeight<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>barWidth<span class=\"token punctuation\">,</span>barHeight<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    x <span class=\"token operator\">+=</span> barWidth <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"명세","id":"명세","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-analysernode-smoothingtimeconstant","title":"Web Audio API"}],"query":"api.AnalyserNode.smoothingTimeConstant"}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"query":"api.AnalyserNode.smoothingTimeConstant","dataURL":"/ko/docs/Web/API/AnalyserNode/smoothingTimeConstant/bcd.json"}},{"type":"prose","value":{"id":"같이_보기","title":"같이 보기","isH3":false,"content":"<ul>\n  <li><a href=\"/ko/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Web Audio API 사용하기</a></li>\n</ul>"}}],"toc":[{"text":"구문","id":"구문"},{"text":"예제","id":"예제"},{"text":"명세","id":"명세"},{"text":"브라우저 호환성","id":"브라우저_호환성"},{"text":"같이 보기","id":"같이_보기"}],"summary":"AnalyserNode 인터페이스의 smoothingTimeConstant 속성은 마지막 분석 프레임의 에버리징(averaging) 상수를 나타내는 double 값입니다. 이것은 기본적으로 현재 버퍼와 AnalyserNode가 처리한 마지막 버퍼 사이의 평균이고, 더욱 매끄러운 시간에 대한 값 변화의 집합을 결과로 낳습니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"AnalyserNode.smoothingTimeConstant","locale":"en-US","native":"English (US)"},{"title":"AnalyserNode.smoothingTimeConstant","locale":"fr","native":"Français"},{"title":"AnalyserNode.smoothingTimeConstant","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/web/api/analysernode/smoothingtimeconstant","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/analysernode/smoothingtimeconstant/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/AnalyserNode","title":"AnalyserNode"},{"uri":"/ko/docs/Web/API/AnalyserNode/smoothingTimeConstant","title":"AnalyserNode.smoothingTimeConstant"}],"pageTitle":"AnalyserNode.smoothingTimeConstant - Web API | MDN","noIndexing":false}}