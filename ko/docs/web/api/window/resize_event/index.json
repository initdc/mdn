{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"resize","mdn_url":"/ko/docs/Web/API/Window/resize_event","locale":"ko","native":"한국어","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>resize</code></strong> 이벤트는 document view의 크기가 변경될 때 발생합니다.</p>\n<p><code>window.onresize</code> 속성(어트리뷰트)을 사용하거나,<code>window.addEventListener('resize', ...)</code>를 사용하여, 이벤트 핸들러에 <code>resize</code> 이벤트를 등록할 수 있습니다.</p>\n<p>일부 브라우저의 이전 버전에서는 모든 HTML 요소(엘리먼트)에 <code>resize</code> 이벤트 핸들러를 등록 할 수 있었습니다. 여전히 <code>onresize</code> 속성을 사용하거나, <a href=\"/ko/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>를 사용하여 모든 요소에 핸들러를 설정할 수 있습니다. 그러나 <code>resize</code> 이벤트는 오직 <a href=\"/ko/docs/Web/API/Window\" title=\"window\"><code>window</code></a>객체(<a href=\"/ko/docs/Web/API/Document/defaultView\"><code>document.defaultView</code></a>)에서만 발생합니다(전달합니다). <code>window</code> 객체에 등록된 핸들러만 이벤트를 수신합니다.</p>\n<p>모든 요소가 resize 변경을 알림받을 수 있도록 하는 새로운 제안(proposal 2017)이 있습니다. 드래프트문서를 읽으려면 <a href=\"https://wicg.github.io/ResizeObserver/\" class=\"external\" rel=\" noopener\">Resize Observer</a>를 참조하고, 진행중인 토론을 읽으려면 <a href=\"https://github.com/WICG/ResizeObserver/issues\" class=\"external\" rel=\" noopener\">Github issues</a> 문서를 참조하세요.</p>"}},{"type":"prose","value":{"id":"general_info","title":"General info","isH3":false,"content":"<dl>\n  <dt id=\"specifications\">Specifications</dt>\n  <dd>\n    <p><a href=\"https://www.w3.org/TR/DOM-Level-3-Events/#event-type-resize\" class=\"external\" rel=\" noopener\">DOM L3</a>, <a href=\"https://www.w3.org/TR/cssom-view/#resizing-viewports\" class=\"external\" rel=\" noopener\">CSSOM View</a></p>\n  </dd>\n  <dt id=\"interface\">Interface</dt>\n  <dd>\n    <p>UIEvent</p>\n  </dd>\n  <dt id=\"bubbles\">Bubbles</dt>\n  <dd>\n    <p>No</p>\n  </dd>\n  <dt id=\"cancelable\">Cancelable</dt>\n  <dd>\n    <p>No</p>\n  </dd>\n  <dt id=\"target\">Target</dt>\n  <dd>\n    <p>defaultView (window)</p>\n  </dd>\n  <dt id=\"default_action\">Default Action</dt>\n  <dd>\n    <p>None</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Property</th>\n      <th>Type</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>target</code> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></td>\n      <td><a href=\"/ko/docs/Web/API/EventTarget\"><code>EventTarget</code></a></td>\n      <td>이벤트 타겟(DOM 트리의 최상위 타겟).</td>\n    </tr>\n    <tr>\n      <td><code>type</code> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></td>\n      <td><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a></td>\n      <td>이벤트의 타입.</td>\n    </tr>\n    <tr>\n      <td><code>bubbles</code> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></td>\n      <td><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a></td>\n      <td>이벤트가 정상적으로 버블이 발생하는지 여부.</td>\n    </tr>\n    <tr>\n      <td><code>cancelable</code> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></td>\n      <td><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a></td>\n      <td>이벤트 취소 가능 여부.</td>\n    </tr>\n    <tr>\n      <td><code>view</code> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></td>\n      <td><a href=\"/ko/docs/Web/API/WindowProxy\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>WindowProxy</code></a></td>\n      <td><a href=\"/ko/docs/Web/API/Document/defaultView\"><code>document.defaultView</code></a> (문서의 <code>window</code>)</td>\n    </tr>\n    <tr>\n      <td><code>detail</code> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></td>\n      <td><code>long</code> (<code>float</code>)</td>\n      <td>0.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p><code>resize</code> 이벤트는 빈번하게 발생될 수 있기 때문에, 이벤트 핸들러는 DOM 수정과 같은 계산이 많이 필요한 연산을 실행하지 않아야 합니다. 대신에 다음과 같이 <a href=\"/en-US/docs/Web/API/window/requestAnimationFrame\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">requestAnimationFrame (en-US)</a>, <a href=\"/ko/docs/Web/API/setTimeout\">setTimeout</a>, <a href=\"/ko/docs/Web/API/CustomEvent\">customEvent</a>* 등을 사용해 이벤트를 스로틀(throttle) 하는것이 좋습니다:</p>\n<p><strong>* 주의:</strong> IE11은 제대로 작동하려면 <a href=\"/ko/docs/Web/API/CustomEvent/CustomEvent#polyfill\">customEvent</a> 폴리필(polyfill)이 필요합니다.</p>"}},{"type":"prose","value":{"id":"requestanimationframe_customevent","title":"requestAnimationFrame + customEvent","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">throttle</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">type<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        obj <span class=\"token operator\">=</span> obj <span class=\"token operator\">||</span> window<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> running <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">func</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>running<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            running <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n             <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                obj<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomEvent</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                running <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        obj<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/* init - you can init any event */</span>\n    <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resize\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"optimizedResize\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// handle event</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"optimizedResize\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Resource conscious resize callback!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"requestanimationframe","title":"requestAnimationFrame","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> optimizedResize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> callbacks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        running <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// fired on resize event</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>running<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            running <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>requestAnimationFrame<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>runCallbacks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>runCallbacks<span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// run the actual callbacks</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">runCallbacks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        callbacks<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        running <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// adds callback to loop</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">addCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            callbacks<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// public method to add additional callback</span>\n        <span class=\"token function-variable function\">add</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>callbacks<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span> resize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">addCallback</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// start process</span>\noptimizedResize<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Resource conscious resize callback!'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"settimeout","title":"setTimeout","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resize\"</span><span class=\"token punctuation\">,</span> resizeThrottler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> resizeTimeout<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">resizeThrottler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ignore resize events as long as an actualResizeHandler execution is in the queue</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>resizeTimeout <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      resizeTimeout <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        resizeTimeout <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">actualResizeHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n       <span class=\"token comment\">// The actualResizeHandler will execute at a rate of 15fps</span>\n       <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">actualResizeHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// handle the resize event</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}}],"toc":[{"text":"General info","id":"general_info"},{"text":"Properties","id":"properties"},{"text":"Examples","id":"examples"}],"summary":"resize 이벤트는 document view의 크기가 변경될 때 발생합니다.","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Window: resize event","locale":"en-US","native":"English (US)"},{"title":"GlobalEventHandlers.onresize","locale":"es","native":"Español"},{"title":"GlobalEventHandlers.onresize","locale":"fr","native":"Français"},{"title":"Window: resize イベント","locale":"ja","native":"日本語"},{"title":"resize","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"resize","locale":"ru","native":"Русский"},{"title":"resize","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/web/api/window/resize_event","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/window/resize_event/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/Window","title":"Window"},{"uri":"/ko/docs/Web/API/Window/resize_event","title":"resize"}],"pageTitle":"resize - Web API | MDN","noIndexing":false}}