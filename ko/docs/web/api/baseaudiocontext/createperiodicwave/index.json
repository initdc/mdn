{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"BaseAudioContext.createPeriodicWave()","mdn_url":"/ko/docs/Web/API/BaseAudioContext/createPeriodicWave","locale":"ko","native":"한국어","hasMathML":true,"sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/ko/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/audioWorklet\"><code>audioWorklet</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/currentTime\"><code>currentTime</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/destination\"><code>destination</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/listener\"><code>listener</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/sampleRate\"><code>sampleRate</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/state\"><code>state</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createAnalyser\"><code>createAnalyser()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createBiquadFilter\"><code>createBiquadFilter()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createBuffer\"><code>createBuffer()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createBufferSource\"><code>createBufferSource()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createChannelMerger\"><code>createChannelMerger()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createChannelSplitter\"><code>createChannelSplitter()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createConstantSource\"><code>createConstantSource()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createConvolver\"><code>createConvolver()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createDelay\"><code>createDelay()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createDynamicsCompressor\"><code>createDynamicsCompressor()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createGain\"><code>createGain()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createIIRFilter\"><code>createIIRFilter()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createOscillator\"><code>createOscillator()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createPanner\"><code>createPanner()</code> <small>(en-US)</small></a></li><li><em><code>createPeriodicWave()</code></em></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createScriptProcessor\"><code>createScriptProcessor()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createStereoPanner\"><code>createStereoPanner()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createWaveShaper\"><code>createWaveShaper()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/decodeAudioData\"><code>decodeAudioData()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/ko/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Audio API</summary><ol><li><a href=\"/ko/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/ko/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/ko/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/ko/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/ko/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ko/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a> 인터페이스의 <code>createPeriodicWave()</code> 메서드는 <a href=\"/ko/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a>를 생성하기 위해 사용되는데, 이는 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code> <small>(en-US)</small></a>의 출력을 형성하기 위해 사용될 수 있는 주기적인 파형을 정의하기 위해 사용됩니다.</p>"}},{"type":"prose","value":{"id":"구문","title":"구문","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> wave <span class=\"token operator\">=</span> AudioContext<span class=\"token punctuation\">.</span><span class=\"token function\">createPeriodicWave</span><span class=\"token punctuation\">(</span>real<span class=\"token punctuation\">,</span> imag<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> constraints<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"반환","title":"반환","isH3":true,"content":"<p><a href=\"/ko/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a>.</p>"}},{"type":"prose","value":{"id":"매개변수","title":"매개변수","isH3":true,"content":"<dl>\n  <dt id=\"real\"><code>real</code></dt>\n  <dd>\n    <p>코사인 항의 배열 (전통적으로 A 항).</p>\n  </dd>\n  <dt id=\"imag\"><code>imag</code></dt>\n  <dd>\n    <p>사인 항의 배열 (전통적으로 B 항).</p>\n  </dd>\n</dl>\n<p><code>real</code> 과 <code>imag</code> 배열은 같은 길이를 가져야만 합니다. 그렇지 않으면 오류가 발생됩니다.</p>\n<dl>\n  <dt id=\"constraints\"><code>constraints</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>정규화(normalization)가 비활성화되어야 하는지를 명시하는 dictionary 객체입니다 (만약 명시되지 않으면, 기본적으로 정규화는 활성화 됩니다.) 이것은 하나의 프로퍼티를 취합니다:* <code>disableNormalization</code>: 만약 <code>true</code>로 설정되면, 정규화는 주기파에 대해 비활성화 됩니다. 기본값은 <code>false</code>입니다.</p>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>참고:</strong> 만약 정규화되면, 결과 파동은 최고 절대값(maximum absolute peak value) 1을 가지게 됩니다.</p>\n</div>"}},{"type":"prose","value":{"id":"예제","title":"예제","isH3":false,"content":"<p>다음의 예제는 단순한 사인파를 포함하는 <a href=\"/ko/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a> 객체를 생성하기 위한 <code>createPeriodicWave()</code>의 간단한 사용을 보여줍니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> real <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> imag <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ac <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> osc <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">createOscillator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nreal<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nimag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nreal<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nimag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> wave <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">createPeriodicWave</span><span class=\"token punctuation\">(</span>real<span class=\"token punctuation\">,</span> imag<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">disableNormalization</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nosc<span class=\"token punctuation\">.</span><span class=\"token function\">setPeriodicWave</span><span class=\"token punctuation\">(</span>wave<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nosc<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ac<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nosc<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nosc<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>이는 정의에 의해 오직 기본음을 포함하는 소리가 사인파이기 때문에 작동합니다.</p>\n<p>여기서, 우리는 두 값과 함께 <code>PeriodicWave</code>를 생성합니다. 첫번째 값은 oscillator가 시작하는 값인 DC 오프셋입니다. 여기서 0은 좋은데, 왜냐하면 우리는 곡선을 [-1.0; 1.0] 범위의 중간에서 시작하기를 원하기 때문입니다.</p>\n<p>두번째와 그 다음의 값은 사인과 코사인 요소입니다. 여러분은 이것을 시간 도메인 값으로부터 주파수 도메인 값을 얻는 푸리에 변환의 결과로 생각할 수 있습니다. 여기서, <code>createPeriodicWave()</code>와 함께, 여러분은 주파수를 명시하고, 브라우저는 oscillator의 주파수에 대한 시간 도메인 버퍼를 얻기 위해 역 푸리에 변환을 수행합니다. 여기서, 우리는 오직 기본음의 전체 볼륨 (1.0)에서의 한 요소만을 설정했으므로, 우리는 사인파를 얻습니다.</p>\n<p>\n  푸리에 변환의 계수는 <em>오름</em>차순으로 주어져야만 하고\n  (예: \n  <math>\n    <semantics>\n      <mrow>\n        <mrow>\n          <mo>(</mo>\n          <mrow>\n            <mi>a</mi>\n            <mo>+</mo>\n            <mi>b</mi>\n            <mi>i</mi>\n          </mrow>\n          <mo>)</mo>\n        </mrow>\n        <msup>\n          <mi>e</mi>\n          <mi>i</mi>\n        </msup>\n        <mo>,</mo>\n        <mrow>\n          <mo>(</mo>\n          <mrow>\n            <mi>c</mi>\n            <mo>+</mo>\n            <mi>d</mi>\n            <mi>i</mi>\n          </mrow>\n          <mo>)</mo>\n        </mrow>\n        <msup>\n          <mi>e</mi>\n          <mrow>\n            <mn>2</mn>\n            <mi>i</mi>\n          </mrow>\n        </msup>\n        <mo>,</mo>\n        <mrow>\n          <mo>(</mo>\n          <mrow>\n            <mi>f</mi>\n            <mo>+</mo>\n            <mi>g</mi>\n            <mi>i</mi>\n          </mrow>\n          <mo>)</mo>\n        </mrow>\n        <msup>\n          <mi>e</mi>\n          <mrow>\n            <mn>3</mn>\n            <mi>i</mi>\n          </mrow>\n        </msup>\n      </mrow>\n      <annotation encoding=\"TeX\">\n        \\left(a+bi\\right)e^{i} , \\left(c+di\\right)e^{2i} ,\n        \\left(f+gi\\right)e^{3i} \n      </annotation>\n    </semantics>\n  </math> 등) 양이거나 음일 수 있습니다. 수동으로 이러한 계수들을 얻는 간단한 방법은 (최고의 방법은 아니지만) 그래프 계산기를 사용하는 것입니다.\n</p>"}},{"type":"specifications","value":{"title":"명세","id":"명세","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-createperiodicwave","title":"Web Audio API"}],"query":"api.BaseAudioContext.createPeriodicWave"}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"query":"api.BaseAudioContext.createPeriodicWave","dataURL":"/ko/docs/Web/API/BaseAudioContext/createPeriodicWave/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/ko/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Using the Web Audio API</a></li>\n</ul>"}}],"toc":[{"text":"구문","id":"구문"},{"text":"예제","id":"예제"},{"text":"명세","id":"명세"},{"text":"브라우저 호환성","id":"브라우저_호환성"},{"text":"See also","id":"see_also"}],"summary":"BaseAudioContext 인터페이스의 createPeriodicWave() 메서드는 PeriodicWave를 생성하기 위해 사용되는데, 이는 OscillatorNode (en-US)의 출력을 형성하기 위해 사용될 수 있는 주기적인 파형을 정의하기 위해 사용됩니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"BaseAudioContext.createPeriodicWave()","locale":"en-US","native":"English (US)"},{"title":"BaseAudioContext.createPeriodicWave()","locale":"fr","native":"Français"},{"title":"BaseAudioContext.createPeriodicWave()","locale":"ja","native":"日本語"},{"title":"BaseAudioContext.createPeriodicWave()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/web/api/baseaudiocontext/createperiodicwave","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/baseaudiocontext/createperiodicwave/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/BaseAudioContext","title":"BaseAudioContext"},{"uri":"/ko/docs/Web/API/BaseAudioContext/createPeriodicWave","title":"BaseAudioContext.createPeriodicWave()"}],"pageTitle":"BaseAudioContext.createPeriodicWave() - Web API | MDN","noIndexing":false}}