{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Channel Messaging API","mdn_url":"/ko/docs/Web/API/Channel_Messaging_API","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Channel_Messaging_API\">Channel Messaging API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/ko/docs/Web/API/Channel_Messaging_API/Using_channel_messaging\">Using channel messaging</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/ko/docs/Web/API/MessageChannel\"><code>MessageChannel</code></a></li><li><a href=\"/ko/docs/Web/API/MessagePort\"><code>MessagePort</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong>Channel Messaging API</strong> allows two separate scripts running in different browsing contexts attached to the same document (e.g., two IFrames, or the main document and an IFrame, two documents via a <a href=\"/ko/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a>, or two workers) to communicate directly, passing messages between one another through two-way channels (or pipes) with a port at each end.</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>주의:</strong> 이 기능은 <a href=\"/ko/docs/Web/API/Web_Workers_API\">Web Worker</a>에서 사용할 수 있습니다</p>\n</div>"}},{"type":"prose","value":{"id":"channel_messaging_concepts_and_usage","title":"Channel messaging concepts and usage","isH3":false,"content":"<p>A message channel is created using the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessageChannel/MessageChannel\"><code>MessageChannel()</code> <small>(en-US)</small></a> constructor. Once created, the two ports of the channel can be accessed through the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessageChannel/port1\"><code>MessageChannel.port1</code> <small>(en-US)</small></a> and <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessageChannel/port2\"><code>MessageChannel.port2</code> <small>(en-US)</small></a> properties (which both return <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessagePort\"><code>MessagePort</code> <small>(en-US)</small></a> objects.) The app that created the channel uses <code>port1</code>, and the app at the other end of the port uses <code>port2</code> — you send a message to <code>port2</code>, and transfer the port over to the other browsing context using <a href=\"/ko/docs/Web/API/Window/postMessage\"><code>window.postMessage</code></a> along with two arguments (the message to send, and the object to transfer ownership of, in this case the port itself.)</p>\n<p>When these transferable objects are transferred, they are 'neutered' on the previous context — the one they previously belonged to. For instance a port, when is sent, cannot be used anymore by the original context. Note that the only two objects that can currently be transferred are <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>ArrayBuffer</code></a> and <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessagePort\"><code>MessagePort</code> <small>(en-US)</small></a>.</p>\n<p>The other browsing context can listen for the message using <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessagePort/message_event\"><code>MessagePort.onmessage</code> <small>(en-US)</small></a>, and grab the contents of the message using the event's <code>data</code> attribute. You could then respond by sending a message back to the original document using <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessagePort/postMessage\"><code>MessagePort.postMessage</code> <small>(en-US)</small></a>.</p>\n<p>When you want to stop sending messages down the channel, you can invoke <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessagePort/close\"><code>MessagePort.close</code> <small>(en-US)</small></a> to close the ports.</p>\n<p>Find out more about how to use this API in <a href=\"/ko/docs/Web/API/Channel_Messaging_API/Using_channel_messaging\">Using channel messaging</a>.</p>"}},{"type":"prose","value":{"id":"channel_messaging_interfaces","title":"Channel messaging interfaces","isH3":false,"content":"<dl>\n  <dt id=\"messagechannel_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessageChannel\"><code>MessageChannel</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Creates a new message channel to send messages across.</p>\n  </dd>\n  <dt id=\"messageport_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessagePort\"><code>MessagePort</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Controls the ports on the message channel, allowing sending of messages from one port and listening out for them arriving at the other.</p>\n  </dd>\n  <dt id=\"portcollection\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>PortCollection</code></a></dt>\n  <dd>\n    <p>An array of <code>MessagePort</code>s; an experimental solution to allow broadcasting of a message to multiple ports simultaneously.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<ul>\n  <li>We have published a <a href=\"https://github.com/mdn/dom-examples/tree/master/channel-messaging-basic\" class=\"external\" rel=\" noopener\">channel messaging basic demo</a> on Github (<a href=\"https://mdn.github.io/dom-examples/channel-messaging-basic/\" class=\"external\" rel=\" noopener\">run it live too</a>), which shows a really simple single message transfer between a page and an embedded <a href=\"/ko/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>.</li>\n  <li>You can also see a <a href=\"https://github.com/mdn/dom-examples/tree/master/channel-messaging-multimessage\" class=\"external\" rel=\" noopener\">multimessaging demo</a> (<a href=\"https://mdn.github.io/dom-examples/channel-messaging-multimessage/\" class=\"external\" rel=\" noopener\">run this live</a>), which shows a slightly more complex setup that can send multiple messages between main page and IFrame.</li>\n</ul>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"query":"api.MessageChannel,api.MessagePort","specifications":[]}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"data":null,"query":"api.MessageChannel,api.MessagePort","browsers":null}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/ko/docs/Web/API/Channel_Messaging_API/Using_channel_messaging\">Using channel messaging</a></li>\n  <li><a href=\"/ko/docs/Web/API/Web_Workers_API\">Web Workers API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Broadcast_Channel_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Broadcast Channel API (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"Channel messaging concepts and usage","id":"channel_messaging_concepts_and_usage"},{"text":"Channel messaging interfaces","id":"channel_messaging_interfaces"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Channel Messaging API allows two separate scripts running in different browsing contexts attached to the same document (e.g., two IFrames, or the main document and an IFrame, two documents via a SharedWorker, or two workers) to communicate directly, passing messages between one another through two-way channels (or pipes) with a port at each end.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Channel Messaging API","locale":"en-US","native":"English (US)"},{"title":"チャンネルメッセージング API","locale":"ja","native":"日本語"},{"title":"Channel Messaging API","locale":"zh-CN","native":"中文 (简体)"},{"title":"Channel Messaging API","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ko/web/api/channel_messaging_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/channel_messaging_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/Channel_Messaging_API","title":"Channel Messaging API"}],"pageTitle":"Channel Messaging API - Web API | MDN","noIndexing":false}}