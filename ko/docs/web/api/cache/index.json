{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Cache","mdn_url":"/ko/docs/Web/API/Cache","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/ko/docs/Web/API/Cache\"><code>Cache</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/add\"><code>add()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/addAll\"><code>addAll()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/delete\"><code>delete()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/keys\"><code>keys()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/match\"><code>match()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/matchAll\"><code>matchAll()</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/Cache/put\"><code>put()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Service Workers API</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CacheStorage\"><code>CacheStorage</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Client\"><code>Client</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/ko/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WindowClient\"><code>WindowClient</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p><strong><code>Cache</code></strong> 인터페이스는 <a href=\"/ko/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> 의 생명주기의 일부로 캐시 된 <a href=\"http://fetch.spec.whatwg.org/#request\" class=\"external\" rel=\" noopener\"><code>Request</code></a>와 <a href=\"http://fetch.spec.whatwg.org/#response\" class=\"external\" rel=\" noopener\"><code>Response</code></a>를 나타냅니다.</p>\n<p>도메인은 여러개의 이름이 지정된 <code>Cache</code> 객체를 가질 수 있으며 그 객체들은 <a href=\"/ko/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a>가 완전히 제어합니다.<a href=\"/ko/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> 스크립트가 <code>Cache</code> 업데이트를 어떻게 컨트롤 할지에 대해서 구현해야 합니다. 명시적으로 요청하지 않으면 <code>Cache</code> 항목들은 업데이트 되지 않습니다. 삭제되지 않으면 만료되지 않습니다. <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open(cacheName)</code> <small>(en-US)</small></a> 을 사용하여 특정 이름으로 지정 된 <code>Cache</code> 객체를 로드하고 <code>Cache</code> 메서드를 호출하여 캐시를 유지 관리합니다.</p>\n<p>또한 캐시 항목을 정기적으로 삭제해야 합니다. 각각의 브라우저는 <a href=\"/ko/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a>가 사용할 수 있는 캐시 저장소의 양에 대해서 제한을 엄격하게 두고 있습니다. 브라우저는 디스크 공간을 관리하기 위해서 최선을 다하지만 원본에 대한 캐시 저장소를 삭제할 수 있습니다. 브라우저는 일반적으로 원본에 대한 모든 데이터를 삭제하거나 원본에 대한 모든 데이터를 삭제하지 않을 것입니다. 이름지어진 특정 캐시 버전을 확인하고 안전하게 작동할 수 있는 <a href=\"/ko/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> 버전에서만 캐시를 사용하십시오. 캐시 삭제에 대한 자세한 내용은 <a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#deleting_old_caches\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Deleting old caches (en-US)</a>을 참고하세요.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>참고:</strong> 초기 캐시 구현(Blink 및 Gecko)은 응답이 완전히 기록될 때 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/add\"><code>Cache.add</code> <small>(en-US)</small></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code> <small>(en-US)</small></a>, 그리고 <a href=\"/ko/docs/Web/API/Cache/put\"><code>Cache.put</code></a> 로 확인 됩니다. 보다 최근 사양 버전에서의 최신언어들은 응답이 여전히 스트리밍이 되는 경우에도 해당 내용이 데이터베이스에 기록되는 즉시 브라우저가 확인할 수 있습니다.</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>참고:</strong> <a href=\"/ko/docs/Web/API/Cache/put\"><code>Cache.put</code></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/add\"><code>Cache.add</code> <small>(en-US)</small></a>, 그리고<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code> <small>(en-US)</small></a> 은 오직 <code>GET</code> 요청들만 cache로 저장됩니다.</p>\n</div>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>참고:</strong> 캐시 API는 HTTP 캐시 헤더를 따르지 않습니다.</p>\n</div>"}},{"type":"prose","value":{"id":"메서드","title":"메서드","isH3":false,"content":"<dl>\n  <dt id=\"cache.matchrequest_options_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/match\"><code>Cache.match(request, options)</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p><a href=\"/ko/docs/Web/API/Cache\" aria-current=\"page\"><code>Cache</code></a>객체의 첫 번째 일치하는 요청과 관련된 응답으로 확인되는 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>를 반환합니다.</p>\n  </dd>\n  <dt id=\"cache.matchallrequest_options_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/matchAll\"><code>Cache.matchAll(request, options)</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p><a href=\"/ko/docs/Web/API/Cache\" aria-current=\"page\"><code>Cache</code></a> 객체에서 일치하는 모든 요청의 배열로 해석되는 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>를 반환합니다.</p>\n  </dd>\n  <dt id=\"cache.addrequest_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/add\"><code>Cache.add(request)</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>URL을 가져 와서 추출해서 결과 객체를 지정된 캐시에 추가합니다. 이는 fetch()를 호출 한 다음 Cache.put()을 사용하여 캐시에 결과를 추가하는 것과 매우 유사합니다.</p>\n  </dd>\n  <dt id=\"cache.addallrequests_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/addAll\"><code>Cache.addAll(requests)</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>URL 배열을 가져 와서 추출하고 결과 응답 객체를 지정된 캐시에 추가합니다.</p>\n  </dd>\n  <dt id=\"cache.putrequest_response\"><a href=\"/ko/docs/Web/API/Cache/put\" title=\"Cache.put(request, response)\"><code>Cache.put(request, response)</code></a></dt>\n  <dd>\n    <p>요청과 응답을 모두 가져 와서 지정된 캐시에 추가합니다.</p>\n  </dd>\n  <dt id=\"cache.deleterequest_options_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/delete\"><code>Cache.delete(request, options)</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>해당 키가 request인 <a href=\"/ko/docs/Web/API/Cache\" aria-current=\"page\"><code>Cache</code></a>를 찾고 <a href=\"/ko/docs/Web/API/Cache\" aria-current=\"page\"><code>Cache</code></a>를 삭제하고 <code>true</code> 판정인 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>를 리턴합니다. <a href=\"/ko/docs/Web/API/Cache\" aria-current=\"page\"><code>Cache</code></a> 항목이 없으면 <code>false</code>를 반환합니다.</p>\n  </dd>\n  <dt id=\"cache.keysrequest_options_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/keys\"><code>Cache.keys(request, options)</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p><a href=\"/ko/docs/Web/API/Cache\" aria-current=\"page\"><code>Cache</code></a> 키 배열은 결정된 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>를 리턴합니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"예제","title":"예제","isH3":false,"content":"<p>이 코드는 <a href=\"https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/selective-caching/service-worker.js\" class=\"external\" rel=\" noopener\">service worker selective caching sample</a> 에서 가져왔습니다. (see <a href=\"https://googlechrome.github.io/samples/service-worker/selective-caching/\" class=\"external\" rel=\" noopener\">selective caching live</a>). 이 코드는<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open(cacheName)</code> <small>(en-US)</small></a>을 사용하여 <code>font/</code>로 시작하는 <code>Content-Type</code> header로 <code>Cache</code>를 엽니다.</p>\n<p>그런 다음 코드는 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/match\"><code>Cache.match(request, options)</code> <small>(en-US)</small></a>를 사용하여 캐시에 이미 일치하는 글꼴이 있는지 확인한 후 일치하는 글꼴을 반환합니다. 일치하는 글꼴이 없으면 코드는 네트워크에서 글꼴을 가져오고 <a href=\"/ko/docs/Web/API/Cache/put\" title=\"Cache.put(request, response)\"><code>Cache.put(request, response)</code></a>을 사용하여 가져온 리소스를 캐시합니다.</p>\n<p>이 코드는 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code> <small>(en-US)</small></a> 연산에서 발생한 예외를 처리합니다. HTTP오류 응답(예 : 404)은 예외를 발생시키지 않습니다. 적절한 오류 코드가있는 일반 응답 객체를 리턴합니다.</p>\n<p>또한 코드 스니펫은 {domxref ( \"ServiceWorker\")}}가 사용하는 캐시 버전 관리를 위한 모범 사례를 보여줍니다. 이 예에서는 캐시가 하나 밖에 없지만 동일한 접근법을 여러 캐시에 사용할 수 있습니다. 캐시의 단축 식별자를 특정 버전의 캐시 이름에 매핑합니다. 또한 이 코드는 <code>CURRENT_CACHES</code>에 이름이 지정되지 않은 모든 캐시를 삭제합니다.</p>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>참고:</strong> 크롬에서, chrome://inspect/#service-workers 를 방문하여 \"inspect\" 를 클릭하여 <a href=\"https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/selective-caching/service-worker.js\" class=\"external\" rel=\" noopener\">service-worker.js</a> 스크립트가 수행중인 다양한 작업에 대한 로깅 구문을 확인합니다.</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token constant\">CACHE_VERSION</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Shorthand identifier mapped to specific versioned cache.</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">CURRENT_CACHES</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">font</span><span class=\"token operator\">:</span> <span class=\"token string\">'font-cache-v'</span> <span class=\"token operator\">+</span> <span class=\"token constant\">CACHE_VERSION</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nself<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'activate'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> expectedCacheNames <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CURRENT_CACHES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">CURRENT_CACHES</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Active worker won't be treated as activated until promise resolves successfully.</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span>\n    caches<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cacheNames</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>\n        cacheNames<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cacheName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>expectedCacheNames<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>cacheName<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Deleting out of date cache:'</span><span class=\"token punctuation\">,</span> cacheName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>cacheName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nself<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Handling fetch event for'</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span>\n\n    <span class=\"token comment\">// Opens Cache objects that start with 'font'.</span>\n    caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CURRENT_CACHES</span><span class=\"token punctuation\">[</span><span class=\"token string\">'font'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">' Found response in cache:'</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\">// Handles exceptions that arise from match() or fetch().</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'  Error in fetch handler:'</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"명세","id":"명세","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#cache-interface","title":"Service Workers 1"}],"query":"api.Cache"}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"query":"api.Cache","dataURL":"/ko/docs/Web/API/Cache/bcd.json"}},{"type":"prose","value":{"id":"같이_보기","title":"같이 보기","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using Service Workers (en-US)</a></li>\n  <li><a href=\"https://github.com/mdn/sw-test\" class=\"external\" rel=\" noopener\">Service workers basic code example</a></li>\n  <li><a href=\"https://jakearchibald.github.io/isserviceworkerready/\" class=\"external\" rel=\" noopener\">Is ServiceWorker ready?</a></li>\n  <li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using web workers (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"메서드","id":"메서드"},{"text":"예제","id":"예제"},{"text":"명세","id":"명세"},{"text":"브라우저 호환성","id":"브라우저_호환성"},{"text":"같이 보기","id":"같이_보기"}],"summary":"Cache 인터페이스는 ServiceWorker 의 생명주기의 일부로 캐시 된 Request와 Response를 나타냅니다.","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Cache","locale":"en-US","native":"English (US)"},{"title":"Cache","locale":"fr","native":"Français"},{"title":"Cache","locale":"ja","native":"日本語"},{"title":"Cache","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Cache","locale":"ru","native":"Русский"},{"title":"Cache","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/web/api/cache","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/cache/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/Cache","title":"Cache"}],"pageTitle":"Cache - Web API | MDN","noIndexing":false}}