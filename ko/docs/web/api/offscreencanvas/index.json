{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"OffscreenCanvas","mdn_url":"/ko/docs/Web/API/OffscreenCanvas","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/API/Canvas_API\">Canvas API</a></strong></li><li><strong><a href=\"/ko/docs/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ko/docs/Web/API/OffscreenCanvas/OffscreenCanvas\"><code>OffscreenCanvas()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ko/docs/Web/API/OffscreenCanvas/height\"><code>height</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ko/docs/Web/API/OffscreenCanvas/width\"><code>width</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OffscreenCanvas/convertToBlob\"><code>convertToBlob()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ko/docs/Web/API/OffscreenCanvas/getContext\"><code>getContext()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OffscreenCanvas/transferToImageBitmap\"><code>transferToImageBitmap()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/ko/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Canvas API</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageBitmapRenderingContext\"><code>ImageBitmapRenderingContext</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/API/ImageData\"><code>ImageData</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Path2D\"><code>Path2D</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextMetrics\"><code>TextMetrics</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/createImageBitmap\"><code>createImageBitmap</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>**<code>OffscreenCanvas</code>**는 화면 밖에서 렌더링되는 캔버스 인터페이스입니다. window 객체와 <a href=\"/ko/docs/Web/API/Web_Workers_API\">worker</a> 객체 모두 지원합니다.</p>"}},{"type":"prose","value":{"id":"생성자","title":"생성자","isH3":false,"content":"<dl>\n  <dt id=\"offscreencanvas\"><a href=\"/ko/docs/Web/API/OffscreenCanvas/OffscreenCanvas\" title=\"OffscreenCanvas()\"><code>OffscreenCanvas()</code></a></dt>\n  <dd>\n    <p><code>OffscreenCanvas</code> 생성자. 새 <code>OffscreenCanvas</code> 객체를 생성합니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"프로퍼티","title":"프로퍼티","isH3":false,"content":"<dl>\n  <dt id=\"offscreencanvas.height\"><a href=\"/ko/docs/Web/API/OffscreenCanvas/height\"><code>OffscreenCanvas.height</code></a></dt>\n  <dd>\n    <p>캔버스의 높이</p>\n  </dd>\n  <dt id=\"offscreencanvas.width\"><a href=\"/ko/docs/Web/API/OffscreenCanvas/width\"><code>OffscreenCanvas.width</code></a></dt>\n  <dd>\n    <p>캔버스의 너비</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"메소드","title":"메소드","isH3":false,"content":"<dl>\n  <dt id=\"offscreencanvas.getcontext\"><a href=\"/ko/docs/Web/API/OffscreenCanvas/getContext\"><code>OffscreenCanvas.getContext()</code></a></dt>\n  <dd>\n    <p>렌더링된 캔버스 컨텍스트 객체를 반환합니다.</p>\n  </dd>\n  <dt id=\"offscreencanvas.converttoblob_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OffscreenCanvas/convertToBlob\"><code>OffscreenCanvas.convertToBlob()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>캔버스에 들어있는 이미지에 대한 <a href=\"/ko/docs/Web/API/Blob\"><code>Blob</code></a> 객체를 생성합니다.</p>\n  </dd>\n  <dt id=\"offscreencanvas.transfertoimagebitmap_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OffscreenCanvas/transferToImageBitmap\"><code>OffscreenCanvas.transferToImageBitmap()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>OffscreenCanvas에 렌더링된 이미지중에서 가장 최근에 렌더링된 이미지를 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code> <small>(en-US)</small></a> 객체로 생성합니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"예시","title":"예시","isH3":false,"content":""}},{"type":"prose","value":{"id":"offscreencanvas_에서_만들어진_프레임을_동기적으로_화면에_보여주는_방법","title":"<code>OffscreenCanvas</code> 에서 만들어진 프레임을 동기적으로 화면에 보여주는 방법","isH3":true,"content":"<p><code>OffscreenCanvas</code> API를 사용하는 방법은 <code>OffscreenCanvas</code>에 속한 <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>RenderingContext</code></a>를 이용해 새로운 프레임 객체를 생성하는 것입니다. 새 프레임이 컨텍스트에 렌더링이 되고나면, 가장 최근에 렌더링 된 이미지를 저장하는 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OffscreenCanvas/transferToImageBitmap\"><code>transferToImageBitmap()</code> <small>(en-US)</small></a> 메소드를 호출할 수 있습니다. 이 메소드는 다른 수 많은 Web API에서 사용되고 있는 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code> <small>(en-US)</small></a> 객체를 리턴합니다.</p>\n<p><code>ImageBitmap</code>을 화면에 표시하려면, 현재 (화면에 보여지고 있는) 캔버스 요소의 <code>canvas.getContext(\"bitmaprenderer\")</code> 메소드를 호출했을 때 생성되는 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageBitmapRenderingContext\"><code>ImageBitmapRenderingContext</code> <small>(en-US)</small></a> 객체를 사용하면 됩니다. 이 컨텍스트는 캔버스의 내용을 주어진 <code>ImageBitmap</code>으로 전환하는 기능을 제공합니다. OffscreenCanvas에서 이전에 렌더링이 되어서 등록된 <code>ImageBitmap</code>을 이용한 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageBitmapRenderingContext/transferFromImageBitmap\"><code>ImageBitmapRenderingContext.transferFromImageBitmap()</code> <small>(en-US)</small></a>을 호출하면 <code>ImageBitmap</code>이 캔버스에 표시되고 소유권 역시 캔버스로 넘어갑니다. 단일 <code>OffscreenCanvas</code>는 프레임들을 임의의 다른 <code>ImageBitmapRenderingContext</code> 객체로 전달합니다.</p>\n<p>아래에 두 개의 <a href=\"/ko/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 요소가 있습니다.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>two<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>다음의 코드는 위에서 설명한 것처럼 <code>OffscreenCanvas</code>를 이용해 렌더링합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> one <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bitmaprenderer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> two <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"two\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bitmaprenderer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> offscreen <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OffscreenCanvas</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> gl <span class=\"token operator\">=</span> offscreen<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webgl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ... gl 컨텍스트를 이용해 첫 번째 캔버스에 무언가를 그립니다 ...</span>\n\n<span class=\"token comment\">// 첫 번째 캔버스에 렌더링을 수행합니다.</span>\n<span class=\"token keyword\">var</span> bitmapOne <span class=\"token operator\">=</span> offscreen<span class=\"token punctuation\">.</span><span class=\"token function\">transferToImageBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\none<span class=\"token punctuation\">.</span><span class=\"token function\">transferFromImageBitmap</span><span class=\"token punctuation\">(</span>bitmapOne<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ... gl 컨텍스트를 이용해 두 번째 캔버스에 무언가를 그립니다 ...</span>\n\n<span class=\"token comment\">// 두 번째 캔버스에 렌더링을 수행합니다.</span>\n<span class=\"token keyword\">var</span> bitmapTwo <span class=\"token operator\">=</span> offscreen<span class=\"token punctuation\">.</span><span class=\"token function\">transferToImageBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntwo<span class=\"token punctuation\">.</span><span class=\"token function\">transferFromImageBitmap</span><span class=\"token punctuation\">(</span>bitmapTwo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"OffscreenCanvas 에서 만들어진 프레임을 동기적으로 화면에 보여주는 방법"}},{"type":"prose","value":{"id":"offscreencanvas_에서_만들어진_프레임을_비동기적으로_화면에_보여주는_방법","title":"<code>OffscreenCanvas</code> 에서 만들어진 프레임을 비동기적으로 화면에 보여주는 방법","isH3":true,"content":"<p><code>OffscreenCanvas</code> API를 이용하는 또 다른 방법은 <a href=\"/ko/docs/Web/API/Web_Workers_API\">worker</a> 또는 메인 스레드위에서 <a href=\"/ko/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 요소의 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLCanvasElement/transferControlToOffscreen\"><code>transferControlToOffscreen()</code> <small>(en-US)</small></a>를 호출하는 것입니다. 여기서 메인 스레드는 <code>OffscreenCanvas</code> 객체를 반환하는 <a href=\"/ko/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> 객체를 가지고 있습니다. <a href=\"/ko/docs/Web/API/OffscreenCanvas/getContext\" title=\"getContext()\"><code>getContext()</code></a>를 호출하면 <code>OffscreenCanvas</code>에서 <code>RenderingContext</code>를 얻을 수 있습니다.</p>\n<p>main.js (메인 스레드 코드):</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> htmlCanvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> offscreen <span class=\"token operator\">=</span> htmlCanvas<span class=\"token punctuation\">.</span><span class=\"token function\">transferControlToOffscreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> worker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"offscreencanvas.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nworker<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">canvas</span><span class=\"token operator\">:</span> offscreen<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>offscreen<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>offscreencanvas.js (worker 코드):</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> gl <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webgl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ... gl 컨텍스트를 이용해 무언가를 그립니다 ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>worker 내에서 requestAnimationFrame 또한 사용할 수 있습니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> gl <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webgl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">time</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ... gl 컨텍스트를 이용해 무언가를 그립니다 ...</span>\n    <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"OffscreenCanvas 에서 만들어진 프레임을 비동기적으로 화면에 보여주는 방법"}},{"type":"specifications","value":{"title":"상세","id":"상세","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/canvas.html#the-offscreencanvas-interface","title":"HTML Standard"}],"query":"api.OffscreenCanvas"}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"query":"api.OffscreenCanvas","dataURL":"/ko/docs/Web/API/OffscreenCanvas/bcd.json"}},{"type":"prose","value":{"id":"더_보기","title":"더 보기","isH3":false,"content":"<ul>\n  <li><a href=\"https://hacks.mozilla.org/2016/01/webgl-off-the-main-thread/\" class=\"external\" rel=\" noopener\">WebGL Off the Main Thread – Mozilla Hacks</a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code> <small>(en-US)</small></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code> <small>(en-US)</small></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageBitmapRenderingContext\"><code>ImageBitmapRenderingContext</code> <small>(en-US)</small></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLCanvasElement/transferControlToOffscreen\"><code>HTMLCanvasElement.transferControlToOffscreen()</code> <small>(en-US)</small></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLRenderingContext/commit\"><code>WebGLRenderingContext.commit()</code> <small>(en-US)</small></a></li>\n</ul>"}}],"toc":[{"text":"생성자","id":"생성자"},{"text":"프로퍼티","id":"프로퍼티"},{"text":"메소드","id":"메소드"},{"text":"예시","id":"예시"},{"text":"상세","id":"상세"},{"text":"브라우저 호환성","id":"브라우저_호환성"},{"text":"더 보기","id":"더_보기"}],"summary":"**OffscreenCanvas**는 화면 밖에서 렌더링되는 캔버스 인터페이스입니다. window 객체와 worker 객체 모두 지원합니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"OffscreenCanvas","locale":"en-US","native":"English (US)"},{"title":"OffscreenCanvas","locale":"fr","native":"Français"},{"title":"OffscreenCanvas","locale":"ja","native":"日本語"},{"title":"OffscreenCanvas","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/web/api/offscreencanvas","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/api/offscreencanvas/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/API","title":"Web API"},{"uri":"/ko/docs/Web/API/OffscreenCanvas","title":"OffscreenCanvas"}],"pageTitle":"OffscreenCanvas - Web API | MDN","noIndexing":false}}