{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Assertions","mdn_url":"/ko/docs/Web/JavaScript/Guide/Regular_Expressions/Assertions","locale":"ko","native":"한국어","sidebarHTML":"\n <ol>\n  <li><a href=\"/ko/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/ko/docs/Web/JavaScript/Tutorials\"><strong>Tutorials:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Complete beginners</summary>\n      <ol>\n        <li><a href=\"/ko/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript basics</a></li>\n        <li><a href=\"/ko/docs/Learn/JavaScript/First_steps\">JavaScript first steps</a></li>\n        <li><a href=\"/ko/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks</a></li>\n        <li><a href=\"/ko/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>JavaScript Guide</summary>\n      <ol>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Introduction\">Introduction</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Grammar_and_Types\">Grammar and types</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">Control flow and error handling</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Loops_and_iteration\">Loops and iteration</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Functions\">Functions</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Expressions_and_Operators\">Expressions and operators</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Numbers_and_dates\">Numbers and dates</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Text_formatting\">Text formatting</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Regular_Expressions\">Regular expressions</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Indexed_collections\">Indexed collections</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Keyed_collections\">Keyed collections</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Working_with_Objects\">Working with objects</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">Details of the object model</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Using_promises\">Using promises</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Iterators_and_generators\">Iterators and generators</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Meta_programming\">Meta programming</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Modules\">JavaScript modules</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Intermediate</summary>\n      <ol>\n        <li><a href=\"/ko/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">Client-side JavaScript frameworks</a></li>\n        <li><a href=\"/ko/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">A re-introduction to JavaScript</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Data_structures\">JavaScript data structures</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Equality_comparisons_and_sameness\">Equality comparisons and sameness</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Closures\">Closures</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Advanced</summary>\n      <ol>\n        <li><a href=\"/ko/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">Inheritance and the prototype chain</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Typed_arrays\">JavaScript typed arrays</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Memory_Management\">Memory Management</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/EventLoop\">Concurrency model and Event Loop</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ko/docs/Web/JavaScript/Reference\">References:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>Built-in objects</summary>\n        <ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Expressions &amp; operators</summary>\n      <ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Statements &amp; declarations</summary>\n      <ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Functions</summary>\n      <ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Classes</summary>\n      <ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Errors</summary>\n      <ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Misc</summary>\n      <ol>\n        <li><a href=\"/ko/docs/Web/JavaScript/JavaScript_technologies_overview\">JavaScript technologies overview</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Lexical_grammar\">Lexical grammar</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Data_structures\">JavaScript data structures</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">Enumerability and ownership of properties</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Iteration_protocols\">Iteration protocols</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">Transitioning to strict mode</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Template_literals\">Template literals</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">Deprecated features</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Assertions에는 행이나 단어의 시작 · 끝을 나타내는 경계와 (앞, 뒤 읽고 조건식을 포함한) 어떤 식 으로든 매치가 가능한 것을 나타내는 다른 패턴이 포함됩니다.</p><iframe class=\"interactive\" height=\"692\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/regexp-assertions.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"types","title":"Types","isH3":false,"content":""}},{"type":"prose","value":{"id":"boundary-type_assertions","title":"Boundary-type assertions","isH3":true,"content":"<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Characters</th>\n      <th scope=\"col\">Meaning</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>^</code></td>\n      <td>\n        <p>\n          Matches the beginning of input. If the multiline flag is set to true,\n          also matches immediately after a line break character. For example,\n          <code>/^A/</code> does not match the \"A\" in \"an A\", but does match the\n          first \"A\" in \"An A\".\n        </p>\n        <div class=\"note notecard\" id=\"sect1\">\n          <p>\n            This character has a different meaning when it appears at the start\n            of a\n            <a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges\">group</a>.\n          </p>\n        </div>\n      </td>\n    </tr>\n    <tr>\n      <td><code>$</code></td>\n      <td>\n        <p>\n          Matches the end of input. If the multiline flag is set to true, also\n          matches immediately before a line break character. For example,\n          <code>/t$/</code> does not match the \"t\" in \"eater\", but does match it\n          in \"eat\".\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td><code>\\b</code></td>\n      <td>\n        <p>\n          Matches a word boundary. This is the position where a word character\n          is not followed or preceded by another word-character, such as between\n          a letter and a space. Note that a matched word boundary is not\n          included in the match. In other words, the length of a matched word\n          boundary is zero.\n        </p>\n        <p>Examples:</p>\n        <ul>\n          <li><code>/\\bm/</code> matches the \"m\" in \"moon\".</li>\n          <li>\n            <code>/oo\\b/</code> does not match the \"oo\" in \"moon\", because \"oo\"\n            is followed by \"n\" which is a word character.\n          </li>\n          <li>\n            <code>/oon\\b/</code> matches the \"oon\" in \"moon\", because \"oon\" is\n            the end of the string, thus not followed by a word character.\n          </li>\n          <li>\n            <code>/\\w\\b\\w/</code> will never match anything, because a word\n            character can never be followed by both a non-word and a word\n            character.\n          </li>\n        </ul>\n        <p>\n          To match a backspace character (<code>[\\b]</code>), see\n          <a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Character_Classes\">Character Classes</a>.\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td><code>\\B</code></td>\n      <td>\n        <p>\n          Matches a non-word boundary. This is a position where the previous and\n          next character are of the same type: Either both must be words, or\n          both must be non-words, for example between two letters or between two\n          spaces. The beginning and end of a string are considered non-words.\n          Same as the matched word boundary, the matched non-word boundary is\n          also not included in the match. For example,\n          <code>/\\Bon/</code> matches \"on\" in \"at noon\", and\n          <code>/ye\\B/</code> matches \"ye\" in \"possibly yesterday\".\n        </p>\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"other_assertions","title":"Other assertions","isH3":true,"content":"<div class=\"note notecard\" id=\"sect2\">\n  <p><strong>Note</strong>: The <code>?</code> character may also be used as a quantifier.</p>\n</div>\n<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Characters</th>\n      <th scope=\"col\">Meaning</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>x(?=y)</code></td>\n      <td>\n        <p>\n          <strong>Lookahead assertion: </strong>Matches \"x\" only if \"x\" is\n          followed by \"y\". For example, /<code>Jack(?=Sprat)/</code> matches\n          \"Jack\" only if it is followed by \"Sprat\".<br><code>/Jack(?=Sprat|Frost)/</code>\n          matches \"Jack\" only if it is followed by \"Sprat\" or \"Frost\". However,\n          neither \"Sprat\" nor \"Frost\" is part of the match results.\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td><code>x(?!y)</code></td>\n      <td>\n        <p>\n          <strong>Negative lookahead assertion: </strong>Matches \"x\" only if \"x\"\n          is not followed by \"y\". For example, <code>/\\d+(?!\\.)/</code> matches\n          a number only if it is not followed by a decimal point.\n          <code>/\\d+(?!\\.)/.exec('3.141')</code> matches \"141\" but not \"3.\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td><code>(?&lt;=y)x</code></td>\n      <td>\n        <p>\n          <strong>Lookbehind assertion: </strong>Matches \"x\" only if \"x\" is\n          preceded by \"y\". For example,\n          <code>/(?&lt;=Jack)Sprat/</code> matches \"Sprat\" only if it is\n          preceded by \"Jack\". <code>/(?&lt;=Jack|Tom)Sprat/</code> matches\n          \"Sprat\" only if it is preceded by \"Jack\" or \"Tom\". However, neither\n          \"Jack\" nor \"Tom\" is part of the match results.\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td><code>(?&lt;!y)x</code></td>\n      <td>\n        <p>\n          <strong>Negative lookbehind assertion: </strong>Matches \"x\" only if\n          \"x\" is not preceded by \"y\". For example,\n          <code>/(?&lt;!-)\\d+/</code> matches a number only if it is not\n          preceded by a minus sign.\n          <code>/(?&lt;!-)\\d+/.exec('3')</code> matches \"3\".\n          <code>/(?&lt;!-)\\d+/.exec('-3')</code> match is not found because\n          the number is preceded by the minus sign.\n        </p>\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"general_boundary-type_overview_example","title":"General boundary-type overview example","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Using Regex boundaries to fix buggy string.</span>\nbuggyMultiline <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">tey, ihe light-greon apple\ntangs on ihe greon traa</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 1) Use ^ to fix the matching at the begining of the string, and right after newline.</span>\nbuggyMultiline <span class=\"token operator\">=</span> buggyMultiline<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^t</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gim</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> buggyMultiline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// fix 'tey', 'tangs' =&gt; 'hey', 'hangs'. Avoid 'traa'.</span>\n\n<span class=\"token comment\">// 2) Use $ to fix matching at the end of the text.</span>\nbuggyMultiline <span class=\"token operator\">=</span> buggyMultiline<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">aa$</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gim</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">'ee.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> buggyMultiline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// fix  'traa' =&gt; 'tree'.</span>\n\n<span class=\"token comment\">// 3) Use \\b to match characters right on border between a word and a space.</span>\nbuggyMultiline <span class=\"token operator\">=</span> buggyMultiline<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\bi</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gim</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> buggyMultiline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// fix  'ihe' but does not touch 'light'.</span>\n\n<span class=\"token comment\">// 4) Use \\B to match characters inside borders of an entity.</span>\nfixedMultiline <span class=\"token operator\">=</span> buggyMultiline<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\Bo</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gim</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> fixedMultiline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// fix  'greon' but does not touch 'on'.</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"matching_the_beginning_of_an_input_using_a_control_character","title":"Matching the beginning of an input using a ^ control character","isH3":true,"content":"<p>입력 시작시 일치를 위해 <code>^</code>를 사용하십시오. 이 예에서는 <code>/^A/</code> regex로 'A'로 시작하는 결과를 얻습니다. 여기서 <code>^</code>는 한 가지 역할 만합니다. 적절한 결과를 보기위해 <a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">화살표</a> 함수가있는 <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\">필터</a> 메소드를 사용합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Watermelon\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Orange\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Avocado\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Strawberry\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Select fruits started with 'A' by /^A/ Regex.</span>\n<span class=\"token comment\">// Here '^' control symbol used only in one role: Matching begining of an input.</span>\n\n<span class=\"token keyword\">let</span> fruitsStartsWithA <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fruit</span> <span class=\"token operator\">=&gt;</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^A</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruitsStartsWithA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'Apple', 'Avocado' ]</span>\n</code></pre></div>\n<p>두 번째 예제에서 <code>^</code>는 두 가지 모두에 사용됩니다 : 입력의 일치 시작점, <a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges\">그룹</a>에서 사용될 때 부정 또는 보완 문자 세트.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Watermelon\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Orange\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Avocado\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Strawberry\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Selecting fruits that dose not start by 'A' by a /^[^A]/ regex.</span>\n<span class=\"token comment\">// In this example, two meanings of '^' control symbol are represented:</span>\n<span class=\"token comment\">// 1) Matching begining of the input</span>\n<span class=\"token comment\">// 2) A negated or complemented character set: [^A]</span>\n<span class=\"token comment\">// That is, it matches anything that is not enclosed in the brackets.</span>\n\n<span class=\"token keyword\">let</span> fruitsStartsWithNotA <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fruit</span> <span class=\"token operator\">=&gt;</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[^A]</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruitsStartsWithNotA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'Watermelon', 'Orange', 'Strawberry' ]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"matching_a_word_boundary","title":"Matching a word boundary","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> fruitsWithDescription <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Red apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Orange orange\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Green Avocado\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Select descriptions that contains 'en' or 'ed' words endings:</span>\n<span class=\"token keyword\">let</span> enEdSelection <span class=\"token operator\">=</span> fruitsWithDescription<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">descr</span> <span class=\"token operator\">=&gt;</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(en|ed)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>descr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>enEdSelection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'Red apple', 'Green Avocado' ]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"lookahead_assertion","title":"Lookahead assertion","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// JS Lookahead assertion x(?=y)</span>\n\n<span class=\"token keyword\">let</span> regex <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">First(?= test)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'First test'</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'First' ]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'First peach'</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// null</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is a First test in a year.'</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'First' ]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is a First peach in a month.'</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// null</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"basic_negative_lookahead_assertion","title":"Basic negative lookahead assertion","isH3":true,"content":"<p>For example, <code>/\\d+(?!\\.)/</code> matches a number only if it is not followed by a decimal point. <code>/\\d+(?!\\.)/.exec('3.141')</code> matches \"141\" but not \"3.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\d+(?!\\.)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">'3.141'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ '141', index: 2, input: '3.141' ]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"different_meaning_of_!_combination_usage_in_assertions_and_ranges","title":"Different meaning of '?!' combination usage in Assertions and Ranges","isH3":true,"content":"<p>Different meaning of <code>?!</code> combination usage in <a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Assertions\">Assertions</a> <code>/x(?!y)/</code> and <a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges\">Ranges</a> <code>[^?!]</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> orangeNotLemon <span class=\"token operator\">=</span> <span class=\"token string\">\"Do you want to have an orange? Yes, I do not want to have a lemon!\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Different meaning of '?!' combination usage in Assertions /x(?!y)/ and  Ranges /[^?!]/</span>\n<span class=\"token keyword\">let</span> selectNotLemonRegex <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[^?!]+have(?! a lemon)[^?!]+[?!]</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gi</span></span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>orangeNotLemon<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>selectNotLemonRegex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'Do you want to have an orange?' ]</span>\n\n<span class=\"token keyword\">let</span> selectNotOrangeRegex <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[^?!]+have(?! an orange)[^?!]+[?!]</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gi</span></span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>orangeNotLemon<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>selectNotOrangeRegex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ ' Yes, I do not want to have a lemon!' ]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"lookbehind_assertion","title":"Lookbehind assertion","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> oranges <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ripe orange A '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'green orange B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ripe orange C'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> ripe_oranges <span class=\"token operator\">=</span> oranges<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">fruit</span> <span class=\"token operator\">=&gt;</span> fruit<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(?&lt;=ripe )orange</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ripe_oranges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'ripe orange A ', 'ripe orange C' ]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"{{Specifications}}"}},{"type":"prose","value":{"id":"browser_compatibility","title":"Browser compatibility","isH3":false,"content":"<p>For browser compatibility information, check out the <a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#browser_compatibility\">main Regular Expressions compatibility table</a>.</p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\">Regular expressions guide</a>\n    <ul>\n      <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Character_Classes\">Character classes</a></li>\n      <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Quantifiers\">Quantifiers</a></li>\n      <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Unicode_Property_Escapes\">Unicode property escapes</a></li>\n      <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Backreferences\">Groups and ranges</a></li>\n    </ul>\n  </li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">The <code>RegExp()</code> constructor</a></li>\n</ul>"}}],"toc":[{"text":"Types","id":"types"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"Assertions에는 행이나 단어의 시작 · 끝을 나타내는 경계와 (앞, 뒤 읽고 조건식을 포함한) 어떤 식 으로든 매치가 가능한 것을 나타내는 다른 패턴이 포함됩니다.","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Assertions","locale":"en-US","native":"English (US)"},{"title":"Aserciones","locale":"es","native":"Español"},{"title":"Assertions","locale":"fr","native":"Français"},{"title":"言明","locale":"ja","native":"日本語"},{"title":"Assertions","locale":"ru","native":"Русский"},{"title":"Assertions","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/web/javascript/guide/regular_expressions/assertions","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/javascript/guide/regular_expressions/assertions/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ko/docs/Web/JavaScript/Guide","title":"JavaScript 안내서"},{"uri":"/ko/docs/Web/JavaScript/Guide/Regular_Expressions","title":"정규 표현식"},{"uri":"/ko/docs/Web/JavaScript/Guide/Regular_Expressions/Assertions","title":"Assertions"}],"pageTitle":"Assertions - JavaScript | MDN","noIndexing":false}}