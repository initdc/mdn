{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"JavaScript의 타입과 자료구조","mdn_url":"/ko/docs/Web/JavaScript/Data_structures","locale":"ko","native":"한국어","sidebarHTML":"\n <ol>\n  <li><a href=\"/ko/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/ko/docs/Web/JavaScript/Tutorials\"><strong>Tutorials:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Complete beginners</summary>\n      <ol>\n        <li><a href=\"/ko/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript basics</a></li>\n        <li><a href=\"/ko/docs/Learn/JavaScript/First_steps\">JavaScript first steps</a></li>\n        <li><a href=\"/ko/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks</a></li>\n        <li><a href=\"/ko/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>JavaScript Guide</summary>\n      <ol>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Introduction\">Introduction</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Grammar_and_Types\">Grammar and types</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">Control flow and error handling</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Loops_and_iteration\">Loops and iteration</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Functions\">Functions</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Expressions_and_Operators\">Expressions and operators</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Numbers_and_dates\">Numbers and dates</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Text_formatting\">Text formatting</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Regular_Expressions\">Regular expressions</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Indexed_collections\">Indexed collections</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Keyed_collections\">Keyed collections</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Working_with_Objects\">Working with objects</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">Details of the object model</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Using_promises\">Using promises</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Iterators_and_generators\">Iterators and generators</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Meta_programming\">Meta programming</a></li>\n          <li><a href=\"/ko/docs/Web/JavaScript/Guide/Modules\">JavaScript modules</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Intermediate</summary>\n      <ol>\n        <li><a href=\"/ko/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">Client-side JavaScript frameworks</a></li>\n        <li><a href=\"/ko/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">A re-introduction to JavaScript</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Data_structures\">JavaScript data structures</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Equality_comparisons_and_sameness\">Equality comparisons and sameness</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Closures\">Closures</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Advanced</summary>\n      <ol>\n        <li><a href=\"/ko/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">Inheritance and the prototype chain</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Typed_arrays\">JavaScript typed arrays</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Memory_Management\">Memory Management</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/EventLoop\">Concurrency model and Event Loop</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ko/docs/Web/JavaScript/Reference\">References:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>Built-in objects</summary>\n        <ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Expressions &amp; operators</summary>\n      <ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Statements &amp; declarations</summary>\n      <ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Functions</summary>\n      <ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Classes</summary>\n      <ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Errors</summary>\n      <ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Misc</summary>\n      <ol>\n        <li><a href=\"/ko/docs/Web/JavaScript/JavaScript_technologies_overview\">JavaScript technologies overview</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Lexical_grammar\">Lexical grammar</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Data_structures\">JavaScript data structures</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">Enumerability and ownership of properties</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Iteration_protocols\">Iteration protocols</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">Transitioning to strict mode</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Template_literals\">Template literals</a></li>\n        <li><a href=\"/ko/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">Deprecated features</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>모든 프로그래밍 언어에는 내장된 자료구조가 존재하지만 보통 그 내용은 언어마다 다릅니다. 이 글에서는 JavaScript에서 사용할 수 있는 내장 자료구조와 그 속성에 대해 알아보겠습니다. 그러면 이 자료구조들을 다른 자료구조 개발에 사용할 수 있을 것입니다. 가능하다면 다른 언어와도 비교해보겠습니다.</p>"}},{"type":"prose","value":{"id":"동적_타입","title":"동적 타입","isH3":false,"content":"<p>JavaScript는 느슨한 타입(loosely typed)의 동적(dynamic) 언어입니다. JavaScript의 변수는 어떤 특정 타입과 연결되지 않으며, 모든 타입의 값으로 할당 (및 재할당) 가능합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> foo <span class=\"token operator\">=</span> <span class=\"token number\">42</span> <span class=\"token comment\">// foo가 숫자</span>\nfoo <span class=\"token operator\">=</span> <span class=\"token string\">'bar'</span> <span class=\"token comment\">// foo가 이제 문자열</span>\nfoo <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// foo가 이제 불리언</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript의_타입","title":"JavaScript의 타입","isH3":false,"content":"<p>JavaScript 언어의 타입은 <a href=\"#%EC%9B%90%EC%8B%9C_%EA%B0%92\">원시 값</a>과 <a href=\"#%EA%B0%9D%EC%B2%B4\">객체</a>로 나뉩니다.</p>\n<ul>\n  <li><a href=\"#%EC%9B%90%EC%8B%9C_%EA%B0%92\">원시 값</a> (언어의 최고 로우레벨에서 직접 표현되는 불변 데이터)\n    <ul>\n      <li><a href=\"#boolean_%ED%83%80%EC%9E%85\">Boolean 타입</a></li>\n      <li><a href=\"#null_%ED%83%80%EC%9E%85\">Null 타입</a></li>\n      <li><a href=\"#undefined_%ED%83%80%EC%9E%85\">Undefined 타입</a></li>\n      <li><a href=\"#number_타입\">Number 타입</a></li>\n      <li><a href=\"#bigint_%ED%83%80%EC%9E%85\">BigInt 타입</a></li>\n      <li><a href=\"#string_%ED%83%80%EC%9E%85\">String 타입</a></li>\n      <li><a href=\"#symbol_%ED%83%80%EC%9E%85\">Symbol 타입</a></li>\n    </ul>\n  </li>\n  <li><a href=\"#%EA%B0%9D%EC%B2%B4\">객체</a> (속성의 컬렉션)</li>\n</ul>"}},{"type":"prose","value":{"id":"원시_값","title":"원시 값","isH3":false,"content":"<p>객체를 제외한 모든 타입은 불변 값(변경할 수 없는 값)을 정의합니다. 예를 들어 (C 언어와는 달리) 문자열은 불변합니다. 이런 일련의 타입을 \"원시 값\"이라고 합니다.</p>"}},{"type":"prose","value":{"id":"boolean_타입","title":"Boolean 타입","isH3":true,"content":"<p>Boolean 타입은 논리 요소를 나타내며 <code>true</code>와 <code>false</code> 두 가지의 값을 가질 수 있습니다. <a href=\"/ko/docs/Glossary/Boolean\">불리언</a>과 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>에서 더 자세히 알아보세요.</p>"}},{"type":"prose","value":{"id":"null_타입","title":"Null 타입","isH3":true,"content":"<p>Null 타입은 <code>null</code> 하나의 값만 가질 수 있습니다. <a href=\"/ko/docs/Glossary/Null\">Null</a>과 <a href=\"/ko/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a>에서 더 자세히 알아보세요.</p>"}},{"type":"prose","value":{"id":"undefined_타입","title":"Undefined 타입","isH3":true,"content":"<p>값을 할당하지 않은 변수는 <code>undefined</code> 값을 가집니다. <a href=\"/ko/docs/Glossary/undefined\">Undefined</a>와 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>에서 더 자세히 알아보세요.</p>"}},{"type":"prose","value":{"id":"number_타입","title":"Number 타입","isH3":true,"content":"<p>ECMAScript는 <strong>Number</strong>와 <strong>BigInt</strong> 두 가지의 내장 숫자 타입을 가지고 있습니다. (BigInt는 아래를 보세요)</p>\n<p>Number 타입은 <a href=\"https://en.wikipedia.org/wiki/Double_precision_floating-point_format\" class=\"external\" rel=\" noopener\">배정밀도 64비트 이진 형식 IEEE 754 값</a>(-(2^53 − 1)부터 2^53 − 1까지의 수)입니다. Number 타입은 부동소수점 숫자 외에도 <code>+Infinity</code>, <code>-Infinity</code>, <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>(\"<strong>N</strong>ot a <strong>N</strong>umber\") 세 개의 상징적인 값을 가집니다.</p>\n<p><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Infinity\"><code>±Infinity</code></a> 범위 내에서 가능한 가장 크거나 작은 수를 확인하려면 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE\"><code>Number.MAX_VALUE</code></a>와 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE\"><code>Number.MIN_VALUE</code></a> 상수를 사용할 수 있습니다.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>참고:</strong> ECMAScript 2015부터는 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\"><code>Number.isSafeInteger()</code></a>와 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a> 및 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\"><code>Number.MIN_SAFE_INTEGER</code></a>를 사용하여 숫자가 배정밀도 부동 소수점 숫자 범위 안에 있는지 확인할 수도 있습니다.</p>\n  <p>이 범위를 넘어서면 JavaScript의 정수는 더 이상 안전하지 않으며, 그 값의 배정밀도 부동 소수점 근삿값이 됩니다.</p>\n</div>\n<p>Number 타입의 값 중 두 가지 방식으로 표현할 수 있는 유일한 값으로 <code>0</code>이 있습니다. <code>0</code>은 <code>-0</code>과 <code>+0</code> 둘 다로 표현할 수 있습니다. (<code>0</code>은 <code>+0</code>의 별칭입니다)</p>\n<p>실제로는 이 사실이 영향을 주는 것은 거의 없습니다. 예컨대 <code>+0 === -0</code>은 참입니다. 그러나 0으로 나눌 경우 둘의 차이를 볼 수 있을 것입니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">&gt;</span> <span class=\"token number\">42</span> <span class=\"token operator\">/</span> <span class=\"token operator\">+</span><span class=\"token number\">0</span>\n<span class=\"token number\">Infinity</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token number\">42</span> <span class=\"token operator\">/</span> <span class=\"token operator\">-</span><span class=\"token number\">0</span>\n<span class=\"token operator\">-</span><span class=\"token number\">Infinity</span>\n</code></pre></div>\n<p>숫자는 보통 그 값만으로 표현되긴 하지만, JavaScript는 <a href=\"/ko/docs/Web/JavaScript/Reference/Operators\">이진(비트) 연산자</a>도 제공합니다.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>참고:</strong> <a href=\"https://ko.wikipedia.org/wiki/%EB%A7%88%EC%8A%A4%ED%81%AC_(%EC%BB%B4%ED%93%A8%ED%8C%85)\" class=\"external\" rel=\" noopener\">비트 마스킹</a>을 사용해서 하나의 숫자 안에 다수의 불리언 값을 나타낼 때 비트 연산자를 사용할 수 있긴 하지만 이건 보통 나쁜 방법으로 여겨집니다. JavaScript는 일련의 불리언 값들을 나타내는 방법을 (배열이나 불리언 속성 값을 할당한 객체로) 제공합니다. 비트 마스킹은 코드를 읽고, 이해하고, 유지하기 힘들게 만듭니다.</p>\n  <p>다만 로컬 저장소의 한정된 공간을 활용해야 한다거나, 네트워크의 비트 하나하나가 소중한 극한 상황처럼 제한된 환경에서는 이런 기술이 필요할 수도 있습니다. 비트 마스킹은 용량 최적화의 마지막 수단으로만 고려해야 합니다.</p>\n</div>"}},{"type":"prose","value":{"id":"bigint_타입","title":"BigInt 타입","isH3":true,"content":"<p>BigInt 타입은 임의 정밀도로 정수를 나타낼 수 있는 JavaScript 숫자 원시 값입니다. BigInt를 Number의 안전 한계를 넘어서는 큰 정수도 안전하게 저장하고 연산할 수 있습니다.</p>\n<p>BigInt는 정수 끝에 <code>n</code>을 추가하거나 생성자를 호출해 생성할 수 있습니다.</p>\n<p>Number의 안전 한계는 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a>로 알아볼 수 있습니다. BigInt의 도입 이후로는 이 한계를 넘는 숫자에 대해 계산이 가능합니다.</p>\n<p>다음 예제는 <code>Number.MAX_SAFE_INTEGER</code> 밖으로 나가는 정수에서도 예상된 값을 반환하는 것을 보입니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token number\">2n</span> <span class=\"token operator\">**</span> <span class=\"token number\">53n</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">9007199254740992n</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1n</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">9007199254740993n</span>\n</code></pre></div>\n<p><code>+</code>, <code>*</code>, <code>-</code>, <code>**</code>, <code>%</code> 연산자를 Number에 사용하듯 BigInt에서도 사용할 수 있습니다. BigInt는 Number와 엄격하게 같지는 않지만 유사합니다.</p>\n<p>BigInt는 <code>if</code>, <code>||</code>, <code>&amp;&amp;</code>, <code>Boolean</code>, <code>!</code>처럼 불리언 변환이 발생하는 곳에서는 <code>Number</code>처럼 동작합니다.</p>\n<p>BigInt는 Number와 혼합해 연산할 수 없으며, 이때 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>가 발생합니다.</p>"}},{"type":"prose","value":{"id":"string_타입","title":"String 타입","isH3":true,"content":"<p>JavaScript의 String 타입은 텍스트 데이터를 나타낼 때 사용합니다. String은 16비트 부호 없는 정수 값 \"요소\"로 구성된 집합으로, 각각의 요소가 String의 한 자리를 차지합니다. 첫 번째 요소는 인덱스 <code>0</code>에, 그 다음 요소는 인덱스 <code>1</code>, 그 다음은 <code>2</code>, ...입니다. String의 길이는 그 안의 요소 수와 같습니다.</p>\n<p>C 언어와 같은 일부 프로그래밍 언어와 달리 JavaScript 문자열은 불변합니다. 즉 문자열을 생성한 후 바꾸는 것은 불가능합니다.</p>\n<p>그러나 원본 문자열을 사용해 새로운 문자열을 생성하는 것은 가능합니다. 예를 들어,</p>\n<ul>\n  <li>원본 문자열에서 각각의 문자를 선택하거나 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/String/substr\"><code>String.substr()</code></a>을 사용해 생성한 부분문자열</li>\n  <li>연결 연산자(<code>+</code>)를 사용하거나 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/String/concat\"><code>String.concat()</code></a>을 사용해 두 개의 문자열을 합친 결과물</li>\n</ul>\n<h4 id=\"문자열의_타입화를_조심하라!\">\"문자열의 타입화\"를 조심하라!</h4>\n<p>문자열을 사용해 복잡한 데이터를 표현하는 것이 매력적으로 보일지도 모르고, 단기적으로는 다음과 같은 장점이 있습니다.</p>\n<ul>\n  <li>연결 연산자를 통해 복잡한 문자열을 쉽게 만들 수 있습니다.</li>\n  <li>문자열은 디버깅이 쉽습니다. (출력 내용이 항상 문자열의 값과 동일)</li>\n  <li>문자열은 많은 API(<a href=\"/en-US/docs/Web/API/HTMLInputElement\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">입력 칸 (en-US)</a>, <a href=\"/ko/docs/Web/API/Web_Storage_AP\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">로컬 스토리지</a> 값, <code>responseText</code>와 함께 사용하는 <a href=\"/ko/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> 등등)의 공통 분모입니다.</li>\n</ul>\n<p>규칙만 잘 정한다면 어떤 자료구조라도 문자열로 표현할 수 있습니다. 그러나 그게 좋은 방법이 되는 것은 아닙니다. 예컨대, 구분자를 사용하면 (물론 JavaScript 배열이 더 적합하겠지만) 문자열로 리스트를 흉내낼 수도 있을 것입니다. 그러나 구분자를 리스트의 요소로 사용하는 순간 리스트가 망가지고 맙니다. 이제 구분자를 구분하기 위해 이스케이프 문자를 선택하고, 등등... 이 모든 것이 각자의 규칙을 필요로 하고 불필요한 유지보수 부담을 낳습니다.</p>\n<p>문자열은 텍스트 데이터에만 사용하세요. 복잡한 데이터를 표현해야 할 땐 문자열을 파싱해서 적합한 추상화로 덮으세요.</p>"}},{"type":"prose","value":{"id":"symbol_타입","title":"Symbol 타입","isH3":true,"content":"<p>Symbol은 <strong>고유</strong>하고 <strong>변경 불가능한</strong> 원시 값이며 객체의 속성(아래를 참고하세요) 키로 사용할 수 있습니다. 어떤 프로그래밍 언어들에선 \"아톰\"이라고 부르기도 합니다.</p>\n<p><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">심볼</a>과 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Symbol\"><code>Symbol</code></a>에서 더 자세히 알아보세요.</p>"}},{"type":"prose","value":{"id":"객체","title":"객체","isH3":false,"content":"<p>컴퓨터 과학에서의 객체란 <a href=\"/ko/docs/Glossary/Identifier\">식별자</a>로 참조할 수 있는 메모리 상의 값을 말합니다.</p>"}},{"type":"prose","value":{"id":"속성","title":"속성","isH3":true,"content":"<p>JavaScript에서의 객체는 속성의 컬렉션으로 볼 수 있습니다. <a href=\"/ko/docs/Web/JavaScript/Guide/Grammar_and_types#%EA%B0%9D%EC%B2%B4_%EB%A6%AC%ED%84%B0%EB%9F%B4\">객체 리터럴 구문</a>을 사용해 제한적으로 속성을 초기화할 수의 있고, 그 후에 속성을 추가하거나 제거할 수도 있습니다. 속성 값으로는 다른 객체를 포함해 모든 타입을 사용할 수 있으므로 복잡한 자료구조의 구축이 가능합니다. 속성은 '키' 값으로 식별하며, 키 값으로는 <a href=\"/ko/docs/Glossary/String\">문자열 값</a>이나 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">심볼</a>을 사용할 수 있습니다.</p>\n<p>객체 속성에는 <a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0_%EC%86%8D%EC%84%B1\">데이터 속성</a>과 <a href=\"#%EC%A0%91%EA%B7%BC%EC%9E%90_%EC%86%8D%EC%84%B1\">접근자 속성</a> 두 종류가 있습니다.</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>참고:</strong> 각각의 속성에는 다시 '특성'들이 존재합니다. 특성은 JavaScript 엔진이 내부적으로 사용하므로 직접 접근하는 것은 불가능합니다. 따라서 특성은 표기할 때 이중 대괄호로 감싸서 나타냅니다.</p>\n  <p><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a>에서 더 알아보세요.</p>\n</div>\n<h4 id=\"데이터_속성\">데이터 속성</h4>\n<p>데이터 속성은 키를 값과 연결하며, 다음과 같은 특성을 가집니다.</p>\n<table class=\"standard-table\">\n  <caption>데이터 속성의 특성</caption>\n  <thead>\n    <tr>\n      <th scope=\"col\">특성</th>\n      <th scope=\"col\">타입</th>\n      <th scope=\"col\">설명</th>\n      <th scope=\"col\">기본 값</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>[[Value]]</td>\n      <td>모든 JavaScript 타입</td>\n      <td>속성에 대한 회수 접근에 반환하는 값입니다.</td>\n      <td><code>undefined</code></td>\n    </tr>\n    <tr>\n      <td>[[Writable]]</td>\n      <td>Boolean</td>\n      <td><code>false</code>면 속성의 [[Value]]를 바꿀 수 없습니다.</td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td>[[Enumerable]]</td>\n      <td>Boolean</td>\n      <td>\n        <p>\n          <code>true</code>면 속성이\n          <a href=\"/ko/docs/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a>\n          반복문에 노출됩니다.<br><a href=\"/ko/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">열거 가능성과 속성 소유권</a>을 참고하세요.\n        </p>\n      </td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td>[[Configurable]]</td>\n      <td>Boolean</td>\n      <td><code>false</code>면 속성을 삭제하거나, 접근자 속성으로 변경하거나, [[Value]]와 [[Writable]]을 제외한 특성을 변경할 수 없습니다.</td>\n      <td><code>false</code></td>\n    </tr>\n  </tbody>\n</table>\n<table>\n  <thead>\n    <tr>\n      <th>특성</th>\n      <th>타입</th>\n      <th>설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Read-only</td>\n      <td>Boolean</td>\n      <td>ES5 [[Writable]] 특성의 반대 값입니다.</td>\n    </tr>\n    <tr>\n      <td>DontEnum</td>\n      <td>Boolean</td>\n      <td>ES5 [[Enumerable]] 특성의 반대 값입니다.</td>\n    </tr>\n    <tr>\n      <td>DontDelete</td>\n      <td>Boolean</td>\n      <td>ES5 [[Configurable]] 특성의 반대 값입니다.</td>\n    </tr>\n  </tbody>\n</table>\n<h4 id=\"접근자_속성\">접근자 속성</h4>\n<p>접근자 속성은 키를 두 개의 접근자 함수(<code>get</code>, <code>set</code>) 중 하나 이상과 연결하여 값을 가져오거나 저장합니다.</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>참고:</strong> 접근자 '메서드'가 아니라 접근자 '속성'임을 인지하는 것이 중요합니다. JavaScript 객체에도 함수 값을 사용해서 클래스처럼 접근자를 부여할 수 있지만, 그렇다고 그 객체가 클래스로 바뀌는 것은 아닙니다.</p>\n</div>\n<p>접근자 속성은 다음과 같은 특성을 가집니다.</p>\n<table class=\"standard-table\">\n  <caption>접근자 속성의 특성</caption>\n  <thead>\n    <tr>\n      <th scope=\"col\">특성</th>\n      <th scope=\"col\">타입</th>\n      <th scope=\"col\">설명</th>\n      <th scope=\"col\">기본 값</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>[[Get]]</td>\n      <td>함수 객체 또는 Undefined</td>\n      <td>\n        값에 대해 접근을 시도하면 매개변수 없이 호출해서 속성 값을 회수합니다.\n        <a href=\"/ko/docs/Web/JavaScript/Reference/Functions/get\"><code>get</code>을 참고하세요.</a>\n      </td>\n      <td><code>undefined</code></td>\n    </tr>\n    <tr>\n      <td>[[Set]]]</td>\n      <td>함수 객체 또는 Undefined</td>\n      <td>\n        값에 대해 변경을 시도하면 변경을 시도한 값을 유일한 매개변수로 사용해 호출합니다.\n        <a href=\"/ko/docs/Web/JavaScript/Reference/Functions/set\"><code>set</code>을 참고하세요.</a>\n      </td>\n      <td><code>undefined</code></td>\n    </tr>\n    <tr>\n      <td>[[Enumerable]]</td>\n      <td>Boolean</td>\n      <td>\n        <p>\n          <code>true</code>면 속성이\n          <a href=\"/ko/docs/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a>\n          반복문에 노출됩니다.\n        </p>\n      </td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td>[[Configurable]]</td>\n      <td>Boolean</td>\n      <td><code>false</code>면 속성을 삭제하거나 데이터 속성으로 변경할 수 없습니다.</td>\n      <td><code>false</code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"일반_객체와_함수","title":"\"일반\" 객체와 함수","isH3":true,"content":"<p>JavaScript 객체는 키와 값 사이의 맵핑입니다. 키는 문자열 또는 심볼이고 값은 아무 것이나 가능합니다. 따라서 객체는 자연스럽게 <a href=\"https://ko.wikipedia.org/wiki/%ED%95%B4%EC%8B%9C_%ED%85%8C%EC%9D%B4%EB%B8%94\" class=\"external\" rel=\" noopener\">해시 테이블</a>에 적합합니다.</p>\n<p>함수는 '호출이 가능함'을 제외하면 일반적인 객체입니다.</p>"}},{"type":"prose","value":{"id":"날짜","title":"날짜","isH3":true,"content":"<p>날짜와 시간을 나타낼 때의 가장 좋은 선택은 JavaScript 내장 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code> 유틸리티</a>를 사용하는 것입니다.</p>"}},{"type":"prose","value":{"id":"인덱스_컬렉션_배열과_형식화_배열","title":"인덱스 컬렉션: 배열과 형식화 배열","isH3":true,"content":"<p><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array\">배열</a>은 정수 키를 가진 속성과 <code>length</code> 속성 사이에 특별한 연관을 지어놓은 일반 객체입니다.</p>\n<p>이에 더해, 배열은 <code>Array.prototype</code>을 상속하여 배열을 조작할 수 있는, <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>indexOf()</code></a>(배열에서 값 탐색), <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/push\"><code>push()</code></a>(배열에 값 추가) 등 다양하고 편리한 메서드를 제공합니다.</p>\n<p><a href=\"/ko/docs/Web/JavaScript/Typed_arrays\">형식화 배열</a>은 안쪽의 이진 데이터 버퍼에 대해 배열과 같은 뷰를 제공합니다. 다음 표에서 형식화 배열에 대응하는 C 타입을 볼 수 있습니다.</p>\n<table>\n  <thead>\n    <tr>\n      <th>타입</th>\n      <th>값 범위</th>\n      <th>바이트 크기</th>\n      <th>설명</th>\n      <th>Web IDL 타입</th>\n      <th>대응하는 C 타입</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\"><code>Int8Array</code></a></td>\n      <td><code>-128</code> ~ <code>127</code></td>\n      <td>1</td>\n      <td>8비트 2의 보수 부호 있는 정수</td>\n      <td><code>byte</code></td>\n      <td><code>int8_t</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Uint8Array</code></a></td>\n      <td><code>0</code> ~ <code>255</code></td>\n      <td>1</td>\n      <td>8비트 부호 없는 정수</td>\n      <td><code>octet</code></td>\n      <td><code>uint8_t</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Uint8ClampedArray</code></a></td>\n      <td><code>0</code> ~ <code>255</code></td>\n      <td>1</td>\n      <td>8비트 부호 없는 정수 (클램핑)</td>\n      <td><code>octet</code></td>\n      <td><code>uint8_t</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Int16Array</code></a></td>\n      <td><code>-32768</code> ~ <code>32767</code></td>\n      <td>2</td>\n      <td>16비트 2의 보수 부호 있는 정수</td>\n      <td><code>short</code></td>\n      <td><code>int16_t</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Uint16Array</code></a></td>\n      <td><code>0</code> ~ <code>65535</code></td>\n      <td>2</td>\n      <td>16비트 부호 없는 정수</td>\n      <td><code>unsigned short</code></td>\n      <td><code>uint16_t</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Int32Array</code></a></td>\n      <td><code>-2147483648</code> ~ <code>2147483647</code></td>\n      <td>4</td>\n      <td>32비트 2의 보수 부호 있는 정수</td>\n      <td><code>long</code></td>\n      <td><code>int32_t</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Uint32Array</code></a></td>\n      <td><code>0</code> ~ <code>4294967295</code></td>\n      <td>4</td>\n      <td>32비트 부호 없는 정수</td>\n      <td><code>unsigned long</code></td>\n      <td><code>uint32_t</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Float32Array</code></a></td>\n      <td><code>1.2E-38</code> ~ <code>3.4E38</code></td>\n      <td>4</td>\n      <td>32비트 IEEE 부동소수점 실수 (7개의 유효숫자, e.g. <code>1.1234567</code>)</td>\n      <td><code>unrestricted float</code></td>\n      <td><code>float</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Float64Array</code></a></td>\n      <td><code>5E-324</code> ~ <code>1.8E308</code></td>\n      <td>8</td>\n      <td>64비트 IEEE 부동소수점 실수 (16개의 유효숫자, e.g. <code>1.123...15</code>)</td>\n      <td><code>unrestricted double</code></td>\n      <td><code>double</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>BigInt64Array</code></a></td>\n      <td><code>-2^63</code> ~ <code>2^63 - 1</code></td>\n      <td>8</td>\n      <td>64비트 2의 보수 부호 있는 정수</td>\n      <td><code>bigint</code></td>\n      <td><code>int64_t (signed long long)</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>BigUint64Array</code></a></td>\n      <td><code>0</code> ~ <code>2^64 - 1</code></td>\n      <td>8</td>\n      <td>64비트 부호 없는 정수</td>\n      <td><code>bigint</code></td>\n      <td><code>uint64_t (unsigned long long)</code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"키_컬렉션_map_set_weakmap_weakset","title":"키 컬렉션: Map, Set, WeakMap, WeakSet","isH3":true,"content":"<p>키 컬렉션 자료구조는 ECMAScript 6판에 추가됐으며 객체 참조를 키로 가집니다. <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Set\"><code>Set</code></a>과 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\"><code>WeakSet</code></a>은 객체의 집합을 나타내며 <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Map</code></a>과 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\"><code>WeakMap</code></a>은 객체와 값을 연결짓습니다.</p>\n<p><code>Map</code>과 <code>WeakMap</code>의 차이는 <code>Map</code>에서만 객체 키를 열거할 수 있다는 점입니다. 덕분에 <code>WeakMap</code>에 대해서는 가비지 컬렉션 최적화를 수행할 수 있습니다.</p>\n<p><code>Map</code>과 <code>Set</code>은 순수한 ECMAScript 5에서도 구현할 수 있습니다. 그러나 객체를 직접 비교(<code>&lt;</code>, \"작음\" 비교와 같이)할 방법은 없으므로 탐색 성능이 선형(<em>O(n)</em>)으로 강제됩니다. 반면 (<code>WeakMap</code>을 포함해) 네이티브 구현의 경우 대략 로그 시간(<em>O(log n)</em>)에 가까운 성능을 낼 수 있습니다.</p>\n<p>보통 DOM 노드에 데이터를 연결할 땐 해당 객체에 직접 속성을 추가하거나 <code>data-*</code> 특성을 사용하겠지만, 같은 맥락 아래에서라면 이렇게 추가한 데이터를 모든 스크립트에서 다 사용할 수 있다는 문제가 있습니다. <code>Map</code>과 <code>WeakMap</code>을 사용하면 비공개 데이터를 객체에 쉽게 바인딩 할 수 있습니다.</p>"}},{"type":"prose","value":{"id":"구조화된_자료_json","title":"구조화된 자료: JSON","isH3":true,"content":"<p>JSON(<strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation)은 경량 데이터 교환 형식으로, JavaScript에서 파생됐지만 많은 프로그래밍 언어에서 사용하고 있습니다. JSON은 범용 데이터 구조를 구성합니다.</p>\n<p><a href=\"/ko/docs/Glossary/JSON\">JSON</a>과 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/JSON\"><code>JSON</code></a>에서 더 자세히 알아보세요.</p>"}},{"type":"prose","value":{"id":"표준_라이브러리의_더_많은_객체","title":"표준 라이브러리의 더 많은 객체","isH3":true,"content":"<p>JavaScript는 내장 객체로 구성된 표준 라이브러리를 포함합니다.</p>\n<p><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects\">참고서</a>에서 내장 객체들에 대해 알아보세요.</p>"}},{"type":"prose","value":{"id":"typeof_연산자를_사용한_타입_판별","title":"<code>typeof</code> 연산자를 사용한 타입 판별","isH3":false,"content":"<p><code>typeof</code> 연산자를 사용하면 변수의 타입을 알아낼 수 있습니다.</p>\n<p><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/typeof\">참고서</a>에서 사용법과 주의사항에 대해 알아보세요.</p>","titleAsText":"typeof 연산자를 사용한 타입 판별"}},{"type":"prose","value":{"id":"같이_보기","title":"같이 보기","isH3":false,"content":"<ul>\n  <li><a href=\"https://tc39.es/ecma262/#sec-ecmascript-data-types-and-values\" class=\"external\" rel=\" noopener\">ECMAScript 명세의 데이터 타입과 값</a></li>\n</ul>"}}],"toc":[{"text":"동적 타입","id":"동적_타입"},{"text":"JavaScript의 타입","id":"javascript의_타입"},{"text":"원시 값","id":"원시_값"},{"text":"객체","id":"객체"},{"text":"<code>typeof</code> 연산자를 사용한 타입 판별","id":"typeof_연산자를_사용한_타입_판별"},{"text":"같이 보기","id":"같이_보기"}],"summary":"모든 프로그래밍 언어에는 내장된 자료구조가 존재하지만 보통 그 내용은 언어마다 다릅니다. 이 글에서는 JavaScript에서 사용할 수 있는 내장 자료구조와 그 속성에 대해 알아보겠습니다. 그러면 이 자료구조들을 다른 자료구조 개발에 사용할 수 있을 것입니다. 가능하다면 다른 언어와도 비교해보겠습니다.","popularity":0.0019,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"JavaScript data types and data structures","locale":"en-US","native":"English (US)"},{"title":"Tipos de datos y estructuras en JavaScript","locale":"es","native":"Español"},{"title":"Types et structures de données JavaScript","locale":"fr","native":"Français"},{"title":"JavaScript のデータ型とデータ構造","locale":"ja","native":"日本語"},{"title":"Estrutura de dados do Javascript","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Типы данных JavaScript и структуры данных","locale":"ru","native":"Русский"},{"title":"JavaScript 数据类型和数据结构","locale":"zh-CN","native":"中文 (简体)"},{"title":"JavaScript 的資料型別與資料結構","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ko/web/javascript/data_structures","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/javascript/data_structures/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ko/docs/Web/JavaScript/Data_structures","title":"JavaScript의 타입과 자료구조"}],"pageTitle":"JavaScript의 타입과 자료구조 - JavaScript | MDN","noIndexing":false}}