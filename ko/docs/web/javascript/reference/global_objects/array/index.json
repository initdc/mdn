{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Array","mdn_url":"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/@@species\"><code>get Array[@@species]</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/@@unscopables\"><code>Array.prototype[@@unscopables]</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>Array.prototype.length</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/@@iterator\"><code>Array.prototype[@@iterator]()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/at\"><code>Array.prototype.at()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\"><code>Array.prototype.concat()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin\"><code>Array.prototype.copyWithin()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/entries\"><code>Array.prototype.entries()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/every\"><code>Array.prototype.every()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"><code>Array.prototype.fill()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"><code>Array.prototype.filter()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/find\"><code>Array.prototype.find()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\"><code>Array.prototype.findIndex()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLast\"><code>Array.prototype.findLast()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLastIndex\"><code>Array.prototype.findLastIndex()</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\"><code>Array.prototype.flat()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap\"><code>Array.prototype.flatMap()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>Array.prototype.forEach()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/group\"><code>Array.prototype.group()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/groupToMap\"><code>Array.prototype.groupToMap()</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\"><code>Array.prototype.includes()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>Array.prototype.indexOf()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\"><code>Array.isArray()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"><code>Array.prototype.join()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/keys\"><code>Array.prototype.keys()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf\"><code>Array.prototype.lastIndexOf()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>Array.prototype.map()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/of\"><code>Array.of()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\"><code>Array.prototype.pop()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/push\"><code>Array.prototype.push()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\"><code>Array.prototype.reduce()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/ReduceRight\"><code>Array.prototype.reduceRight()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\"><code>Array.prototype.reverse()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\"><code>Array.prototype.shift()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"><code>Array.prototype.slice()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"><code>Array.prototype.some()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"><code>Array.prototype.sort()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.prototype.splice()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/toLocaleString\"><code>Array.prototype.toLocaleString()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/toString\"><code>Array.prototype.toString()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\"><code>Array.prototype.unshift()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/values\"><code>Array.prototype.values()</code></a></li></ol></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>JavaScript <strong><code>Array</code></strong> 클래스는 리스트 형태의 고수준 객체인 배열을 생성할 때 사용하는 전역 객체입니다.</p>"}},{"type":"prose","value":{"id":"설명","title":"설명","isH3":false,"content":"<p>배열은 리스트와 비슷한 객체로서 순회와 변형 작업을 수행하는 메서드를 갖습니다. JavaScript 배열은 길이도, 각 요소의 자료형도 고정되어 있지 않습니다. 배열의 길이가 언제든지 늘어나거나 줄어들 수 있고 데이터를 연속적이지 않은 곳에 저장할 수 있으므로, JavaScript 배열은 밀집성을 보장하지 않습니다. 보통 이런 성질들은 편리하지만, 사용하려는 목적에 맞지 않으면 형식화 배열(typed array)을 사용하는 것을 고려해보세요.</p>\n<p>배열은 (<a href=\"https://ko.wikipedia.org/wiki/%EC%97%B0%EA%B4%80_%EB%B0%B0%EC%97%B4\" class=\"external\" rel=\" noopener\">연관 배열</a>과 달리) 요소 인덱스로 문자열을 사용할 수 없으며 무조건 정수만 허용합니다. <a href=\"/ko/docs/Web/JavaScript/Guide/Working_with_Objects#%EA%B0%9D%EC%B2%B4%EC%99%80_%EC%86%8D%EC%84%B1\">대괄호 구문</a> 또는 <a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">속성 접근자</a>를 사용해 정수가 아닌 키에 접근할 경우 배열의 요소가 아니라 배열의 <a href=\"/ko/docs/Web/JavaScript/Data_structures#%EC%86%8D%EC%84%B1\">객체 속성 컬렉션</a>에 연결된 변수를 바라보게 됩니다. <a href=\"/ko/docs/Web/JavaScript/Guide/Indexed_collections#%EB%B0%B0%EC%97%B4_%EA%B0%9D%EC%B2%B4%EC%9D%98_%EB%A9%94%EC%84%9C%EB%93%9C\">순회 및 변형 작업</a> 또한 이런 속성에 적용할 수 없습니다.</p>"}},{"type":"prose","value":{"id":"자주_사용하는_연산","title":"자주 사용하는 연산","isH3":true,"content":"<p><strong>배열 만들기</strong></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'사과'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'바나나'</span><span class=\"token punctuation\">]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 2</span>\n</code></pre></div>\n<p><strong>인덱스로 배열의 항목에 접근하기</strong></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> first <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// 사과</span>\n\n<span class=\"token keyword\">let</span> last <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">[</span>fruits<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// 바나나</span>\n</code></pre></div>\n<p><strong>배열의 항목들을 순환하며 처리하기</strong></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>fruits<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 사과 0</span>\n<span class=\"token comment\">// 바나나 1</span>\n</code></pre></div>\n<p><strong>배열 끝에 항목 추가하기</strong></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> newLength <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'오렌지'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [\"사과\", \"바나나\", \"오렌지\"]</span>\n</code></pre></div>\n<p><strong>배열 끝에서부터 항목 제거하기</strong></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> last <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 끝에있던 '오렌지'를 제거</span>\n<span class=\"token comment\">// [\"사과\", \"바나나\"]</span>\n</code></pre></div>\n<p><strong>배열 앞에서부터 항목 제거하기</strong></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> first <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 제일 앞의 '사과'를 제거</span>\n<span class=\"token comment\">// [\"바나나\"]</span>\n</code></pre></div>\n<p><strong>배열 앞에 항목 추가하기</strong></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> newLength <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token string\">'딸기'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 앞에 추가</span>\n<span class=\"token comment\">// [\"딸기\", \"바나나\"]</span>\n</code></pre></div>\n<p><strong>배열 안 항목의 인덱스 찾기</strong></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>fruits<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'망고'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [\"딸기\", \"바나나\", \"망고\"]</span>\n\n<span class=\"token keyword\">let</span> pos <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"바나나\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 1</span>\n</code></pre></div>\n<p><strong>인덱스 위치에 있는 항목 제거하기</strong></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> removedItem <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 항목을 제거하는 방법</span>\n\n<span class=\"token comment\">// [\"딸기\", \"망고\"]</span>\n</code></pre></div>\n<p><strong>인덱스 위치에서부터 여러개의 항목 제거하기</strong></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> vegetables <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'양배추'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'순무'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'무'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'당근'</span><span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>vegetables<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [\"양배추\", \"순무\", \"무\", \"당근\"]</span>\n\n<span class=\"token keyword\">let</span> pos <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">let</span> n <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n\n<span class=\"token keyword\">let</span> removedItems <span class=\"token operator\">=</span> vegetables<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 배열에서 항목을 제거하는 방법</span>\n<span class=\"token comment\">// pos 인덱스부터 n개의 항목을 제거함</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>vegetables<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [\"양배추\", \"당근\"] (원 배열 vegetables의 값이 변함)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>removedItems<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [\"순무\", \"무\"]</span>\n</code></pre></div>\n<p><strong>배열 복사하기</strong></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> shallowCopySpread <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>fruits<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// [\"딸기\", \"망고\"]</span>\n</code></pre></div>\n<p>위 코드는 <a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">전개 구문</a>을 사용해 배열의 얕은 복사를 만드는 방법입니다. 배열을 복사하는 다른 방법은 아래의 <a href=\"#%EB%B0%B0%EC%97%B4_%EB%B3%B5%EC%82%AC%ED%95%98%EA%B8%B0\">배열 복사하기</a>에서 논의합니다.</p>"}},{"type":"prose","value":{"id":"배열_요소에_접근하기","title":"배열 요소에 접근하기","isH3":true,"content":"<p>JavaScript 배열의 인덱스는 0부터 시작합니다. 즉, 배열 첫 번째 요소의 인덱스는 0이고, 마지막 요소의 인덱스는 배열의 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>length</code></a> 속성에서 1을 뺀 것과 같습니다.</p>\n<p>잘못된 인덱스를 사용하면 <code>undefined</code>를 반환합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'첫 번째 요소입니다'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'두 번째 요소입니다'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'마지막 요소입니다'</span><span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">// '첫 번째 요소입니다'를 기록</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">// '두 번째 요소입니다'를 기록</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// '마지막 요소입니다'를 기록</span>\n</code></pre></div>\n<p><code>toString</code>이 속성인 것과 마찬가지로 (정확히 하자면, <code>toString()</code>은 메서드입니다) 배열의 요소도 속성입니다. 하지만 배열 요소에 아래 코드처럼 접근하려고 하면, 속성 이름이 유효하지 않기 때문에 구문 오류가 발생합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 구문 오류</span>\n</code></pre></div>\n<p>이 현상은 JavaScript 배열과 그 속성에 어떤 특별한 점이 있어서 그런 것이 아닙니다. 모든 JavaScript 속성은 이름이 숫자로 시작할 경우 마침표 표기법으로 접근할 수 없고, 대괄호 표기법을 사용해야 합니다.</p>\n<p>예를 들면, 어떤 객체에 <code>'3d'</code>라는 이름의 속성이 있다면, 이 속성에 접근할 땐 대괄호 표기법을 사용해야만 합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> years <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1950</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1960</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1970</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1980</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1990</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2010</span><span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>years<span class=\"token punctuation\">.</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 구문 오류</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>years<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 정상 작동</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>renderer<span class=\"token punctuation\">.</span>3d<span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> <span class=\"token string\">'character.png'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 구문 오류</span>\nrenderer<span class=\"token punctuation\">[</span><span class=\"token string\">'3d'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> <span class=\"token string\">'character.png'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 정상 작동</span>\n</code></pre></div>\n<p><code>3d</code> 예시에서 <code>'3d'</code>를 따옴표로 감싸야 함에 유의하세요. JavaScript 배열 인덱스도 <code>years[2]</code> 대신에 <code>years['2']</code>를 사용하듯 따옴표로 둘러쌀 수 있습니다. 그러나 굳이 그럴 필요는 없습니다.</p>\n<p><code>years[2]</code>의 <code>2</code>는 JavaScript 엔진이 암시적인 <code>toString</code> 변환을 사용해 문자열로 변환합니다. 그 결과로서 <code>'2'</code>와 <code>'02'</code>는 <code>years</code> 객체에서 서로 다른 칸을 가리키며, 다음 코드는 <code>true</code>가 될 수 있습니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>years<span class=\"token punctuation\">[</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> years<span class=\"token punctuation\">[</span><span class=\"token string\">'02'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"배열_길이와_숫자형_속성의_관계","title":"배열 길이와 숫자형 속성의 관계","isH3":true,"content":"<p>JavaScript 배열의 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>length</code></a> 속성과 숫자형 속성은 연결되어 있습니다.</p>\n<p>몇몇 배열 내장 메서드(<a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"><code>join</code></a>, <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"><code>slice</code></a>, <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>indexOf</code></a> 등)은 호출했을 때 배열의 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>length</code></a> 속성의 값을 참고합니다.</p>\n<p>다른 메서드(<a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/push\"><code>push</code></a>, <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>splice</code></a> 등) 또한 배열의 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>length</code></a> 속성을 바꾸는 결과를 낳습니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nfruits<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'바나나'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'사과'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'복숭아'</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3</span>\n</code></pre></div>\n<p>배열 인덱스로 유효한 속성을 JavaScript 배열에 설정할 때, 그 인덱스가 현재 배열의 경계 바깥에 있는 경우, JavaScript 엔진은 배열의 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>length</code></a> 속성을 그에 맞춰 업데이트 합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>fruits<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'mango'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// '망고'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ['0', '1', '2', '5']</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 6</span>\n</code></pre></div>\n<p><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>length</code></a>를 직접 늘려도 요소에 변화는 없습니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>fruits<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span>              <span class=\"token comment\">// ['바나나', '사과', '복숭아', 비어 있음 x 2, '망고', 비어 있음 x 4]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ['0', '1', '2', '5']</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 10</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// undefined</span>\n</code></pre></div>\n<p>하지만, <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>length</code></a> 속성을 감소시키면 요소가 지워집니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>fruits<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ['0', '1']</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 2</span>\n</code></pre></div>\n<p><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>Array.length</code></a> 문서에 더 자세한 설명이 있습니다.</p>"}},{"type":"prose","value":{"id":"정규표현식_일치_결과를_이용한_배열_생성","title":"정규표현식 일치 결과를 이용한 배열 생성","isH3":true,"content":"<p><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a>와 문자열 사이의 일치 결과는 JavaScript 배열을 반환합니다. 이 배열은 일치 결과에 대한 정보를 포함하는 속성과 요소가 담겨있습니다. <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\"><code>RegExp.exec()</code></a>, <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/String/match\"><code>String.match()</code></a>의 반환 값에서 이런 배열을 볼 수 있습니다.</p>\n<p>다음 예제와 표에서 배열의 속성과 요소에 대한 설명을 확인하세요.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 하나의 d와 하나 이상의 b에 하나의 d가 뒤따라 일치해야 함</span>\n<span class=\"token comment\">// 일치한 b와 다음 d를 기억할 것</span>\n<span class=\"token comment\">// 대소문자 구분 없음</span>\n\n<span class=\"token keyword\">const</span> myRe <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">d(b+)(d)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span>\n<span class=\"token keyword\">const</span> myArray <span class=\"token operator\">=</span> myRe<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cdbBdbsbz'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>반환된 <code>myArray</code> 배열의 속성과 요소는 다음과 같습니다.</p>\n<table class=\"fullwidth-table standard-table\">\n  <tbody>\n    <tr>\n      <th class=\"header\" scope=\"col\">속성/요소</th>\n      <th class=\"header\" scope=\"col\">설명</th>\n      <th class=\"header\" scope=\"col\">예시</th>\n    </tr>\n    <tr>\n      <td><code>input</code><br><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></td>\n      <td>정규표현식 일치 대상이 된 원본 문자열입니다.</td>\n      <td><code>\"cdbBdbsbz\"</code></td>\n    </tr>\n    <tr>\n      <td><code>index</code><br><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></td>\n      <td>일치가 위치한 원본 문자열에서의 인덱스입니다.</td>\n      <td><code>1</code></td>\n    </tr>\n    <tr>\n      <td><code>[0]</code><br><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></td>\n      <td>마지막으로 일치한 텍스트입니다.</td>\n      <td><code>\"dbBd\"</code></td>\n    </tr>\n    <tr>\n      <td><code>[1], ...[n]</code><br><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></td>\n      <td>존재할 경우, 정규표현식에서 괄호로 지정한 부분문자열 일치에 대응하는 요소입니다. 가능한 수의 제한은 없습니다.</td>\n      <td><code>[1]: \"bB\"<br>[2]: \"d\"</code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"배열_복사하기","title":"배열 복사하기","isH3":true,"content":"<p>배열을 새로운 변수에 할당해도 배열이 복사되지는 않습니다. 새로운 변수에는 원본 배열을 가리키는 참조만 할당되며, 원본 배열의 값을 바꾸면 새 변수에서도 그 변경점이 반영됩니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> array1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">let</span> array1Reference <span class=\"token operator\">=</span> array1<span class=\"token punctuation\">;</span>\narray1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array1Reference<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Array [1,9,3] - array1의 변화가 array1Reference에도 나타남 - 복사본이 아님</span>\n</code></pre></div>\n<p>배열의 복사본을 만들기 위해서는 새 배열을 위한 변수를 생성하고, 원본 배열 각각의 원시 요소에 대해서도 새로운 변수를 생성해야 합니다. (변수를 원시 값으로 초기화하면 참조를 할당하지 않고 값을 복사합니다.) JavaScript에서는 이를 위해 다음과 같은 방법을 사용할 수 있습니다.</p>\n<p><a href=\"/ko/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">전개 구문</a>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> shallowCopySpread <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>fruits<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// [\"Strawberry\", \"Mango\"]</span>\n</code></pre></div>\n<p><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"><code>Array.slice()</code></a>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> shallowCopySlice <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [\"Strawberry\", \"Mango\"]</span>\n</code></pre></div>\n<p><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> shallowCopyFrom <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [\"Strawberry\", \"Mango\"]</span>\n</code></pre></div>\n<p>위의 세 코드는 모두 '얕은 복사'를 생성합니다. 얕은 복사란 배열의 최상위 요소가 원시 값일 경우 복사하지만, 중첩 배열이나 객체 요소일 경우에는 원본 배열의 요소를 참조하게 됩니다.</p>\n<p>모든 요소의 '깊은 복사', 즉 중첩 배열과 객체 요소 또한 동일한 형태로 복사하는 방법 중 하나는 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a>를 사용해 배열을 JSON 문자열로 변환한 후, <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a>로 다시 배열을 구성하는 것입니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> deepCopy <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [\"Strawberry\", \"Mango\"]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"생성자","title":"생성자","isH3":false,"content":"<dl>\n  <dt id=\"array\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/Array\"><code>Array()</code></a></dt>\n  <dd>\n    <p><code>Array</code> 객체를 생성합니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"정적_속성","title":"정적 속성","isH3":false,"content":"<dl>\n  <dt id=\"get_arrayspecies\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/@@species\"><code>get Array[@@species]</code></a></dt>\n  <dd>\n    <p>파생 객체를 생성하는데 사용하는 생성자 함수입니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"정적_메서드","title":"정적 메서드","isH3":false,"content":"<dl>\n  <dt id=\"array.from\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a></dt>\n  <dd>\n    <p>유사 배열 또는 반복 가능한 객체로부터 새로운 <code>Array</code> 인스턴스를 생성합니다.</p>\n  </dd>\n  <dt id=\"array.isarray\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\"><code>Array.isArray()</code></a></dt>\n  <dd>\n    <p>만약 매개변수가 배열이면 참을, 아니면 거짓을 반환합니다.</p>\n  </dd>\n  <dt id=\"array.of\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/of\"><code>Array.of()</code></a></dt>\n  <dd>\n    <p>매개변수의 수와 자료형에 제한 없이, 지정한 값을 사용해 새 <code>Array</code> 인스턴스를 생성합니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"인스턴스_속성","title":"인스턴스 속성","isH3":false,"content":"<dl>\n  <dt id=\"array.prototype.length\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>Array.prototype.length</code></a></dt>\n  <dd>\n    <p>배열의 원소 수를 나타냅니다.</p>\n  </dd>\n  <dt id=\"array.prototypeunscopables\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/@@unscopables\"><code>Array.prototype[@@unscopables]</code></a></dt>\n  <dd>\n    <p><a href=\"/ko/docs/Web/JavaScript/Reference/Statements/with\"><code>with</code></a> 결속 범위로부터 제외하려는 속성 이름이 들어있는 기호입니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"인스턴스_메서드","title":"인스턴스 메서드","isH3":false,"content":"<dl>\n  <dt id=\"array.prototype.at\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/at\"><code>Array.prototype.at()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>주어진 인덱스의 요소를 반환합니다. 음수 값을 지정할 경우 인덱스를 배열의 끝부터 셉니다.</p>\n  </dd>\n  <dt id=\"array.prototype.concat\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\"><code>Array.prototype.concat()</code></a></dt>\n  <dd>\n    <p>배열과 배열/값 매개변수를 이어붙인 새로운 배열을 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.copywithin\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin\"><code>Array.prototype.copyWithin()</code></a></dt>\n  <dd>\n    <p>배열 내의 지정된 요소들을 동일한 배열 내에서 복사합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.entries\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/entries\"><code>Array.prototype.entries()</code></a></dt>\n  <dd>\n    <p>배열의 각 인덱스에 대한 키/값 쌍을 가지는 새로운 배열 반복자 객체를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.every\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/every\"><code>Array.prototype.every()</code></a></dt>\n  <dd>\n    <p>배열의 모든 요소가 주어진 판별 함수를 만족할 경우 <code>true</code>를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.fill\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"><code>Array.prototype.fill()</code></a></dt>\n  <dd>\n    <p>배열을 시작 인덱스부터 끝 인덱스까지의 지정한 값으로 채웁니다.</p>\n  </dd>\n  <dt id=\"array.prototype.filter\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"><code>Array.prototype.filter()</code></a></dt>\n  <dd>\n    <p>지정한 필터 함수의 반환 결과가 <code>true</code>인 요소만 모아서 새로운 배열을 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.find\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/find\"><code>Array.prototype.find()</code></a></dt>\n  <dd>\n    <p>주어진 판별 함수를 만족하는 첫 번째 요소를 반환합니다. 만족하는 요소가 없으면 <code>undefined</code>를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.findindex\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\"><code>Array.prototype.findIndex()</code></a></dt>\n  <dd>\n    <p>주어진 판별 함수를 만족하는 첫 번째 요소의 인덱스를 반환합니다. 만족하는 요소가 없으면 <code>-1</code>를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.flat\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\"><code>Array.prototype.flat()</code></a></dt>\n  <dd>\n    <p>배열 내의 모든 중첩 배열을 지정한 깊이까지 재귀적으로 이어붙인 새로운 배열을 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.flatmap\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap\"><code>Array.prototype.flatMap()</code></a></dt>\n  <dd>\n    <p>배열의 모든 요소 각각에 대해 주어진 콜백 함수를 호출하고, 그 반환 값을 모아 새로운 배열을 생성한 후, 모든 중첩 배열을 이어붙여 평탄화해 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.foreach\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>Array.prototype.forEach()</code></a></dt>\n  <dd>\n    <p>배열의 각각의 요소에 대해 함수를 호출합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.includes\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\"><code>Array.prototype.includes()</code></a></dt>\n  <dd>\n    <p>배열이 주어진 값을 포함하는지 판별해 <code>true</code> 또는 <code>false</code>를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.indexof\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>Array.prototype.indexOf()</code></a></dt>\n  <dd>\n    <p>배열에서 주어진 값과 일치하는 제일 앞의 인덱스를 반환합니다. 없으면 <code>-1</code>을 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.join\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"><code>Array.prototype.join()</code></a></dt>\n  <dd>\n    <p>배열의 모든 요소를 문자열로 합칩니다.</p>\n  </dd>\n  <dt id=\"array.prototype.keys\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/keys\"><code>Array.prototype.keys()</code></a></dt>\n  <dd>\n    <p>배열의 각 인덱스에 대한 키를 가지는 새로운 배열 반복자 객체를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.lastindexof\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf\"><code>Array.prototype.lastIndexOf()</code></a></dt>\n  <dd>\n    <p>배열에서 주어진 값과 일치하는 제일 뒤의 인덱스를 반환합니다. 없으면 <code>-1</code>을 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.map\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>Array.prototype.map()</code></a></dt>\n  <dd>\n    <p>배열의 모든 요소 각각에 대하여 주어진 콜백 함수를 호출하고, 그 반환 값을 모은 새로운 배열을 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.pop\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\"><code>Array.prototype.pop()</code></a></dt>\n  <dd>\n    <p>배열에서 마지막 요소를 뽑아내고, 그 요소를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.push\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/push\"><code>Array.prototype.push()</code></a></dt>\n  <dd>\n    <p>배열의 끝에 하나 이상의 요소를 추가하고, 배열의 변경된 <code>length</code>를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.reduce\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\"><code>Array.prototype.reduce()</code></a></dt>\n  <dd>\n    <p>주어진 콜백 함수를 가산기와 요소 각각에 대해 (왼쪽에서 오른쪽으로) 호출하여 하나의 값으로 줄인 결과를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.reduceright\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/ReduceRight\"><code>Array.prototype.reduceRight()</code></a></dt>\n  <dd>\n    <p>주어진 콜백 함수를 가산기와 요소 각각에 대해 (오른쪽에서 왼쪽으로) 호출하여 하나의 값으로 줄인 결과를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.reverse\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\"><code>Array.prototype.reverse()</code></a></dt>\n  <dd>\n    <p>배열의 요소 순서를 뒤집습니다. 즉 첫 번째 요소가 마지막이 되고 마지막이 첫 번째가 됩니다.</p>\n  </dd>\n  <dt id=\"array.prototype.shift\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\"><code>Array.prototype.shift()</code></a></dt>\n  <dd>\n    <p>배열에서 첫 번째 요소를 삭제하고, 그 요소를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.slice\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"><code>Array.prototype.slice()</code></a></dt>\n  <dd>\n    <p>배열의 일부를 추출한 새 배열을 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.some\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"><code>Array.prototype.some()</code></a></dt>\n  <dd>\n    <p>배열의 어떤 요소가 주어진 판별 함수를 만족할 경우 <code>true</code>를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.sort\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"><code>Array.prototype.sort()</code></a></dt>\n  <dd>\n    <p>배열의 요소를 정렬하고 그 배열을 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.splice\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.prototype.splice()</code></a></dt>\n  <dd>\n    <p>배열에서 요소를 추가하거나 삭제합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.tolocalestring\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/toLocaleString\"><code>Array.prototype.toLocaleString()</code></a></dt>\n  <dd>\n    <p>배열과 그 요소를 나타내는 지역화된 문자열을 반환합니다. <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a> 메서드를 재정의합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.tostring\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/toString\"><code>Array.prototype.toString()</code></a></dt>\n  <dd>\n    <p>배열과 그 요소를 나타내는 문자열을 반환합니다. <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a> 메서드를 재정의합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.unshift\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\"><code>Array.prototype.unshift()</code></a></dt>\n  <dd>\n    <p>배열의 앞에 하나 이상의 요소를 추가하고, 배열의 변경된 <code>length</code>를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototype.values\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/values\"><code>Array.prototype.values()</code></a></dt>\n  <dd>\n    <p>배열의 각 인덱스에 대한 값을 가지는 새로운 배열 반복자 객체를 반환합니다.</p>\n  </dd>\n  <dt id=\"array.prototypeiterator\"><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/@@iterator\"><code>Array.prototype[@@iterator]()</code></a></dt>\n  <dd>\n    <p>배열의 각 인덱스에 대한 값을 가지는 새로운 배열 반복자 객체를 반환합니다.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"예제","title":"예제","isH3":false,"content":""}},{"type":"prose","value":{"id":"배열_생성","title":"배열 생성","isH3":true,"content":"<p>아래 예제에서는 길이 0의 배열 <code>msgArray</code> 을 생성하고, <code>msgArray[0]</code> 와 <code>msgArray[99]</code> 에 값을 할당하여 배열의 길이를 100으로 변경합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> msgArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nmsgArray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Hello'</span>\nmsgArray<span class=\"token punctuation\">[</span><span class=\"token number\">99</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'world'</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msgArray<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'길이가 100입니다.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"2차원_배열_생성","title":"2차원 배열 생성","isH3":true,"content":"<p>아래의 예제는 2차원 문자열 배열로 체스판을 생성합니다. 첫 번째 이동은 <code>board[6][4]</code>의 <code>'p'</code>를 <code>board[4][4]</code>로 복사하여 이루어집니다. 그 후 이전 위치 <code>[6][4]</code>는 빈 공간으로 만듭니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> board <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'R'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Q'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'K'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'R'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'k'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n\\n'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 폰을 앞으로 두 칸 전진</span>\nboard<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> board<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\nboard<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">' '</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>결과는 다음과 같습니다.</p>\n<pre class=\"notranslate\">R,N,B,Q,K,B,N,R\nP,P,P,P,P,P,P,P\n , , , , , , ,\n , , , , , , ,\n , , , , , , ,\n , , , , , , ,\np,p,p,p,p,p,p,p\nr,n,b,q,k,b,n,r\n\nR,N,B,Q,K,B,N,R\nP,P,P,P,P,P,P,P\n , , , , , , ,\n , , , , , , ,\n , , , ,p, , ,\n , , , , , , ,\np,p,p,p, ,p,p,p\nr,n,b,q,k,b,n,r\n</pre>"}},{"type":"prose","value":{"id":"배열을_사용하여_일련의_값을_테이블처럼_표시하기","title":"배열을 사용하여 일련의 값을 테이블처럼 표시하기","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n values<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token number\">2</span> <span class=\"token operator\">**</span> x<span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2</span> <span class=\"token operator\">*</span> x <span class=\"token operator\">**</span> <span class=\"token number\">2</span>\n <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>결과는 다음과 같습니다.</p>\n<pre class=\"notranslate\">// 첫 번째 열은 인덱스\n0  1    0\n1  2    2\n2  4    8\n3  8    18\n4  16   32\n5  32   50\n6  64   72\n7  128  98\n8  256  128\n9  512  162\n</pre>"}},{"type":"specifications","value":{"title":"명세","id":"명세","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Array"}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"query":"javascript.builtins.Array","dataURL":"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/bcd.json"}},{"type":"prose","value":{"id":"같이_보기","title":"같이 보기","isH3":false,"content":"<ul>\n  <li>JavaScript 안내서:\n    <ul>\n      <li><a href=\"/ko/docs/Web/JavaScript/Guide/Working_with_Objects#%EA%B0%9D%EC%B2%B4_%EC%86%8D%EC%84%B1_%EC%9D%B8%EB%8D%B1%EC%8B%B1\">객체 속성 인덱싱</a></li>\n      <li><a href=\"/ko/docs/Web/JavaScript/Guide/Indexed_collections#array_%EA%B0%9D%EC%B2%B4\">인덱스 컬렉션: <code>Array</code> 객체</a></li>\n    </ul>\n  </li>\n  <li><a href=\"/ko/docs/Web/JavaScript/Typed_arrays\">형식화 배열</a></li>\n  <li><a href=\"/ko/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li>\n</ul>"}}],"toc":[{"text":"설명","id":"설명"},{"text":"생성자","id":"생성자"},{"text":"정적 속성","id":"정적_속성"},{"text":"정적 메서드","id":"정적_메서드"},{"text":"인스턴스 속성","id":"인스턴스_속성"},{"text":"인스턴스 메서드","id":"인스턴스_메서드"},{"text":"예제","id":"예제"},{"text":"명세","id":"명세"},{"text":"브라우저 호환성","id":"브라우저_호환성"},{"text":"같이 보기","id":"같이_보기"}],"summary":"JavaScript Array 클래스는 리스트 형태의 고수준 객체인 배열을 생성할 때 사용하는 전역 객체입니다.","popularity":0.0072,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Array","locale":"en-US","native":"English (US)"},{"title":"Array","locale":"es","native":"Español"},{"title":"Array","locale":"fr","native":"Français"},{"title":"Array","locale":"ja","native":"日本語"},{"title":"Array","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Array","locale":"ru","native":"Русский"},{"title":"Array","locale":"zh-CN","native":"中文 (简体)"},{"title":"Array","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ko/web/javascript/reference/global_objects/array","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/javascript/reference/global_objects/array/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ko/docs/Web/JavaScript/Reference","title":"JavaScript 참고서"},{"uri":"/ko/docs/Web/JavaScript/Reference/Global_Objects","title":"표준 내장 객체"},{"uri":"/ko/docs/Web/JavaScript/Reference/Global_Objects/Array","title":"Array"}],"pageTitle":"Array - JavaScript | MDN","noIndexing":false}}