{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Object.prototype.toString()","mdn_url":"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/toString","locale":"ko","native":"한국어","sidebarHTML":"<ol><li><strong><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"><code>Object.assign()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\"><code>Object.defineProperties()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"><code>Object.entries()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\"><code>Object.freeze()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\"><code>Object.fromEntries()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\"><code>Object.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors\"><code>Object.getOwnPropertyDescriptors()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\"><code>Object.getOwnPropertyNames()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\"><code>Object.getOwnPropertySymbols()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn\"><code>Object.hasOwn()</code> <small>(en-US)</small></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\"><code>Object.isFrozen()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\"><code>Object.isSealed()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\"><code>Object.preventExtensions()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\"><code>Object.seal()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><em><code>Object.prototype.toString()</code></em></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li><li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/values\"><code>Object.values()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>toString()</code></strong> 은 문자열을 반환하는 object의 대표적인 방법이다</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/object-prototype-tostring.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"구문","title":"구문","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>obj<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>모든 객체에는 객체가 텍스트 값으로 표시되거나 객체가 문자열이 예상되는 방식으로 참조 될 때 자동으로 호출되는 <code>toString()</code> 메서드가 있습니다. 기본적으로 <code>toString()</code> 메서드는 Object에서 비롯된 모든 객체에 상속됩니다. 이 메서드가 사용자 지정 개체에서 재정의되지 않으면 <code>toString()</code>은 \"<code>[object type]</code>\"을 반환합니다. 여기서 <code>type</code>은 object type입니다. 다음 코드는 이것을 설명합니다</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\no<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns [object Object]</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>참고:</strong> 자바스크립트 1.8.5부터 <a href=\"/ko/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a>의 <code>toString()</code>을 호출하는 경우 <code>[object Null]</code>을 반환하며, <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>는 <code>[object Undefined]</code>를 반환합니다. 이는 ECMAScript 제 5판과 후속 정오표에 정의되어 있습니다. See <a href=\"#tostring%EC%9C%BC%EB%A1%9C_%EA%B0%9D%EC%B2%B4_%ED%81%B4%EB%9E%98%EC%8A%A4_%EA%B2%80%EC%82%AC\">toString으로_객체_클래스_검사</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"매개변수","title":"매개변수","isH3":false,"content":"<p>숫자 및 BigInts의 경우 <code>toString()</code>은 선택적으로 기수(radix)를 매개변수로 취합니다. 기수의 값은 최소 2부터 36까지입니다.</p>\n<p><code>기수</code>를 이용함으로써 10진수를 (1, 2, 3, 4, 5...) 다른 진수로 변환할 수 있습니다. 아래는 10진수를 2진수로 변환하는 예제입니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> baseTenInt <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>baseTenInt<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// \"1010\"이 출력됩니다</span>\n</code></pre></div>\n<p>big integers도 이와 같습니다</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> bigNum <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bigNum<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// \"10100\"이 출력됩니다</span>\n</code></pre></div>\n<p>몇 가지 일반적인 기수들은 아래와 같습니다</p>\n<ul>\n  <li>2 : <a href=\"https://ko.wikipedia.org/wiki/%EC%9D%B4%EC%A7%84%EB%B2%95\" class=\"external\" rel=\" noopener\">2진법</a></li>\n  <li>8 : <a href=\"https://ko.wikipedia.org/wiki/%ED%8C%94%EC%A7%84%EB%B2%95\" class=\"external\" rel=\" noopener\">8진법</a></li>\n  <li>10 : <a href=\"https://ko.wikipedia.org/wiki/%EC%8B%AD%EC%A7%84%EB%B2%95\" class=\"external\" rel=\" noopener\">10진법</a></li>\n  <li>16 : <a href=\"https://ko.wikipedia.org/wiki/%EC%8B%AD%EC%9C%A1%EC%A7%84%EB%B2%95\" class=\"external\" rel=\" noopener\">16진법</a></li>\n</ul>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"기본_tostring_메소드_재정의","title":"기본 <code>toString</code> 메소드 재정의","isH3":true,"content":"<p>기본 <code>toString()</code> 메서드 대신에 호출될 함수를 정의할 수 있습니다. <code>toString()</code> 메서드는 인자를 취하지 않고 문자열을 반환합니다. 직접 생성한 <code>toString()</code> 메서드는 원하는 어떤 값이든 될 수 있지만 해당 객체에 대한 정보를 전달하고 있을 때 가장 유용할 것입니다.</p>\n<p>다음 코드는 <code>Dog</code> 객체 타입을 정의하고 <code>Dog</code> 타입을 따르는 <code>theDog</code>를 생성합니다:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> breed<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">,</span> sex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>breed <span class=\"token operator\">=</span> breed<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">=</span> sex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ntheDog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Gabby'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lab'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'chocolate'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>커스텀 객체의 <code>toString()</code> 메서드를 호출하는 경우 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a>로부터 상속받은 기본 값을 반환하게 됩니다:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>theDog<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns [object Object]</span>\n</code></pre></div>\n<p>다음 코드는 기본 <code>toString()</code> 메서드를 재정의하는 <code>dogToString()</code>을 생성하고 할당합니다. 이 함수는 객체의 name, breed, color, sex를 포함하는 문자열을 \"<code>property = value;</code>\"의 형태로 만들어냅니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token class-name\">Dog</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">toString</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">dogToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ret <span class=\"token operator\">=</span> <span class=\"token string\">'Dog '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">' is a '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>breed<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>앞선 코드를 사용하면 문자열 컨텍스트에서 <code>theDog</code>가 사용될 때마다 자바스크립트는 자동으로 <code>dogToString()</code> 함수를 호출하여 다음 문자열을 반환합니다:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">\"Dog Gabby is a female chocolate Lab\"</span>\n</code></pre></div>","titleAsText":"기본 toString 메소드 재정의"}},{"type":"prose","value":{"id":"tostring으로_객체_클래스_검사","title":"<code>toString()</code>으로 객체 클래스 검사","isH3":true,"content":"<p><code>toString()</code>은 모든 객체에 사용되어 해당 객체의 클래스를 가져올 수 있습니다. Object.prototype.toString()을 모든 객체에 사용하기 위해서는 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a> 나 <a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a>를 사용해서 검사하고자 하는 객체를 <code>thisArg</code>로 불리는 첫번째 파라미터로 넘겨야 합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> toString <span class=\"token operator\">=</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>toString<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// [object Date]</span>\n<span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [object String]</span>\n<span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// [object Math]</span>\n\n<span class=\"token comment\">// Since JavaScript 1.8.5</span>\n<span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// [object Undefined]</span>\n<span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// [object Null]</span>\n</code></pre></div>","titleAsText":"toString()으로 객체 클래스 검사"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.prototype.tostring","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Object.toString"}},{"type":"browser_compatibility","value":{"title":"브라우저 호환성","id":"브라우저_호환성","isH3":false,"query":"javascript.builtins.Object.toString","dataURL":"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/toString/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toSource()</code> <small>(en-US)</small></a></li>\n  <li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li>\n  <li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\"><code>Number.prototype.toString()</code></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toPrimitive\"><code>Symbol.toPrimitive</code> <small>(en-US)</small></a></li>\n</ul>"}}],"toc":[{"text":"구문","id":"구문"},{"text":"Description","id":"description"},{"text":"매개변수","id":"매개변수"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"브라우저 호환성","id":"브라우저_호환성"},{"text":"See also","id":"see_also"}],"summary":"The toString() 은 문자열을 반환하는 object의 대표적인 방법이다","popularity":0.0011,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Object.prototype.toString()","locale":"en-US","native":"English (US)"},{"title":"Object.prototype.toString()","locale":"es","native":"Español"},{"title":"Object.prototype.toString()","locale":"fr","native":"Français"},{"title":"Object.prototype.toString()","locale":"ja","native":"日本語"},{"title":"Object.prototype.toString()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Object.prototype.toString()","locale":"ru","native":"Русский"},{"title":"Object.prototype.toString()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/web/javascript/reference/global_objects/object/tostring","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/web/javascript/reference/global_objects/object/tostring/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Web","title":"개발자를 위한 웹 기술"},{"uri":"/ko/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ko/docs/Web/JavaScript/Reference","title":"JavaScript 참고서"},{"uri":"/ko/docs/Web/JavaScript/Reference/Global_Objects","title":"표준 내장 객체"},{"uri":"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object","title":"Object"},{"uri":"/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/toString","title":"Object.prototype.toString()"}],"pageTitle":"Object.prototype.toString() - JavaScript | MDN","noIndexing":false}}