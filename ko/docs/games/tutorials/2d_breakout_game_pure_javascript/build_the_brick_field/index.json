{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"벽돌 만들기","mdn_url":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Build_the_brick_field","locale":"ko","native":"한국어","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>웹 게임 개발 소개</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Introduction\">웹 게임 개발 소개</a></li>\n              <li><a href=\"/ko/docs/Games/Anatomy\">비디오 게임 구조 파악하기</a></li>\n              <li><a href=\"/ko/docs/Games/Examples\">예제</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>게임 개발에 필요한 API</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/ko/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/ko/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/ko/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/ko/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/ko/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/ko/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/ko/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/ko/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/ko/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/ko/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>기술</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/Async_scripts\">asm.js를 위해 async 스크립트 사용하기</a></li>\n              <li><a href=\"/ko/docs/Web/Apps/Developing/Optimizing_startup_performance\">시작 단계 성능 최적화 하기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/WebRTC_data_channels\">피어-투-피어 데이터 채널을 위해 WebRTC 사용하기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Efficient_animation_for_web_games\">웹 게임을 위한 효율적인 애니메이션</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Audio_for_Web_Games\">웹 게임을 위한 오디오</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/2D_collision_detection\">2D 충돌 감지</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Tilemaps\">타일과 타일맵 개요</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>웹 3D 게임</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web\">웹 3D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Basic_theory\">기본적인 3D 이론</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">PlayCanvas를 사용하여 데모 만들기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Three.js를 사용하여 데모 만들기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_collision_detection\">3D 충돌 감지</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">THREE.js를 사용한 충돌 용적 감지</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>튜토리얼</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">순수 자바스크립트를 사용한 2D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Tutorials/2D_breakout_game_Phaser\">Phaser를 사용한 2D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">기기 수평/수직 기능을 활용한 2D 주사위 게임</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>게임 배포하기</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Publishing_games\">게임 배포하기 개요</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_distribution\">게임 배포하기</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_promotion\">게임 홍보하기</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_monetization\">게임 결제기능</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Game_over\">« 이전</a></li>\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection\">다음  »</a></li>\n</ul>\n<p>이번 단계는 <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Gamedev Canvas tutorial (en-US)</a>의 여섯 번째 학습입니다. <a href=\"https://github.com/end3r/Gamedev-Canvas-workshop/blob/gh-pages/lesson06.html\" class=\"external\" rel=\" noopener\">Gamedev-Canvas-workshop/lesson6.html</a>에서 이번 학습의 소스코드를 확인할 수 있습니다.</p>\n<p>게임플레이 원리를 수정한 후에, 우리는 게임에서 패배할 수 있게 되었습니다. 이것은 실제 게임에 보다 가까운 느낌이기 때문에 훌륭합니다. 하지만 벽과 패들에 공이 튀기는 것 말고 할 수 있는 것이 없기 때문에 금방 지루해집니다. 벽돌깨기 게임에서 진정으로 필요로 한 것은 공으로 파괴할 벽돌입니다. 이 것이 지금 우리가 만들 것입니다!</p>"}},{"type":"prose","value":{"id":"벽돌에_대한_변수_설정하기","title":"벽돌에 대한 변수 설정하기","isH3":false,"content":"<p>이번 학습의 모든 목표는 벽돌들을 위한 코드를 2차원 배열로 동작하는 반복문을 통해 제공하는 것입니다. 그러나 먼저 우리는 가로, 세로, 행, 열 등 벽돌에 대한 값을 정의할 몇몇 변수들을 설정해야 합니다. 지난 학습에서 작성한 코드에 아래 코드를 추가해봅시다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> brickRowCount <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickColumnCount <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickWidth <span class=\"token operator\">=</span> <span class=\"token number\">75</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickHeight <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickPadding <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickOffsetTop <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickOffsetLeft <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>우리는 벽돌 배열 행과 열의 수, 그것들의 가로, 세로길이, 각 벽돌이 서로 닿지 않을 정도의 간격과 벽돌이 캔버스의 모서리에 닿지 않게 할 오프셋 변수들을 정의했습니다.</p>\n<p>우리는 2차원 배열에 벽돌을 담았습니다. 배열은 열 <code>c</code>, 행 <code>r</code>, 그리고 배열의 각 객체엔 화면에 벽돌을 그릴 위치를 나타낼 <code>x</code>, <code>y</code> 위치를 가지고 있습니다. 위에서 변수를 선언한 코드 뒤에 아래 코드를 추가해봅시다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> bricks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>위 코드는 행과 열 수만큼 반복되면서 새로운 벽돌을 만듭니다. 각 벽돌 객체는 이후에 충돌감지에 사용됩니다.</p>"}},{"type":"prose","value":{"id":"벽돌을_그리는_방법","title":"벽돌을 그리는 방법","isH3":false,"content":"<p>이제 배열안의 모든 벽돌을 반복해서 화면에 그려줄 함수를 만들어봅시다. 코드는 아래와 같습니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drawBricks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> brickWidth<span class=\"token punctuation\">,</span> brickHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>다시 행, 열 반복을 통해 각 벽돌의 <code>x</code>, <code>y</code> 값을 설정하고, 캔버스에 <code>brickWidth</code> * <code>brickHeight</code> 크기의 벽돌들을 그립니다. 문제는 모든 벽돌들이 좌표 (0, 0) 위치해있다는 것입니다. 우리는 약간의 연산을 통해 각 벽돌의 <code>x</code>, <code>y</code> 값을 계산해야 합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> brickX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickWidth<span class=\"token operator\">+</span>brickPadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickOffsetLeft<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickHeight<span class=\"token operator\">+</span>brickPadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickOffsetTop<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><code>brickX</code>는 <code>brickWidth</code> + <code>brickPadding</code>에 <code>c</code>를 곱하고, <code>brickOffsetLeft</code>를 더한 값입니다. <code>brickY</code>는 변수 <code>r</code>, <code>brickHeight</code>, <code>brickOffsetTop</code> 변수를 사용한다는 것을 제외하곤 동일합니다. 이제 모든 벽돌들을 올바른 위치에, 알맞은 간격을 두고, 캔버스 모서리로부터 오프셋 값만큼의 거리를 둔 상태로 그릴수 있게되었습니다.</p>\n<p><code>brickX</code>와 <code>brickY</code> 값을 (0, 0) 대신에 좌표 값으로 할당한 후에 <code>drawBricks</code> 함수의 마지막 버전은 아래와 같을 것입니다. 이 코드는 <code>drawpaddle</code> 함수 아래에 추가해봅시다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drawBricks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> brickX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickWidth<span class=\"token operator\">+</span>brickPadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickOffsetLeft<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> brickY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickHeight<span class=\"token operator\">+</span>brickPadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickOffsetTop<span class=\"token punctuation\">;</span>\n            bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> brickX<span class=\"token punctuation\">;</span>\n            bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> brickY<span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span>brickX<span class=\"token punctuation\">,</span> brickY<span class=\"token punctuation\">,</span> brickWidth<span class=\"token punctuation\">,</span> brickHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"실제_벽돌을_그리기","title":"실제 벽돌을 그리기","isH3":false,"content":"<p>이 학습에서 마지막으로 할 일은 <code>drawBrick</code>함수를 호출하는 코드를 <code>draw</code>함수 어딘가에, 되도록이면 시작하는 부분에, 캔버스를 초기화하는 부분과 공을 그리는 사이에 추가하는 것입니다. 아래 코드를 <code>drawBall()</code> 코드 위에 추가해봅시다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">drawBricks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"코드_비교해보기","title":"코드 비교해보기","isH3":false,"content":"<p>이 부분에서 게임은 조금 더 흥미로워졌습니다.</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"395\" src=\"https://jsfiddle.net/yumetodo/t1zqmzLp/embedded/\" loading=\"lazy\"></iframe></p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>참고:</strong> 연습하기: 행과 열의 수를 바꿔서 벽돌의 수를 변경해보거나, 위치를 변경해봅시다.</p>\n</div>"}},{"type":"prose","value":{"id":"다음_단계","title":"다음 단계","isH3":false,"content":"<p>이제 우리에겐 벽돌이 있습니다! 하지만 공은 벽돌들과의 반응이 없습니다. 우리는 다음 단계에서 이 문제에 대해 다룰 것입니다: <a href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection\">충돌 감지</a></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Game_over\">« 이전</a></li>\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection\">다음  »</a></li>\n</ul>"}}],"toc":[{"text":"벽돌에 대한 변수 설정하기","id":"벽돌에_대한_변수_설정하기"},{"text":"벽돌을 그리는 방법","id":"벽돌을_그리는_방법"},{"text":"실제 벽돌을 그리기","id":"실제_벽돌을_그리기"},{"text":"코드 비교해보기","id":"코드_비교해보기"},{"text":"다음 단계","id":"다음_단계"}],"summary":"이번 단계는 Gamedev Canvas tutorial (en-US)의 여섯 번째 학습입니다. Gamedev-Canvas-workshop/lesson6.html에서 이번 학습의 소스코드를 확인할 수 있습니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Build the brick field","locale":"en-US","native":"English (US)"},{"title":"Construye el muro de ladrillos","locale":"es","native":"Español"},{"title":"Créer les briques","locale":"fr","native":"Français"},{"title":"ブロックのかたまりを作る","locale":"ja","native":"日本語"},{"title":"Создаём зону кирпичей","locale":"ru","native":"Русский"},{"title":"Build the brick field","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/games/tutorials/2d_breakout_game_pure_javascript/build_the_brick_field","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/games/tutorials/2d_breakout_game_pure_javascript/build_the_brick_field/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Games","title":"게임 개발"},{"uri":"/ko/docs/Games/Tutorials","title":"Tutorials"},{"uri":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript","title":"순수한 자바스크립트를 이용한 2D 벽돌깨기 게임"},{"uri":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Build_the_brick_field","title":"벽돌 만들기"}],"pageTitle":"벽돌 만들기 - 게임 개발 | MDN","noIndexing":false}}