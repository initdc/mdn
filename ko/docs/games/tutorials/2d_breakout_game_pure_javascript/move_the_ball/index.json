{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"공 움직이기","mdn_url":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Move_the_ball","locale":"ko","native":"한국어","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>웹 게임 개발 소개</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Introduction\">웹 게임 개발 소개</a></li>\n              <li><a href=\"/ko/docs/Games/Anatomy\">비디오 게임 구조 파악하기</a></li>\n              <li><a href=\"/ko/docs/Games/Examples\">예제</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>게임 개발에 필요한 API</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/ko/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/ko/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/ko/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/ko/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/ko/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/ko/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/ko/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/ko/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/ko/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/ko/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>기술</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/Async_scripts\">asm.js를 위해 async 스크립트 사용하기</a></li>\n              <li><a href=\"/ko/docs/Web/Apps/Developing/Optimizing_startup_performance\">시작 단계 성능 최적화 하기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/WebRTC_data_channels\">피어-투-피어 데이터 채널을 위해 WebRTC 사용하기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Efficient_animation_for_web_games\">웹 게임을 위한 효율적인 애니메이션</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Audio_for_Web_Games\">웹 게임을 위한 오디오</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/2D_collision_detection\">2D 충돌 감지</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Tilemaps\">타일과 타일맵 개요</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>웹 3D 게임</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web\">웹 3D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Basic_theory\">기본적인 3D 이론</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">PlayCanvas를 사용하여 데모 만들기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Three.js를 사용하여 데모 만들기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_collision_detection\">3D 충돌 감지</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">THREE.js를 사용한 충돌 용적 감지</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>튜토리얼</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">순수 자바스크립트를 사용한 2D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Tutorials/2D_breakout_game_Phaser\">Phaser를 사용한 2D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">기기 수평/수직 기능을 활용한 2D 주사위 게임</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>게임 배포하기</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Publishing_games\">게임 배포하기 개요</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_distribution\">게임 배포하기</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_promotion\">게임 홍보하기</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_monetization\">게임 결제기능</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Create_the_Canvas_and_draw_on_it\">« 이전</a></li>\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Bounce_off_the_walls\">다음  »</a></li>\n</ul>\n<p>이 강의는 <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">게임 개발 캔버스 튜토리얼 (en-US)</a>의 10단계 중 두 번째 과정입니다. <a href=\"https://github.com/end3r/Gamedev-Canvas-workshop/blob/gh-pages/lesson02.html\" class=\"external\" rel=\" noopener\">Gamedev-Canvas-workshop/lesson2.html</a>에서 이 강의의 완성된 코드를 볼 수 있습니다.</p>\n<p>여러분은 이전 과정에서 어떻게 공이 그려지는지 배웠습니다. 이젠 공을 움직이게 만들어보죠! 기술적으로는 화면에 공을 그렸다가 지우는 과정을 반복하게 되는데, 매 프레임마다 공의 위치를 조금씩 다르게 해서 그리면 공이 움직이는것 처럼 보이게 됩니다. 마치 영화 화면이 움직이는 방식처럼 말이죠!</p>"}},{"type":"prose","value":{"id":"드로잉_루프를_정의하기","title":"드로잉 루프를 정의하기","isH3":false,"content":"<p>매 프레임마다 캔버스에 그리는것을 지속적으로 갱신하기 위해서는, 계속해서 그리는 것을 반복하게 만들어주는 함수가 필요합니다. 이 함수는 매 프레임마다 위치를 바꿔주기 위한 몇가지 변수들을 포함합니다. JavaScript 타이밍 함수인 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/setInterval\"><code>setInterval()</code> <small>(en-US)</small></a>나 <a href=\"/ko/docs/Web/API/Window/requestAnimationFrame\" title=\"requestAnimationFrame()\"><code>requestAnimationFrame()</code></a>를 이용하면 함수를 몇번이고 계속 반복해서 실행할 수 있습니다..</p>\n<p>현재 여러분의 HTML파일 안에 있는 JavaScript중에 처음 두 줄만 제외하고 나머지는 모두 지워주세요. 지운 후에는 아래에 있는 코드를 추가해주세요. <code>draw()</code>함수는 <code>setInterval</code>를 통해서 10밀리초마다 실행됩니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// drawing code</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>무한히 작동하는 <code>setInterval</code> 함수 덕에, <code>draw()</code> 함수는 우리가 멈추기 전 까지 10밀리초마다 영원히 호출됩니다. 이제 공을 그려봅시다! 다음 코드를 여러분의 <code>draw()</code> 함수 안에 추가해주세요.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>이제 바뀐 코드를 실행해 보세요. 공은 매 프레임마다 다시 그려지게 됩니다.</p>"}},{"type":"prose","value":{"id":"움직이게_만들기","title":"움직이게 만들기","isH3":false,"content":"<p>공이 움직이지 않고 있기 때문에, 여러분은 공이 다시 그려지고 있다는 사실을 알아챌 수 는 없었을 것입니다. 이제 공을 움직이게 바꿔봅시다. 첫 번째로, (50,50)이라는 지정된 좌표 대신에, x와 y라는 변수를 이용해서 화면 하단 중앙에서 그려지도록 하겠습니다.</p>\n<p>x와 y를 정의하기 위해서 다음 두 줄을 여러분의 <code>draw()</code> 함수위에 추가해주세요.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>그 다음에는 <code>draw()</code> 함수를 갱신할 것입니다. 아래 코드에서 강조된 줄에서 처럼, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/arc\"><code>arc()</code> <small>(en-US)</small></a>메소드안에서 x와 y 변수를 사용하게 됩니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>이제 중요한 부분입니다. 공을 움직이는 것을 표현하기 위해 x와 y에 작은 값을 매 프레임마다 더해줄 것입니다. 그 작은 값을 dx와 dy라 정의하고, 각각 2와 -2로 그 값을 정해보겠습니다. 다음 코드를 여러분의 x와 y변수가 정의된 코드 아래에 추가하세요.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> dx <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>마지막으로 할 일은 dx와 dy변수를 이용해서 매 프레임마다 x와 y변수를 갱신해 주는 것입니다. 그렇게 하면 매 갱신마다 공은 새 위치에 그려지게 됩니다. 다음 코드에 표시된 새로운 두 줄의 코드를 여러분의 <code>draw()</code> 함수에 추가해주세요.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    x <span class=\"token operator\">+=</span> dx<span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">+=</span> dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>여러분의 코드를 다시 저장하고, 브라우저를 열어 실행해보세요. 공은 잘 움직이는군요. 뒤에 흔적이 남기는 하지만 말이죠.</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/10430/ball-trail.png\" alt=\"\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"다음_프레임_전에_캔버스를_지우기","title":"다음 프레임 전에 캔버스를 지우기","isH3":false,"content":"<p>공이 흔적을 남기는 것은, 매 프레임마다 공을 그릴 때 이전 프레임을 지워주지 않았기 때문입니다. 하지만 걱정할 것은 없습니다. 캔버스의 내용들을 지워주기 위한 메소드인 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/clearRect\"><code>clearRect()</code> <small>(en-US)</small></a>가 있으니까요. 이 메소드는 네 개의 파라미터가 필요합니다. 직사각형의 좌상단 모서리를 표시할 x와 y좌표, 그리고 직사각형의 우하단 모서리를 표시할 x와 y좌표가 바로 그것이죠. 이 좌표들로 생기는 사각형 안에 있는 것들은 전부 지워지게 될 것입니다.</p>\n<p>다음 코드에서 강조된 새로운 한줄의 코드를 <code>draw()</code> 함수에 추가하세요.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    x <span class=\"token operator\">+=</span> dx<span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">+=</span> dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>여러분의 코드를 저장하고, 다시 실행해보세요. 이번에는 흔적없이 공이 움직이는 것을 보실 수 있을 것입니다. 매 10밀리초마다 캔버스는 지워지고, 새로운 x와 y값의 좌표를 가지는 공이 다음 프레임에 그려지게 되는 것이죠.</p>"}},{"type":"prose","value":{"id":"코드_정리하기","title":"코드 정리하기","isH3":false,"content":"<p>다음 강좌에서도 계속해서 몇가지 명령들을 <code>draw()</code> 함수에다 추가해야 합니다. 그렇기 때문에 코드를 최대한 간단하고 깨끗하게 유지하는 것이 좋습니다. 공을 움직이는 코드를 분리된 함수로 옮기는 것 부터 시작해보죠!</p>\n<p>현재의 draw() 함수를 다음의 분리된 두 함수로 바꿔주세요.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drawBall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">drawBall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    x <span class=\"token operator\">+=</span> dx<span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">+=</span> dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"여러분의_코드와_비교해보세요","title":"여러분의 코드와 비교해보세요","isH3":false,"content":"<p>아래의 라이브 데모에서 이 강의의 완성된 코드를 확인할 수 있습니다. 어떻게 작동하는지 더 잘 이해하기 위해 플레이 해보세요.</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"415\" src=\"https://jsfiddle.net/end3r/3x5foxb1/embedded/\" loading=\"lazy\"></iframe></p>\n<p>연습해보기: 움직이는 공의 속도를 바꾸거나, 움직이는 방향을 바꿔보세요.</p>"}},{"type":"prose","value":{"id":"다음_단계로","title":"다음 단계로","isH3":false,"content":"<p>우리는 공을 그리고 움직이게 만들었지만, 캔버스 모서리 밖으로 사라져버립니다. 세 번째 챕터에서는 공이 <a href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Bounce_off_the_walls\">벽으로부터 튕겨 나오기</a> 위한 방법을 알아볼 것입니다.</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Create_the_Canvas_and_draw_on_it\">« 이전</a></li>\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Bounce_off_the_walls\">다음  »</a></li>\n</ul>"}}],"toc":[{"text":"드로잉 루프를 정의하기","id":"드로잉_루프를_정의하기"},{"text":"움직이게 만들기","id":"움직이게_만들기"},{"text":"다음 프레임 전에 캔버스를 지우기","id":"다음_프레임_전에_캔버스를_지우기"},{"text":"코드 정리하기","id":"코드_정리하기"},{"text":"여러분의 코드와 비교해보세요","id":"여러분의_코드와_비교해보세요"},{"text":"다음 단계로","id":"다음_단계로"}],"summary":"이 강의는 게임 개발 캔버스 튜토리얼 (en-US)의 10단계 중 두 번째 과정입니다. Gamedev-Canvas-workshop/lesson2.html에서 이 강의의 완성된 코드를 볼 수 있습니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Move the ball","locale":"en-US","native":"English (US)"},{"title":"Mueve la bola","locale":"es","native":"Español"},{"title":"Déplacer la balle","locale":"fr","native":"Français"},{"title":"ボールを動かす","locale":"ja","native":"日本語"},{"title":"Move the ball","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Переместить мяч","locale":"ru","native":"Русский"},{"title":"让球动起来","locale":"zh-CN","native":"中文 (简体)"},{"title":"讓球移動","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ko/games/tutorials/2d_breakout_game_pure_javascript/move_the_ball","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/games/tutorials/2d_breakout_game_pure_javascript/move_the_ball/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Games","title":"게임 개발"},{"uri":"/ko/docs/Games/Tutorials","title":"Tutorials"},{"uri":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript","title":"순수한 자바스크립트를 이용한 2D 벽돌깨기 게임"},{"uri":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Move_the_ball","title":"공 움직이기"}],"pageTitle":"공 움직이기 - 게임 개발 | MDN","noIndexing":false}}