{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"점수 추가와 승패 판정 방법","mdn_url":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Track_the_score_and_win","locale":"ko","native":"한국어","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>웹 게임 개발 소개</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Introduction\">웹 게임 개발 소개</a></li>\n              <li><a href=\"/ko/docs/Games/Anatomy\">비디오 게임 구조 파악하기</a></li>\n              <li><a href=\"/ko/docs/Games/Examples\">예제</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>게임 개발에 필요한 API</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/ko/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/ko/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/ko/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/ko/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/ko/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/ko/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/ko/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/ko/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/ko/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/ko/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>기술</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/Async_scripts\">asm.js를 위해 async 스크립트 사용하기</a></li>\n              <li><a href=\"/ko/docs/Web/Apps/Developing/Optimizing_startup_performance\">시작 단계 성능 최적화 하기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/WebRTC_data_channels\">피어-투-피어 데이터 채널을 위해 WebRTC 사용하기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Efficient_animation_for_web_games\">웹 게임을 위한 효율적인 애니메이션</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Audio_for_Web_Games\">웹 게임을 위한 오디오</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/2D_collision_detection\">2D 충돌 감지</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Tilemaps\">타일과 타일맵 개요</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>웹 3D 게임</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web\">웹 3D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Basic_theory\">기본적인 3D 이론</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">PlayCanvas를 사용하여 데모 만들기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Three.js를 사용하여 데모 만들기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_collision_detection\">3D 충돌 감지</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">THREE.js를 사용한 충돌 용적 감지</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>튜토리얼</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">순수 자바스크립트를 사용한 2D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Tutorials/2D_breakout_game_Phaser\">Phaser를 사용한 2D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">기기 수평/수직 기능을 활용한 2D 주사위 게임</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>게임 배포하기</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Publishing_games\">게임 배포하기 개요</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_distribution\">게임 배포하기</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_promotion\">게임 홍보하기</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_monetization\">게임 결제기능</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection\">« 이전</a></li>\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Mouse_controls\">다음  »</a></li>\n</ul>\n<p>이번 단계는 <a href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">Gamedev Canvas tutorial</a>의 8번째 단계입니다. <a href=\"https://github.com/end3r/Gamedev-Canvas-workshop/blob/gh-pages/lesson08.html\" class=\"external\" rel=\" noopener\">Gamedev-Canvas-workshop/lesson8.html</a>에서 이번 단계의 소스 코드를 확인할 수 있습니다.</p>\n<p>벽돌 깨기 기능은 잘 작동합니다. 하지만 더 나은 게임이 되기 위해서, 유저가 벽돌을 깰 때마다 점수를 얻고, 그 점수를 기록하는 점수 기능을 만들 수 있습니다.</p>"}},{"type":"prose","value":{"id":"점수_계산하기","title":"점수 계산하기","isH3":false,"content":"<p>게임 플레이 도중 점수를 볼 수 있다면, 친구들에게 자랑할 수 있을 것입니다. 그러기 위해서는 점수를 기록할 변수가 필요합니다. 작성중인 JS파일의 변수 영역의 하단에, 아래 코드를 추가합시다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> score <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>점수 화면을 만들고, 업데이트를 하기 위해서 <code>drawScore()</code> 함수가 필요합니다. 아래 코드를 <code>collisionDetection()</code> 함수 아래에 추가합시다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drawScore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span>font <span class=\"token operator\">=</span> <span class=\"token string\">\"16px Arial\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Score: \"</span><span class=\"token operator\">+</span>score<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>텍스트를 캔버스 안에 그리는 것은 도형을 그리는 작업과 비슷합니다. 폰트를 정의하는 것은 CSS에서의 작업과 같습니다. — <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/font\"><code>font()</code> <small>(en-US)</small></a> 함수에서 크기와 타입을 설정할 수 있습니다. 그런 다음 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle\"><code>fillStyle()</code> <small>(en-US)</small></a> 함수를 사용하여 글꼴의 색상을 설정하고 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fillText\"><code>fillText()</code> <small>(en-US)</small></a> 함수를 이용해서 캔버스에 배치될 실제 텍스트와 배치 위치를 설정하는 데 사용합니다. 첫 번째 매개 변수는 텍스트 자체입니다. 위의 코드는 현재 점수를 나타내며 마지막 두 매개 변수는 텍스트가 캔버스에 배치될 좌표입니다.</p>\n<p>벽돌이 깨질 때마다 점수 변수의 값을 증가시키기 위해서 <code>collisionDetection()</code> 함수에 강조 표시된 코드를 입력하여 수정합시다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">collisionDetection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>brickWidth <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>brickHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n                    b<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    score<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><code>draw()</code> 함수 안에서 위 함수를 호출하면 호출 될 때마다 다시 그리기 때문에 점수 변동을 확인할 수 있습니다. <code>draw()</code> 아래 코드를 <code>drawPaddle()</code> 아래에서 호출합니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">drawScore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"모든_벽돌이_파괴되었을_때_승리_메시지_표시","title":"모든 벽돌이 파괴되었을 때 승리 메시지 표시","isH3":false,"content":"<p>점수가 오르는 것은 좋지만, 평생 점수가 올라가진 않을 것입니다. 모든 벽돌의 파괴가 결국 게임의 주된 목적이기 때문에 모든 점수를 얻는다면 승리 메시지를 표시해야 합니다. <code>collisionDetection()</code>함수에 강조된 코드를 붙여넣읍시다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">collisionDetection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>brickWidth <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>brickHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n                    b<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    score<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>score <span class=\"token operator\">==</span> brickRowCount<span class=\"token operator\">*</span>brickColumnCount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"YOU WIN, CONGRATULATIONS!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        document<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>결국 사용자는 모든 벽돌을 파괴한 순간, 실제로 게임에서 승리할 수 ​​있습니다. 이는 게임과 관련하여 굉장히 중요합니다. <code>document.location.reload()</code>기능은 페이지를 다시 로드하고 경고 버튼이 클릭되면 게임을 다시 시작합니다.</p>"}},{"type":"prose","value":{"id":"코드_비교","title":"코드 비교","isH3":false,"content":"<p>최종 코드는 아래와 같습니다. 지금까지 작성한 코드와 비교해 봅시다.</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"395\" src=\"https://jsfiddle.net/yumetodo/2m74vr9r/1/embedded/\" loading=\"lazy\"></iframe></p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>참고:</strong> <strong>추가 학습</strong>: 벽돌을 깰 때마다 얻는 점수를 늘리고, 게임 클리어 시 최종 점수를 경고창에 표시해 봅시다.</p>\n</div>"}},{"type":"prose","value":{"id":"다음_단계","title":"다음 단계","isH3":false,"content":"<p>게임은 현재 꽤 멋지게 보입니다. 다음 단계에서는, <a href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Mouse_controls\">Mouse controls (마우스로 패들 조종하는 방법)</a>을 통해서 게임을 즐길 수 있습니다.</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection\">« 이전</a></li>\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Mouse_controls\">다음  »</a></li>\n</ul>"}}],"toc":[{"text":"점수 계산하기","id":"점수_계산하기"},{"text":"모든 벽돌이 파괴되었을 때 승리 메시지 표시","id":"모든_벽돌이_파괴되었을_때_승리_메시지_표시"},{"text":"코드 비교","id":"코드_비교"},{"text":"다음 단계","id":"다음_단계"}],"summary":"이번 단계는 Gamedev Canvas tutorial의 8번째 단계입니다. Gamedev-Canvas-workshop/lesson8.html에서 이번 단계의 소스 코드를 확인할 수 있습니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Track the score and win","locale":"en-US","native":"English (US)"},{"title":"Poner un contador y terminar ganando","locale":"es","native":"Español"},{"title":"Suivre le score et gagner","locale":"fr","native":"Français"},{"title":"スコアと勝ち負けを記録する","locale":"ja","native":"日本語"},{"title":"Счёт и выигрыш","locale":"ru","native":"Русский"},{"title":"跟踪得分和获胜","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/games/tutorials/2d_breakout_game_pure_javascript/track_the_score_and_win","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/games/tutorials/2d_breakout_game_pure_javascript/track_the_score_and_win/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Games","title":"게임 개발"},{"uri":"/ko/docs/Games/Tutorials","title":"Tutorials"},{"uri":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript","title":"순수한 자바스크립트를 이용한 2D 벽돌깨기 게임"},{"uri":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Track_the_score_and_win","title":"점수 추가와 승패 판정 방법"}],"pageTitle":"점수 추가와 승패 판정 방법 - 게임 개발 | MDN","noIndexing":false}}