{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Paddle과 키보드 컨트롤","mdn_url":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Paddle_and_keyboard_controls","locale":"ko","native":"한국어","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>웹 게임 개발 소개</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Introduction\">웹 게임 개발 소개</a></li>\n              <li><a href=\"/ko/docs/Games/Anatomy\">비디오 게임 구조 파악하기</a></li>\n              <li><a href=\"/ko/docs/Games/Examples\">예제</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>게임 개발에 필요한 API</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/ko/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/ko/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/ko/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/ko/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/ko/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/ko/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/ko/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/ko/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/ko/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/ko/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>기술</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/Async_scripts\">asm.js를 위해 async 스크립트 사용하기</a></li>\n              <li><a href=\"/ko/docs/Web/Apps/Developing/Optimizing_startup_performance\">시작 단계 성능 최적화 하기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/WebRTC_data_channels\">피어-투-피어 데이터 채널을 위해 WebRTC 사용하기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Efficient_animation_for_web_games\">웹 게임을 위한 효율적인 애니메이션</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Audio_for_Web_Games\">웹 게임을 위한 오디오</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/2D_collision_detection\">2D 충돌 감지</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Tilemaps\">타일과 타일맵 개요</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>웹 3D 게임</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web\">웹 3D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Basic_theory\">기본적인 3D 이론</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">PlayCanvas를 사용하여 데모 만들기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Three.js를 사용하여 데모 만들기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_collision_detection\">3D 충돌 감지</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">THREE.js를 사용한 충돌 용적 감지</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>튜토리얼</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">순수 자바스크립트를 사용한 2D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Tutorials/2D_breakout_game_Phaser\">Phaser를 사용한 2D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">기기 수평/수직 기능을 활용한 2D 주사위 게임</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>게임 배포하기</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Publishing_games\">게임 배포하기 개요</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_distribution\">게임 배포하기</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_promotion\">게임 홍보하기</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_monetization\">게임 결제기능</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Bounce_off_the_walls\">« 이전</a></li>\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Game_over\">다음  »</a></li>\n</ul>\n<p>이 글은 <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Gamedev Canvas tutorial (en-US)</a>의 10단계 중 4단계 입니다. 이 글을 다 읽고 난 뒤 완성된 소스코드는 <a href=\"https://github.com/end3r/Gamedev-Canvas-workshop/blob/gh-pages/lesson04.html\" class=\"external\" rel=\" noopener\">Gamedev-Canvas-workshop/lesson4.html</a> 에서 확인할 수 있습니다.</p>\n<p>공이 계속해서 벽을 튕기며 이동하는 모습을 볼 수 있지만, 현재로서는 그것을 컨트롤 할 방법이 없습니다. 컨트롤 할 수 없으면 게임이 아니죠! paddle을 컨트롤 할 수 있는 몇가지 상호작용을 추가해 봅시다.</p>\n<p><strong>공을 치기 위한 paddle 정의</strong></p>\n<p>먼저, 우리는 공을 치기 위한 paddle이 필요합니다. 이를 위해 몇가지 변수들을 정의합시다. 코드 상단에 다른 변수들과 함께 아래 변수들을 추가하세요:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> paddleHeight <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> paddleWidth <span class=\"token operator\">=</span> <span class=\"token number\">75</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> paddleX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>width<span class=\"token operator\">-</span>paddleWidth<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>여기에서 paddle의 높이와 너비, 그리고 <code>x</code> 축 위에 시작 지점을 정의합니다. paddle을 스크린에 그리는 함수를 만듭시다. <code>drawBall()</code> 함수 아래에 다음 코드를 추가하세요:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drawPaddle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span>paddleX<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span>paddleHeight<span class=\"token punctuation\">,</span> paddleWidth<span class=\"token punctuation\">,</span> paddleHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><strong>유저의 paddle 컨트롤</strong></p>\n<p>paddle은 우리가 원하는 곳 어디든 그릴 수 있지만, 사용자의 컨트롤에 반응해야 합니다. — 키보드 컨트롤을 구현합시다. 다음 내용이 필요합니다.:</p>\n<ul>\n  <li>왼쪽 혹은 오른쪽 컨트롤 버튼이 눌렸는지 확인하는 두개의 변수</li>\n  <li><code>keydown</code> 과 <code>keyup</code> 이벤트 리스너 — 버튼이 눌렸을 때 paddle의 움직임을 조종할 수 있는 코드가 실행되어야 합니다.</li>\n  <li>버튼이 눌렸을 때 <code>keydown</code> 과 <code>keyup</code> 이벤트를 핸들링하는 두개의 함수</li>\n  <li>paddle이 왼쪽 혹은 오른쪽으로 움직이는 기능</li>\n</ul>\n<p>버튼을 누르는 것은 boolean 변수로 정의하고 초기화 합니다. 아래 코드를 변수 선언 부분에 추가하세요. :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> rightPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> leftPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>처음에는 컨트롤 버튼이 눌려지지 않은 상태이므로 두개의 기본값은 false 입니다. 키가 눌렸음을 인식하기 위해, 이벤트 리스너를 설정합니다. 자바스크립트 하단에 <code>setInterval()</code> 바로 위에 아래 코드를 추가합니다.:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"keydown\"</span><span class=\"token punctuation\">,</span> keyDownHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"keyup\"</span><span class=\"token punctuation\">,</span> keyUpHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>키보드 중 어떤 키 하나가 눌려서 <code>keydown</code> 이벤트가 발생하면, <code>keyDownHandler()</code> 함수가 실행됩니다. 두번째 리스너에도 같은 패턴이 적용됩니다: 키에서 손을 때면 <code>keyup</code> 이벤트가 <code>keyUpHandler()</code> 함수를 실행합니다 . <code>addEventListener()</code> 아래에 다음 코드를 추가하세요:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">keyDownHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">==</span> <span class=\"token number\">39</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        rightPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">==</span> <span class=\"token number\">37</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        leftPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">keyUpHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">==</span> <span class=\"token number\">39</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        rightPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">==</span> <span class=\"token number\">37</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        leftPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>키를 누르면 변수에 정보가 저장됩니다. 각 경우에 관련된 변수가 <code>true</code> 로 설정됩니다. 키에서 손을 때면, 변수값은 <code>false</code>로 되돌아갑니다.</p>\n<p>두 함수 모두 e 변수로 표시되는 이벤트를 파라미터로 사용합니다. 이것으로 유용한 정보를 얻을 수 있습니다: <code>keyCode</code> 는 눌려진 키에 대한 정보를 가지고 있습니다. 예를 들어 키 코드 37 은 왼쪽 방향키이고 39 는 오른쪽 방향키 입니다. 만약에 왼쪽 방향키를 누르면, <code>leftPressed</code> 변수가 <code>true</code> 로 설정되고, 왼쪽 방향키에서 손을 때면 <code>leftPressed</code> 변수가 <code>false</code>로 설정됩니다. 오른쪽 방향키와 <code>rightPressed</code> 변수에도 동일한 패턴이 적용됩니다.</p>"}},{"type":"prose","value":{"id":"paddle_이동_로직","title":"Paddle 이동 로직","isH3":true,"content":"<p>이제 우리는 눌려진 키, 이벤트 리스너, 관련된 함수에 대한 정보를 저장할 변수를 가지고 있습니다. 이제 실제 코드를 사용하여 이것들을 사용하고 paddle을 화면에서 움직여봅시다. <code>draw()</code> 함수에서, 각각의 프레임이 렌더링 될때마다 왼쪽이나 오른쪽 방향키가 눌려졌는지 확인합니다. 코드는 아래와 같습니다:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>rightPressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    paddleX <span class=\"token operator\">+=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>leftPressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    paddleX <span class=\"token operator\">-=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>만약 왼쪽 방향키를 누르면, paddle은 좌측으로 7픽셀 움직이고, 오른쪽 방향키를 누르면, 우측으로 7픽셀 움직입니다. 잘 작동하지만, 키를 너무 오래 누르고 있으면 paddle이 캔버스 밖으로 사라집니다. 아래처럼 코드를 수정해서 paddle이 캔버스 안에서만 움직이도록 개선합니다:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>rightPressed <span class=\"token operator\">&amp;&amp;</span> paddleX <span class=\"token operator\">&lt;</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token operator\">-</span>paddleWidth<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    paddleX <span class=\"token operator\">+=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>leftPressed <span class=\"token operator\">&amp;&amp;</span> paddleX <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    paddleX <span class=\"token operator\">-=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><code>paddleX</code> 의 위치는 캔버스 왼쪽 끝 <code>0</code> 위치와 오른쪽 <code>canvas.width-paddleWidth</code> 에서 움직입니다.</p>\n<p>위의 코드를 <code>draw()</code> 함수 아래쪽에 추가합니다.</p>\n<p>이제 paddle이 화면에서 실제로 그려지도록 <code>draw()</code> 함수 안에서 <code>drawPaddle()</code> 을 호출합니다. <code>draw()</code> 함수 안에 <code>drawBall()</code> 아래에 다음 코드를 추가합니다:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">drawPaddle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"여러분의_코드와_비교해보세요","title":"여러분의 코드와 비교해보세요","isH3":false,"content":"<p>여기 움직이는 코드를 확인해보세요:</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"395\" src=\"https://jsfiddle.net/end3r/tgn3zscj/embedded/\" loading=\"lazy\"></iframe></p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>참고:</strong> <strong>Exercise</strong>: paddle의 움직임을 빠르거나 느리게, 혹은 사이즈를 변경해보세요.</p>\n</div>"}},{"type":"prose","value":{"id":"다음_단계","title":"다음 단계","isH3":false,"content":"<p>게임과 비슷해지긴 했지만 한가지 문제는 게임이 끝나지 않는다는 것입니다. 5단계에서 <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Game_over\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Game over (en-US)</a>를 추가할 것입니다.</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Bounce_off_the_walls\">« 이전</a></li>\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Game_over\">다음  »</a></li>\n</ul>"}}],"toc":[{"text":"여러분의 코드와 비교해보세요","id":"여러분의_코드와_비교해보세요"},{"text":"다음 단계","id":"다음_단계"}],"summary":"이 글은 Gamedev Canvas tutorial (en-US)의 10단계 중 4단계 입니다. 이 글을 다 읽고 난 뒤 완성된 소스코드는 Gamedev-Canvas-workshop/lesson4.html 에서 확인할 수 있습니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Paddle and keyboard controls","locale":"en-US","native":"English (US)"},{"title":"Control de la pala y el teclado","locale":"es","native":"Español"},{"title":"Raquette et contrôle clavier","locale":"fr","native":"Français"},{"title":"パドルとキーボード操作","locale":"ja","native":"日本語"},{"title":"Ракетка и управление клавиатурой","locale":"ru","native":"Русский"},{"title":"球板及键盘控制","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/games/tutorials/2d_breakout_game_pure_javascript/paddle_and_keyboard_controls","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/games/tutorials/2d_breakout_game_pure_javascript/paddle_and_keyboard_controls/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Games","title":"게임 개발"},{"uri":"/ko/docs/Games/Tutorials","title":"Tutorials"},{"uri":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript","title":"순수한 자바스크립트를 이용한 2D 벽돌깨기 게임"},{"uri":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Paddle_and_keyboard_controls","title":"Paddle과 키보드 컨트롤"}],"pageTitle":"Paddle과 키보드 컨트롤 - 게임 개발 | MDN","noIndexing":false}}