{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"게임 오버","mdn_url":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Game_over","locale":"ko","native":"한국어","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>웹 게임 개발 소개</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Introduction\">웹 게임 개발 소개</a></li>\n              <li><a href=\"/ko/docs/Games/Anatomy\">비디오 게임 구조 파악하기</a></li>\n              <li><a href=\"/ko/docs/Games/Examples\">예제</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>게임 개발에 필요한 API</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/ko/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/ko/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/ko/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/ko/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/ko/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/ko/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/ko/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/ko/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/ko/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/ko/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/ko/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/ko/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>기술</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/Async_scripts\">asm.js를 위해 async 스크립트 사용하기</a></li>\n              <li><a href=\"/ko/docs/Web/Apps/Developing/Optimizing_startup_performance\">시작 단계 성능 최적화 하기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/WebRTC_data_channels\">피어-투-피어 데이터 채널을 위해 WebRTC 사용하기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Efficient_animation_for_web_games\">웹 게임을 위한 효율적인 애니메이션</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Audio_for_Web_Games\">웹 게임을 위한 오디오</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/2D_collision_detection\">2D 충돌 감지</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Tilemaps\">타일과 타일맵 개요</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>웹 3D 게임</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web\">웹 3D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Basic_theory\">기본적인 3D 이론</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">PlayCanvas를 사용하여 데모 만들기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Three.js를 사용하여 데모 만들기</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_collision_detection\">3D 충돌 감지</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">THREE.js를 사용한 충돌 용적 감지</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/ko/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>튜토리얼</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">순수 자바스크립트를 사용한 2D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Tutorials/2D_breakout_game_Phaser\">Phaser를 사용한 2D 게임</a></li>\n              <li><a href=\"/ko/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">기기 수평/수직 기능을 활용한 2D 주사위 게임</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>게임 배포하기</summary>\n            <ol>\n              <li><a href=\"/ko/docs/Games/Publishing_games\">게임 배포하기 개요</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_distribution\">게임 배포하기</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_promotion\">게임 홍보하기</a></li>\n              <li><a href=\"/ko/docs/Games/Publishing_games/Game_monetization\">게임 결제기능</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Paddle_and_keyboard_controls\">« 이전</a></li>\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Build_the_brick_field\">다음  »</a></li>\n</ul>\n<p>이것은 <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Gamedev Canvas tutorial (en-US)</a> 의 다섯 번째 학습입니다. 이 학습을 통해 완성된 코드는 <a href=\"https://github.com/end3r/Gamedev-Canvas-workshop/blob/gh-pages/lesson05.html\" class=\"external\" rel=\" noopener\">Gamedev-Canvas-workshop/lesson5.html</a> 에서 확인할 수 있습니다.</p>\n<p>공이 벽에서 튕겨져 나오는 것과 패들을 움직이는 것을 보는건 재밌지만, 더 진전이 필요합니다. 게임에서 질 수 있다면 좋겠습니다. 벽돌 깨기 게임에서 패배하는 구조는 꽤 단순합니다. 만약 패들이 공을 놓친다면, 공은 캔버스의 아래 면에 닿을 것이고, 그대로 게임은 끝납니다.</p>"}},{"type":"prose","value":{"id":"게임_오버_기능_적용하기","title":"게임 오버 기능 적용하기","isH3":false,"content":"<p>'게임 오버' 기능을 만들어봅시다. 아래에 세 번째 학습에서 작성한, 벽에서 공을 반사시키는 코드의 일부가 있습니다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> dx <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token operator\">-</span>ballRadius <span class=\"token operator\">||</span> x <span class=\"token operator\">+</span> dx <span class=\"token operator\">&lt;</span> ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dx<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span>ballRadius <span class=\"token operator\">||</span> y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>사면 모두에서 공을 튕겨내지 말고 왼쪽, 위쪽, 오른쪽, 세 면에만 적용해봅시다. 아래쪽 면에 닿는 순간 게임은 끝납니다. 우리는 공이 밑면에 충돌하는 순간 \"게임 오버\" 상태로 바뀌게 하기 위해 두 번째 <code>if</code> 블록을 수정할 것입니다. 우선 경고 메시지를 보여주고 페이지를 리로딩해서 게임을 다시 시작하게 할 것입니다. 두번째 <code>if</code> 블록을 아래와 같이 수정해봅시다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span>ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GAME OVER\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"paddle은_공을_튕겨내야지","title":"Paddle은 공을 튕겨내야지","isH3":false,"content":"<p>이번 학습에서 할 마지막 일은 공과 패들 사이의 충돌 감지같은, 공을 게임 화면으로 되돌아가게 튕겨내는 기능을 만드는 것입니다. 가장 쉬운 방법은 공의 중심이 패들의 내부에 있는지 확인하는 것이다. 위에서 수정한 코드를 약간 고쳐봅시다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span>ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;</span> paddleX <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;</span> paddleX <span class=\"token operator\">+</span> paddleWidth<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GAME OVER\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        document<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>공이 캔버스의 밑면에 닿는 순간, 공이 패들의 안쪽에 있는지 확인해야 합니다. 만약 그렇다면, 우리가 기대하는대로 공은 튕겨져야 합니다. 그게 아니라면, 게임의 전과 같이 끝나야 합니다.</p>"}},{"type":"prose","value":{"id":"코드_비교하기","title":"코드 비교하기","isH3":false,"content":"<p>여기 완성된 코드가 있으니 작성한 코드와 비교해봅시다.</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"395\" src=\"https://jsfiddle.net/end3r/z4zy79fo/embedded/\" loading=\"lazy\"></iframe></p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>참고:</strong> <strong>연습</strong>: 공이 패들에 닿았을 때 공의 속도를 빠르게 만들어봅시다.</p>\n</div>"}},{"type":"prose","value":{"id":"다음_단계","title":"다음 단계","isH3":false,"content":"<p>지금까지 아주 잘 하고 있습니다. 게임은 플레이 할 가치가 생겼고 이젠 게임이 끝날 수도 있습니다. 하지만 뭔가가 빠졌습니다. 여섯 번째 학습 — <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Build_the_brick_field\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">벽돌 영역을 만들어보기 (en-US)</a> — 로 이동해서 몇 개의 벽돌을 만들어 봅시다.</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Paddle_and_keyboard_controls\">« 이전</a></li>\n    <li><a class=\"button minimal\" href=\"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Build_the_brick_field\">다음  »</a></li>\n</ul>"}}],"toc":[{"text":"게임 오버 기능 적용하기","id":"게임_오버_기능_적용하기"},{"text":"Paddle은 공을 튕겨내야지","id":"paddle은_공을_튕겨내야지"},{"text":"코드 비교하기","id":"코드_비교하기"},{"text":"다음 단계","id":"다음_단계"}],"summary":"이것은 Gamedev Canvas tutorial (en-US) 의 다섯 번째 학습입니다. 이 학습을 통해 완성된 코드는 Gamedev-Canvas-workshop/lesson5.html 에서 확인할 수 있습니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Game over","locale":"en-US","native":"English (US)"},{"title":"Fin del juego","locale":"es","native":"Español"},{"title":"Fin de partie","locale":"fr","native":"Français"},{"title":"ゲームオーバー","locale":"ja","native":"日本語"},{"title":"Game over","locale":"ru","native":"Русский"},{"title":"游戏结束","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/games/tutorials/2d_breakout_game_pure_javascript/game_over","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/games/tutorials/2d_breakout_game_pure_javascript/game_over/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Games","title":"게임 개발"},{"uri":"/ko/docs/Games/Tutorials","title":"Tutorials"},{"uri":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript","title":"순수한 자바스크립트를 이용한 2D 벽돌깨기 게임"},{"uri":"/ko/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Game_over","title":"게임 오버"}],"pageTitle":"게임 오버 - 게임 개발 | MDN","noIndexing":false}}