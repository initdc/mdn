{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"스코프","mdn_url":"/ko/docs/Glossary/Scope","locale":"ko","native":"한국어","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>현재 실행되는 컨텍스트를 말한다. 여기서 컨텍스트는 <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\">값</a>과 <strong>표현식</strong>이 **\"표현\"**되거나 참조 될 수 있음을 의미한다. 만약 <strong><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\">변수</a></strong> 또는 다른 표현식이 \"해당 스코프\"내에 있지 않다면 사용할 수 없다. 스코프는 또한 계층적인 구조를 가지기 때문에 하위 스코프는 상위 스코프에 접근할 수 있지만 반대는 불가하다.</p>\n<p>**<a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\">함수</a>**는** **<a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\">자바스크립트</a>에서 **클로저** 역할을 하기 때문에 스코프를 생성하므로 함수 내에 정의된 변수는 외부 함수나 다른 함수 내에서는 접근 할 수 없다. 예를 들어 다음과 같은 상황은 유효하지 않다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">exampleFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token string\">\"declared inside function\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// x는 오직 exampleFunction 내부에서만 사용 가능.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Inside function\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 에러 발생</span>\n</code></pre></div>\n<p>그러나 다음과 같은 코드는 변수가 함수 외부의 전역에서 선언되었기 때문에 유효하다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token string\">\"declared outside function\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">exampleFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">exampleFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Inside function\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Outside function\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"learn_more","title":"Learn more","isH3":false,"content":""}},{"type":"prose","value":{"id":"general_knowledge","title":"General knowledge","isH3":true,"content":"<ul>\n  <li><a href=\"https://en.wikipedia.org/wiki/Scope_(computer_science)\" class=\"external\" rel=\" noopener\">Scope (computer science)</a> on Wikipedia</li>\n</ul>"}}],"toc":[{"text":"Learn more","id":"learn_more"}],"summary":"현재 실행되는 컨텍스트를 말한다. 여기서 컨텍스트는 값과 표현식이 **\"표현\"**되거나 참조 될 수 있음을 의미한다. 만약 변수 또는 다른 표현식이 \"해당 스코프\"내에 있지 않다면 사용할 수 없다. 스코프는 또한 계층적인 구조를 가지기 때문에 하위 스코프는 상위 스코프에 접근할 수 있지만 반대는 불가하다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Scope","locale":"en-US","native":"English (US)"},{"title":"Scope","locale":"es","native":"Español"},{"title":"Portée","locale":"fr","native":"Français"},{"title":"Scope (スコープ)","locale":"ja","native":"日本語"},{"title":"Escopo","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Scope（作用域）","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/glossary/scope","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/glossary/scope/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Glossary","title":"용어 사전"},{"uri":"/ko/docs/Glossary/Scope","title":"스코프"}],"pageTitle":"스코프 - 용어 사전 | MDN","noIndexing":false}}