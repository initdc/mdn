{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"전역 객체","mdn_url":"/ko/docs/Glossary/Global_object","locale":"ko","native":"한국어","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>전역 객체 <a href=\"/ko/docs/Glossary/Object\">object</a> 는 전역 범위 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Global_scope\">global scope <small>(en-US)</small></a> 에 항상 존재하는 객체를 의미합니다.</p>\n<p>자바스크립트에는 전역 객체로 선언된 객체들이 항상 존재합니다. 웹브라우저에서 스크립트가 전역 변수를 생성할 때, 그것들은 전역 객체의 멤버로서 생성됩니다. (이것은 <a href=\"/ko/docs/Glossary/Node.js\">Node.js</a> 에서는 예외입니다.) 전역 객체의 <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\">interface</a> 는 스크립트가 실행되고 있는 곳의 실행 컨텍스트에 의존합니다. 예를 들어:</p>\n<ul>\n  <li>웹브라우저에 있는 스크립트가 특별히 백그라운드 작업으로 시작하지 않는 코드들은 그것의 전역 객체로써 <a href=\"/ko/docs/Web/API/Window\"><code>Window</code></a> 를 가집니다. 이것은 Web에 있는 자바스크립트 코드의 상당수가 그렇습니다.</li>\n  <li><a href=\"/ko/docs/Web/API/Worker\"><code>Worker</code></a> 에서 실행하는 코드는 그것의 전역 객체로서 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code> <small>(en-US)</small></a> 를 가집니다.</li>\n  <li><a href=\"/ko/docs/Glossary/Node.js\">Node.js</a> 환경에서 실행하는 스크립트들은 <a href=\"https://nodejs.org/api/globals.html#globals_global\" class=\"external\" rel=\" noopener\"><code>global</code></a> 로 호출되는 객체를 그것들의 전역 객체로 가집니다.</li>\n</ul>"}},{"type":"prose","value":{"id":"브라우저_에서의_window_객체","title":"브라우저 에서의 <code>window</code> 객체","isH3":false,"content":"<p><code>window</code> 객체는 브라우저에서 전역 객체입니다. 어느 전역 객체나 함수는 <code>window</code> 객체의 프로퍼티로서 접근될 수 있습니다.</p>","titleAsText":"브라우저 에서의 window 객체"}},{"type":"prose","value":{"id":"전역_변수_접근","title":"전역 변수 접근","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> <span class=\"token string\">\"foobar\"</span><span class=\"token punctuation\">;</span>\nfoo <span class=\"token operator\">===</span> window<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Returns: true</span>\n</code></pre></div>\n<p>전역 객체로 <code>foo</code> 변수를 선언한 뒤, 우리는 <code>foo</code> 변수명을 사용해 전역 객체인 <code>window``.foo</code> 의 프로퍼티로 <code>window</code> 객체에서 그것의 값에 직접 접근할 수 있습니다.,</p>\n<h4 id=\"설명\">설명:</h4>\n<p>전역 객체 <code>foo</code> 는 <code>window</code> 객체에 아래와 같이 저장됩니다:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token string\">\"foobar\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"전역_함수_접근","title":"전역 함수 접근","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// It is the same as the normal invoking: greeting();</span>\n</code></pre></div>\n<p>위의 예는 <code>window</code> 객체의 프로퍼티로서 어떻게 전역 함수가 저장되는지를 보여주고 있습니다 . 우리가 <code>greeting</code> 을 전역 함수로써 호출하면 내부적으로는 <code>window</code> 객체를 사용해 호출됨을 보여주고 있습니다.</p>\n<h4 id=\"설명_2\">설명:</h4>\n<p>전역 함수 <code>greeting</code> 은 아래와 같이 <code>window</code> 객체에 저장됩니다:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function-variable function\">greeting</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"같이_보기","title":"같이 보기","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Glossary\">MDN Web Docs Glossary</a>\n    <ul>\n      <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Global_scope\">global scope <small>(en-US)</small></a></li>\n      <li><a href=\"/ko/docs/Glossary/Object\">object</a></li>\n    </ul>\n  </li>\n  <li><a href=\"/ko/docs/Web/API/Window\"><code>Window</code></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code> <small>(en-US)</small></a></li>\n  <li><a href=\"https://nodejs.org/api/globals.html#globals_global\" class=\"external\" rel=\" noopener\"><code>global</code></a></li>\n</ul>"}}],"toc":[{"text":"브라우저 에서의 <code>window</code> 객체","id":"브라우저_에서의_window_객체"},{"text":"같이 보기","id":"같이_보기"}],"summary":"전역 객체 object 는 전역 범위 global scope (en-US) 에 항상 존재하는 객체를 의미합니다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Global object","locale":"en-US","native":"English (US)"},{"title":"Objet global","locale":"fr","native":"Français"},{"title":"Global object (グローバルオブジェクト)","locale":"ja","native":"日本語"},{"title":"Global object","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Global object","locale":"ru","native":"Русский"},{"title":"全局对象","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/glossary/global_object","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/glossary/global_object/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Glossary","title":"용어 사전"},{"uri":"/ko/docs/Glossary/Global_object","title":"전역 객체"}],"pageTitle":"전역 객체 - 용어 사전 | MDN","noIndexing":false}}