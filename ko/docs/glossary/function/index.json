{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"함수","mdn_url":"/ko/docs/Glossary/Function","locale":"ko","native":"한국어","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>함수</strong>는 다른 코드에서 또는 자신에 의해 호출되거나 함수 레퍼런스를 저장한 <a href=\"/ko/docs/Glossary/Variable\">변수</a>에 의해 호출될 수 있는 코드조각이다. 함수가 호출될 때 함수의 입력으로 <a href=\"/ko/docs/Glossary/Argument\">인수</a> 가 전달되고 함수는 선택적으로 출력값을 반환할 수 있다. 또한 <a href=\"/ko/docs/Glossary/JavaScript\">JavaScript</a>에서 함수는 <a href=\"/ko/docs/Glossary/Object\">객체</a>가 될 수도 있다.</p>\n<p>함수명은 함수 선언문 또는 함수 표현식의 일부로써 선언된 <a href=\"/ko/docs/Glossary/Identifier\">식별자</a>이다. 함수 이름의 <a href=\"/ko/docs/Glossary/Scope\">범위</a>는 함수 이름의 선언식 또는 표현식인지에 따라 결정된다.</p>"}},{"type":"prose","value":{"id":"여러_함수_형식들","title":"여러 함수 형식들","isH3":true,"content":"<p><strong>익명 함수</strong>는 함수명이 없는 함수이다. 함수 표현식만 익명 일 수 있으며, 함수 선언식에는 반드시 이름이 있어야한다 :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// When used as a function expression</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// or using the ECMAScript 2015 arrow notation</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><strong>이름있는 함수</strong>는 함수명을 갖는 함수이다 :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Function declaration</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Named function expression</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// or using the ECMAScript 2015 arrow notation</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">foo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><strong>안쪽 함수</strong>는 다른함수 내부에서 정의된 함수이다(아래 예에서는 square). <strong>바깥 함수</strong>는 함수를 포함하고 있는 함수이다(아래 예에서는 addSquares):</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">addSquares</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">function</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> x<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Using ECMAScript 2015 arrow notation</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addSquares</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">square</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=&gt;</span> x<span class=\"token operator\">*</span>x<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><strong>재귀호출 함수</strong>는 자기 자신을 호출하는 함수이다. <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Recursion\">재귀호출 <small>(en-US)</small></a> 참조.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Using ECMAScript 2015 arrow notation</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loop</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><strong>즉시 실행 함수 표현</strong> (IIFE)은 브라우저 컴파일러에 함수가 로드된 후 직접 호출되는 함수이다. IIFE를 식별하는 방법은 함수 선언의 끝에 여분의 왼쪽과 오른쪽 괄호를 두는 것이다. 이런 함수표현식의 형식은 많은 장점을 갖고 있지만 여기서는 일일이 설명하지 않는다.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Declared functions can't be called immediately this way</span>\n<span class=\"token comment\">// Error (https://en.wikipedia.org/wiki/Immediately-invoked_function_expression)</span>\n<span class=\"token comment\">/*\n​function foo() {\n    console.log('Hello Foo');\n}();\n*/</span>\n\n<span class=\"token comment\">// Function expressions, named or anonymous, can be called immediately</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello Foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">food</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello Food\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>IIFE에 대해 더 많은 설명이 필요하다면 위키피디아의 다음 페이지를 확인 바란다: <a href=\"https://en.wikipedia.org/wiki/Immediately-invoked_function_expression\" class=\"external\" rel=\" noopener\">Immediately Invoked Function Expression</a></p>"}},{"type":"prose","value":{"id":"더_알아보기","title":"더 알아보기","isH3":false,"content":""}},{"type":"prose","value":{"id":"기술적_참조","title":"기술적 참조","isH3":true,"content":"<ul>\n  <li><a href=\"/ko/docs/Web/JavaScript/Guide/Functions\">Functions</a></li>\n</ul>"}}],"toc":[{"text":"더 알아보기","id":"더_알아보기"}],"summary":"함수는 다른 코드에서 또는 자신에 의해 호출되거나 함수 레퍼런스를 저장한 변수에 의해 호출될 수 있는 코드조각이다. 함수가 호출될 때 함수의 입력으로 인수 가 전달되고 함수는 선택적으로 출력값을 반환할 수 있다. 또한 JavaScript에서 함수는 객체가 될 수도 있다.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Function","locale":"en-US","native":"English (US)"},{"title":"Función","locale":"es","native":"Español"},{"title":"Fonction","locale":"fr","native":"Français"},{"title":"Function (関数)","locale":"ja","native":"日本語"},{"title":"Função","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Функция","locale":"ru","native":"Русский"},{"title":"Function（函数）","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ko/glossary/function","github_url":"https://github.com/mdn/translated-content/blob/main/files/ko/glossary/function/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ko/docs/Glossary","title":"용어 사전"},{"uri":"/ko/docs/Glossary/Function","title":"함수"}],"pageTitle":"함수 - 용어 사전 | MDN","noIndexing":false}}