{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"JavaScript 基础","mdn_url":"/zh-CN/docs/Learn/Getting_started_with_the_web/JavaScript_basics","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"open\"><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web\"><strong>新手请从这开始！</strong></a></li>\n  <li class=\"toggle\">\n      <details open=\"\">\n          <summary>Web 入门</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web\">Web 概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">安装基本软件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">您的网站会是什么样？</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">处理文件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">发布您的网站</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Web 如何运作</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/HTML\"><strong>HTML — 构建 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 介绍</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML\">HTML 概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">HTML 入门</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">脑袋里是什么？HTML 中的元数据</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML 文字基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">建立超链接</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">高级文字格式</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">文档与网站架构</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">HTML 除错</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">作业：标记字母</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">作业：构建出有内容的网页</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>多媒体与嵌入</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding\">多媒体与嵌入概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">HTML 中的图片</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">视频和音频内容</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">从对象到 iframe — 其他嵌入技术</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">为 Web 新增向量图</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">自适应图片</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">作业：Mozilla 醒目页面</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 表格</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables\">HTML 表格概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Basics\">HTML 表格基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Advanced\">HTML 高级表格特性和可访问性</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Structuring_planet_data\">作业：构建行星数据</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/CSS\"><strong>CSS — 设计 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps\">CSS第一步概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/What_is_CSS\">什么是CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/Getting_started\">让我们开始CSS之旅</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/How_CSS_is_structured\">如何让构建CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/How_CSS_works\">CSS如何运行</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">运用你的新知识</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 构建基础</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks\">CSS构建基础概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">层叠与继承</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Selectors\">CSS选择器</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/The_box_model\">盒模型</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">背景与边框</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">处理不同方向的文本</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Overflowing_content\">溢出的内容</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Values_and_units\">值与单位</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">在CSS中调整大小</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">图像、媒体和表单元素</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Styling_tables\">样式化表格</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Debugging_CSS\">调试CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Organizing\">组织你的CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>样式化文字</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text\">样式化文字概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Fundamentals\">基础文字与字体样式化</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Styling_lists\">样式化列表</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Styling_links\">样式化链接</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Web_fonts\">Web 字体</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">作业：排版社区大学首页</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 排版</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout\">CSS 排版概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Normal_Flow\">正常布局流</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox\">弹性区块</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Grids\">网格</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Floats\">浮动</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Positioning\">定位</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">多列布局</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design\">响应式布局</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Media_queries\">媒体查询</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">传统的布局方法</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">支持旧的浏览器</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">基础布局练习</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/JavaScript\"><strong>JavaScript — 用户端动态脚本</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps\">JavaScript 第一步概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">什么是 JavaScript？</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/A_first_splash\">初次接触 JavaScript</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/What_went_wrong\">出现了什么问题？JavaScript 疑难解答</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Variables\">储存你所需的信息 — 变量</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Math\">JavaScript 基础概念 — 数字与运算符</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Strings\">处理文字 — JavaScript 中的字符串</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Useful_string_methods\">有用的字符串方法</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Arrays\">数组</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Silly_story_generator\">作业：傻瓜故事产生器</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 基础要件</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks\">JavaScript 基础要件概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/conditionals\">在代码中决策 — 条件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Looping_code\">代码循环</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Functions\">函数 - 可重复利用的代码块</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">建立自己的函数</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Return_values\">函数回传值</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Events\">事件介绍</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Image_gallery\">作业：图库</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 对象介绍</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects\">JavaScript 对象概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Basics\">对象基础概念</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes\">对象原型</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/JSON\">使用 JSON 资料</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object_building_practice\">对象构建实践</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">作业：为弹跳球展示新增功能</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>异步JavaScript</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous\">异步JavaScript概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Concepts\">通用异步编程概念</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Introducing\">异步JavaScript简介</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">合作异步JavaScript: 超时和间隔</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Promises\">Promises: 优雅的异步处理</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Async_await\">async和await:让异步编程更简单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">选择正确的方法</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端网页 API</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs\">客户端网页 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">网页 API 介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">操纵文档</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">从服务器获取数据</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">第三方 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">画图</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">视频与音频 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">客户端存储</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Forms\"><strong>Web表单 — 与用户数据打交道</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Web表单核心</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Forms\">Web表单概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Your_first_form\">你的第一个表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/How_to_structure_a_web_form\">如何构造Web表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Basic_native_form_controls\">原生表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/HTML5_input_types\">HTML5的input类型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Other_form_controls\">其它表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Styling_web_forms\">样式化Web表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Advanced_form_styling\">高级表单样式</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/UI_pseudo-classes\">UI 伪类</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Form_validation\">客户端表单验证</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Sending_and_retrieving_form_data\">发送表单数据</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Web表单进阶</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/How_to_build_custom_form_controls\">如何构造自定义表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Sending_forms_through_JavaScript\">使用JavaScript发送表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">表单组件兼容性列表</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Accessibility\"><strong>可访问性 — 使每个人都能使用 Web</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>可访问性指南</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility\">可访问性概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/What_is_accessibility\">什么是可访问性</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/HTML\">HTML: 可访问性的好基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS 和 JavaScript 可访问性最佳实践</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA 基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/Multimedia\">可访问性多媒体</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/Mobile\">移动端可访问性</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>可访问性测评</summary>\n        <ol>\n            <li><a href=\"/zh-CN/docs/Learn/Accessibility/Accessibility_troubleshooting\">作业：可访问性疑难解答</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing\"><strong>工具与测试</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端web开发工具</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">客户端web开发工具索引</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">客户端工具概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">命令行速成课</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">包管理基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">一个完整的工具链</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">发布你的应用</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端框架介绍</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">客户端框架概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">框架的主要特性</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">开始使用Vue</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">创建第一个Vue组件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">渲染一个Vue组件列表</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">添加一个新的TODO表单: Vue事件、方法、模型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">用CSS样式化Vue组件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git 和 GitHub</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/GitHub\">Git和GitHub 概览</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>跨浏览器测试</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing\">跨浏览器测试概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">跨浏览器测试介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">执行测试策略</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">处理常见的 HTML 与 CSS 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">处理常见的 JavaScript 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">处理常见的可访问性问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">建置功能侦测</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">自动测试介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">设置您的自动测试环境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/Server-side\"><strong>服务端网页编程</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>第一步</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps\">第一步概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Introduction\">服务端介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Client-Server_overview\">用户端概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Web_frameworks\">服务端网络框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Website_security\">网站安全</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Django 网站框架 (Python)</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django\">Django 网站框架 (Python) 概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Introduction\">介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/development_environment\">搭建开发环境</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Tutorial_local_library_website\">在线教学：本地图书馆网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/skeleton_website\">在线教学 2：建立网站框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Models\">在线教学 3：使用模型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Admin_site\">在线教学 4：Django 管理网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Home_page\">在线教学 5：建立我们的首页</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Generic_views\">在线教学 6：通用列表与细节检查</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Sessions\">在线教学 7：会话框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Authentication\">在线教学 8：用户授权与许可</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Forms\">在线教学 9：搭配表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Testing\">在线教学 10：测试 Django 的 Web 应用</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Deployment\">在线教学 11：部署 Django 至产品</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/web_application_security\">Web 应用安全性</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/django_assessment_blog\">作业：DIY 博客</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express 网页框架 (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs\">Express 网页框架 (Node.js/JavaScript) 概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node 介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/development_environment\">架设 Node (Express) 开发环境</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express 教程： 本地图书馆网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express 教程 2： 新建网站骨架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express 教程 3： 使用数据库 (Mongoose)</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/routes\">Express 教程 4： 路由和控制器</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教程 5： 呈现图书馆数据</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/forms\">Express 教程 6： 使用表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/deployment\">Express 教程 7： 部署至生产环境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>更多资源</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>常见问题</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/HTML/Howto\">HTML 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/CSS/Howto\">CSS 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Web_mechanics\">Web 是如何运作的</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Tools_and_setup\">工具与安装</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Design_and_accessibility\">设计与可访问性</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/CSS_basics\"> 上一页 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Getting_started_with_the_web\"> Overview: Getting started with the web</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Publishing_your_website\"> 下一页  </a></li>\n</ul>\n<p>JavaScript 是一门编程语言，可为网站添加交互功能（例如：游戏、动态样式、动画以及在按下按钮或收到表单数据时做出的响应等）。本文介绍了 JavaScript 的精彩之处和主要用途。</p>"}},{"type":"prose","value":{"id":"javascript_到底是什么？","title":"JavaScript 到底是什么？","isH3":false,"content":"<p><a href=\"/zh-CN/docs/Glossary/JavaScript\">JavaScript</a>（缩写：JS）是一门完备的动态编程语言。当应用于 <a href=\"/zh-CN/docs/Glossary/HTML\">HTML</a> 文档时，可为网站提供动态交互特性。由布兰登·艾克（Brendan Eich，Mozilla 项目、Mozilla 基金会和 Mozilla 公司的联合创始人）发明。</p>\n<p>JavaScript 的应用场合极其广泛，简单到幻灯片、照片库、浮动布局和响应按钮点击，复杂到游戏、2D/3D 动画、大型数据库驱动程序等等。</p>\n<p>JavaScript 相当简洁，却非常灵活。开发者们基于 JavaScript 核心编写了大量实用工具，可以使 开发工作事半功倍。其中包括：</p>\n<ul>\n  <li>浏览器应用程序接口（<a href=\"/zh-CN/docs/Glossary/API\">API</a>）—— 浏览器内置的 API 提供了丰富的功能，比如：动态创建 HTML 和设置 CSS 样式、从用户的摄像头采集处理视频流、生成 3D 图像与音频样本等等。</li>\n  <li>第三方 API —— 让开发者可以在自己的站点中整合其它内容提供者（Twitter、Facebook 等）提供的功能。</li>\n  <li>第三方框架和库 —— 用来快速构建网站和应用。</li>\n</ul>\n<p>本节是一篇 JavaScript 简介，因此这个阶段不会对 JavaScript 语言和上述工具做过多的介绍。之后可以到 <a href=\"/zh-CN/docs/Learn/JavaScript\">JavaScript 学习区</a> 和 MDN 的其它地方学习更多细节。</p>\n<p>下面对语言核心做一个不完整介绍，期间还可以接触到一些浏览器 API 特性。</p>"}},{"type":"prose","value":{"id":"“hello_world!”示例","title":"“Hello World!”示例","isH3":false,"content":"<p>读到这里你一定很激动，诚然 —— JavaScript 是最振奋人心的 Web 技术之一，而且在娴熟驾驭之后，你的网站在功能和创新力上将达到一个新的维度。</p>\n<p>然而，JavaScript 比 HTML 和 CSS 学习起来更加复杂一点，所以必须一步一个脚印地学习。首先，来看看如何在页面中添加一些基本的 JavaScript 脚本来建造一个“Hello world!”示例（<a href=\"https://zh.wikipedia.org/wiki/Hello_World\" class=\"external\" rel=\" noopener\">一切始于 Hello World</a>）。</p>\n<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>警告：</strong> 如果你没有完成之前的课程实践，可下载 <a href=\"https://github.com/roy-tian/learning-area/raw/master/extras/getting-started-web/beginner-html-site-styled.zip\" class=\"external\" rel=\" noopener\">上一章节示例的压缩包</a> 并在本地解压作出发点。</p>\n</div>\n<ol>\n  <li>首先，打开你的测试站点，创建一个名为 <code>scripts</code> 的文件夹。然后在其中创建一个名为 main.js 的文件。</li>\n  <li>下一步，在 <code>index.html</code> 文件&lt;/body&gt; 标签前的新行添加以下代码。\n    <div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>scripts/main.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">defer</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n  </li>\n  <li>与 CSS 的 <a href=\"/zh-CN/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> 元素类似，它将 JavaScript 引入页面以作用于 HTML（以及 CSS 等页面上所有内容）：</li>\n  <li>现在将以下代码添加到 <code>main.js</code> 文件中：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myHeading <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyHeading<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n  <li>最后，保存 HTML 和 JavaScript 文件，用浏览器打开 <code>index.html</code>。可以看到如下内容：\n    <img src=\"/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics/hello-world.png\" alt=\"\" width=\"806\" height=\"236\" loading=\"lazy\">\n  </li>\n</ol>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 我们将 <a href=\"/zh-CN/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> 放在 HTML 文件的底部附近的原因是浏览器会按照代码在文件中的顺序加载 HTML。如果先加载的 JavaScript 期望修改其下方的 HTML，那么它可能由于 HTML 尚未被加载而失效。因此，将 JavaScript 代码放在 HTML 页面的底部附近通常是最好的策略。</p>\n</div>"}},{"type":"prose","value":{"id":"发生了什么？","title":"发生了什么？","isH3":true,"content":"<p>JavaScript 把页面的标题改成了“Hello world!” 。首先用 <code><a href=\"/zh-CN/docs/Web/API/Document/querySelector\" title=\"querySelector()\"><code>querySelector()</code></a></code> 函数获取标题的引用，并把它储存在 <code>myHeading</code> 变量中。这与 CSS 选择器的用法非常相像：若要对某个元素进行操作，首先得选择它。</p>\n<p>之后，把 <code>myHeading</code> 变量的属性 <a href=\"/zh-CN/docs/Web/API/Node/textContent\" title=\"textContent\"><code>textContent</code></a> （标题内容）修改为“Hello world!” 。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 上面用到的两个函数都来自 <a href=\"/zh-CN/docs/Web/API/Document_Object_Model\">文档对象模型 (DOM) API</a>，均用于控制文档。</p>\n</div>"}},{"type":"prose","value":{"id":"javascript_快速入门","title":"JavaScript 快速入门","isH3":false,"content":"<p>我们来学习一些 JavaScript 的核心特性，从而更好地理解它的运行机制。学习这些知识很有意义，因为这些原理普遍适用于所有编程语言，掌握好它们，可以做到融会贯通。</p>\n<div class=\"notecard warning\" id=\"sect4\">\n  <p><strong>警告：</strong> 学习本节时，请尝试将示例代码输入到 JavaScript 控制台里看看会发生什么。JavaScript 控制台的更多信息请查看 <a href=\"/zh-CN/docs/Learn/Common_questions/What_are_browser_developer_tools\">浏览器开发者工具</a>。</p>\n</div>"}},{"type":"prose","value":{"id":"变量（variable）","title":"变量（Variable）","isH3":true,"content":"<p><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Variable\">变量 <small>(en-US)</small></a> 是存储值的容器。要声明一个变量，先输入关键字 <code>let</code> 或 <code>var</code>，然后输入合适的名称：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myVariable<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>备注：</strong> 行末的分号表示当前语句结束，不过只有在单行内需要分割多条语句时，这个分号才是必须的。然而，一些人认为每条语句末尾加分号是一种好的风格。分号使用规则的更多细节请参阅 <a href=\"http://news.codecademy.com/your-guide-to-semicolons-in-javascript/\" class=\"external\" rel=\" noopener\">JavaScript 分号使用指南</a>（英文页面）。</p>\n</div>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>备注：</strong> 几乎任何内容都可以作为变量名，但还是有一些限制（请参阅 <a href=\"/zh-CN/docs/Web/JavaScript/Guide/Grammar_and_types#%e5%8f%98%e9%87%8f\">变量命名规则</a>）。如果你不确定，还可以 <a href=\"https://mothereff.in/js-variables\" class=\"external\" rel=\" noopener\">验证变量名</a> 是否有效。</p>\n</div>\n<div class=\"notecard note\" id=\"sect7\">\n  <p><strong>备注：</strong> JavaScript 对大小写敏感，<code>myVariable</code> 和 <code>myvariable</code> 是不同的。如果代码出现问题了，先检查一下大小写！</p>\n</div>\n<div class=\"notecard note\" id=\"sect8\">\n  <p><strong>备注：</strong> 想要了解更多关于 <code>var</code> 和 <code>let</code> 的不同点，可以参阅 <a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Variables#var_%E4%B8%8E_let_%E7%9A%84%E5%8C%BA%E5%88%AB\">var 与 let 的区别</a>。</p>\n</div>\n<p>变量定义后可以进行赋值：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myVariable <span class=\"token operator\">=</span> <span class=\"token string\">'李雷'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>也可以将定义、赋值操作写在同一行：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myVariable <span class=\"token operator\">=</span> <span class=\"token string\">'李雷'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>可以直接通过变量名取得变量的值：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myVariable<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>变量在赋值后是可以更改的：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">let myVariable = '李雷';\nmyVariable = '韩梅梅';\n</pre></div>\n<p>注意变量可以有不同的 <a href=\"/zh-CN/docs/Web/JavaScript/Data_structures\">数据类型</a> ：</p>\n<table>\n  <thead>\n    <tr>\n      <th scope=\"row\">变量</th>\n      <th scope=\"col\">解释</th>\n      <th scope=\"col\">示例</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\"><a href=\"/zh-CN/docs/Glossary/String\">String</a></th>\n      <td>字符串（一串文本）：字符串的值必须用引号（单双均可，必须成对）扩起来。</td>\n      <td><code>let myVariable = '李雷';</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><a href=\"/zh-CN/docs/Glossary/Number\">Number</a></th>\n      <td>数字：无需引号。</td>\n      <td><code>let myVariable = 10;</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><a href=\"/zh-CN/docs/Glossary/Boolean\">Boolean</a></th>\n      <td>\n        布尔值（真 / 假）： <code>true</code>/<code>false</code> 是 JS\n        里的特殊关键字，无需引号。\n      </td>\n      <td><code>let myVariable = true;</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><a href=\"/zh-CN/docs/Glossary/array\">Array</a></th>\n      <td>数组：用于在单一引用中存储多个值的结构。</td>\n      <td>\n        <code>let myVariable = [1, '李雷', '韩梅梅', 10];</code><br>元素引用方法：<code>myVariable[0]</code>,\n        <code>myVariable[1]</code> ……\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><a href=\"/zh-CN/docs/Glossary/Object\">Object</a></th>\n      <td>对象：JavaScript 里一切皆对象，一切皆可储存在变量里。这一点要牢记于心。</td>\n      <td><code>let myVariable = document.querySelector('h1');</code><br>以及上面所有示例都是对象。</td>\n    </tr>\n  </tbody>\n</table>\n<p>那么变量有什么用呢？我们说，编程时它们无所不在。如果值无法改变，那么就无法做任何动态的工作，比如发送个性化的问候，或是改变在图片库当前展示的图片。</p>"}},{"type":"prose","value":{"id":"注释","title":"注释","isH3":true,"content":"<p>类似于 CSS，JavaScript 中可以添加注释。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/*\n这里的所有内容\n都是注释。\n*/</span>\n</code></pre></div>\n<p>如果注释只有一行，可以更简单地将注释放在两个斜杠之后，就像这样：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 这是一条注释。</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"运算符","title":"运算符","isH3":true,"content":"<p><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Operator\">运算符 <small>(en-US)</small></a> 是一类数学符号，可以根据两个值（或变量）产生结果。以下表格中介绍了一些最简单的运算符，可以在浏览器控制台里尝试一下后面的示例。</p>\n<div class=\"notecard note\" id=\"sect9\">\n  <p><strong>备注：</strong> 这里说“根据<strong>两个</strong>值（或变量）产生结果”是不严谨的，计算两个变量的运算符称为“二元运算符”，还有一元运算符和三元运算符，下表中的“取非”就是一元运算符。</p>\n</div>\n<table>\n  <thead>\n    <tr>\n      <th scope=\"row\">运算符</th>\n      <th scope=\"col\">解释</th>\n      <th scope=\"col\">符号</th>\n      <th scope=\"col\">示例</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">加</th>\n      <td>将两个数字相加，或拼接两个字符串。</td>\n      <td><code>+</code></td>\n      <td><code>6 + 9;<br>\"Hello \" + \"world!\";</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">减、乘、除</th>\n      <td>这些运算符操作与基础算术一致。只是乘法写作星号，除法写作斜杠。</td>\n      <td><code>-</code>, <code>*</code>, <code>/</code></td>\n      <td><code>9 - 3;<br>8 * 2; //乘法在 JS 中是一个星号<br>9 / 3;</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">赋值运算符</th>\n      <td>为变量赋值（你之前已经见过这个符号了）</td>\n      <td><code>=</code></td>\n      <td><code>let myVariable = '李雷';</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">等于</th>\n      <td>\n        测试两个值是否相等，并返回一个 <code>true</code>/<code>false</code>\n        （布尔）值。\n      </td>\n      <td><code>===</code></td>\n      <td><code>let myVariable = 3;<br>myVariable === 4; // false</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">不等于</th>\n      <td>\n        和等于运算符相反，测试两个值是否不相等，并返回一个\n        <code>true</code>/<code>false</code> （布尔）值。\n      </td>\n      <td><code>!==</code></td>\n      <td><code><code>let myVariable = 3;</code><br>myVariable !== 3; //\nfalse</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">取非</th>\n      <td>返回逻辑相反的值，比如当前值为真，则返回 <code>false</code>。</td>\n      <td><code>!</code></td>\n      <td>原式为真，但经取非后值为 <code>false</code>：<br><code>let myVariable = 3;<br>!(myVariable === 3); // false</code></td>\n    </tr>\n  </tbody>\n</table>\n<p>运算符种类远不止这些，不过目前上表已经够用了。完整列表请参阅 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators\">表达式和运算符</a>。</p>\n<div class=\"notecard note\" id=\"sect10\">\n  <p><strong>备注：</strong> 不同类型数据之间的计算可能出现奇怪的结果，因此必须正确引用变量，才能得出预期结果。比如在控制台输入 <code>\"35\" + \"25\"</code>，为什么不能得到 <code>60</code>？因为引号将数字转换成了字符串，所以结果是连接两个字符串而不是把两个数字相加。输入 <code>35 + 25</code> 才能得到正确结果。</p>\n</div>"}},{"type":"prose","value":{"id":"条件语句","title":"条件语句","isH3":true,"content":"<p>条件语句是一种代码结构，用来测试表达式的真假，并根据测试结果运行不同的代码。一个常用的条件语句是 <code>if ... else</code>。下面是一个示例：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> iceCream <span class=\"token operator\">=</span> <span class=\"token string\">'chocolate'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>iceCream <span class=\"token operator\">===</span> <span class=\"token string\">'chocolate'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我最喜欢巧克力冰激淋了。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'但是巧克力才是我的最爱呀……'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><code>if ( ... )</code> 中的表达式进行测试，用（上文所提到的）等于运算符来比较变量 <code>iceCream</code> 与字符串 <code>'chocolate'</code> 是否相等。如果返回 <code>true</code>，则运行第一个代码块；如果返回 <code>false</code>，则跳过第一块直接运行 <code>else</code> 之后的第二个代码块。</p>"}},{"type":"prose","value":{"id":"函数（function）","title":"函数（Function）","isH3":true,"content":"<p><a href=\"/zh-CN/docs/Glossary/Function\">函数</a> 用来封装可复用的功能。如果没有函数，一段特定的操作过程用几次就要重复写几次，而使用函数则只需写下函数名和一些简短的信息。之前已经涉及过一些函数，比如：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myVariable <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><code>document.querySelector</code> 和 <code>alert</code> 是浏览器内置的函数，随时可用。</p>\n<p>如果代码中有一个类似变量名后加小括号 <code>()</code> 的东西，很可能就是一个函数。函数通常包括<a href=\"/zh-CN/docs/Glossary/Argument\">参数</a>，参数中保存着一些必要的数据。它们位于括号内部，多个参数之间用逗号分开。</p>\n<p>比如， <code>alert()</code> 函数在浏览器窗口内弹出一个警告框，还应为其提供一个字符串参数，以告诉它警告框里要显示的内容。</p>\n<p>好消息是：人人都能定义自己的函数。下面的示例是为两个参数进行乘法运算的函数：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num1<span class=\"token punctuation\">,</span> num2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> num1 <span class=\"token operator\">*</span> num2<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>尝试在控制台运行这个函数，不妨多试几组参数，比如：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect11\">\n  <p><strong>备注：</strong> <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Statements/return\"><code>return</code></a> 语句告诉浏览器当前函数返回 <code>result</code> 变量。这是一点很有必要，因为函数内定义的变量只能在函数内使用。这叫做变量的 <a href=\"/zh-CN/docs/Glossary/Scope\">作用域</a>。（详见 <a href=\"/zh-CN/docs/Web/JavaScript/Guide/Grammar_and_types#variable_scope\">变量作用域</a>。）</p>\n</div>"}},{"type":"prose","value":{"id":"事件","title":"事件","isH3":true,"content":"<p>事件能为网页添加真实的交互能力。它可以捕捉浏览器操作并运行一些代码做为响应。最简单的事件是 <a href=\"/zh-CN/docs/Web/API/Element/click_event\">点击事件</a>，鼠标的点击操作会触发该事件。可尝试将下面的代码输入到控制台，然后点击页面的任意位置：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'别戳我，我怕疼。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>将事件与元素绑定有许多方法。在这里选用了 <a href=\"/zh-CN/docs/Web/HTML/Element/html\"><code>&lt;html&gt;</code></a> 元素，把一个匿名函数（就是没有命名的函数，这里的匿名函数包含单击鼠标时要运行的代码）赋值给了 <code>html</code> 的 <a href=\"/en-US/docs/Web/API/Element/click_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">onclick (en-US)</a> 属性。</p>\n<p>请注意：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>等价于</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myHTML <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyHTML<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>只是前者更简洁。</p>\n<p>刚刚我们传递给 <code>onclick</code> 的函数被称为匿名函数，因为它没有名字。匿名函数还有另一种我们称之为箭头函数的写法，箭头函数使用 <code>() =&gt;</code> 代替 <code>function ()</code>：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'别戳我，我怕疼。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"完善示例网页","title":"完善示例网页","isH3":false,"content":"<p>现在你已经具备了一些 JavaScript 基础，下面来为示例网页添加一些更酷的特性。</p>"}},{"type":"prose","value":{"id":"添加一个图像切换器","title":"添加一个图像切换器","isH3":true,"content":"<p>这里将用新的 DOM API 为网页添加另一张图片，并用 JavaScript 使图片在点击时进行切换。</p>\n<ol>\n  <li>首先，找到另一张你想要在你的页面上展示的图片，且尺寸与第一张图片尽可能相同。</li>\n  <li>将这张图片储存在你的<code>images</code>目录下。</li>\n  <li>将图片重命名为'firefox2.png'（去掉引号）。</li>\n  <li>打开 <code>main.js</code> 文件，输入下面的 JavaScript 代码 ( 请删除刚才的 \"hello world\" 脚本)：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmyImage<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> mySrc <span class=\"token operator\">=</span> myImage<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mySrc <span class=\"token operator\">===</span> <span class=\"token string\">'images/firefox-icon.png'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      myImage<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'images/firefox2.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      myImage<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'images/firefox-icon.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n  </li>\n  <li>保存所有文件并用浏览器打开 <code>index.html</code> 。点击图片可以发现它能够切换了！</li>\n</ol>\n<p>这里首先把 <a href=\"/zh-CN/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> 元素的引用存放在 <code>myImage</code> 变量里。然后将这个变量的 <code>onclick</code> 事件与一个匿名函数绑定。每次点击图片时：</p>\n<ol>\n  <li>获取这张图片的 <code>src</code> 属性值。</li>\n  <li>用一个条件句来判断 <code>src</code> 的值是否等于原始图像的路径：\n    <ol>\n      <li>如果是，则将 <code>src</code> 的值改为第二张图片的路径，并在 <a href=\"/zh-CN/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> 内加载该图片。</li>\n      <li>如果不是（意味着它已经修改过）, 则把 <code>src</code> 的值重新设置为原始图片的路径，即原始状态。</li>\n    </ol>\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"添加个性化欢迎信息","title":"添加个性化欢迎信息","isH3":true,"content":"<p>下面来添加另一段代码，在用户初次进入站点时将网页的标题改成一段个性化欢迎信息（即在标题中添加用户的名字）。名字信息会由 <a href=\"/zh-CN/docs/Web/API/Web_Storage_API\">Web Storage API</a> 保存下来，即使用户关闭页面之后再重新打开，仍可得到之前的信息。还会添加一个选项，可以根据需要改变用户名字以更新欢迎信息。</p>\n<ol>\n  <li>打开 <code>index.html</code>，在 <a href=\"/zh-CN/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> 标签<strong>前</strong>添加以下代码，将在页面底部显示一个“切换用户”字样的按钮：\n    <div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">&gt;</span></span>切换用户<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n  </li>\n  <li>将以下 JavaScript 代码原封不动添加到 <code>main.js</code> 文件底部，将获取新按钮和标题的引用，并保存至变量中：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> myHeading <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n  <li>然后添加以下函数来设置个性化欢迎信息。（函数需要在调用后生效，下文中提供了两种对该函数的调用方式）\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">setUserName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> myName <span class=\"token operator\">=</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入你的名字。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> myName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  myHeading<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Mozilla 酷毙了，'</span> <span class=\"token operator\">+</span> myName<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>该函数首先调用了 <a href=\"/zh-CN/docs/Web/API/Window/prompt\"><code>prompt()</code></a> 函数，与 <code>alert()</code> 类似会弹出一个对话框。但是这里需要用户输入数据，并在确定后将数据存储在 <code>myName</code> 变量里。接下来将调用 <a href=\"/zh-CN/docs/Web/API/Window/localStorage\"><code>localStorage</code></a> API，它可以将数据存储在浏览器中供后续获取。这里用 <code>localStorage</code> 的 <code>setItem()</code> 函数来创建一个<code>'name'</code> 数据项，并把 <code>myName</code> 变量复制给它。最后将 <code>textContent</code> 属性设置为一个欢迎字符串加上这个新设置的名字。\n  </li>\n  <li>接下来，添加以下的 <code>if ... else</code> 块。我们可以称之为初始化代码，因为它在页面初次读取时进行构造工作：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setUserName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> storedName <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  myHeading<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Mozilla 酷毙了，'</span> <span class=\"token operator\">+</span> storedName<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>这里首次使用了取非运算符（逻辑非，用 <code>!</code> 表示）来检测 <code>'name'</code> 数据是否存在。若不存在，调用 <code>setUserName()</code> 创建。若存在（即用户上次访问时设置过），调用 <code>getItem()</code> 获取保存的名字，像上文的 <code>setUserName()</code> 那样设置 <code>textContent</code>。\n  </li>\n  <li>最后，为按钮设置 onclick 事件处理器。按钮按下时运行 setUserName() 函数。这样用户就可以通过按这个按钮来自由设置新名字了：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myButton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">setUserName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n  </li>\n</ol>\n<p>第一次访问网页时，页面将询问用户名并发出一段个性化的信息。可随时点击按钮来改变用户名。告诉你一个额外的福利，因为用户名是保存在 <code>localStorage</code> 里的，网页关闭后也不会丢失，所以重新打开浏览器时所设置的名字信息将依然存在:)</p>"}},{"type":"prose","value":{"id":"用户名为_null","title":"用户名为 null?","isH3":true,"content":"<p>运行示例代码，弹出输入用户名的对话框，试着按下 <kbd>取消</kbd> 按钮。此时标题会显示为“Mozilla 酷毙了，null”。这是因为取消提示对话框后值将设置为 <code>null</code>，这是 JavaScript 中的一个特殊值，表示引用不存在。</p>\n<p>也可以不输入任何名字直接按 <kbd>确认</kbd>，你的标题会显示为“Mozilla 酷毙了，”，原因么显而易见。</p>\n<p>要避免这些问题，应该更新 <code>setUserName()</code> 来检查用户是否输入了 <code>null</code> 或者空名字：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">setUserName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> myName <span class=\"token operator\">=</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入你的名字。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>myName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setUserName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> myName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myHeading<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Mozilla 酷毙了，'</span> <span class=\"token operator\">+</span> myName<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>用人话说就是：如果 <code>myName</code> 没有值或值为 <code>null</code>，就再次从头运行<code>setUserName()</code>。如果有值（上面的表达式结果不为真），就把值存储到 <code>localStorage</code> 并且设置标题。</p>"}},{"type":"prose","value":{"id":"小结","title":"小结","isH3":false,"content":"<p>如果你按部就班完成本文的实践，那么最终可以得到以下页面（可以 <a href=\"https://roy-tian.github.io/learning-area/extras/getting-started-web/beginner-html-site-scripted/\" class=\"external\" rel=\" noopener\">查看我们的版本</a>）：</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/16484/beginner-site-scripted.png\" alt=\"测试页面，添加了 一个 js 脚本，可以显示用户名、更改 Firefox 图片。\" loading=\"lazy\">\n</p>\n<p>若遇到问题，可以参考 GitHub 上的 <a href=\"https://github.com/roy-tian/learning-area/tree/master/extras/getting-started-web/beginner-html-site-scripted\" class=\"external\" rel=\" noopener\">完整示例代码</a> 进行对比。</p>\n<p>本章介绍的 JavaScript 知识非常有限，更多内容请访问 <a href=\"/zh-CN/docs/Learn/JavaScript\">Javascript 学习页面</a>。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/CSS_basics\"> 上一页 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Getting_started_with_the_web\"> Overview: Getting started with the web</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Publishing_your_website\"> 下一页  </a></li>\n</ul>"}},{"type":"prose","value":{"id":"本章目录","title":"本章目录","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">安装基础软件</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">设计网站的外观</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">处理文件</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML 基础</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS 基础</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/JavaScript_basics\" aria-current=\"page\">JavaScript 基础</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">发布网站</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Web 是如何运作的</a></li>\n</ul>"}}],"toc":[{"text":"JavaScript 到底是什么？","id":"javascript_到底是什么？"},{"text":"“Hello World!”示例","id":"“hello_world!”示例"},{"text":"JavaScript 快速入门","id":"javascript_快速入门"},{"text":"完善示例网页","id":"完善示例网页"},{"text":"小结","id":"小结"},{"text":"本章目录","id":"本章目录"}],"summary":"JavaScript 是一门编程语言，可为网站添加交互功能（例如：游戏、动态样式、动画以及在按下按钮或收到表单数据时做出的响应等）。本文介绍了 JavaScript 的精彩之处和主要用途。","popularity":0.0069,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"JavaScript basics","locale":"en-US","native":"English (US)"},{"title":"Fundamentos de JavaScript","locale":"es","native":"Español"},{"title":"Les bases de JavaScript","locale":"fr","native":"Français"},{"title":"JavaScript の基本","locale":"ja","native":"日本語"},{"title":"JavaScript 기본","locale":"ko","native":"한국어"},{"title":"JavaScript básico","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Основы JavaScript","locale":"ru","native":"Русский"},{"title":"JavaScript 基礎","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/learn/getting_started_with_the_web/javascript_basics","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/learn/getting_started_with_the_web/javascript_basics/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Learn","title":"学习 Web 开发"},{"uri":"/zh-CN/docs/Learn/Getting_started_with_the_web","title":"web 入门"},{"uri":"/zh-CN/docs/Learn/Getting_started_with_the_web/JavaScript_basics","title":"JavaScript 基础"}],"pageTitle":"JavaScript 基础 - 学习 Web 开发 | MDN","noIndexing":false}}