{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"JavaScript 对象基础","mdn_url":"/zh-CN/docs/Learn/JavaScript/Objects/Basics","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web\"><strong>新手请从这开始！</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Web 入门</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web\">Web 概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">安装基本软件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">您的网站会是什么样？</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">处理文件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">发布您的网站</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Web 如何运作</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/HTML\"><strong>HTML — 构建 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 介绍</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML\">HTML 概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">HTML 入门</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">脑袋里是什么？HTML 中的元数据</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML 文字基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">建立超链接</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">高级文字格式</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">文档与网站架构</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">HTML 除错</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">作业：标记字母</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">作业：构建出有内容的网页</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>多媒体与嵌入</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding\">多媒体与嵌入概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">HTML 中的图片</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">视频和音频内容</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">从对象到 iframe — 其他嵌入技术</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">为 Web 新增向量图</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">自适应图片</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">作业：Mozilla 醒目页面</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 表格</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables\">HTML 表格概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Basics\">HTML 表格基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Advanced\">HTML 高级表格特性和可访问性</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Structuring_planet_data\">作业：构建行星数据</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/CSS\"><strong>CSS — 设计 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps\">CSS第一步概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/What_is_CSS\">什么是CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/Getting_started\">让我们开始CSS之旅</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/How_CSS_is_structured\">如何让构建CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/How_CSS_works\">CSS如何运行</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">运用你的新知识</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 构建基础</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks\">CSS构建基础概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">层叠与继承</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Selectors\">CSS选择器</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/The_box_model\">盒模型</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">背景与边框</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">处理不同方向的文本</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Overflowing_content\">溢出的内容</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Values_and_units\">值与单位</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">在CSS中调整大小</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">图像、媒体和表单元素</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Styling_tables\">样式化表格</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Debugging_CSS\">调试CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Organizing\">组织你的CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>样式化文字</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text\">样式化文字概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Fundamentals\">基础文字与字体样式化</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Styling_lists\">样式化列表</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Styling_links\">样式化链接</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Web_fonts\">Web 字体</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">作业：排版社区大学首页</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 排版</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout\">CSS 排版概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Normal_Flow\">正常布局流</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox\">弹性区块</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Grids\">网格</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Floats\">浮动</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Positioning\">定位</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">多列布局</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design\">响应式布局</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Media_queries\">媒体查询</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">传统的布局方法</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">支持旧的浏览器</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">基础布局练习</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/zh-CN/docs/Learn/JavaScript\"><strong>JavaScript — 用户端动态脚本</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps\">JavaScript 第一步概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">什么是 JavaScript？</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/A_first_splash\">初次接触 JavaScript</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/What_went_wrong\">出现了什么问题？JavaScript 疑难解答</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Variables\">储存你所需的信息 — 变量</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Math\">JavaScript 基础概念 — 数字与运算符</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Strings\">处理文字 — JavaScript 中的字符串</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Useful_string_methods\">有用的字符串方法</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Arrays\">数组</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Silly_story_generator\">作业：傻瓜故事产生器</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 基础要件</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks\">JavaScript 基础要件概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/conditionals\">在代码中决策 — 条件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Looping_code\">代码循环</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Functions\">函数 - 可重复利用的代码块</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">建立自己的函数</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Return_values\">函数回传值</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Events\">事件介绍</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Image_gallery\">作业：图库</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details open=\"\">\n          <summary>JavaScript 对象介绍</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects\">JavaScript 对象概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Basics\">对象基础概念</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes\">对象原型</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/JSON\">使用 JSON 资料</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object_building_practice\">对象构建实践</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">作业：为弹跳球展示新增功能</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>异步JavaScript</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous\">异步JavaScript概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Concepts\">通用异步编程概念</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Introducing\">异步JavaScript简介</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">合作异步JavaScript: 超时和间隔</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Promises\">Promises: 优雅的异步处理</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Async_await\">async和await:让异步编程更简单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">选择正确的方法</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端网页 API</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs\">客户端网页 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">网页 API 介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">操纵文档</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">从服务器获取数据</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">第三方 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">画图</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">视频与音频 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">客户端存储</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Forms\"><strong>Web表单 — 与用户数据打交道</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Web表单核心</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Forms\">Web表单概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Your_first_form\">你的第一个表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/How_to_structure_a_web_form\">如何构造Web表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Basic_native_form_controls\">原生表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/HTML5_input_types\">HTML5的input类型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Other_form_controls\">其它表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Styling_web_forms\">样式化Web表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Advanced_form_styling\">高级表单样式</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/UI_pseudo-classes\">UI 伪类</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Form_validation\">客户端表单验证</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Sending_and_retrieving_form_data\">发送表单数据</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Web表单进阶</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/How_to_build_custom_form_controls\">如何构造自定义表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Sending_forms_through_JavaScript\">使用JavaScript发送表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">表单组件兼容性列表</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Accessibility\"><strong>可访问性 — 使每个人都能使用 Web</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>可访问性指南</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility\">可访问性概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/What_is_accessibility\">什么是可访问性</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/HTML\">HTML: 可访问性的好基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS 和 JavaScript 可访问性最佳实践</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA 基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/Multimedia\">可访问性多媒体</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/Mobile\">移动端可访问性</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>可访问性测评</summary>\n        <ol>\n            <li><a href=\"/zh-CN/docs/Learn/Accessibility/Accessibility_troubleshooting\">作业：可访问性疑难解答</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing\"><strong>工具与测试</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端web开发工具</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">客户端web开发工具索引</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">客户端工具概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">命令行速成课</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">包管理基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">一个完整的工具链</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">发布你的应用</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端框架介绍</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">客户端框架概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">框架的主要特性</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">开始使用Vue</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">创建第一个Vue组件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">渲染一个Vue组件列表</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">添加一个新的TODO表单: Vue事件、方法、模型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">用CSS样式化Vue组件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git 和 GitHub</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/GitHub\">Git和GitHub 概览</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>跨浏览器测试</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing\">跨浏览器测试概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">跨浏览器测试介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">执行测试策略</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">处理常见的 HTML 与 CSS 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">处理常见的 JavaScript 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">处理常见的可访问性问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">建置功能侦测</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">自动测试介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">设置您的自动测试环境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/Server-side\"><strong>服务端网页编程</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>第一步</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps\">第一步概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Introduction\">服务端介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Client-Server_overview\">用户端概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Web_frameworks\">服务端网络框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Website_security\">网站安全</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Django 网站框架 (Python)</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django\">Django 网站框架 (Python) 概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Introduction\">介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/development_environment\">搭建开发环境</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Tutorial_local_library_website\">在线教学：本地图书馆网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/skeleton_website\">在线教学 2：建立网站框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Models\">在线教学 3：使用模型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Admin_site\">在线教学 4：Django 管理网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Home_page\">在线教学 5：建立我们的首页</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Generic_views\">在线教学 6：通用列表与细节检查</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Sessions\">在线教学 7：会话框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Authentication\">在线教学 8：用户授权与许可</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Forms\">在线教学 9：搭配表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Testing\">在线教学 10：测试 Django 的 Web 应用</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Deployment\">在线教学 11：部署 Django 至产品</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/web_application_security\">Web 应用安全性</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/django_assessment_blog\">作业：DIY 博客</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express 网页框架 (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs\">Express 网页框架 (Node.js/JavaScript) 概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node 介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/development_environment\">架设 Node (Express) 开发环境</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express 教程： 本地图书馆网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express 教程 2： 新建网站骨架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express 教程 3： 使用数据库 (Mongoose)</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/routes\">Express 教程 4： 路由和控制器</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教程 5： 呈现图书馆数据</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/forms\">Express 教程 6： 使用表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/deployment\">Express 教程 7： 部署至生产环境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>更多资源</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>常见问题</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/HTML/Howto\">HTML 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/CSS/Howto\">CSS 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Web_mechanics\">Web 是如何运作的</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Tools_and_setup\">工具与安装</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Design_and_accessibility\">设计与可访问性</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    \n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/JavaScript/Objects\"> Overview: Objects</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes\"> 下一页  </a></li>\n</ul>\n<p>在这学习 JavaScript 的对象的首篇文章中，我们将会学习有关对象基础的语法，并且回顾一些之前学过的 JavaScript 的一些特点，使你明白你所使用过的一些功能实际上是由对象提供的。</p>\n<table class=\"learn-box standard-table\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">前提：</th>\n      <td>\n        基础计算机基础，了解基础的 HTML 和 CSS, 熟悉 JavaScript 基础\n        (基础知识看这里\n        <a href=\"/zh-CN/docs/Learn/JavaScript/First_steps\">First steps</a>\n        和这里\n        <a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks\">Building blocks</a>).\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">目标：</th>\n      <td>\n        理解面向对象编程背后的基础理论，怎样理解 JavaScript (\"一切皆对象 most\n        things are objects\"), 如何开始使用 JavaScript 对象。\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"对象基础","title":"对象基础","isH3":false,"content":"<p>对象是一个包含相关数据和方法的集合（通常由一些变量和函数组成，我们称之为对象里面的属性和方法），让我们通过一个例子来了解它们。</p>\n<p>首先，将 <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/oojs/introduction/oojs.html\" class=\"external\" rel=\" noopener\">oojs.html</a> 文件复制到本地。此文件包含非常少 — 一个供我们写源代码的 <a href=\"/zh-CN/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> 标签，一个供我们输入示例指令的 <a href=\"/zh-CN/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a> 标签，当页面被渲染时，一些变量定义，一个输出任何输入到<a href=\"/zh-CN/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a>的内容输出到<a href=\"/zh-CN/docs/Web/HTML/Element/p\"><code>&lt;p&gt;</code></a>标签的函数。我们用这个文件做为基础探索对象的基础语法。</p>\n<p>如同 Javascript 中的很多东西一样，创建一个对象通常先定义初始化变量。尝试在您已有的文件中 JavaScript 代码下面输入以下内容，保存刷新页面：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>如果你在浏览器控制台输入 person，然后按下 Enter(确认) 键，你会得到如下结果：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">[</span>object Object<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>恭喜，你刚创建了你的第一个对象。干的漂亮！但这是一个空对象，所以我们做不了更多的事情。像下面一样更新下我们的对象：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Smith'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span> <span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gender</span> <span class=\"token operator\">:</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">interests</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'music'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'skiing'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">bio</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">' is '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">+</span> <span class=\"token string\">' years old. He likes '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>interests<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">' and '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>interests<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">greeting</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi! I\\'m '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>保存刷新后，尝试在你的浏览器控制台输入下面的内容：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\nperson<span class=\"token punctuation\">.</span>age\nperson<span class=\"token punctuation\">.</span>interests<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">bio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>现在在你的对象里得到了一些数据和功能（functionality），现在可以通过简单的语法访问他们了！</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 如果做上面的东西遇到了麻烦，尝试拿你的代码与我们的版本做对比——对比 <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/oojs/introduction/oojs-finished.html\" class=\"external\" rel=\" noopener\">oojs-finished.html</a> (也可以 <a href=\"https://mdn.github.io/learning-area/javascript/oojs/introduction/oojs-finished.html\" class=\"external\" rel=\" noopener\">看实际效果</a>)。一个对于初学者很常见的错误是在最后一个成员后面多了一个逗号，这会引发错误。</p>\n</div>\n<p>所以发生了什么？一个对象由许多的成员组成，每一个成员都拥有一个名字（像上面的 name、age），和一个值（如 ['Bob', 'Smith']、32）。每一个名字/值（name/value）对被逗号分隔开，并且名字和值之间由冒号（:）分隔，语法规则如下所示：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> objectName <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">member1Name</span> <span class=\"token operator\">:</span> member1Value<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">member2Name</span> <span class=\"token operator\">:</span> member2Value<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">member3Name</span> <span class=\"token operator\">:</span> member3Value\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>对象成员的值可以是任意的，在我们的 person 对象里有字符串 (string)，数字 (number)，两个数组 (array)，两个函数 (function)。前 4 个成员是资料项目，被称为对象的属性 (property)，后两个成员是函数，允许对象对资料做一些操作，被称为对象的方法 (method)</p>\n<p>一个如上所示的对象被称之为对象的字面量 (literal)——手动的写出对象的内容来创建一个对象。不同于从类实例化一个对象，我们会在后面学习这种方式。</p>\n<p>当你想要传输一些有结构和关联的资料时常见的方式是使用字面量来创建一个对象，举例来说，发起一个请求到服务器以存储一些数据到数据库，发送一个对象要比分别发送这些数据更有效率，而且比起数组更为易用，因为你使用名字 (name) 来标识这些资料。</p>"}},{"type":"prose","value":{"id":"点表示法","title":"点表示法","isH3":false,"content":"<p>在上面的例子中，你使用了点表示法 (dot notation) 来访问对象的属性和方法。对象的名字表现为一个命名空间 (namespace)，它必须写在第一位——当你想访问对象内部的属性或方法时，然后是一个点 (.)，紧接着是你想要访问的项目，标识可以是简单属性的名字 (name)，或者是数组属性的一个子元素，又或者是对象的方法调用。如下所示：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person<span class=\"token punctuation\">.</span>age\nperson<span class=\"token punctuation\">.</span>interests<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">bio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"子命名空间","title":"子命名空间","isH3":true,"content":"<p>可以用一个对象来做另一个对象成员的值。例如将 name 成员</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token literal-property property\">name</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Smith'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<p>改成</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token literal-property property\">name</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">first</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">last</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Smith'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<p>这样，我们实际上创建了一个子命名空间，听起来有点复杂，但用起来很简单，你只需要链式的再使用一次点表示法，像这样：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>first\nperson<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>last\n</code></pre></div>\n<p><strong>注意</strong>：你需要改变你之前的代码，从</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>name<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\nname<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>改成</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>name<span class=\"token punctuation\">.</span>first\nname<span class=\"token punctuation\">.</span>last\n</code></pre></div>\n<p>否则，你的方法不再有效。</p>"}},{"type":"prose","value":{"id":"括号表示法","title":"括号表示法","isH3":false,"content":"<p>另外一种访问属性的方式是使用括号表示法 (bracket notation)，替代这样的代码</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person<span class=\"token punctuation\">.</span>age\nperson<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>first\n</code></pre></div>\n<p>使用如下所示的代码：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span>\nperson<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'first'</span><span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>这看起来很像访问一个数组的元素，从根本上来说是一回事儿，你使用了关联了值的名字，而不是索引去选择元素。难怪对象有时被称之为关联数组 (associative array) 了——对象做了字符串到值的映射，而数组做的是数字到值的映射。</p>"}},{"type":"prose","value":{"id":"设置对象成员","title":"设置对象成员","isH3":false,"content":"<p>目前我们仅仅看到了如何访问对象的成员，而你其实也可以设置对象成员的值，通过声明你要设置的成员，像这样：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">45</span>\nperson<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'last'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Cratchit'</span>\n</code></pre></div>\n<p>尝试这些代码，然后再查看这些成员是否已经被改变了</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person<span class=\"token punctuation\">.</span>age\nperson<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'last'</span><span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>设置成员并不意味着你只能更新已经存在的属性的值，你完全可以创建新的成员，尝试以下代码：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person<span class=\"token punctuation\">[</span><span class=\"token string\">'eyes'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'hazel'</span>\nperson<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">farewell</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bye everybody!\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>现在你可以测试你新创建的成员</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person<span class=\"token punctuation\">[</span><span class=\"token string\">'eyes'</span><span class=\"token punctuation\">]</span>\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">farewell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>括号表示法一个有用的地方是它不仅可以动态的去设置对象成员的值，还可以动态的去设置成员的名字。</p>\n<p>比如说，我们想让用户能够在他们的数据里存储自己定义的值类型，通过两个 input 框来输入成员的名字和值，通过以下代码获取用户输入的值：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myDataName <span class=\"token operator\">=</span> nameInput<span class=\"token punctuation\">.</span>value\n<span class=\"token keyword\">var</span> myDataValue <span class=\"token operator\">=</span> nameValue<span class=\"token punctuation\">.</span>value\n</code></pre></div>\n<p>我们可以这样把这个新的成员的名字和值加到 person 对象里：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person<span class=\"token punctuation\">[</span>myDataName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> myDataValue\n</code></pre></div>\n<p>为了测试这个功能，尝试在你的代码里添加以下几行，就在 person 对象的右花括号的下面：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myDataName <span class=\"token operator\">=</span> <span class=\"token string\">'height'</span>\n<span class=\"token keyword\">var</span> myDataValue <span class=\"token operator\">=</span> <span class=\"token string\">'1.75m'</span>\nperson<span class=\"token punctuation\">[</span>myDataName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> myDataValue\n</code></pre></div>\n<p>现在，保存并刷新，在输入框里输入以下代码：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person<span class=\"token punctuation\">.</span>height\n</code></pre></div>\n<p>这是使用点表示法无法做到的，点表示法只能接受字面量的成员的名字，不接受变量作为名字。</p>"}},{"type":"prose","value":{"id":"this的含义","title":"\"this\"的含义","isH3":false,"content":"<p>你也许在我们的方法里注意到了一些奇怪的地方，看这个例子：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function-variable function\">greeting</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi! I\\'m '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>first <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>你也许想知道\"this\"是什么，关键字\"this\"指向了当前代码运行时的对象 ( 原文：the current object the code is being written inside )——这里即指 person 对象，为什么不直接写 person 呢？当你学到下一篇<a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Object-oriented JavaScript for beginners</a>文章时，我们开始使用构造器 (constructor) 时，\"this\"是非常有用的——它保证了当代码的上下文 (context) 改变时变量的值的正确性（比如：不同的 person 对象拥有不同的 name 这个属性，很明显 greeting 这个方法需要使用的是它们自己的 name）。</p>\n<p>让我们以两个简单的 person 对象来说明：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> person1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Chris'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">greeting</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi! I\\'m '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> person2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Brian'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">greeting</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi! I\\'m '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>在这里，person1.greeting() 会输出：\"Hi! I'm Chris.\"；person2.greeting() 会输出：\"Hi! I'm Brain.\"，即使 greeting 这个方法的代码是一样的。就像我们之前说的，this 指向了代码所在的对象 (其实代码运行时所在的对象)。在字面量的对象里 this 看起来不是很有用，但是当你动态创建一个对象（例如使用构造器）时它是非常有用的，之后你会更清楚它的用途。</p>"}},{"type":"prose","value":{"id":"你一直在使用对象","title":"你一直在使用对象","isH3":false,"content":"<p>当你使用过这些例子之后，你可能会发现你对点表示法并不陌生，这是因为我们在这个课程里一直在使用它，每次我们学习的示例使用浏览器内建的 API 和 JavaScript 的一些对象时，我们就在使用对象，因为，这些功能是由跟我们所看到的对象同样的结构来构建的，虽然比我们自己定义的要复杂许多。</p>\n<p>所以当我们这样使用字符串的方法时：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myString<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>你正在使用一个字符串实例上可用的方法，你随时都可以在代码里使用字面量创建一个字符串，字符串会自动的被创建为字符串 (<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>) 的实例，因此会有一些常见的方法和属性可用。</p>\n<p>当你这样访问 document 对象时：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myDiv <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> myVideo <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'video'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>你正在使用<a href=\"/zh-CN/docs/Web/API/Document\"><code>Document</code></a>实例上可用的方法。每个页面在加载完毕后，会有一个 Document 的实例被创建，叫做 document，它代表了整个页面的结构，内容和一些功能，比如页面的 URL。同样的，这意味 document 有一些可用的方法和属性。</p>\n<p>这同样适用许多其他内建的对象或 API，你使用过有—— <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>，<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a>，等。</p>\n<p>请注意内建的对象或 API 不会总是自动地创建对象的实例，举例来说，这个 <a href=\"/zh-CN/docs/Web/API/Notifications_API\">Notifications API</a>——允许浏览器发起系统通知，需要你为每一个你想发起的通知都使用构造器进行实例化。尝试在 JavaScript 终端里输入以下代码</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myNotification <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Notification</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>我们会在之后的文章里学习到构造器。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 这样来理解对象之间通过消息传递来通信是很有用的——当一个对象想要另一个执行某种动作时，它通常会通过那个对象的方法给其发送一些信息，并且等待回应，即我们所知的返回值。</p>\n</div>"}},{"type":"prose","value":{"id":"总结","title":"总结","isH3":false,"content":"<p>恭喜，你已经阅读到了我们有关 JavaScript 对象的第一篇文章的末尾，你现在应该对如何在 JavaScript 中使用对象有了很好的认识，包括你自己创建一个简单的对象。你应该清楚对象有利于存储一些相关联的数据和函数，如果你尝试以分开的方式去保存 person 对象包含的所有的属性和方法，这是令人沮丧且效率低下的，而且会有很多的变量和函数之间同名的风险。对象使我们将一些信息安全地锁在了它们自己的包内，防止它们被损坏。</p>\n<p>在下一篇文章，我们将会了解面对对象编程 (OOP) 理论，和许多在 JavaScript 中使用的技巧。</p><ul class=\"prev-next\">\n    \n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/JavaScript/Objects\"> Overview: Objects</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes\"> 下一页  </a></li>\n</ul>"}}],"toc":[{"text":"对象基础","id":"对象基础"},{"text":"点表示法","id":"点表示法"},{"text":"括号表示法","id":"括号表示法"},{"text":"设置对象成员","id":"设置对象成员"},{"text":"\"this\"的含义","id":"this的含义"},{"text":"你一直在使用对象","id":"你一直在使用对象"},{"text":"总结","id":"总结"}],"summary":"在这学习 JavaScript 的对象的首篇文章中，我们将会学习有关对象基础的语法，并且回顾一些之前学过的 JavaScript 的一些特点，使你明白你所使用过的一些功能实际上是由对象提供的。","popularity":0.0013,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"JavaScript object basics","locale":"en-US","native":"English (US)"},{"title":"Conceptos básicos de los objetos JavaScript","locale":"es","native":"Español"},{"title":"Les bases de JavaScript, orienté objet","locale":"fr","native":"Français"},{"title":"JavaScript オブジェクトの基本","locale":"ja","native":"日本語"},{"title":"JavaScript 객체 기본","locale":"ko","native":"한국어"},{"title":"O básico sobre objetos JavaScript","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Основы объектов в JavaScript","locale":"ru","native":"Русский"},{"title":"JavaScript 物件基礎概念","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/learn/javascript/objects/basics","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/learn/javascript/objects/basics/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Learn","title":"学习 Web 开发"},{"uri":"/zh-CN/docs/Learn/JavaScript","title":"JavaScript"},{"uri":"/zh-CN/docs/Learn/JavaScript/Objects","title":"JavaScript 对象入门"},{"uri":"/zh-CN/docs/Learn/JavaScript/Objects/Basics","title":"JavaScript 对象基础"}],"pageTitle":"JavaScript 对象基础 - 学习 Web 开发 | MDN","noIndexing":false}}