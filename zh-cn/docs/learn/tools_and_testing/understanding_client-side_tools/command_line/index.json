{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Command line crash course","mdn_url":"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web\"><strong>新手请从这开始！</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Web 入门</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web\">Web 概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">安装基本软件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">您的网站会是什么样？</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">处理文件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">发布您的网站</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Web 如何运作</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/HTML\"><strong>HTML — 构建 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 介绍</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML\">HTML 概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">HTML 入门</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">脑袋里是什么？HTML 中的元数据</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML 文字基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">建立超链接</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">高级文字格式</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">文档与网站架构</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">HTML 除错</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">作业：标记字母</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">作业：构建出有内容的网页</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>多媒体与嵌入</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding\">多媒体与嵌入概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">HTML 中的图片</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">视频和音频内容</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">从对象到 iframe — 其他嵌入技术</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">为 Web 新增向量图</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">自适应图片</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">作业：Mozilla 醒目页面</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 表格</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables\">HTML 表格概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Basics\">HTML 表格基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Advanced\">HTML 高级表格特性和可访问性</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Structuring_planet_data\">作业：构建行星数据</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/CSS\"><strong>CSS — 设计 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps\">CSS第一步概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/What_is_CSS\">什么是CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/Getting_started\">让我们开始CSS之旅</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/How_CSS_is_structured\">如何让构建CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/How_CSS_works\">CSS如何运行</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">运用你的新知识</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 构建基础</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks\">CSS构建基础概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">层叠与继承</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Selectors\">CSS选择器</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/The_box_model\">盒模型</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">背景与边框</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">处理不同方向的文本</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Overflowing_content\">溢出的内容</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Values_and_units\">值与单位</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">在CSS中调整大小</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">图像、媒体和表单元素</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Styling_tables\">样式化表格</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Debugging_CSS\">调试CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Organizing\">组织你的CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>样式化文字</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text\">样式化文字概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Fundamentals\">基础文字与字体样式化</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Styling_lists\">样式化列表</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Styling_links\">样式化链接</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Web_fonts\">Web 字体</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">作业：排版社区大学首页</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 排版</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout\">CSS 排版概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Normal_Flow\">正常布局流</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox\">弹性区块</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Grids\">网格</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Floats\">浮动</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Positioning\">定位</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">多列布局</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design\">响应式布局</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Media_queries\">媒体查询</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">传统的布局方法</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">支持旧的浏览器</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">基础布局练习</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/JavaScript\"><strong>JavaScript — 用户端动态脚本</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps\">JavaScript 第一步概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">什么是 JavaScript？</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/A_first_splash\">初次接触 JavaScript</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/What_went_wrong\">出现了什么问题？JavaScript 疑难解答</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Variables\">储存你所需的信息 — 变量</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Math\">JavaScript 基础概念 — 数字与运算符</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Strings\">处理文字 — JavaScript 中的字符串</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Useful_string_methods\">有用的字符串方法</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Arrays\">数组</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Silly_story_generator\">作业：傻瓜故事产生器</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 基础要件</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks\">JavaScript 基础要件概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/conditionals\">在代码中决策 — 条件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Looping_code\">代码循环</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Functions\">函数 - 可重复利用的代码块</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">建立自己的函数</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Return_values\">函数回传值</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Events\">事件介绍</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Image_gallery\">作业：图库</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 对象介绍</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects\">JavaScript 对象概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Basics\">对象基础概念</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes\">对象原型</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/JSON\">使用 JSON 资料</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object_building_practice\">对象构建实践</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">作业：为弹跳球展示新增功能</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>异步JavaScript</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous\">异步JavaScript概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Concepts\">通用异步编程概念</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Introducing\">异步JavaScript简介</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">合作异步JavaScript: 超时和间隔</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Promises\">Promises: 优雅的异步处理</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Async_await\">async和await:让异步编程更简单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">选择正确的方法</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端网页 API</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs\">客户端网页 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">网页 API 介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">操纵文档</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">从服务器获取数据</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">第三方 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">画图</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">视频与音频 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">客户端存储</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Forms\"><strong>Web表单 — 与用户数据打交道</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Web表单核心</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Forms\">Web表单概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Your_first_form\">你的第一个表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/How_to_structure_a_web_form\">如何构造Web表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Basic_native_form_controls\">原生表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/HTML5_input_types\">HTML5的input类型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Other_form_controls\">其它表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Styling_web_forms\">样式化Web表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Advanced_form_styling\">高级表单样式</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/UI_pseudo-classes\">UI 伪类</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Form_validation\">客户端表单验证</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Sending_and_retrieving_form_data\">发送表单数据</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Web表单进阶</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/How_to_build_custom_form_controls\">如何构造自定义表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Sending_forms_through_JavaScript\">使用JavaScript发送表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">表单组件兼容性列表</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Accessibility\"><strong>可访问性 — 使每个人都能使用 Web</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>可访问性指南</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility\">可访问性概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/What_is_accessibility\">什么是可访问性</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/HTML\">HTML: 可访问性的好基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS 和 JavaScript 可访问性最佳实践</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA 基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/Multimedia\">可访问性多媒体</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/Mobile\">移动端可访问性</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>可访问性测评</summary>\n        <ol>\n            <li><a href=\"/zh-CN/docs/Learn/Accessibility/Accessibility_troubleshooting\">作业：可访问性疑难解答</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing\"><strong>工具与测试</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>客户端web开发工具</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">客户端web开发工具索引</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">客户端工具概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">命令行速成课</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">包管理基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">一个完整的工具链</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">发布你的应用</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端框架介绍</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">客户端框架概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">框架的主要特性</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">开始使用Vue</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">创建第一个Vue组件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">渲染一个Vue组件列表</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">添加一个新的TODO表单: Vue事件、方法、模型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">用CSS样式化Vue组件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git 和 GitHub</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/GitHub\">Git和GitHub 概览</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>跨浏览器测试</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing\">跨浏览器测试概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">跨浏览器测试介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">执行测试策略</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">处理常见的 HTML 与 CSS 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">处理常见的 JavaScript 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">处理常见的可访问性问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">建置功能侦测</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">自动测试介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">设置您的自动测试环境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/Server-side\"><strong>服务端网页编程</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>第一步</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps\">第一步概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Introduction\">服务端介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Client-Server_overview\">用户端概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Web_frameworks\">服务端网络框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Website_security\">网站安全</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Django 网站框架 (Python)</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django\">Django 网站框架 (Python) 概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Introduction\">介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/development_environment\">搭建开发环境</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Tutorial_local_library_website\">在线教学：本地图书馆网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/skeleton_website\">在线教学 2：建立网站框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Models\">在线教学 3：使用模型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Admin_site\">在线教学 4：Django 管理网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Home_page\">在线教学 5：建立我们的首页</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Generic_views\">在线教学 6：通用列表与细节检查</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Sessions\">在线教学 7：会话框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Authentication\">在线教学 8：用户授权与许可</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Forms\">在线教学 9：搭配表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Testing\">在线教学 10：测试 Django 的 Web 应用</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Deployment\">在线教学 11：部署 Django 至产品</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/web_application_security\">Web 应用安全性</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/django_assessment_blog\">作业：DIY 博客</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express 网页框架 (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs\">Express 网页框架 (Node.js/JavaScript) 概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node 介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/development_environment\">架设 Node (Express) 开发环境</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express 教程： 本地图书馆网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express 教程 2： 新建网站骨架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express 教程 3： 使用数据库 (Mongoose)</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/routes\">Express 教程 4： 路由和控制器</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教程 5： 呈现图书馆数据</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/forms\">Express 教程 6： 使用表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/deployment\">Express 教程 7： 部署至生产环境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>更多资源</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>常见问题</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/HTML/Howto\">HTML 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/CSS/Howto\">CSS 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Web_mechanics\">Web 是如何运作的</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Tools_and_setup\">工具与安装</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Design_and_accessibility\">设计与可访问性</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\"> 上一页 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools\"> Overview: Understanding client-side tools</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\" title=\"Currently only available in English (US)\"> 下一页   (en-US)</a></li>\n</ul>\n<p>在您的开发过程中，您无疑需要在终端上运行一些命令 (或者在“命令行”上，它们实际上是相同的)。本文介绍了终端、需要输入的基本命令、如何将命令链接在一起，以及如何添加自己的命令行接口 (CLI) 工具。</p>\n<table class=\"learn-box standard-table\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">先决条件：</th>\n      <td>\n        熟悉核心的 <a href=\"/zh-CN/docs/Learn/HTML\">HTML</a>,\n        <a href=\"/zh-CN/docs/Learn/CSS\">CSS</a>, 和\n        <a href=\"/zh-CN/docs/Learn/JavaScript\">JavaScript</a> 语言。\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">目标：</th>\n      <td>要了解什么是终端/命令行，应该学习什么基本命令，以及如何安装新的命令行工具。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"欢迎使用终端","title":"欢迎使用终端","isH3":false,"content":"<p>终端是一个文本界面，用于执行基于文本的程序。如果您正在运行任何用于 web 开发的工具，那么几乎可以保证您必须打开命令行并运行一些命令来使用您所选择的工具 (您经常会看到这样的工具被称为<strong>CLI 工具</strong>命令行接口工具)。</p>\n<p>大量的工具可以通过在命令行中输入命令来使用;许多是预先安装在您的系统上的，还有大量其他的可以从包注册表中安装。包注册表类似于应用程序商店，但 (主要) 用于基于命令行的工具和软件。我们将在本章后面看到如何安装一些工具，在下一章我们将学习更多关于包注册表的知识。</p>\n<p>对命令行最大的一个批评是它在用户体验方面非常缺乏。第一次查看命令行可能是一种令人畏惧的体验：空白屏幕和闪烁的光标，对于要做什么几乎没有明显的帮助。</p>\n<p>表面上看，它们并不受欢迎，但您可以使用它们做很多事情，我们保证，通过一些指导和练习，使用它们会变得更容易！这就是为什么我们提供这一章来帮助你在这个看似不友好的环境中开始。</p>"}},{"type":"prose","value":{"id":"终端从何而来？","title":"终端从何而来？","isH3":true,"content":"<p>终端机起源于 20 世纪五六十年代，它最初的形式与我们今天使用的并不相似 (这是我们应该感谢的)。你可以在维基百科的词条中读到一些历史 <a href=\"https://en.wikipedia.org/wiki/Computer_terminal\" class=\"external\" rel=\" noopener\">Computer Terminal</a>。</p>\n<p>从那时起，终端一直是所有操作系统的一个不变的特征，从台式电脑到隐藏在云中的服务器 (它并不是真正的云)，到像树莓 PI Zero 这样的微型计算机，甚至到移动电话。它提供了对计算机底层文件系统和底层特性的直接访问，因此，如果您知道自己在做什么，它对于快速执行复杂任务非常有用。</p>\n<p>例如，编写一个命令来立即更新数百个文件的标题，例如从 ch01-xxxx.png 更新到 ch02-xxxx.png，这对于自动化也很有用。如果您使用 finder 或 explorer GUI 应用程序更新文件名，这将花费您很长时间。</p>\n<p>总而言之，终端不会很快消失。</p>"}},{"type":"prose","value":{"id":"终端像什么呢？","title":"终端像什么呢？","isH3":true,"content":"<p>下面你可以看到一些不同口味的程序，你可以得到一个终端。</p>\n<p>下面的图片显示了 Windows 中可用的命令提示，有很多种选项，从“cmd”程序到“powershell”，可以在开始菜单中输入程序名称运行。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line/win-terminals.png\" alt=\"A vanilla windows cmd line window, and a windows powershell window\" width=\"900\" height=\"261\" loading=\"lazy\">\n</p>\n<p>下面是 macOS 终端应用程序。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line/mac-terminal.png\" alt=\"A basic vanilla mac terminal\" width=\"786\" height=\"351\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"你如何进入终端？","title":"你如何进入终端？","isH3":true,"content":"<p>现在许多开发人员都在使用基于 unix 的工具 (例如，终端，以及你可以通过它访问的工具)。目前 web 上存在的许多教程和工具都支持 (可悲的是假定) 基于 unix 的系统，但不用担心它们在大多数系统上都可用。在本节中，我们将了解如何访问所选系统上的终端。</p>\n<h4 id=\"linuxunix\">Linux/Unix</h4>\n<p>如上所述，Linux / Unix 系统默认情况下在应用程序中列出了一个可用的终端。</p>\n<h4 id=\"macos\">macOS</h4>\n<p>macOS 有一个名为 Darwin 的系统，它位于图形用户界面的下方。Darwin 是类 unix 系统，它提供了终端和对底层工具的访问。macOS Darwin 在很大程度上与 Unix 不相上下，当然在阅读本文时不会给我们带来任何担忧。</p>\n<p>终端可在 macOS 的“应用程序/实用程序/终端”上使用。</p>\n<h4 id=\"windows\">Windows</h4>\n<p>与其他一些编程工具一样，在 Windows 上使用终端 (或命令行) 传统上并不像在其他操作系统上那样简单。但情况正在好转。</p>\n<p>很长一段时间以来，Windows 一直有自己的名为 cmd(命令提示符) 的类似于终端的程序，但这显然与 Unix 命令不同，它相当于老式的 Windows DOS 提示符。</p>\n<p>更好的程序可以在 Windows 上提供终端体验，比如 Powershell (<a href=\"https://github.com/PowerShell/PowerShell\" class=\"external\" rel=\" noopener\">see here to find installers</a>), 和 Gitbash (作为一部分 <a href=\"https://gitforwindows.org/\" class=\"external\" rel=\" noopener\">git for Windows</a> 工具箱)</p>\n<p>然而，在现代，Windows 的最佳选择是 Windows Linux 子系统 (WSL)，它是一个兼容层，用于从 Windows 10 中直接运行 Linux 操作系统，允许您直接在 Windows 上运行真正的终端，而不需要虚拟机。</p>\n<p>这可以直接从 Windows 商店免费安装。在目录中可以找到所需的所有文档 <a href=\"https://docs.microsoft.com/en-us/windows/wsl\" class=\"external\" rel=\" noopener\">Windows Subsystem for Linux Documentation</a>.</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line/wsl.png\" alt=\"a screenshot of the windows subsystem for linux documentation\" width=\"1000\" height=\"665\" loading=\"lazy\">\n</p>\n<p>至于在 Windows 上选择什么选项，我们强烈建议尝试安装 WSL。您可以坚持使用默认的命令提示符 (cmd)，许多工具都可以正常工作，但是您会发现，如果与 Unix 工具具有更好的一致性，那么一切都会变得更容易。</p>\n<h4 id=\"边注：命令行和终端的区别是什么？\">边注：命令行和终端的区别是什么？</h4>\n<p>通常你会发现这两个术语可以互换使用。从技术上讲，终端是启动并连接到 shell 的软件。shell 是您的会话和会话环境 (提示符和快捷方式等内容可以在其中定制)。命令行是您输入命令并且光标闪烁的文字行。</p>"}},{"type":"prose","value":{"id":"你必须使用终端吗","title":"你<em>必须</em>使用终端吗","isH3":true,"content":"<p>尽管命令行提供了大量的工具，但是如果您使用的工具是这样像 <a href=\"https://code.visualstudio.com/\" class=\"external\" rel=\" noopener\">Visual Studio Code</a></p>\n<p>还有大量的扩展可以作为代理使用终端命令，而不需要直接使用终端。但是，您不会找到一个代码编辑器扩展来满足您想要做的所有事情 — 你最终将会获得一些使用终端的经验。</p>","titleAsText":"你必须使用终端吗"}},{"type":"prose","value":{"id":"基本的内置终端命令","title":"基本的内置终端命令","isH3":false,"content":"<p>说的够多了，让我们开始看看一些终端命令吧！下面是命令行可以做的一些事情，以及每种情况下相关工具的名称</p>\n<ul>\n  <li>导航计算机的文件系统以及基本级别的任务，如创建、复制、重命名和删除：\n    <ul>\n      <li>移动您的目录结构 : <code>cd</code></li>\n      <li>建立目录：<code>mkdir</code></li>\n      <li>创建文件（修改他们的原数据）: <code>touch</code></li>\n      <li>复制文件：<code>cp</code></li>\n      <li>移动文件：<code>mv</code></li>\n      <li>删除文件或目录：<code>rm</code></li>\n    </ul>\n  </li>\n  <li>下载在特定的 url 找到的文件：<code>curl</code></li>\n  <li>在较大的文件体中寻找特定的片段：<code>grep</code></li>\n  <li>主页查看文件的内容：<code>less</code>, <code>cat</code></li>\n  <li>操作和转换文本流（例如，讲 HTML 文件中&lt;div&gt;的所有实例改为&lt;article&gt;）: <code>awk</code>, <code>tr</code>, <code>sed</code></li>\n</ul>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 在 web 上有许多很好的教程深入了解 web 上的命令行——这只是一个简短的介绍</p>\n</div>\n<p>让我们继续，看看在命令行上使用这些工具中的几个。在进一步操作之前，先打开终端程序</p>"}},{"type":"prose","value":{"id":"在命令行中导航","title":"在命令行中导航","isH3":true,"content":"<p>当您访问命令行时，您将不可避免地需要导航到一个特定的目录“做一些事情”。所有的操作系统 (假设是默认设置) 都将在您的“home”目录中启动它们的终端程序，从那里您可能想要移动到另一个地方。</p>\n<p><code>cd</code> 命令允许您更改目录。从技术上讲，cd 不是一个程序，而是内置的。这意味着您的操作系统可以开箱即用地提供它，而且您也不会意外地删除它，感谢上帝！您不需要过多地担心某个命令是否是内置的，但是要记住，内置的命令会在所有基于 unix 的系统上出现。</p>\n<p>要更改目录，请在终端中键入 cd，然后输入要移动到的目录。假设该目录在您的主目录中，您可以使用 <code>cd Desktop</code> (请参见下面的屏幕截图).</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line/win-terminals-cd.png\" alt=\"results of the cd Desktop command being run in a variety of windows terminals - the terminal location moves into the desktop\" width=\"700\" height=\"489\" loading=\"lazy\">\n</p>\n<p>试着把这个输入到你的系统终端</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token builtin class-name\">cd</span> Desktop\n</code></pre></div>\n<p>如果您想回到上一个目录，您可以使用两个点</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 一个非常有用的终端快捷方式是使用<kbd>tab</kbd> 键自动完成你知道的名字，而不是必须键入整个东西。例如，在键入以上两个命令后，尝试键入 <code>cd D</code> 并按下<kbd>tab</kbd> — 它应该自动完成目录名称 <code>Desktop</code> 对于您，只要它存在于当前目录中。在你前进的过程中记住这一点。</p>\n</div>\n<p>如果要转到的目录嵌套得很深，则需要知道访问该目录的路径。当您更加熟悉文件系统的结构时，这通常会变得更容易，但是如果您不确定路径，通常可以使用 ls 命令（请参见下文）的组合并在其中单击来确定它的路径。 “资源管理器/查找器”窗口可查看目录相对于当前位置的位置。</p>\n<p>例如，如果您想进入一个名为 src 的目录，该目录位于桌面的一个名为 project 的目录中，您可以从您的主文件夹键入这三个命令来到达该目录</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token builtin class-name\">cd</span> Desktop\n<span class=\"token builtin class-name\">cd</span> project\n<span class=\"token builtin class-name\">cd</span> src\n</code></pre></div>\n<p>但这只是浪费时间，相反，您可以键入一个命令，用斜杠分隔路径中的不同项，就像在 CSS、HTML 或 JavaScript 代码中指定图像或其他资产的路径一样</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token builtin class-name\">cd</span> Desktop/project/src\n</code></pre></div>\n<p>例如，请注意，在路径上包含一个前斜线将使路径成为绝对路径 <code>/Users/your-user-name/Desktop</code>. 像我们上面做的那样，省略前导斜杠可以使路径相对于当前的工作目录。这与您在 web 浏览器中看到的 url 完全相同。前面的斜杠意味着“在网站的根”，而省略斜杠意味着“这个 URL 是相对于我当前页面的”。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 在 windows 中，你使用反斜杠而不是正斜杠。<code>cd Desktop\\project\\src</code> — 他的可能看起来很奇怪，但是如果你感兴趣的话，<a href=\"https://www.youtube.com/watch?v=5T3IJfBfBmI\" class=\"external\" rel=\" noopener\">watch this YouTube clip</a> 微软的一位主要工程师对此进行了解释。</p>\n</div>"}},{"type":"prose","value":{"id":"列出目录内容","title":"列出目录内容","isH3":true,"content":"<p>另一个内置的 Unix 命令是 ls (list 的缩写)，它列出当前所在目录的内容。注意，这不会工作，如果你使用默认的 Windows 命令提示符 (cmd)，相当于 dir。</p>\n<p>现在试着在终端上运行它</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">ls</span>\n</code></pre></div>\n<p>这提供了当前工作目录中的文件和目录的列表，但这些信息实际上很基本，您只能得到每个项的名称，而不能知道它是文件还是目录，或者其他任何东西。幸运的是，对命令的用法进行一个小小的更改就可以提供更多的信息。</p>"}},{"type":"prose","value":{"id":"介绍命令选项","title":"介绍命令选项","isH3":true,"content":"<p>大多数终端命令都有选项，这些选项是您添加到命令末尾的修饰符，它们使命令的行为略有不同。它们通常由命令名后的空格、后接破折号、后接一个或多个字母组成。</p>\n<p>例如，试一试看，你能得到什么？</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">ls</span> -l\n</code></pre></div>\n<p>至于 <code>ls</code>, the <code>-l</code> 选项为您提供每行一个文件或目录的清单，并显示更多信息。可以通过查找行最左边的字母“d”来识别目录。这些是我们可以做到的 <code>cd</code> 进入。</p>\n<p>下面是一个屏幕截图，顶部是一个普通的 macOS 终端，还有一个定制的终端，添加了一些额外的图标和颜色，让它看起来生动，都显示了运行的结果<code>ls -l</code>:</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line/mac-terminals-ls.png\" alt=\"A vanilla mac terminal and a more colorful custom mac terminal, showing a file listing - the result of running the ls -l command\" width=\"700\" height=\"504\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>备注：</strong> 要确切地了解每个命令有哪些可用选项，您可以查看它<a href=\"https://en.wikipedia.org/wiki/Man_page\" class=\"external\" rel=\" noopener\">man page</a>. 通过键入 <code>man</code> 命令，后跟要查找的命令的名称，例如<code>man ls</code>. 这将在终端的默认文本文件查看器中打开手册页 (例如，<a href=\"https://en.wikipedia.org/wiki/Less_(Unix)\" class=\"external\" rel=\" noopener\"><code>less</code></a>(在我的终端中)，然后您应该能够使用箭头键或其他类似的机制在页面中滚动。手册页详细地列出了所有选项，一开始可能有点吓人，但至少在需要时您知道它就在那里。一旦您完成了对手册页的查看，您需要使用文本查看器的 quit 命令退出它 (\"q\" 在 <code>less</code>;如果不明显，你可能需要在网上搜索才能找到).</p>\n</div>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>备注：</strong> 要同时运行具有多个选项的命令，通常可以将它们全部放在破折号后面的单个字符串中<code>ls -lah</code>, 或<code>ls -ltrh</code>.尝试在 <code>ls</code> 了解这些额外选项的作用</p>\n</div>\n<p>既然我们已经讨论了两个基本命令，那么稍微浏览一下您的目录，看看是否可以从一个位置导航到下一个位置。</p>"}},{"type":"prose","value":{"id":"创建，复制，移动，删除","title":"创建，复制，移动，删除","isH3":true,"content":"<p>在使用终端时，您可能会经常使用其他一些基本实用程序命令。它们非常简单，所以我们不会像前一对那样详细地解释它们。</p>\n<p>在您创建的某个地方的测试目录中使用它们，这样您就不会意外地删除任何重要的内容，使用下面的示例命令作为指导</p>\n<ul>\n  <li><code>mkdir</code> —这将在您所在的当前目录中创建一个新目录，名称是您在命令名之后提供的。例如 <code>mkdir my-awesome-website</code> 将创建一个新目录叫 <code>my-awesome-website</code>。</li>\n  <li>\n    <code>rmdir</code> —删除指定目录，但仅当它为空时。例如<code>rmdir my-awesome-website</code>\n    将删除我们在上面创建的目录。如果您希望删除一个非空的目录 (并删除其中包含的所有内容)，则可以使用<code>-r</code> 选项（递归），但这很危险。确保以后在目录中不需要任何内容 ​​，因为它将永远消失。\n  </li>\n  <li><code>touch</code> —在当前目录中创建一个新的空文件。例如<code>touch mdn-example.md</code> 创建一个新的空文件叫做 <code>mdn-example.md</code>.</li>\n  <li>\n    <code>mv</code> —\n    例如，将文件从第一个指定的文件位置移动到第二个指定的文件位置<code>mdn-example.md mdn-example.txt</code>(这些位置被写成文件路径)。此命令移动一个名为<code>mdn-example.md</code>在当前目录中调用一个文件<code>mdn-example.txt</code> in the current directory.从技术上讲，文件正在被移动，但是从实际的角度来看，这个命令实际上是在重命名文件。\n  </li>\n  <li>\n    <code>cp</code> — 类似于 <code>mv</code>, <code>cp</code>在指定的第一个位置和第二个位置创建文件的副本。例如\n    <code>cp mdn-example.txt mdn-example.txt.bak</code>创建一个副本<code>mdn-example.txt</code> 叫做 <code>mdn-example.txt.bak</code>（当然，如果你愿意，你也可以叫它别的名字)。\n  </li>\n  <li><code>rm</code> —删除指定的文件。例如，<code>rm mdn-example.txt</code> 删除单个文件叫做 <code>mdn-example.txt</code>.请注意，此删除是永久性的，不能通过桌面用户界面上的回收站撤消。</li>\n</ul>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>备注：</strong> 许多终端命令允许您使用星号作为“通配符”字符，意思是“任何字符序列”。这允许您一次对可能大量的文件运行操作，所有这些文件都匹配指定的模式。作为一个例子，<code>rm mdn-*</code> 将删除所有文件开头<code>mdn-</code>. <code>rm mdn-*.bak</code> 会删除所有文件的开头<code>mdn-</code> 结束 <code>.bak</code>.</p>\n</div>"}},{"type":"prose","value":{"id":"考虑终端有害吗？","title":"考虑终端有害吗？","isH3":false,"content":"<p>我们之前提到过这一点，但为了明确起见，您需要小心使用终端。简单的命令不会带来太多危险，但是当您开始将更复杂的命令组合在一起时，您需要仔细考虑该命令将执行什么操作，并在最终在指定的目录中运行它们之前先尝试测试它们。假设您在一个目录中有 1000 个文本文件，您想遍历它们，并且只删除文件名中有特定子字符串的文件。如果不小心，可能会删除一些重要的内容，在此过程中丢失大量工作。</p>\n<p>要养成的一个好习惯是在文本编辑器中编写您的 terminal 命令，弄清楚您认为它应该是什么样子，然后对目录进行备份，并首先尝试在该备份上运行命令，以测试它。</p>\n<p>另一个好建议是，如果你不习惯在自己的机器上尝试终端命令，可以在 Glitch.com 上试试。除了是测试 web 开发代码的好地方外，这些项目还允许您访问终端，这样您就可以直接在该终端中运行所有这些命令，而且不会破坏您自己的机器。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line/glitch.png\" alt=\"a double screenshot showing the glitch.com home page, and the glitch terminal emulator\" width=\"900\" height=\"848\" loading=\"lazy\">\n</p>\n<p>快速浏览特定终端命令的一个很好的资源是 <a href=\"https://tldr.sh/\" class=\"external\" rel=\" noopener\">tldr.sh</a>. 这是一个社区驱动的文档服务，类似于 MDN，但特定于终端命令。</p>\n<p>在下一节中，让我们更进一步 (实际上是几个层次)，看看如何在命令行上将工具连接在一起，从而真正了解终端如何优于常规的桌面用户界面。</p>"}},{"type":"prose","value":{"id":"与管道命令连接在一起","title":"与管道命令连接在一起","isH3":false,"content":"<p>当您开始使用。将命令链接在一起时，终端才真正成为自己的终端 <code>|</code> (pipe) 的象征。让我们看一个简单的例子来说明这意味着什么。</p>\n<p>我们已经看了 <code>ls</code>, 它可以输出文件目录：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">ls</span>\n</code></pre></div>\n<p>但是如果我们想要快速计算当前目录中的文件和目录的数量会怎样呢<code>ls</code> 不能单独运行</p>\n<p>还有另一个可用的 Unix 工具，称为<code>wc</code>. 它计算输入到其中的单词、行、字符或字节的数量。这可以是一个文本文件，下面的示例输出其中的行数</p>\n<p><code>myfile.txt</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">wc</span> -l myfile.txt\n</code></pre></div>\n<p>但是它还可以计算输入到它的输出的行数。例如，下面的命令计算 ls 命令输出的行数 (如果单独运行，它通常会打印到终端)，并计算到终端的输出</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">ls</span> <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> -l\n</code></pre></div>\n<p>因为 <code>ls</code> 在自己的行上打印每个文件或目录，这有效地为我们提供了目录和文件计数。</p>\n<p>这是怎么回事？(unix) 命令行工具的一般原理是，它们将文本打印到终端 (也称为“打印到标准输出”或<code>STDOUT</code>). 很多命令也可以从流输入 (称为“标准输入”o) 中读取内容 <code>STDIN</code>).</p>\n<p>管道操作符可以将这些输入和输出连接在一起，允许我们构建越来越复杂的操作，以满足我们的需要。一个命令的输出可以成为下一个命令的输入。在这种情况下，<code>ls</code> 通常会将其输出到<code>STDOUT</code>, 但是相反 <code>ls</code>输出被制成<code>wc</code>, 它将该输出作为输入，计算它包含的行数，然后将该计数输出到 STDOUT。</p>"}},{"type":"prose","value":{"id":"一个稍微复杂一点的例子","title":"一个稍微复杂一点的例子","isH3":false,"content":"<p>让我们看一些更复杂的东西。我们将首先尝试获取 MDN 的“获取”页面的内容 <code>curl</code> 命令 (可用于从 url 请求内容)<a href=\"/zh-CN/docs/Web/API/fetch\">https://developer.mozilla.org/en-US/docs/Web/API/fetch</a>.</p>\n<p>但是，这个 URL 是页面的旧位置。如果您在一个新的浏览器标签中输入它，您将 (最终) 被重定向到<a href=\"/zh-CN/docs/Web/API/fetch\">https://developer.mozilla.org/enUS/docs/Web/API/fetch</a>.</p>\n<p>因此，如果您使用 curl 请求 <code>https://developer.mozilla.org/docs/Web/API/fetch</code>，则不会得到输出。现在就试试：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">curl</span> https://developer.mozilla.org/en-US/docs/Web/API/fetch\n</code></pre></div>\n<p>我们想精确的告诉 <code>curl</code> 遵循重定向使用<code>-L</code> 标签。</p>\n<p>让我们也看看标题 <code>developer.mozilla.org</code> 返回使用 <code>curl</code>'s <code>-I</code> 标签，并打印它发送到终端的所有位置重定向，通过管道输出 <code>curl</code> 到<code>grep</code> (我们将要求 grep 返回包含单词“location”的所有行)。</p>\n<p>尝试运行以下代码，您将看到在到达最终页面之前，实际上发生了三次重定向</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">curl</span> https://developer.mozilla.org/docs/Web/API/fetch -L -I <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> location\n</code></pre></div>\n<p>输出应该是这样的 (<code>curl</code> 首先会输出一些下载计数器之类的东西):</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>location: /en-US/docs/Web/API/fetch\nlocation: /en-US/docs/Web/API/GlobalFetch/GlobalFetch.fetch<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nlocation: /en-US/docs/Web/API/GlobalFetch/fetch\nlocation: /en-US/docs/Web/API/fetch\n</code></pre></div>\n<p>尽管有些做作，我们可以把这个结果做得更深入一点，并变换 <code>location:</code> 行内容，将基本的起点添加到每个起点的开始，这样我们就可以打印出完整的 url。为此，我们将在混合中添加 awk(它是一种类似于 JavaScript、Ruby 或 Python 的编程语言，只是要老得多 !)</p>\n<p>尝试运行这个：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">curl</span> https://developer.mozilla.org/docs/Web/API/fetch -L -I <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> location <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{ print \"https://developer.mozilla.org\" $2 }'</span>\n</code></pre></div>\n<p>最终的输出应该是这样的</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>https://developer.mozilla.org/en-US/docs/Web/API/fetch\nhttps://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/GlobalFetch.fetch<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nhttps://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch\nhttps://developer.mozilla.org/en-US/docs/Web/API/fetch\n</code></pre></div>\n<p>通过组合这些命令，我们定制了输出以显示完整的 url，当我们请求时，Mozilla 服务器将通过这些 url 重定向<code>/docs/Web/API/fetch</code> URL.了解您的系统将在未来几年证明是有用的，您将了解这些单一服务工具是如何工作的，以及它们如何成为您解决小众问题的工具库的一部分。</p>"}},{"type":"prose","value":{"id":"添加工具","title":"添加工具","isH3":false,"content":"<p>现在我们已经了解了系统自带的一些内置命令，让我们看看如何安装和使用第三方 CLI 工具。</p>\n<p>目前，用于前端 web 开发的可安装工具的巨大生态系统主要存在于内部 <a href=\"https://www.npmjs.com\" class=\"external\" rel=\" noopener\">npm</a>, 与 Node.js 紧密合作的私有的包托管服务。随着时间的推移，您可以期望看到更多的包提供者。</p>\n<p><a href=\"https://nodejs.org/en/\" class=\"external\" rel=\" noopener\">Installing Node.js</a> 还要安装 npm 命令行工具 (以及一个以 npm 为中心的补充工具 npx)，它提供了安装其他命令行工具的网关。js 和 npm 在所有系统上都能工作:macOS、Windows 和 Linux。</p>\n<p>现在在您的系统上安装 npm，转到上面的 URL，下载并运行适合您的操作系统的 Node.js 安装程序。如果出现提示，请确保将 npm 作为安装的一部分。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line/npm-install-option.png\" alt=\"the node.js installer on windows, showing the option to include npm\" width=\"696\" height=\"544\" loading=\"lazy\">\n</p>\n<p>尽管我们将在下一篇文章中讨论许多不同的工具，但我们将继续深入研究 <a href=\"https://prettier.io/\" class=\"external\" rel=\" noopener\">Prettier</a>. Prettier 是一种固执己见的代码格式化程序，它只有“很少的选择”。更少的选择往往意味着更简单。考虑到工具在复杂性方面有时会失控，“很少的选项”可能非常有吸引力。</p>"}},{"type":"prose","value":{"id":"在哪里下载我们的_cli_工具？","title":"在哪里下载我们的 CLI 工具？","isH3":true,"content":"<p>在开始安装 Prettier 之前，有一个问题需要回答：“我们应该安装到哪里？”</p>\n<p>用<code>npm</code> 我们可以选择在全局安装工具，因此我们可以在任何地方或本地访问当前项目目录。</p>\n<p>每种方式各有利弊 — 而这张全局安装的利弊清单还远远不够详尽：</p>\n<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">\n        <p>全局安装的优点</p>\n      </th>\n      <th scope=\"col\">全局安装的缺点</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>\n        <p>任何地方在您的终端</p>\n      </td>\n      <td>可能与您项目的代码库不兼容</td>\n    </tr>\n    <tr>\n      <td>只下载一次</td>\n      <td>\n        <p>\n          您团队中的其他开发人员无法使用这些工具，例如，如果您通过 git\n          这样的工具共享代码仓库。\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <p>使用较少的磁盘空间</p>\n      </td>\n      <td>\n        <p>\n          与前一点相关的是，它使得项目代码更难复制\n          (如果您在本地安装工具，可以将它们设置为依赖项并使用 npm 进行安装\n          (<code>npm install</code>).\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <p>总是相同的版本</p>\n      </td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>\n        <p>就像任何其他 unix 命令</p>\n      </td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>\n<p>尽管缺点清单比较短，但是全局安装的负面影响可能要比好处大得多。然而，现在我们宁可追求简单，而采用全局安装来保持简单。在下一篇文章中，我们将进一步了解本地安装以及它们的优点。</p>"}},{"type":"prose","value":{"id":"下载_prettier","title":"下载 Prettier","isH3":true,"content":"<p>对于本文，我们将安装 Prettier 作为全局命令行实用程序。</p>\n<p>Prettier 是一款专门为前端开发人员设计的代码格式化工具，专注于基于 javascript 的语言，并增加了对 HTML、CSS、SCSS、JSON 等的支持。Prettier 能够：</p>\n<ul>\n  <li>省去了在所有代码文件中手动保持样式一致的认知开销;Prettier 可以自动为您完成此操作。</li>\n  <li>帮助 Web 新手以最佳方式完成他们的代码。</li>\n  <li>安装在任何操作系统上，甚至直接作为项目工具的一部分，以确保从事您的代码工作的同事和朋友使用您正在使用的代码风格。</li>\n  <li>配置为在保存时运行、在键入时运行，甚至在发布代码之前运行 (使用稍后将在模块中看到的其他工具）。</li>\n</ul>\n<p>安装 node 之后，打开终端并运行以下命令来安装 prettier 程序：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --global prettier\n</code></pre></div>\n<p>命令运行完成后，Prettier 工具现在可以在终端中的文件系统中的任何位置使用。</p>\n<p>与许多其他命令一样，不带任何参数运行该命令将提供用法和帮助信息。现在试试这个</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>prettier\n</code></pre></div>\n<p>输出应该是这样的</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>Usage: prettier <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>file/dir/glob <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n\nBy default, output is written to stdout.\nStdin is <span class=\"token builtin class-name\">read</span> <span class=\"token keyword\">if</span> it is piped to Prettier and no files are given.\n\n…\n</code></pre></div>\n<p>即使它很长，至少浏览一下使用信息也是值得的。它将帮助您更好地理解如何使用该工具。</p>"}},{"type":"prose","value":{"id":"尝试_prettier","title":"尝试 Prettier","isH3":true,"content":"<p>让我们快速演示一下 Prettier，这样您就可以看到它是如何工作的。</p>\n<p>首先，在文件系统中容易找到的地方创建一个新目录。可能是一个叫做<code>prettier-test</code> 在你的 <code>Desktop</code>.</p>\n<p>现在将以下代码保存在一个名为<code>index.js</code>, 在测试目录中：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n<span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">printMe</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token function\">printMe</span><span class=\"token punctuation\">(</span>myObj<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>我们可以在代码基上运行得更好，以检查我们的代码是否需要调整。cd 到您的目录中，并尝试运行此命令：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>prettier --check index.js\n</code></pre></div>\n<p>你的产出应该是：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>Checking formatting<span class=\"token punctuation\">..</span>.\nindex.js\nCode style issues found <span class=\"token keyword\">in</span> the above file<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>. Forgot to run Prettier?\n</code></pre></div>\n<p>有些代码样式是可以修改的。没有问题。添加 <code>--write</code> option to the prettier 命令将修复这些问题，让我们专注于实际编写有用的代码。</p>\n<p>现在尝试运行这个版本的命令：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>prettier --write index.js\n</code></pre></div>\n<p>你可能得到这样的输出：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>Checking formatting<span class=\"token punctuation\">..</span>.\nindex.js\nCode style issues fixed <span class=\"token keyword\">in</span> the above file<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>.\n</code></pre></div>\n<p>但更重要的是，如果你回头看你的 JavaScript 文件，你会发现它被重新格式化成这样：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">printMe</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">printMe</span><span class=\"token punctuation\">(</span>myObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>根据您的工作流 (或您选择的工作流)，您可以将其作为流程的自动化部分。自动化确实是工具的优势所在;我们的个人偏好是那种无需配置任何东西就能“自动发生”的自动化。</p>\n<p>使用 Prettier 有许多实现自动化的方法，尽管它们超出了本文的范围，但是有一些很好的在线资源可以提供帮助 (已经链接到其中一些)。您可以调用更漂亮的：</p>\n<ul>\n  <li>在将代码提交到 git 存储库之前，使用<a href=\"https://github.com/typicode/husky\" class=\"external\" rel=\" noopener\">Husky</a>.</li>\n  <li>当你在代码编辑器中点击“保存”的时候，无论是<a href=\"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\" class=\"external\" rel=\" noopener\">VS Code</a>, <a href=\"https://atom.io/packages/prettier-atom\" class=\"external\" rel=\" noopener\">Atom</a>, 或<a href=\"https://packagecontrol.io/packages/JsPrettier\" class=\"external\" rel=\" noopener\">Sublime Text</a>.</li>\n  <li>作为持续集成检查的一部分，可以使用以下工具<a href=\"https://github.com/features/actions\" class=\"external\" rel=\" noopener\">Github Actions</a>.</li>\n</ul>\n<p>我们个人的偏好是第二个当使用 say VS 代码时，Prettier 会启动并清理每次我们点击保存时需要做的格式化。关于以不同方式使用 Prettier，您可以在 <a href=\"https://prettier.io/docs/en/\" class=\"external\" rel=\" noopener\">Prettier docs</a>.</p>"}},{"type":"prose","value":{"id":"尝试其他的工具","title":"尝试其他的工具","isH3":false,"content":"<p>如果你想尝试更多的工具，这里有一个简短的列表，很有趣的尝试：</p>\n<ul>\n  <li><a href=\"https://github.com/sharkdp/bat\" class=\"external\" rel=\" noopener\"><code>bat</code></a> — 一个更好的 <code>cat</code> (<code>cat</code> 用于打印文件内容）。</li>\n  <li><a href=\"http://denilson.sa.nom.br/prettyping/\" class=\"external\" rel=\" noopener\"><code>prettyping</code></a> — <code>ping</code>在命令行上，但是是可视化的 (ping 是检查服务器是否有响应的有用工具)。</li>\n  <li><a href=\"http://hisham.hm/htop/\" class=\"external\" rel=\" noopener\"><code>htop</code></a> —进程查看器，当某些东西使您的 CPU 风扇的行为像一个喷气发动机，并且您想要识别出错的程序时，它非常有用。</li>\n  <li><a href=\"https://tldr.sh/#installation\" class=\"external\" rel=\" noopener\"><code>tldr</code></a> —在本章前面提到的，但是可以作为命令行工具使用。</li>\n</ul>\n<p>注意，上面的一些建议可能需要使用 npm 进行安装，就像我们使用 Prettier 所做的那样。</p>"}},{"type":"prose","value":{"id":"总结","title":"总结","isH3":false,"content":"<p>这使我们结束了对终端/命令行的简短浏览。接下来，我们将更详细地介绍软件包管理器，以及如何使用它们。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\"> 上一页 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools\"> Overview: Understanding client-side tools</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\" title=\"Currently only available in English (US)\"> 下一页   (en-US)</a></li>\n</ul>"}},{"type":"prose","value":{"id":"in_this_module","title":"In this module","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\" aria-current=\"page\">Command line crash course</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Package management basics (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Introducing a complete toolchain (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Deploying our app (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"欢迎使用终端","id":"欢迎使用终端"},{"text":"基本的内置终端命令","id":"基本的内置终端命令"},{"text":"考虑终端有害吗？","id":"考虑终端有害吗？"},{"text":"与管道命令连接在一起","id":"与管道命令连接在一起"},{"text":"一个稍微复杂一点的例子","id":"一个稍微复杂一点的例子"},{"text":"添加工具","id":"添加工具"},{"text":"尝试其他的工具","id":"尝试其他的工具"},{"text":"总结","id":"总结"},{"text":"In this module","id":"in_this_module"}],"summary":"在您的开发过程中，您无疑需要在终端上运行一些命令 (或者在“命令行”上，它们实际上是相同的)。本文介绍了终端、需要输入的基本命令、如何将命令链接在一起，以及如何添加自己的命令行接口 (CLI) 工具。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Command line crash course","locale":"en-US","native":"English (US)"},{"title":"Cours express sur la ligne de commande","locale":"fr","native":"Français"}],"source":{"folder":"zh-cn/learn/tools_and_testing/understanding_client-side_tools/command_line","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/learn/tools_and_testing/understanding_client-side_tools/command_line/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Learn","title":"学习 Web 开发"},{"uri":"/zh-CN/docs/Learn/Tools_and_testing","title":"工具和测试"},{"uri":"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools","title":"理解客户端 web 开发工具"},{"uri":"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line","title":"Command line crash course"}],"pageTitle":"Command line crash course - 学习 Web 开发 | MDN","noIndexing":false}}