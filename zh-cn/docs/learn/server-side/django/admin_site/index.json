{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Django Tutorial Part 4: Django 管理员站点","mdn_url":"/zh-CN/docs/Learn/Server-side/Django/Admin_site","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web\"><strong>新手请从这开始！</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Web 入门</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web\">Web 概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">安装基本软件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">您的网站会是什么样？</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">处理文件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">发布您的网站</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Web 如何运作</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/HTML\"><strong>HTML — 构建 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 介绍</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML\">HTML 概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">HTML 入门</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">脑袋里是什么？HTML 中的元数据</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML 文字基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">建立超链接</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">高级文字格式</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">文档与网站架构</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">HTML 除错</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">作业：标记字母</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">作业：构建出有内容的网页</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>多媒体与嵌入</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding\">多媒体与嵌入概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">HTML 中的图片</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">视频和音频内容</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">从对象到 iframe — 其他嵌入技术</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">为 Web 新增向量图</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">自适应图片</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">作业：Mozilla 醒目页面</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 表格</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables\">HTML 表格概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Basics\">HTML 表格基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Advanced\">HTML 高级表格特性和可访问性</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Structuring_planet_data\">作业：构建行星数据</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/CSS\"><strong>CSS — 设计 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps\">CSS第一步概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/What_is_CSS\">什么是CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/Getting_started\">让我们开始CSS之旅</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/How_CSS_is_structured\">如何让构建CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/How_CSS_works\">CSS如何运行</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">运用你的新知识</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 构建基础</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks\">CSS构建基础概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">层叠与继承</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Selectors\">CSS选择器</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/The_box_model\">盒模型</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">背景与边框</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">处理不同方向的文本</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Overflowing_content\">溢出的内容</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Values_and_units\">值与单位</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">在CSS中调整大小</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">图像、媒体和表单元素</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Styling_tables\">样式化表格</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Debugging_CSS\">调试CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Organizing\">组织你的CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>样式化文字</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text\">样式化文字概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Fundamentals\">基础文字与字体样式化</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Styling_lists\">样式化列表</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Styling_links\">样式化链接</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Web_fonts\">Web 字体</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">作业：排版社区大学首页</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 排版</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout\">CSS 排版概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Normal_Flow\">正常布局流</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox\">弹性区块</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Grids\">网格</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Floats\">浮动</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Positioning\">定位</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">多列布局</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design\">响应式布局</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Media_queries\">媒体查询</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">传统的布局方法</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">支持旧的浏览器</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">基础布局练习</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/JavaScript\"><strong>JavaScript — 用户端动态脚本</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps\">JavaScript 第一步概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">什么是 JavaScript？</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/A_first_splash\">初次接触 JavaScript</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/What_went_wrong\">出现了什么问题？JavaScript 疑难解答</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Variables\">储存你所需的信息 — 变量</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Math\">JavaScript 基础概念 — 数字与运算符</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Strings\">处理文字 — JavaScript 中的字符串</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Useful_string_methods\">有用的字符串方法</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Arrays\">数组</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Silly_story_generator\">作业：傻瓜故事产生器</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 基础要件</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks\">JavaScript 基础要件概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/conditionals\">在代码中决策 — 条件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Looping_code\">代码循环</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Functions\">函数 - 可重复利用的代码块</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">建立自己的函数</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Return_values\">函数回传值</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Events\">事件介绍</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Image_gallery\">作业：图库</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 对象介绍</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects\">JavaScript 对象概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Basics\">对象基础概念</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes\">对象原型</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/JSON\">使用 JSON 资料</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object_building_practice\">对象构建实践</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">作业：为弹跳球展示新增功能</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>异步JavaScript</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous\">异步JavaScript概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Concepts\">通用异步编程概念</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Introducing\">异步JavaScript简介</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">合作异步JavaScript: 超时和间隔</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Promises\">Promises: 优雅的异步处理</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Async_await\">async和await:让异步编程更简单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">选择正确的方法</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端网页 API</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs\">客户端网页 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">网页 API 介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">操纵文档</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">从服务器获取数据</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">第三方 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">画图</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">视频与音频 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">客户端存储</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Forms\"><strong>Web表单 — 与用户数据打交道</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Web表单核心</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Forms\">Web表单概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Your_first_form\">你的第一个表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/How_to_structure_a_web_form\">如何构造Web表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Basic_native_form_controls\">原生表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/HTML5_input_types\">HTML5的input类型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Other_form_controls\">其它表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Styling_web_forms\">样式化Web表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Advanced_form_styling\">高级表单样式</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/UI_pseudo-classes\">UI 伪类</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Form_validation\">客户端表单验证</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Sending_and_retrieving_form_data\">发送表单数据</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Web表单进阶</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/How_to_build_custom_form_controls\">如何构造自定义表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Sending_forms_through_JavaScript\">使用JavaScript发送表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">表单组件兼容性列表</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Accessibility\"><strong>可访问性 — 使每个人都能使用 Web</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>可访问性指南</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility\">可访问性概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/What_is_accessibility\">什么是可访问性</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/HTML\">HTML: 可访问性的好基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS 和 JavaScript 可访问性最佳实践</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA 基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/Multimedia\">可访问性多媒体</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/Mobile\">移动端可访问性</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>可访问性测评</summary>\n        <ol>\n            <li><a href=\"/zh-CN/docs/Learn/Accessibility/Accessibility_troubleshooting\">作业：可访问性疑难解答</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing\"><strong>工具与测试</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端web开发工具</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">客户端web开发工具索引</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">客户端工具概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">命令行速成课</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">包管理基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">一个完整的工具链</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">发布你的应用</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端框架介绍</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">客户端框架概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">框架的主要特性</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">开始使用Vue</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">创建第一个Vue组件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">渲染一个Vue组件列表</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">添加一个新的TODO表单: Vue事件、方法、模型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">用CSS样式化Vue组件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git 和 GitHub</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/GitHub\">Git和GitHub 概览</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>跨浏览器测试</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing\">跨浏览器测试概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">跨浏览器测试介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">执行测试策略</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">处理常见的 HTML 与 CSS 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">处理常见的 JavaScript 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">处理常见的可访问性问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">建置功能侦测</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">自动测试介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">设置您的自动测试环境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/zh-CN/docs/Learn/Server-side\"><strong>服务端网页编程</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>第一步</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps\">第一步概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Introduction\">服务端介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Client-Server_overview\">用户端概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Web_frameworks\">服务端网络框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Website_security\">网站安全</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>Django 网站框架 (Python)</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django\">Django 网站框架 (Python) 概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Introduction\">介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/development_environment\">搭建开发环境</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Tutorial_local_library_website\">在线教学：本地图书馆网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/skeleton_website\">在线教学 2：建立网站框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Models\">在线教学 3：使用模型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Admin_site\">在线教学 4：Django 管理网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Home_page\">在线教学 5：建立我们的首页</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Generic_views\">在线教学 6：通用列表与细节检查</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Sessions\">在线教学 7：会话框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Authentication\">在线教学 8：用户授权与许可</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Forms\">在线教学 9：搭配表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Testing\">在线教学 10：测试 Django 的 Web 应用</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Deployment\">在线教学 11：部署 Django 至产品</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/web_application_security\">Web 应用安全性</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/django_assessment_blog\">作业：DIY 博客</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express 网页框架 (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs\">Express 网页框架 (Node.js/JavaScript) 概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node 介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/development_environment\">架设 Node (Express) 开发环境</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express 教程： 本地图书馆网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express 教程 2： 新建网站骨架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express 教程 3： 使用数据库 (Mongoose)</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/routes\">Express 教程 4： 路由和控制器</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教程 5： 呈现图书馆数据</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/forms\">Express 教程 6： 使用表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/deployment\">Express 教程 7： 部署至生产环境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>更多资源</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>常见问题</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/HTML/Howto\">HTML 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/CSS/Howto\">CSS 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Web_mechanics\">Web 是如何运作的</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Tools_and_setup\">工具与安装</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Design_and_accessibility\">设计与可访问性</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Server-side/Django/Models\"> 上一页 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Server-side/Django\"> Overview: Django</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Server-side/Django/Home_page\"> 下一页  </a></li>\n</ul>\n<p>好了，我们已经为本地图书馆网站 <a href=\"/zh-CN/docs/Learn/Server-side/Django/Tutorial_local_library_website\">LocalLibrary</a> 创建了模型，我们接下来使用 Django 管理站点去添加 一些“真“书数据。首先我们展示如何用管理站点注册模型，然后展示如何登录和创建一些数据。本文最后，我们介绍你可以进一步改进管理站点的建议。</p>\n<table class=\"learn-box standard-table\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">前提：</th>\n      <td>\n        完成：\n        <a href=\"/zh-CN/docs/Learn/Server-side/Django/Models\">Django Tutorial Part 3: 使用模型</a>。\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">目的：</th>\n      <td>\n        <p>了解关于管理站点的优点与缺点，并且可以使用它为我们模型创建一些记录。</p>\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"综述","title":"综述","isH3":false,"content":"<p>Django 管理应用程序可以使用您的模型自动构建可用于创建，查看，更新和删除记录的站点区域。这可以在开发过程中节省大量的时间，从而很容易测试您的模型，并了解您是否拥有正确的数据。根据网站的类型，管理应用程序也可用于管理生产中的数据。Django 项目建议仅用于内部数据管理（即仅供管理员或组织内部人员使用），因为以模型为中心的方法不一定是所有用户最好的界面，并且暴露了大量不必要的细节关于模型。</p>\n<p><a href=\"/zh-CN/docs/Learn/Server-side/Django/skeleton_website\">创建基础项目时，</a>自动完成所有将您的网站中的管理应用程序包含在内的配置文件（有关所需实际依赖关系的信息 (如有需要请看 <a href=\"https://docs.djangoproject.com/en/1.10/ref/contrib/admin/\" class=\"external\" rel=\" noopener\">Django docs here</a>). 其结果是，你必须做你的模型添加到管理应用程序是 注册 他们。在本文末尾，我们将简要介绍如何进一步配置管理区域以更好地显示我们的模型数据。</p>\n<p>注册模型后，我们将展示如何创建一个新的“超级用户”，登录到该网站，并创建一些书籍，作者，书籍实例和流派。这些将有助于测试我们将在下一个教程中开始创建的视图和模板。</p>"}},{"type":"prose","value":{"id":"注册模型","title":"注册模型","isH3":false,"content":"<p>首先，在目录应用程序 (<strong>/locallibrary/catalog/admin.py</strong>) 中打开 <strong>admin.py</strong> 。此时此刻它看起来像这样—注意它已经导入了 django.contrib.admin：</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n\n<span class=\"token comment\"># Register your models here.</span>\n</code></pre></div>\n<p>通过将以下文本复制到文件的底部来注册模型。该代码简单地导入模型，调用 <strong>admin.site.register</strong> 来注册它们。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Author<span class=\"token punctuation\">,</span> Genre<span class=\"token punctuation\">,</span> Book<span class=\"token punctuation\">,</span> BookInstance\n\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>Book<span class=\"token punctuation\">)</span>\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>Author<span class=\"token punctuation\">)</span>\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>Genre<span class=\"token punctuation\">)</span>\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>BookInstance<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 如果你接受创建模型以表示书籍的自然语言的挑战 (<a href=\"/zh-CN/docs/Learn/Server-side/Django/Models\">see the models tutorial article</a>), 导入并注册。</p>\n</div>\n<p>这是在网站上注册模型或多模型的简单方法，管理站点是高度可定制的，我们将进一步讨论注册模型的其他方式。</p>"}},{"type":"prose","value":{"id":"创建一个超级用户","title":"创建一个超级用户","isH3":false,"content":"<p>为了登录管理员站点，我们需要启动工作人员状态的用户账户。为了查看和创建记录，我们还需要该用户具有所有对象的记录。你可以创建一个“超级用户”账号，该账号具有完全访问该站点和所有必需的权限可以使用<code>manage.py</code></p>\n<p>调用接下来的命令，在同样的目录下，<code>manage.py</code> 创建超级用户。你将被提示输入用户名，电子邮件地址，和强密码。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>python3 manage.py createsuperuser\n</code></pre></div>\n<p>一旦命令完成，一个新超级用户将被添加到数据库。现在重新启动开发服务器，以便我们可以测试登录名：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>python3 manage.py runserver\n</code></pre></div>"}},{"type":"prose","value":{"id":"登入并使用该网站","title":"登入并使用该网站","isH3":false,"content":"<p>\n  登录网站，打开 <code>/admin</code> (e.g. <a href=\"http://127.0.0.1:8000/admin/\" class=\"external\" rel=\" noopener\">http://127.0.0.1:8000/admin</a>)\n  和进入你的新超级用户名和密码凭据（你将被重定向到 登录页面，然后在你进入你的详细信息后回到 <code>/admin</code> URL\n</p>\n<p>这部分网站展示我们所有的模型，按安装的应用程序分组。你可以点击模型名称来进入到 它所有相关详细记录的页面，你可以进一步点击这些记录进行编辑。你也可以直接点击每个模型旁边的添加链接，开始创建该类型的记录。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Django/Admin_site/admin_home.png\" alt=\"Admin Site - Home page\" width=\"998\" height=\"634\" loading=\"lazy\">\n</p>\n<p>点击图书右侧的添加链接来新建一本书（这将显示一个类似下面的对话框）。注意每个字段标题，使用的小部件的类型以及<strong>help_text</strong>（如果有的话）你要在模型中匹配指定的值。</p>\n<p>输入字段的值，你可以创建一个新的作者或类型通过 按 <code>+</code> 按钮（或者如果你已经创建选项，选择已有的值）。完成后，你可以按 <strong>保存</strong>，<strong>保存并添加另一个</strong>，或<strong>保存并继续编辑</strong>来保存记录。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Django/Admin_site/admin_book_add.png\" alt=\"Admin Site - Book Add\" width=\"841\" height=\"780\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 在这里，我们希望你花费一点时间添加一些书，作者，类型（如：幻想）到你的应用。确保每个作者和类型都包含几本不同的书籍（这会是你的列表和详细视图在文章系列中后期使用时更有趣）。</p>\n</div>\n<p>我们完成添加书籍，在顶部标签中，点击 <strong>Home</strong> 链接将回到主管理页面。然后点击 <strong>Books</strong> 链接显示当前书籍的列表（或其他链接之一，以查看其他型号列表）。现在你已经添加了几本书，列表可能与下面的截图类似。显示每本书的标题；这是书模型 __str__() 方法返回的值，在上一文章中提到。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Django/Admin_site/admin_book_list.png\" alt=\"Admin Site - List of book objects\" width=\"1241\" height=\"505\" loading=\"lazy\">\n</p>\n<p>从该列表中，您可以通过选中不需要的图书旁边的复选框来删除图书，从“操作”下拉列表中选择“删除”操作，然后按 Go 按钮。您也可以通过按下 ADD BOOK 按钮添加新书。</p>\n<p>您可以通过在链接中选择其名称来编辑书籍。一本书的编辑页面如下所示，与“添加”页面几乎相同。主要的区别是页面标题（更改书）和添加 删除，历史和<code>VIEW ON SITE</code>按钮（最后一个按钮出现，因为我们定义了<code>get_absolute_url()</code>我们的模型中的 方法）。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Django/Admin_site/admin_book_modify.png\" alt=\"Admin Site - Book Edit\" width=\"841\" height=\"780\" loading=\"lazy\">\n</p>\n<p>现在回到主页（使用主页链接的导航痕迹），然后查看作者 和类型 列表 - 您应该已经有很多创建从添加新书，但可以自由添加一些更多。</p>\n<p>你不会有任何书籍实例，因为这些不是从图书创建的（虽然你可以从 <strong>BookInstance</strong> - 创建一个书 - 这是 ForeignKey 字段的性质）。返回主页，然后按关联的添加按钮显示下面的添加书实例屏幕。请注意，全球唯一的 ID，可用于单独标识库中单书的副本。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Django/Admin_site/admin_bookinstance_add.png\" alt=\"Admin Site - BookInstance Add\" width=\"863\" height=\"514\" loading=\"lazy\">\n</p>\n<p>为你的书创建一些记录。将状态设置为可用于至少一些记录，并为其他记录贷款。如果状态 不可 用，则还设置未来到期日期。</p>\n<p>而已！您现在已经学会了如何 设置和使用管理站点。您还创建书的记录，BookInstance，Genre，和 Author 我们就可以一次我们创造我们自己的观点和模板使用。</p>"}},{"type":"prose","value":{"id":"高级配置","title":"高级配置","isH3":false,"content":"<p>Django 使用注册模型的信息为创建基本管理站点做了非常好的工作：</p>\n<ul>\n  <li>\n    每个模型都有一个单独的记录列表，由使用模型 __str__()\n    方法创建的字符串标识，并链接到详细视图/表单进行编辑。默认，视图最上面有一个操作菜单，可用于对记录执行批量删除操作。\n  </li>\n  <li>进行编辑和添加记录的模型详细记录表单包含 模型的所有字段，以其声明顺序垂直布置。</li>\n</ul>\n<p>你可以进一步自定义界面，使它更容易使用，你可以改进的一些想法：</p>\n<ul>\n  <li>视图列表：\n    <ul>\n      <li>添加每个记录显示的其他字段/信息</li>\n      <li>添加过滤器以根据日期或某些其他选择值（例如图书货款状态）选择列出哪些记录。</li>\n      <li>在列表视图中的操作菜单中添加其他选项，并选择此菜单在表单上显示的位置。</li>\n    </ul>\n  </li>\n  <li>详细视图\n    <ul>\n      <li>选择要显示（或排除）的字段，以及其顺序，分组，是否可编辑，使用的小部件，方向等。</li>\n      <li>将相关字段添加到记录以允许内联编辑（例如：添加在创建作者记录时添加和编辑图书记录的功能）。</li>\n    </ul>\n  </li>\n</ul>\n<p>在本节中，我们将看一些改进本地图书馆界面的更改，其中包括添加更多信息 Book 和 Author 模型列表，以及改进编辑视图的布局。我们不会改变 Language 和 Genre 模拟演示，因为它们只有一个字段，所以这样没有真正的好处。</p>\n<p>你可以 在<a href=\"https://docs.djangoproject.com/en/1.10/ref/contrib/admin/\" class=\"external\" rel=\" noopener\">The Django Admin site</a> 中找到所以管理员网站自定义选项的完整参考。</p>"}},{"type":"prose","value":{"id":"注册_一个_modeladmin_类","title":"注册 一个 ModelAdmin 类","isH3":true,"content":"<p>在管理界面去改变一个模型的展示方式，当你定义了 <a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/admin/#modeladmin-objects\" class=\"external\" rel=\" noopener\">ModelAdmin</a> 类（描述布局）和将其注册到模型中。</p>\n<p>让我们开始作者模型。打开 <strong>admin.py</strong> 在目录应用程序 (<strong>/locallibrary/catalog/admin.py</strong>)。注释你的原始注册（前缀为#）在 <strong>Author</strong> 模型</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code># admin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>Author<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>现在添加一个 AuthorAdmin 和注册，如下</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\"># Define the admin class</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AuthorAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\n<span class=\"token comment\"># Register the admin class with the associated model</span>\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>Author<span class=\"token punctuation\">,</span> AuthorAdmin<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>我们再为<strong>Book</strong> 添加 <strong>ModelAdmin</strong> 类 和 <strong>BookInstance</strong> 类。我们需要注释我们原始注册：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>#admin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>Book<span class=\"token punctuation\">)</span>\n#admin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>BookInstance<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>现在创建和注册新的模型；为了演示的目的，我们将使用<code>@register 装饰器来注册模型（这和 admin.site.register()</code> 语法作用一样）。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\"># Register the Admin classes for Book using the decorator</span>\n\n<span class=\"token decorator annotation punctuation\">@admin<span class=\"token punctuation\">.</span>register</span><span class=\"token punctuation\">(</span>Book<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BookAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\n<span class=\"token comment\"># Register the Admin classes for BookInstance using the decorator</span>\n\n<span class=\"token decorator annotation punctuation\">@admin<span class=\"token punctuation\">.</span>register</span><span class=\"token punctuation\">(</span>BookInstance<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInstanceAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n</code></pre></div>\n<p>可以看到我们现在 的 类都是空的（“pass”），所以管理操作并不会改变，我们现在对这些类进行扩展，以定义我们针对模型的管理行为。</p>"}},{"type":"prose","value":{"id":"配置列表视图","title":"配置列表视图","isH3":true,"content":"<p>该 本地图书馆 目前列出的所以作者都使用从模型生成的对象名称的<code>__str__()</code> 方法。如果只是几个作者，这无关紧要。但一旦你有许多作者，这可能会重复。要区分它们，或仅仅因为你想要显示有关每个作者的更多有趣的信息，你可以使用<a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_display\" class=\"external\" rel=\" noopener\">list_display</a> 向视图添加其他字段。</p>\n<p>用下面的代码替代 你 <strong>AuthorAdmin</strong> 的类。在元组中声明要显示列表中的字段名称以所需的顺序排列，如图（这些和原始模型中指定的名称相同）。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">AuthorAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    list_display <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'last_name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'first_name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'date_of_birth'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'date_of_death'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>重新启动站点并导航到作者列表。现在应该显示上述字段，如下所示：</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Django/Admin_site/admin_improved_author_list.png\" alt=\"Admin Site - Improved Author List\" width=\"941\" height=\"302\" loading=\"lazy\">\n</p>\n<p>对于我们的 Book 模型，我们将另外显示<strong>author</strong>和<strong>genre</strong>。这 author 是一个<strong>ForeignKey</strong>字段（一对多）的关系，所以将由<code>__str()__</code>相关记录的值表示。用<strong>BookAdmin</strong>下面的版本替换课程。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">BookAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    list_display <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'author'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'display_genre'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>不幸的是，我们不能直接指定 <strong>list_display</strong> 中的 <strong>genre</strong> 字段，因为它是一个<strong>ManyToManyField</strong> （Django 可以防止这种情况，因为在这样做时会有大量的数据库访问“成本”）。相反，我们将定义一个 <code>display_genre</code> 函数来获取信息作为一个字符串（这是我们上面调用的函数;下面我们将定义它）。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 在<strong>genre</strong>这里获取可能不是一个好主意，因为数据库操作的“成本”。我们向您展示了如何在模型中调用函数的其他原因非常有用 - 例如在列表中的每个项目旁边添加一个“删除”链接。</p>\n</div>\n<p>将以下代码添加到 Book 模型（<strong>models.py</strong>）中。这将从 genre 字段的前三个值（如果存在）创建一个字符串，并创建一个<code>short_description</code>可以在此方法的管理站点中使用的字符串。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code>    <span class=\"token keyword\">def</span> <span class=\"token function\">display_genre</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        Creates a string for the Genre. This is required to display genre in Admin.\n        \"\"\"</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">', '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> genre<span class=\"token punctuation\">.</span>name <span class=\"token keyword\">for</span> genre <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>genre<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    display_genre<span class=\"token punctuation\">.</span>short_description <span class=\"token operator\">=</span> <span class=\"token string\">'Genre'</span>\n</code></pre></div>\n<p>保存模型并更新管理员后，重新启动站点并转到图书列表页面; 你应该看到像下面这样的书籍清单：</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Django/Admin_site/admin_improved_book_list.png\" alt=\"Admin Site - Improved Book List\" width=\"947\" height=\"337\" loading=\"lazy\">\n</p>\n<p>该 Genre 模型（和 Language 模式，如果你定义一个）都有一个单一的领域，所以没有一点为他们创造更多的显示领域的附加模型。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>备注：</strong> 值得更新 BookInstance 模型列表，至少显示状态和预期的返回日期。我们已经补充说，作为本文末尾的挑战！</p>\n</div>"}},{"type":"prose","value":{"id":"添加列表过滤器","title":"添加列表过滤器","isH3":true,"content":"<p>一旦列表中有很多项目，就可以过滤哪些项目被显示出来。这是通过在<code>list_filter</code>属性中列出字段来完成的。用<code>BookInstanceAdmin</code>下面的代码片段替换你当前的 类。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInstanceAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    list_filter <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'due_back'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>列表视图现在将在右侧包含一个过滤器框。请注意如何选择日期和状态来过滤值：</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Django/Admin_site/admin_improved_bookinstance_list_filters.png\" alt=\"Admin Site - BookInstance List Filters\" width=\"960\" height=\"528\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"整理细节视图布局","title":"整理细节视图布局","isH3":true,"content":"<p>默认情况下，详细视图按照其在模型中声明的顺序垂直排列所有字段。您可以更改声明的顺序，哪些字段显示（或排除），区段是否用于组织信息，字段是水平还是垂直显示，甚至是管理窗体中使用的编辑窗口小部件。</p>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>备注：</strong> LocalLibrary 模型比较简单，因此我们不需要更改布局; 不管怎样，我们会做一些改变，只是为了向你展示如何。</p>\n</div>\n<h4 id=\"控制哪些字段被显示和布局\">控制哪些字段被显示和布局</h4>\n<p>更新您的 <code>AuthorAdmin</code> 类以添加<code>fields</code>行，如下所示（粗体）：</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">AuthorAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    list_display <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'last_name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'first_name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'date_of_birth'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'date_of_death'</span><span class=\"token punctuation\">)</span>\n    fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'first_name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'last_name'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'date_of_birth'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'date_of_death'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>在<code>fields</code> 属性列表只是要显示在表格上那些领域，如此才能。字段默认情况下垂直显示，但如果您进一步将它们分组在元组中（如上述“日期”字段中所示），则会水平显示。</p>\n<p>重新启动您的应用程序并转到作者详细信息视图 - 现在应该如下所示：</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Django/Admin_site/admin_improved_author_detail.png\" alt=\"Admin Site - Improved Author Detail\" width=\"928\" height=\"282\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>备注：</strong> 您还可以使用<code>exclude</code>属性来声明要从表单中排除的属性列表（将显示模型中的所有其他属性）。</p>\n</div>\n<h4 id=\"剖切细节视图\">剖切细节视图</h4>\n<p>你可以使用 <a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.ModelAdmin.fieldsets\" class=\"external\" rel=\" noopener\">fieldsets</a> 属性添加“部分”以在详细信息表单中对相关的模型信息进行分组。</p>\n<p>在 <code>BookInstance</code>模型中，我们有相关的书是什么（即信息 <code>name</code>、<code>imprint</code> 和 <code>id</code>），并且当将可用（<code>status</code>、<code>due_back</code>）。我们可以通过将粗体文本添加到我们的<code>BookInstanceAdmin</code>类中来将其添加到不同的部分。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token decorator annotation punctuation\">@admin<span class=\"token punctuation\">.</span>register</span><span class=\"token punctuation\">(</span>BookInstance<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInstanceAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    list_filter <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'due_back'</span><span class=\"token punctuation\">)</span>\n\n    fieldsets <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'fields'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'book'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'imprint'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'Availability'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'fields'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'due_back'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>每个部分都有自己的标题（或者 None 如果你不想要一个标题）和字典中的一个相关的元组 - 描述的格式很复杂，但是如果你看上面的代码片段，那么它们很容易理解。</p>\n<p>重新启动并导航到书籍实例视图; 表格应如下所示：</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Django/Admin_site/admin_improved_bookinstance_detail_sections.png\" alt=\"Admin Site - Improved BookInstance Detail with sections\" width=\"947\" height=\"580\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"关联记录的内联编辑","title":"关联记录的内联编辑","isH3":true,"content":"<p>有时，可以同时添加关联记录是有意义的。例如，将书籍信息和有关您在同一详细信息页面上的特定副本的信息同时显示可能是有意义的。</p>\n<p>你可以通过声明 <a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.ModelAdmin.inlines\" class=\"external\" rel=\" noopener\">inlines</a>, 类型 <a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.TabularInline\" class=\"external\" rel=\" noopener\">TabularInline</a> (水平布局 ) or <a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.StackedInline\" class=\"external\" rel=\" noopener\">StackedInline</a> (垂直布局，就像默认布局) 这样做。您可以通过在您的以下的粗体中添加以下行，将内容中的<code>BookInstance</code>信息添加到我们的 Book 详细信息中<code>BookAdmin</code>：</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">BooksInstanceInline</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>TabularInline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    model <span class=\"token operator\">=</span> BookInstance\n\n<span class=\"token decorator annotation punctuation\">@admin<span class=\"token punctuation\">.</span>register</span><span class=\"token punctuation\">(</span>Book<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BookAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    list_display <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'author'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'display_genre'</span><span class=\"token punctuation\">)</span>\n    inlines <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>BooksInstanceInline<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>尝试重新启动您的应用程序，然后查看图书的视图 - 在底部您应该看到与本书相关的图书实例：</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Django/Admin_site/admin_improved_book_detail_inlines.png\" alt=\"Admin Site - Book with Inlines\" width=\"937\" height=\"889\" loading=\"lazy\">\n</p>\n<p>在这种情况下，我们所做的就是声明我们的<code>tablular</code>内联类，它只是从内联模型添加所有字段。您可以为布局指定各种附加信息，包括要显示的字段，其顺序，是否只读等。（有关详细信息，请参阅 <a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.TabularInline\" class=\"external\" rel=\" noopener\">TabularInline</a> ).</p>\n<div class=\"notecard note\" id=\"sect7\">\n  <p><strong>备注：</strong> 这个功能有一些痛苦的限制！在上面的屏幕截图中，我们有三个现有的书籍实例，其次是新的书籍实例的三个占位符（看起来非常相似！）。默认情况下没有备用书实例会更好，只需使用“添加另一个书”实例链接添加它们，或者可以<code>BookInstance</code>从这里列出作为不可读的链接。第一个选项可以通过<code>extra</code>在<code>BookInstanceInline</code>模型中将属性设置为 0 来完成，自己尝试一下。</p>\n</div>"}},{"type":"prose","value":{"id":"挑战自己","title":"挑战自己","isH3":false,"content":"<p>我们在本节学到了很多东西，所以现在是时候尝试一些事情了。</p>\n<ol>\n  <li>对于 <code>BookInstance</code>列表视图，添加代码以显示书籍，状态，到期日期和 ID（而不是默认<code>__str__()</code>文本）。</li>\n  <li>添加的在线上市 Book 项目的 Author 使用，因为我们做了同样的做法详细视图<code>Book/ BookInstance</code>。</li>\n</ol>"}},{"type":"prose","value":{"id":"概要","title":"概要","isH3":false,"content":"<p>而已！您现在已经了解了如何以最简单和改进的形式设置管理站点，如何创建超级用户以及如何导航管理站点以及查看，删除和更新记录。一路上，您创建了一堆书籍，BookInstances，流派和作者，一旦我们创建了自己的视图和模板，我们就可以列出和展示。</p>"}},{"type":"prose","value":{"id":"进阶阅读","title":"进阶阅读","isH3":false,"content":"<ul>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/intro/tutorial02/#introducing-the-django-admin\" class=\"external\" rel=\" noopener\">Writing your first Django app, part 2: Introducing the Django Admin</a> (Django docs)</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/contrib/admin/\" class=\"external\" rel=\" noopener\">The Django Admin site</a> (Django Docs)</li>\n</ul><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Server-side/Django/Models\"> 上一页 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Server-side/Django\"> Overview: Django</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Server-side/Django/Home_page\"> 下一页  </a></li>\n</ul>"}}],"toc":[{"text":"综述","id":"综述"},{"text":"注册模型","id":"注册模型"},{"text":"创建一个超级用户","id":"创建一个超级用户"},{"text":"登入并使用该网站","id":"登入并使用该网站"},{"text":"高级配置","id":"高级配置"},{"text":"挑战自己","id":"挑战自己"},{"text":"概要","id":"概要"},{"text":"进阶阅读","id":"进阶阅读"}],"summary":"好了，我们已经为本地图书馆网站 LocalLibrary 创建了模型，我们接下来使用 Django 管理站点去添加 一些“真“书数据。首先我们展示如何用管理站点注册模型，然后展示如何登录和创建一些数据。本文最后，我们介绍你可以进一步改进管理站点的建议。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Django Tutorial Part 4: Django admin site","locale":"en-US","native":"English (US)"},{"title":"Tutorial Django Parte 4: Sitio de Administración de Django","locale":"es","native":"Español"},{"title":"Django didactique Section 4: Site d'administration de Django","locale":"fr","native":"Français"},{"title":"Django Tutorial Part 4: Django admin site","locale":"ko","native":"한국어"},{"title":"Tutorial Django Parte 4: Django admin site","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Руководство Django часть 4: административная панель Django","locale":"ru","native":"Русский"},{"title":"Django Tutorial Part 4: Django admin site","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/learn/server-side/django/admin_site","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/learn/server-side/django/admin_site/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Learn","title":"学习 Web 开发"},{"uri":"/zh-CN/docs/Learn/Server-side","title":"服务器端网页编程"},{"uri":"/zh-CN/docs/Learn/Server-side/Django","title":"Django Web 框架 (python)"},{"uri":"/zh-CN/docs/Learn/Server-side/Django/Admin_site","title":"Django Tutorial Part 4: Django 管理员站点"}],"pageTitle":"Django Tutorial Part 4: Django 管理员站点 - 学习 Web 开发 | MDN","noIndexing":false}}