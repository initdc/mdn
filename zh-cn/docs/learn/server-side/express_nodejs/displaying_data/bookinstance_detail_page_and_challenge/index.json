{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"书本实例细节页面、与自我挑战","mdn_url":"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_detail_page_and_challenge","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":"书本实例细节页面","title":"书本实例细节页面","isH3":false,"content":"<p><code>BookInstance</code>细节页面，需要呈现每一个<code>BookInstance</code>的信息，用 <code>_id</code> 字段值（自动产生）做识别。它包含了 <code>Book</code> 名称 (也是一个连结，连到 书本细节页面)，接着是纪录中的其它的信息。</p>"}},{"type":"prose","value":{"id":"控制器","title":"控制器","isH3":true,"content":"<p>打开 <strong>/controllers/bookinstanceController.js</strong>，找到 exported <code>bookinstance_detail()</code> 控制器方法，并替换以下代码。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Display detail page for a specific BookInstance.</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">bookinstance_detail</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    BookInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> bookinstance</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bookinstance<span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// No results.</span>\n          <span class=\"token keyword\">var</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Book copy not found'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          err<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// Successful, so render.</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bookinstance_detail'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Book:'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">bookinstance</span><span class=\"token operator\">:</span>  bookinstance<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>该方法使用从 URL（使用路由）中提取的特定书本实例的 ID，调用<code>BookInstance.findById()</code>，并通过请求参数（<code>req.params.id</code>），在控制器中访问。然后调用<code>populate()</code>来获取相关<code>Book</code>的详细信息。</p>"}},{"type":"prose","value":{"id":"视图","title":"视图","isH3":true,"content":"<p>创建 <strong>/views/bookinstance_detail.pug</strong>，并复制到下面的内容中。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">extends</span> <span class=\"token class-name\">layout</span>\n\nblock content\n\n  h1 <span class=\"token constant\">ID</span><span class=\"token operator\">:</span> #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">}</span>\n\n  p #<span class=\"token punctuation\">[</span>strong Title<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span>\n    <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span>bookinstance<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span>\n  p #<span class=\"token punctuation\">[</span>strong Imprint<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>imprint<span class=\"token punctuation\">}</span>\n\n  p #<span class=\"token punctuation\">[</span>strong Status<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Available'</span>\n      span<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>success #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Maintenance'</span>\n      span<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>danger #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n      span<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>warning #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token operator\">!=</span><span class=\"token string\">'Available'</span>\n    p #<span class=\"token punctuation\">[</span>strong Due back<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>due_back<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>本模组中的所有东西，都在先前的章节演示过了。</p>"}},{"type":"prose","value":{"id":"它看起來像是？","title":"它看起來像是？","isH3":true,"content":"<p>运行本应用，并打开浏览器访问 <a href=\"http://localhost:3000/\" class=\"external\" rel=\" noopener\">http://localhost:3000/</a>。选择 All book-instances 连结，然后选择其中一本。如果每个东西都设定正确了，你的网站看起来应该像是底下的截图。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_detail_page_and_challenge/locallibary_express_bookinstance_detail.png\" alt=\"BookInstance Detail Page - Express Local Library site\" width=\"1016\" height=\"368\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"自我挑战","title":"自我挑战","isH3":false,"content":"<p>目前，我们网站上显示的大多数日期，都使用默认的 JavaScript 格式（例如 <em>Tue Dec 06 2016 15:49:58 GMT+1100</em>（AUS 东部夏令时间）。本文的挑战，是改善作者<code>Author</code>生命周期日期显示的外观信息（死亡/出生日期）和 BookInstance 详细信息页面，使用格式：December 6th, 2016。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 您可以使用与我们用于 Book Instance List 的相同方法（将生命周期的虚拟属性，添加到<code>Author</code>模型，并使用<a href=\"https://www.npmjs.com/package/moment\" class=\"external\" rel=\" noopener\">moment</a>来设置日期字符串的格式）。</p>\n</div>\n<p>这一挑战的要求：</p>\n<ol>\n  <li>用 BookInstance 详细信息页面中的 <code>due_back_formatted</code> 替换 <code>due_back</code>。</li>\n  <li>更新作者模块以添加寿命虚拟属性。寿命应該有两个值： <em>date_of_birth - date_of_death，這</em>两个值的格式与 <code>BookInstance.due_back_formatted</code>的日期格式相同。</li>\n  <li>在当前使用<code>date_of_birth</code> 和 <code>date_of_death</code>的所有视图中，使用 <code>Author.lifespan</code> 。</li>\n</ol>"}},{"type":"prose","value":{"id":"下一步","title":"下一步","isH3":false,"content":"<ul>\n  <li>回到 <a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教程 5: 呈现图书馆数据</a></li>\n</ul>"}}],"toc":[{"text":"书本实例细节页面","id":"书本实例细节页面"},{"text":"自我挑战","id":"自我挑战"},{"text":"下一步","id":"下一步"}],"summary":"BookInstance细节页面，需要呈现每一个BookInstance的信息，用 _id 字段值（自动产生）做识别。它包含了 Book 名称 (也是一个连结，连到 书本细节页面)，接着是纪录中的其它的信息。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"BookInstance detail page and challenge","locale":"en-US","native":"English (US)"},{"title":"ブックインスタンス詳細ページとチャレンジ","locale":"ja","native":"日本語"},{"title":"書本實例詳情頁面與自我挑戰","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/learn/server-side/express_nodejs/displaying_data/bookinstance_detail_page_and_challenge","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/learn/server-side/express_nodejs/displaying_data/bookinstance_detail_page_and_challenge/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Learn","title":"学习 Web 开发"},{"uri":"/zh-CN/docs/Learn/Server-side","title":"服务器端网页编程"},{"uri":"/zh-CN/docs/Learn/Server-side/Express_Nodejs","title":"Express Web Framework (Node.js/JavaScript)"},{"uri":"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Displaying_data","title":"Express 教程 5: 呈现图书馆数据"},{"uri":"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_detail_page_and_challenge","title":"书本实例细节页面、与自我挑战"}],"pageTitle":"书本实例细节页面、与自我挑战 - 学习 Web 开发 | MDN","noIndexing":false}}