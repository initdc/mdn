{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Express 教程 7: 部署到生产环境","mdn_url":"/zh-CN/docs/Learn/Server-side/Express_Nodejs/deployment","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web\"><strong>新手请从这开始！</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Web 入门</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web\">Web 概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">安装基本软件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">您的网站会是什么样？</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">处理文件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript 基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">发布您的网站</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Web 如何运作</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/HTML\"><strong>HTML — 构建 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 介绍</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML\">HTML 概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">HTML 入门</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">脑袋里是什么？HTML 中的元数据</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML 文字基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">建立超链接</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">高级文字格式</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">文档与网站架构</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">HTML 除错</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">作业：标记字母</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">作业：构建出有内容的网页</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>多媒体与嵌入</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding\">多媒体与嵌入概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">HTML 中的图片</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">视频和音频内容</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">从对象到 iframe — 其他嵌入技术</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">为 Web 新增向量图</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">自适应图片</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">作业：Mozilla 醒目页面</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 表格</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables\">HTML 表格概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Basics\">HTML 表格基础</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Advanced\">HTML 高级表格特性和可访问性</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/HTML/Tables/Structuring_planet_data\">作业：构建行星数据</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/CSS\"><strong>CSS — 设计 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps\">CSS第一步概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/What_is_CSS\">什么是CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/Getting_started\">让我们开始CSS之旅</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/How_CSS_is_structured\">如何让构建CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/How_CSS_works\">CSS如何运行</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">运用你的新知识</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 构建基础</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks\">CSS构建基础概览</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">层叠与继承</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Selectors\">CSS选择器</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/The_box_model\">盒模型</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">背景与边框</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">处理不同方向的文本</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Overflowing_content\">溢出的内容</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Values_and_units\">值与单位</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">在CSS中调整大小</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">图像、媒体和表单元素</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Styling_tables\">样式化表格</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Debugging_CSS\">调试CSS</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Building_blocks/Organizing\">组织你的CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>样式化文字</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text\">样式化文字概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Fundamentals\">基础文字与字体样式化</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Styling_lists\">样式化列表</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Styling_links\">样式化链接</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Web_fonts\">Web 字体</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">作业：排版社区大学首页</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 排版</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout\">CSS 排版概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Normal_Flow\">正常布局流</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox\">弹性区块</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Grids\">网格</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Floats\">浮动</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Positioning\">定位</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">多列布局</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design\">响应式布局</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Media_queries\">媒体查询</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">传统的布局方法</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">支持旧的浏览器</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">基础布局练习</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-CN/docs/Learn/JavaScript\"><strong>JavaScript — 用户端动态脚本</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps\">JavaScript 第一步概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">什么是 JavaScript？</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/A_first_splash\">初次接触 JavaScript</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/What_went_wrong\">出现了什么问题？JavaScript 疑难解答</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Variables\">储存你所需的信息 — 变量</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Math\">JavaScript 基础概念 — 数字与运算符</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Strings\">处理文字 — JavaScript 中的字符串</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Useful_string_methods\">有用的字符串方法</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Arrays\">数组</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/First_steps/Silly_story_generator\">作业：傻瓜故事产生器</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 基础要件</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks\">JavaScript 基础要件概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/conditionals\">在代码中决策 — 条件</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Looping_code\">代码循环</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Functions\">函数 - 可重复利用的代码块</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">建立自己的函数</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Return_values\">函数回传值</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Events\">事件介绍</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Building_blocks/Image_gallery\">作业：图库</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 对象介绍</summary>\n          <ol>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects\">JavaScript 对象概述</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Basics\">对象基础概念</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes\">对象原型</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/JSON\">使用 JSON 资料</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Object_building_practice\">对象构建实践</a></li>\n            <li><a href=\"/zh-CN/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">作业：为弹跳球展示新增功能</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>异步JavaScript</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous\">异步JavaScript概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Concepts\">通用异步编程概念</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Introducing\">异步JavaScript简介</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">合作异步JavaScript: 超时和间隔</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Promises\">Promises: 优雅的异步处理</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Async_await\">async和await:让异步编程更简单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">选择正确的方法</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端网页 API</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs\">客户端网页 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">网页 API 介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">操纵文档</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">从服务器获取数据</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">第三方 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">画图</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">视频与音频 API</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">客户端存储</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Forms\"><strong>Web表单 — 与用户数据打交道</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Web表单核心</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Forms\">Web表单概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Your_first_form\">你的第一个表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/How_to_structure_a_web_form\">如何构造Web表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Basic_native_form_controls\">原生表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/HTML5_input_types\">HTML5的input类型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Other_form_controls\">其它表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Styling_web_forms\">样式化Web表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Advanced_form_styling\">高级表单样式</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/UI_pseudo-classes\">UI 伪类</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Form_validation\">客户端表单验证</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Sending_and_retrieving_form_data\">发送表单数据</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Web表单进阶</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/How_to_build_custom_form_controls\">如何构造自定义表单控件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Sending_forms_through_JavaScript\">使用JavaScript发送表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">表单组件兼容性列表</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Accessibility\"><strong>可访问性 — 使每个人都能使用 Web</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>可访问性指南</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility\">可访问性概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/What_is_accessibility\">什么是可访问性</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/HTML\">HTML: 可访问性的好基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS 和 JavaScript 可访问性最佳实践</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA 基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/Multimedia\">可访问性多媒体</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Accessibility/Mobile\">移动端可访问性</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>可访问性测评</summary>\n        <ol>\n            <li><a href=\"/zh-CN/docs/Learn/Accessibility/Accessibility_troubleshooting\">作业：可访问性疑难解答</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing\"><strong>工具与测试</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端web开发工具</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">客户端web开发工具索引</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">客户端工具概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">命令行速成课</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">包管理基础</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">一个完整的工具链</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">发布你的应用</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客户端框架介绍</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">客户端框架概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">框架的主要特性</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">开始使用Vue</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">创建第一个Vue组件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">渲染一个Vue组件列表</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">添加一个新的TODO表单: Vue事件、方法、模型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">用CSS样式化Vue组件</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git 和 GitHub</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/GitHub\">Git和GitHub 概览</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>跨浏览器测试</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing\">跨浏览器测试概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">跨浏览器测试介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">执行测试策略</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">处理常见的 HTML 与 CSS 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">处理常见的 JavaScript 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">处理常见的可访问性问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">建置功能侦测</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">自动测试介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">设置您的自动测试环境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/zh-CN/docs/Learn/Server-side\"><strong>服务端网页编程</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>第一步</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps\">第一步概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Introduction\">服务端介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Client-Server_overview\">用户端概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Web_frameworks\">服务端网络框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/First_steps/Website_security\">网站安全</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Django 网站框架 (Python)</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django\">Django 网站框架 (Python) 概述</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Introduction\">介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/development_environment\">搭建开发环境</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Tutorial_local_library_website\">在线教学：本地图书馆网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/skeleton_website\">在线教学 2：建立网站框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Models\">在线教学 3：使用模型</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Admin_site\">在线教学 4：Django 管理网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Home_page\">在线教学 5：建立我们的首页</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Generic_views\">在线教学 6：通用列表与细节检查</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Sessions\">在线教学 7：会话框架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Authentication\">在线教学 8：用户授权与许可</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Forms\">在线教学 9：搭配表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Testing\">在线教学 10：测试 Django 的 Web 应用</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/Deployment\">在线教学 11：部署 Django 至产品</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/web_application_security\">Web 应用安全性</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Django/django_assessment_blog\">作业：DIY 博客</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>Express 网页框架 (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs\">Express 网页框架 (Node.js/JavaScript) 概览</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node 介绍</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/development_environment\">架设 Node (Express) 开发环境</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express 教程： 本地图书馆网站</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express 教程 2： 新建网站骨架</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express 教程 3： 使用数据库 (Mongoose)</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/routes\">Express 教程 4： 路由和控制器</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教程 5： 呈现图书馆数据</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/forms\">Express 教程 6： 使用表单</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/deployment\">Express 教程 7： 部署至生产环境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>更多资源</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>常见问题</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Learn/HTML/Howto\">HTML 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/CSS/Howto\">CSS 问题</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Web_mechanics\">Web 是如何运作的</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Tools_and_setup\">工具与安装</a></li>\n          <li><a href=\"/zh-CN/docs/Learn/Common_questions#Design_and_accessibility\">设计与可访问性</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/forms\"> 上一页 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs\"> Overview: Express Nodejs</a></li>\n    \n</ul>\n<p>现在你已经创建（并测试）了一个不错的 <a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">本地图书馆</a> 网站了，你打算把它发布到一个公共网络服务器，这样图书馆职工和网络上的其他成员就可以访问它了。这篇文章总结了你可以怎样找到一台主机部署你的网站，以及你需要为站点准备到生产环境做什么。</p>\n<table class=\"learn-box standard-table\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">预备知识：</th>\n      <td>\n        完成前面所有的指南主题，包括\n        <a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a>.\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">目标：</th>\n      <td>学习你可以怎样以及在哪里部署一个 Express 应用到生产环境。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"概览","title":"概览","isH3":false,"content":"<p>一旦您的站点完成（或完成“足够”以开始公共测试），您将需要将其托管在比您的个人开发计算机，更公开和可访问的地方。</p>\n<p>到目前为止，您一直在<a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/development_environment\">开发环境</a>中工作，使用 Express / Node 作为 Web 服务器，将您的站点共享到本地浏览器/网络，并使用（不安全的）开发设置运行您的网站，以显示调试和其他私人信息。在您可以在外部托管网站之前，您首先必须：</p>\n<ul>\n  <li>选择托管 Express 应用程序的环境。</li>\n  <li>对项目设置进行一些更改。</li>\n  <li>设置生产级别的基础架构，以服务您的网站。</li>\n</ul>\n<p>本教程提供了，有关选择托管站点的选项的一些指导，简要概述了为使您的 Express 应用程序准备好生产，所需执行的操作，以及如何将 LocalLibrary 网站安装到 <a href=\"https://www.heroku.com/\" class=\"external\" rel=\" noopener\">Heroku</a>云托管上的工作示例服务。</p>\n<p>请记住，您不必使用 Heroku - 还有其他托管服务可用。我们还提供了一个单独的教程，以展示如何在 <a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Installing_on_PWS_Cloud_Foundry\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">PWS/Cloud Foundry</a> 上安装 LocalLibrary。</p>"}},{"type":"prose","value":{"id":"什么是生产环境？","title":"什么是生产环境？","isH3":false,"content":"<p>生产环境是服务器计算机提供的环境，您可以在其中运行网站，以供外部使用。环境包括：</p>\n<ul>\n  <li>网站运行的计算机硬件。</li>\n  <li>操作系统（例如 Linux 或 Windows）。</li>\n  <li>编程语言运行库和框架库，在其上编写您的网站。</li>\n  <li>Web 服务器基础结构，可能包含 Web 服务器，反向代理，负载平衡器等。</li>\n  <li>您的网站所依赖的数据库。</li>\n</ul>\n<p>服务器计算机，可以位于您的场所，并通过快速链接，连接到 Internet，但使用“托管在云上”的计算机更为常见。这实际上意味着，您的代码运行在托管公司的数据中心的某台远程计算机（或可能是“虚拟”计算机）。远程服务器，通常会以特定价格提供互联网连接，和一些保证级别的计算资源（例如 CPU，RAM，存储器等）。</p>\n<p>这种可远程访问的计算/网络硬件，称为基础架构即服务（IaaS）。许多 IaaS 供应商，提供预安装特定操作系统的选项，您必须在其上，安装生产环境的其他组件。其他供应商，允许您选择功能更全面的环境，可能包括完整的 node 设置。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 预构建环境，可以使您的网站设置变得非常简单，因为它们会减少配置，但可用选项可能会限制您使用不熟悉的服务器（或其他组件），并且可能基于较旧版本的操作系统。通常最好自己安装组件，以便获得所需的组件，并且当您需要升级系统的某些部分时，您可以知道从哪里开始！</p>\n</div>\n<p>其他托管服务提供商，支持 Express 作为平台即服务（PaaS）产品的一部分。使用此类托管时，您无需担心大多数生产环境（服务器，负载平衡器等），因为主机平台会为您处理这些问题。这使得部署非常简单，因为您只需要专注于 Web 应用程序，而不是任何其他服务器基础结构。</p>\n<p>一些开发人员选择 IaaS，相对于 PaaS，IaaS 提供更高灵活性，而其他开发人员偏好 PaaS 的降低维护开销，和更轻松的扩展性。当您在一开始使用时，在 PaaS 系统上设置您的网站，要容易得多，因此我们将在本教程中使用 PaaS。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 如果您选择 Node/Express 友好的托管服务提供商，他们应该提供，有关如何使用 Web 服务器，应用程序服务器，反向代理等不同配置，来设置 Express 网站的说明。例如，在<a href=\"https://www.digitalocean.com/community/tutorials?q=node\" class=\"external\" rel=\" noopener\">数字海洋 node 社区文档</a>中，有许多各种配置的手把手指南。</p>\n</div>"}},{"type":"prose","value":{"id":"选择一个主机供应商","title":"选择一个主机供应商","isH3":false,"content":"<p>众所周知，众多托管服务提供商，都积极支持或与 Node（和 Express）合作。这些供应商提供不同类型的环境（IaaS，PaaS），以及不同价格的不同级别的计算和网络资源。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 有很多托管解决方案，他们的服务和定价，可能会随着时间而改变。虽然我们在下面介绍几个选项，但在选择托管服务提供商之前，有必要自己进行互联网搜索。</p>\n</div>\n<p>选择主机时需要考虑的一些事项：</p>\n<ul>\n  <li>您的网站可能有多忙，以及满足该需求所需的数据，和计算资源的成本。</li>\n  <li>水平扩展（添加更多机器）和垂直扩展（升级到更强大的机器）的支持级别，以及这样做的成本。</li>\n  <li>供应商有数据中心的地方，因此访问可能是最快的。</li>\n  <li>主机正常运行时间和停机时间的历史表现。</li>\n  <li>用于管理站点的工具 - 易于使用且安全（例如 SFTP 与 FTP）。</li>\n  <li>用于监控服务器的内置框架。</li>\n  <li>已知限制。有些主机会故意阻止某些服务（例如电子邮件）。其他在某些价格层中，仅提供一定数小时的“实时时间”，或者仅提供少量存储空间。</li>\n  <li>额外的好处。一些提供商将提供免费域名和 SSL 证书支持，否则您将不得不为此另外支付费用。</li>\n  <li>您所依赖的“免费”等级，是否会随着时间的推移而过期，以及迁移到更昂贵等级的成本，是否意味着您最好在一开始就使用其他服务！</li>\n</ul>\n<p>当你刚开始时，好消息是有很多网站提供“免费”的计算环境，尽管有一些条件。例如， <a href=\"https://www.heroku.com/\" class=\"external\" rel=\" noopener\">Heroku</a> “永远”提供免费但资源有限的 PaaS 环境，而 <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/billing-free-tier.html\" class=\"external\" rel=\" noopener\">Amazon Web Services</a>, <a href=\"https://azure.microsoft.com/en-us/pricing/details/app-service/\" class=\"external\" rel=\" noopener\">Microsoft Azure</a> 和开源选项 <a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Installing_on_PWS_Cloud_Foundry\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">PWS/Cloud Foundry</a> 在您第一次加入时，提供免费信用额度。</p>\n<p>许多提供商还拥有“基本”层，可提供更多有用的计算能力，和更少的限制。举例来说， <a href=\"https://www.digitalocean.com/\" class=\"external\" rel=\" noopener\">Digital Ocean</a> 是一个流行的托管服务提供商，它提供了一个相对便宜的基本计算层（在本教程写作时，是每月 5 美元的较低范围）。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>备注：</strong> 请记住，价格不是唯一的选择标准。如果您的网站成功，可能会发现可扩展性是最重要的考虑因素。</p>\n</div>"}},{"type":"prose","value":{"id":"准备好发布你的网站","title":"准备好发布你的网站","isH3":false,"content":"<p>发布网站时，要考虑的主要问题是网络安全性和性能。至少，您需要删除开发期间，错误页面上包含的堆栈跟踪，整理日志记录，并设置适当的标头，以避免许多常见的安全威胁。</p>\n<p>在以下小节中，我们概述了您应该对应用进行的、最重要的更改。</p>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>备注：</strong> Express 文档中还有其他有用的提示 - 请参阅“<a href=\"https://expressjs.com/en/advanced/best-practice-performance.html\" class=\"external\" rel=\" noopener\">生产最佳实践：性能和可靠性</a>”，以及“<a href=\"https://expressjs.com/en/advanced/best-practice-security.html\" class=\"external\" rel=\" noopener\">生产最佳实践：安全性</a>”。</p>\n</div>"}},{"type":"prose","value":{"id":"设置_node_env_为_production","title":"设置 NODE_ENV 为 'production'","isH3":true,"content":"<p>我们可以通过将 <code>NODE_ENV</code> 环境变量，设置为 production，来删除错误页面中的堆栈跟踪（默认设置为“development” ）。除了生成较为不详细的错误消息之外，还要将变量设置为生产缓存视图模板，和从 CSS 扩展生成的 CSS 文件。测试表明，将<code>NODE_ENV</code>设置为生产，可以将应用程序性能提高三倍！</p>\n<p>可以使用导出或环境文件，或使用 OS 初始化系统，以进行此更改。</p>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>备注：</strong> 这实际上是在环境设置，而不是应用中所做的更改，但重要的是，要注意这里！我们将在下面，展示如何为我们的托管示例设置。</p>\n</div>"}},{"type":"prose","value":{"id":"log_appropriately","title":"Log appropriately","isH3":true,"content":"<p>记录呼叫会对高流量网站产生影响。在生产环境中，您可能需要记录网站活动（例如，跟踪流量，或记录 API 调用），但您应尝试最小化为调试目的而添加的日志记录量。</p>\n<p>在生产环境中，最小化“调试”日志记录的一种方法，是使用类似<a href=\"https://www.npmjs.com/package/debug\" class=\"external\" rel=\" noopener\">调试 debug</a> 的模块，允许您通过设置环境变量，来控制执行的日志记录。例如，下面的代码片段，显示了如何设置“author”日志记录。调试变量使用名称“author”声明，并且将自动显示，来自此对象的所有日志的前缀“author”。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> debug <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">'author'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Display Author update form on GET</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">author_update_get</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    req<span class=\"token punctuation\">.</span><span class=\"token function\">sanitize</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Author<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> author</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">'update error:'</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//On success</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'author_form'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Update Author'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> author <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>然后，您可以通过在<code>DEBUG</code>环境变量中，将它们指定为逗号分隔列表，来启用特定日志集。您可以设置显示作者和书籍日志的变量，如图所示（也支持通配符）。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token comment\">#Windows</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">DEBUG</span><span class=\"token operator\">=</span>author,book\n\n<span class=\"token comment\">#Linux</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">DEBUG</span><span class=\"token operator\">=</span><span class=\"token string\">\"author,book\"</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect7\">\n  <p><strong>备注：</strong> 调用<code>debug</code>可以替换您以前使用<code>console.log()</code>或<code>console.error()</code>执行的日志记录。通过调试模块<a href=\"https://www.npmjs.com/package/debug\" class=\"external\" rel=\" noopener\">debug</a>进行日志记录，替换代码中的所有<code>console.log()</code>调用。通过设置 DEBUG 变量，并在其中记录对日志记录的影响，在开发环境中，打开和关闭日志记录。</p>\n</div>\n<p>如果您需要记录网站活动，可以使用 Winston 或 Bunyan 等日志库。有关此主题的更多信息，请参阅：<a href=\"https://expressjs.com/en/advanced/best-practice-performance.html\" class=\"external\" rel=\" noopener\">生产最佳实践：性能和可靠性</a>。</p>"}},{"type":"prose","value":{"id":"使用_gzipdeflate_压缩响应文件","title":"使用 gzip/deflate 压缩响应文件","isH3":true,"content":"<p>Web 服务器，通常可以压缩发送回客户端的 HTTP 响应，从而显着减少客户端获取和加载页面所需的时间。使用的压缩方法，取决于客户端在请求中支持的解压缩方法（如果不支持压缩方法，则响应将以未压缩的方式发送）。</p>\n<p>您可以使用压缩中间件 <a href=\"https://www.npmjs.com/package/compression\" class=\"external\" rel=\" noopener\">compression</a>，将其添加到您的站点。通过在项目的根目录下，运行以下命令，将其安装到项目中。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">npm</span> <span class=\"token function\">install</span> compression\n</code></pre></div>\n<p>打开**./app.js**，并导入压缩库，如图所示。使用<code>use()</code>方法，将压缩库添加到中间件链（这应该出现在您想要压缩的任何路由之前 - 在本教程这种情况下，全部都是！）</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> catalogRouter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routes/catalog'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Import routes for \"catalog\" area of site</span>\n<span class=\"token keyword\">var</span> compression <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'compression'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create the Express application object</span>\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">compression</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Compress all routes</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">static</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> indexRouter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/users'</span><span class=\"token punctuation\">,</span> usersRouter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/catalog'</span><span class=\"token punctuation\">,</span> catalogRouter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Add catalog routes to middleware chain.</span>\n\n<span class=\"token operator\">...</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect8\">\n  <p><strong>备注：</strong> 对于生产中流量较大的网站，您不会使用此中间件。相反，你会使用像 Nginx 这样的反向代理。</p>\n</div>"}},{"type":"prose","value":{"id":"使用_helmet_避免被常见漏洞侵袭","title":"使用 Helmet 避免被常见漏洞侵袭","isH3":true,"content":"<p><a href=\"https://www.npmjs.com/package/helmet\" class=\"external\" rel=\" noopener\">Helmet</a> 是一个中间件包，可以通过设置适当的 HTTP 标头，来帮助保护您的应用，免受一些众所周知的 Web 漏洞的影响（有关它设置的标头/防护漏洞的详细信息，请参阅<a href=\"https://helmetjs.github.io/docs/\" class=\"external\" rel=\" noopener\">文档</a>）。</p>\n<p>通过在项目的根目录下，运行以下命令，将其安装到项目中。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">npm</span> <span class=\"token function\">install</span> helmet\n</code></pre></div>\n<p>打开**./app.js**，并导入如图所示的 <em>helmet</em> 库。然后使用<code>use()</code>方法将模块添加到中间件链。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> compression <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'compression'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> helmet <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'helmet'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create the Express application object</span>\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">helmet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect9\">\n  <p><strong>备注：</strong> 上面的命令，添加了对大多数站点有意义的可用标头子集。您可以按照<a href=\"https://www.npmjs.com/package/helmet\" class=\"external\" rel=\" noopener\">npm</a>上的说明，根据需要添加/禁用特定标头。</p>\n</div>"}},{"type":"prose","value":{"id":"例子：在_heroku_上安装一个本地图书馆","title":"例子：在 Heroku 上安装一个本地图书馆","isH3":false,"content":"<p>本节提供了如何在<a href=\"http://heroku.com\" class=\"external\" rel=\" noopener\">Heroku PaaS cloud</a>云上安装 LocalLibrary 的实际演示。</p>"}},{"type":"prose","value":{"id":"为什么选择_heroku","title":"为什么选择 Heroku?","isH3":true,"content":"<p>Heroku 是运行时间最长，且最受欢迎的基于云的 PaaS 服务之一。它最初只支持 Ruby 应用程序，但现在可用于托管来自许多编程环境的应用程序，包括 Node（以及 Express）！</p>\n<p>我们选择使用 Heroku 有以下几个原因：</p>\n<ul>\n  <li>Heroku 有一个<a href=\"https://www.heroku.com/pricing\" class=\"external\" rel=\" noopener\">免费套餐</a>（尽管有一些限制）。</li>\n  <li>作为 PaaS，Heroku 为我们提供了大量的 Web 基础架构。这使得入门更加容易，因为您不必担心服务器，负载平衡器，反向代理，崩溃时重新启动网站，或者 Heroku 为我们提供的任何其他 Web 基础结构。</li>\n  <li>虽然它确实有一些限制，但这些不会影响这个特定的应用程序。例如：\n    <ul>\n      <li>Heroku 只提供短期存储，因此用户上传的文件无法安全地存储在 Heroku 本身。</li>\n      <li>如果半小时内没有请求，免费套餐将使不活动的网络应用程序进入睡眠。然后，该网站可能需要几秒钟才能被唤醒。</li>\n      <li>免费套餐将您网站运行的时间，限制为每月一定的小时数（不包括网站“睡着”的时间）。这对于低使用/演示站点来说很好，但如果需要 100％的正常运行时间，则不适用。</li>\n      <li><a href=\"https://devcenter.heroku.com/articles/limits\" class=\"external\" rel=\" noopener\">Heroku 官方文档</a>中列出的其他限制。</li>\n    </ul>\n  </li>\n  <li>大多数情况下它只是可以工作，如果你最终喜欢它，并希望升级，那么扩展你的应用程序非常容易。</li>\n</ul>\n<p>虽然 Heroku 非常适合举办此演示，但它可能并不适合您的真实网站。Heroku 可以轻松设置和扩展，但代价是灵活性较低，而且一旦退 ​​ 出免费套餐，可能会花费更多。</p>"}},{"type":"prose","value":{"id":"heroku_如何工作？","title":"Heroku 如何工作？","isH3":true,"content":"<p>Heroku 在一个或多个“<a href=\"https://devcenter.heroku.com/articles/dynos\" class=\"external\" rel=\" noopener\">Dynos</a>”中运行网站，这些“Dynos”是独立的虚拟化 Unix 容器，提供运行应用程序所需的环境。Dynos 是完全隔离的，并且有一个短暂的文件系统（一个短暂的文件系统，每次 dyno 重新启动时都会清理/清空）。dynos 默认共享的唯一内容，是应用程序<a href=\"https://devcenter.heroku.com/articles/config-vars\" class=\"external\" rel=\" noopener\">配置变量</a>。Heroku 内部使用负载均衡器，将 Web 流量分配给所有“web”dynos。由于它们之间没有任何共享，Heroku 可以通过添加更多 dynos，来水平扩展应用程序（当然，您可能还需要扩展数据库，以接受其他连接）。</p>\n<p>由于文件系统是短暂的，因此无法直接安装应用程序所需的服务（例如数据库，队列，缓存系统，存储，电子邮件服务等）。相反，Heroku Web 应用程序使用 Heroku 或第三方作为独立“附加组件”提供的支持服务。连接到 Web 应用程序后，可以通过环境变量，在 Web 应用程序中访问附加服务。</p>\n<p>为了执行您的应用程序，Heroku 需要能够设置适当的环境和依赖关系，并了解它是如何启动的。对于 Node 应用程序，它所需的所有信息都是从<strong>package.json</strong>文件中获取的。</p>\n<p>开发人员使用特殊的客户端应用程序/终端，与 Heroku 交互，这很像 Unix bash 脚本。这允许您上传存储在 git 存储库中的代码，检查正在运行的进程，查看日志，设置配置变量等等！</p>\n<p>为了让我们的应用程序在 Heroku 上工作，我们需要将我们的 Express Web 应用程序放入 git 存储库，并对 package.json 进行一些小的更改。完成后，我们可以设置 Heroku 帐户，获取 Heroku 客户端，并使用它来安装我们的网站。</p>\n<p>这是您开始教程所需的全部概述（有关更全面的指南，请参阅<a href=\"https://devcenter.heroku.com/articles/getting-started-with-nodejs\" class=\"external\" rel=\" noopener\">带有 Node.js 的 Heroku 入门</a>）。</p>"}},{"type":"prose","value":{"id":"在_github_上创建一个应用仓库","title":"在 Github 上创建一个应用仓库","isH3":true,"content":"<p>Heroku 与 <strong>git</strong> 源代码版本控制系统紧密集成，使用它来上传/同步您对实时运行系统所做的任何更改。它通过添加一个名为 heroku 的新 Heroku“远程”存储库，来指向您在 Heroku 云上的源存储库。在开发期间，您使用 git 在“主”存储库 master 中存储更改。如果要部署站点，请将更改同步到 Heroku 存储库。</p>\n<div class=\"notecard note\" id=\"sect10\">\n  <p><strong>备注：</strong> 如果您习惯于遵循良好的软件开发实践，那么您可能已经在使用 git 或其他一些 SCM 系统。如果您已有 git 存储库，则可以跳过此步骤。</p>\n</div>\n<p>有很多方法可以使用 git，但最简单的方法之一，是首先在<a href=\"https://github.com/\" class=\"external\" rel=\" noopener\">GitHub</a>上建立一个帐户，在那里创建存储库，然后在本地同步它：</p>\n<ol>\n  <li>访问 <a href=\"https://github.com/\" class=\"external\" rel=\" noopener\">https://github.com/</a> 并创建一个帐户。</li>\n  <li>登录后，单击顶部工具栏中的 <strong>+</strong> 号链接，然后选择新建存储库<strong>New repository</strong>。</li>\n  <li>填写此表单上的所有字段。虽然这些不是强制性的，但强烈建议使用它们。\n    <ul>\n      <li>输入新的存储库名称（例如，express-locallibrary-tutorial）和描述（例如“以 Express（node）编写的本地图书馆网站”）。</li>\n      <li>在 Add .gitignore 选择列表中选择 <strong>Node</strong>。</li>\n      <li>在添加许可证 <em>Add license</em> 选择列表中，选择您偏好的许可证。</li>\n      <li>点选 <strong>使用自述文件初始化此存储库</strong> “<strong>Initialize this repository with a README</strong>”</li>\n    </ul>\n  </li>\n  <li>按 <strong>Create repository</strong>.</li>\n  <li>单击新仓库页面上的绿色“克隆或下载”按钮 \"<strong>Clone or download</strong>\"。</li>\n  <li>从显示的对话框的文本字段，复制 URL 值（它应该类似于：<code>https://github.com/&lt;your_git_user_id&gt;/express-locallibrary-tutorial.git</code>）。</li>\n</ol>\n<p>现在创建了存储库（“repo”），我们将要在本地计算机上克隆它：</p>\n<ol>\n  <li>为您的本地计算机安装 git（您可以在<a href=\"https://git-scm.com/downloads\" class=\"external\" rel=\" noopener\">此处</a>找到不同平台的版本）。</li>\n  <li>打开命令提示符/终端，并使用您在上面复制的 URL，克隆 clone 存储库：\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> clone https://github.com/<span class=\"token operator\">&lt;</span>your_git_user_id<span class=\"token operator\">&gt;</span>/express-locallibrary-tutorial.git\n</code></pre></div>这将在当前时间点之后，创建存储库。\n  </li>\n  <li>到新的仓库。\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token builtin class-name\">cd</span> express-locallibrary-tutorial\n</code></pre></div>\n  </li>\n</ol>\n<p>最后一步，是复制你的应用程序，然后使用 git，将文件添加到你的仓库：</p>\n<ol>\n  <li>将 Express 应用程序，复制到此文件夹中（不包括**/node_modules**，其中包含您应根据需要，从 NPM 获取的依赖项文件）。</li>\n  <li>打开命令提示符/终端，并使用<code>add</code>命令，将所有文件添加到 git。</li>\n  <li>\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code> <span class=\"token function\">git</span> <span class=\"token function\">add</span> -A\n</code></pre></div>\n  </li>\n  <li>使用 status 命令，检查要添加的所有文件是否正确（您希望包含源文件，而不是二进制文件，临时文件等）。它应该看起来有点像下面的列表。\n    <div class=\"code-example\"><pre class=\"brush: plain notranslate\">&gt; git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges to be committed:\n  (use \"git reset HEAD &lt;file&gt;...\" to unstage)\n\n        new file:   ...\n</pre></div>\n  </li>\n  <li>如果您满意，请将文件提交到本地存储库：\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> commit -m <span class=\"token string\">\"First version of application moved into github\"</span>\n</code></pre></div>\n  </li>\n  <li>然后使用以下内容，将本地存储库同步到 Github 网站：\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> push origin master\n</code></pre></div>\n  </li>\n</ol>\n<p>完成此操作后，您应该可以返回创建存储库的 Github 上的页面，刷新页面，并查看您的整个应用程序现已上传。使用此添加/提交/推送循环，您可以在文件更改时，继续更新存储库。</p>\n<div class=\"notecard note\" id=\"sect11\">\n  <p><strong>备注：</strong> 这是备份你的“vanilla”项目的好时机 - 虽然我们将在以下部分中进行的一些更改，可能对任何平台（或开发）上的部署有用，而一些其他的更改可能没有用。</p>\n  <p>执行此操作的最佳方法，是使用 git 来管理您的修订。使用 git，您不仅可以回到特定的旧版本，而且可以在生产变更的单独“分支”中进行维护，并选择在生产和开发分支之间移动的任何更改。<a href=\"https://help.github.com/articles/good-resources-for-learning-git-and-github/\" class=\"external\" rel=\" noopener\">学习 Git</a>非常值得，但超出了本主题的范围。</p>\n  <p>最简单的方法，是将文件复制到另一个位置。使用最符合您对 git 了解的方法！</p>\n</div>"}},{"type":"prose","value":{"id":"更新_heroku_的应用程序","title":"更新 Heroku 的应用程序","isH3":true,"content":"<p>本节介绍了您需要对 LocalLibrary 应用程序进行的更改，以使其在 Heroku 上运行。</p>\n<h4 id=\"设置_node_版本\">设置 node 版本</h4>\n<p><strong>package.json</strong>包含解决应用程序依赖项所需的所有内容，以及启动站点时，应启动的文件。Heroku 检测到此文件的存在，并将使用它来配置您的应用程序环境。</p>\n<p>我们当前的<strong>package.json</strong>中，缺少的唯一有用信息，是 node 的版本。我们可以通过输入命令，找到我们用于开发的 node 版本：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token operator\">&gt;</span>node --version\nv8.9.1\n</code></pre></div>\n<p>打开<strong>package.json</strong>，并将此信息添加为<strong>engines &gt; node</strong> 部分，如图所示（使用系统的版本号）。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"express-locallibrary-tutorial\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"engines\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"8.9.1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"private\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  ...\n</code></pre></div>\n<h4 id=\"数据库配置\">数据库配置</h4>\n<p>到目前为止，在本教程中，我们使用了一个硬编码到<strong>app.js</strong>的单个数据库。通常我们希望，能够为生产和开发创建不同的数据库，接下来我们将修改 LocalLibrary 网站，以从 OS 环境获取数据库 URI（如果已定义），否则使用我们的开发数据库。</p>\n<p>打开<strong>app.js</strong>，并找到设置 mongoDB 连接变量的行。它看起来像这样：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> mongoDB <span class=\"token operator\">=</span> <span class=\"token string\">'mongodb://your_user_id:your_password@ds119748.mlab.com:19748/local_library'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>使用以下代码替换该行，该代码使用<code>process.env.MONGODB_URI</code>从名为<code>MONGODB_URI</code>的环境变量中，获取连接字符串（如果已设置）（使用您自己的数据库 URL，而不是下面的占位符。）</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> mongoDB <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MONGODB_URI</span> <span class=\"token operator\">||</span> <span class=\"token string\">'mongodb://your_user_id:your_password@ds119748.mlab.com:19748/local_library'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"安装依赖并重新测试\">安装依赖并重新测试</h4>\n<p>在我们继续之前，让我们再次测试该网站，并确保它不受我们的任何更改的影响。</p>\n<p>首先，我们需要获取我们的依赖项（你会记得，我们没有将 <strong>node_modules</strong>文件夹，复制到我们的 git 树中）。您可以通过在项目根目录的终端中，运行以下命令来执行此操作：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n</code></pre></div>\n<p>现在运行该站点（请参阅<a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/routes#testing_the_routes\">测试路由</a>的相关命令），并检查该站点，是否仍按预期运行。</p>\n<h4 id=\"将更改保存到_github\">将更改保存到 Github</h4>\n<p>接下来，让我们将所有更改保存到 Github。在终端中（在我们的存储库中），输入以下命令：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> <span class=\"token function\">add</span> -A\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Added files and changes required for deployment to heroku\"</span>\n<span class=\"token function\">git</span> push origin master\n</code></pre></div>\n<p>我们现在应该准备开始在 Heroku 上，部署 LocalLibrary。</p>"}},{"type":"prose","value":{"id":"获取一个_heroku_账户","title":"获取一个 Heroku 账户","isH3":true,"content":"<p>要开始使用 Heroku，您首先需要创建一个帐户（如果您已经拥有一个帐户，并安装了 Heroku 客户端，请跳过创建并上传网站）：</p>\n<ul>\n  <li>访问 <a href=\"https://www.heroku.com/\" class=\"external\" rel=\" noopener\">www.heroku.com</a> ，并单击免费注册按钮 <strong>SIGN UP FOR FREE</strong> 。</li>\n  <li>输入您的详细信息，然后按<strong>CREATE FREE ACCOUNT</strong>。系统会要求您，检查帐户中是否有注册电子邮件。</li>\n  <li>单击注册电子邮件中的帐户激活链接。您将在网络浏览器上收回您的帐户。</li>\n  <li>输入您的密码，然后单击 <strong>SET PASSWORD AND LOGIN</strong>.</li>\n  <li>然后，您将登录并进入 Heroku 仪表板：<a href=\"https://dashboard.heroku.com/apps\" class=\"external\" rel=\" noopener\">https://dashboard.heroku.com/apps</a>.</li>\n</ul>"}},{"type":"prose","value":{"id":"安装客户端","title":"安装客户端","isH3":true,"content":"<p>按照 <a href=\"https://devcenter.heroku.com/articles/getting-started-with-python#set-up\" class=\"external\" rel=\" noopener\">Heroku 上的说明</a>，下载并安装 Heroku 客户端。</p>\n<p>安装客户端后，您将能够运行命令。例如，要获得客户端的帮助说明：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>heroku <span class=\"token builtin class-name\">help</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"创建并上传网站","title":"创建并上传网站","isH3":true,"content":"<p>要创建应用程序，我们在存储库的根目录中，运行“create”命令。这将在我们的本地 git 环境中，创建一个名为 heroku 的 git remote（“指向远程存储库的指针”）。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>heroku create\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect12\">\n  <p><strong>备注：</strong> 如果您愿意，可以在“创建”create 之后指定远程存储库的命名。如果你不这样做，你会得到一个随机的名字。该名称用于默认 URL。</p>\n</div>\n<p>然后，我们可以将我们的应用程序，推送到 Heroku 存储库，如下所示。这将上传应用程序，获取所有依赖项，将其打包到 dyno 中，然后启动该站点。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> push heroku master\n</code></pre></div>\n<p>如果我们很幸运，该应用程序现在正在网站上“运行”。要打开浏览器并运行新网站，请使用以下命令：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>heroku <span class=\"token function\">open</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect13\">\n  <p><strong>备注：</strong> 该站点将使用我们的开发数据库运行。创建一些书本和其他对象，并检查该网站是否按预期运行。在下一节中，我们将其设置为使用我们的新数据库。</p>\n</div>"}},{"type":"prose","value":{"id":"设定配置变量","title":"设定配置变量","isH3":true,"content":"<p>您将从前一节回忆起，我们需要将 NODE_ENV 设置为'production'，以便提高性能，并生成更简洁的错误消息。我们通过输入以下命令，来完成此操作：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token operator\">&gt;</span>heroku config:set <span class=\"token assign-left variable\">NODE_ENV</span><span class=\"token operator\">=</span><span class=\"token string\">'production'</span>\nSetting NODE_ENV and restarting limitless-tor-18923<span class=\"token punctuation\">..</span>. done, v13\nNODE_ENV: production\n</code></pre></div>\n<p>我们还应该使用单独的数据库进行生产，在<strong>MONGODB_URI</strong>环境变量中，设置其 URI。您可以完全按照<a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/mongoose#setting_up_the_mongodb_database\">我们原来的方式</a>，设置新数据库和数据库用户，并获取其 URI。您可以如下图所示设置 URI（显然，要使用您自己的 URI！）</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token operator\">&gt;</span>heroku config:set <span class=\"token assign-left variable\">MONGODB_URI</span><span class=\"token operator\">=</span><span class=\"token string\">'mongodb://your_user:your_password@ds139278.mlab.com:39278/local_library_production'</span>\nSetting MONGODB_URI and restarting limitless-tor-18923<span class=\"token punctuation\">..</span>. done, v13\nMONGODB_URI: mongodb://your_user:your_password@ds139278.mlab.com:39278/local_library_production\n</code></pre></div>\n<p>您可以使用<code>heroku config</code>命令，随时检查配置变量 - 立即尝试：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token operator\">&gt;</span>heroku config\n<span class=\"token operator\">==</span><span class=\"token operator\">=</span> limitless-tor-18923 Config Vars\nMONGODB_URI: mongodb://your_user:your_password@ds139278.mlab.com:39278/local_library_production\nNODE_ENV:    production\n</code></pre></div>\n<p>Heroku 会在更新变量时，重新启动应用程序。如果您现在检查主页，它应该显示对象计数的零值，因为上面的更改，意味着我们现在正在使用新的（空）数据库。</p>"}},{"type":"prose","value":{"id":"管理附加组件","title":"管理附加组件","isH3":true,"content":"<p>Heroku 使用独立的附加组件，为应用程序提供支持服务 - 例如电子邮件或数据库服务。我们不在本网站中使用任何插件，但它们是使用 Heroku 的重要部分，因此您可能需要查看主题<a href=\"https://devcenter.heroku.com/articles/managing-add-ons\" class=\"external\" rel=\" noopener\">管理插件</a>（Heroku docs）。</p>"}},{"type":"prose","value":{"id":"调试","title":"调试","isH3":true,"content":"<p>Heroku 客户端提供了一些调试工具：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>heroku logs  <span class=\"token comment\"># Show current logs</span>\nheroku logs --tail <span class=\"token comment\"># Show current logs and keep updating with any new results</span>\nheroku <span class=\"token function\">ps</span>   <span class=\"token comment\">#Display dyno status</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"总结","title":"总结","isH3":false,"content":"<p>本教程介绍在生产环境中，如何配置 Express 应用。是 Express 系列教程的最后一个。我们希望你觉得这些教程有用。你可以在<a href=\"https://github.com/mdn/express-locallibrary-tutorial\" class=\"external\" rel=\" noopener\">Github 上取得完整的源码</a>。</p>"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li><a href=\"https://expressjs.com/en/advanced/best-practice-performance.html\" class=\"external\" rel=\" noopener\">Production best practices: performance and reliability</a> (Express docs)</li>\n  <li><a href=\"https://expressjs.com/en/advanced/best-practice-security.html\" class=\"external\" rel=\" noopener\">Production Best Practices: Security</a> (Express docs)</li>\n  <li>Heroku\n    <ul>\n      <li><a href=\"https://devcenter.heroku.com/articles/getting-started-with-nodejs\" class=\"external\" rel=\" noopener\">Getting Started on Heroku with Node.js</a> (Heroku docs)</li>\n      <li><a href=\"https://devcenter.heroku.com/articles/deploying-nodejs\" class=\"external\" rel=\" noopener\">Deploying Node.js Applications on Heroku</a> (Heroku docs)</li>\n      <li><a href=\"https://devcenter.heroku.com/articles/nodejs-support\" class=\"external\" rel=\" noopener\">Heroku Node.js Support</a> (Heroku docs)</li>\n      <li><a href=\"https://devcenter.heroku.com/articles/node-concurrency\" class=\"external\" rel=\" noopener\">Optimizing Node.js Application Concurrency</a> (Heroku docs)</li>\n      <li><a href=\"https://devcenter.heroku.com/articles/how-heroku-works\" class=\"external\" rel=\" noopener\">How Heroku works</a> (Heroku docs)</li>\n      <li><a href=\"https://devcenter.heroku.com/articles/dynos\" class=\"external\" rel=\" noopener\">Dynos and the Dyno Manager</a> (Heroku docs)</li>\n      <li><a href=\"https://devcenter.heroku.com/articles/config-vars\" class=\"external\" rel=\" noopener\">Configuration and Config Vars</a> (Heroku docs)</li>\n      <li><a href=\"https://devcenter.heroku.com/articles/limits\" class=\"external\" rel=\" noopener\">Limits</a> (Heroku docs)</li>\n    </ul>\n  </li>\n  <li>Digital Ocean\n    <ul>\n      <li><a href=\"https://www.digitalocean.com/community/tutorials?q=express\" class=\"external\" rel=\" noopener\">Express</a> tutorials</li>\n      <li><a href=\"https://www.digitalocean.com/community/tutorials?q=node.js\" class=\"external\" rel=\" noopener\">Node.js</a> tutorials</li>\n    </ul>\n  </li>\n</ul><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/forms\"> 上一页 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs\"> Overview: Express Nodejs</a></li>\n    \n</ul>"}},{"type":"prose","value":{"id":"本教程链接","title":"本教程链接","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node 介绍</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/development_environment\">架设 Node (Express) 开发环境</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express 教程：本地图书馆网站</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express 教程 2: 创建骨架网站</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express 教程 3: 使用数据库 (Mongoose)</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/routes\">Express 教程 4: 路由与控制器</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教程 5: 呈现图书馆数据</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/forms\">Express 教程 6: 使用表单</a></li>\n  <li><a href=\"/zh-CN/docs/Learn/Server-side/Express_Nodejs/deployment\" aria-current=\"page\">Express 教程 7: 部署到生产环境</a></li>\n</ul>"}}],"toc":[{"text":"概览","id":"概览"},{"text":"什么是生产环境？","id":"什么是生产环境？"},{"text":"选择一个主机供应商","id":"选择一个主机供应商"},{"text":"准备好发布你的网站","id":"准备好发布你的网站"},{"text":"例子：在 Heroku 上安装一个本地图书馆","id":"例子：在_heroku_上安装一个本地图书馆"},{"text":"总结","id":"总结"},{"text":"相关链接","id":"相关链接"},{"text":"本教程链接","id":"本教程链接"}],"summary":"现在你已经创建（并测试）了一个不错的 本地图书馆 网站了，你打算把它发布到一个公共网络服务器，这样图书馆职工和网络上的其他成员就可以访问它了。这篇文章总结了你可以怎样找到一台主机部署你的网站，以及你需要为站点准备到生产环境做什么。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Express Tutorial Part 7: Deploying to production","locale":"en-US","native":"English (US)"},{"title":"Express チュートリアル Part 7: プロダクションへのデプロイ","locale":"ja","native":"日本語"},{"title":"Express Tutorial Part 7: Deploying to production","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Express 教學 7: 佈署到生產環境","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/learn/server-side/express_nodejs/deployment","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/learn/server-side/express_nodejs/deployment/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Learn","title":"学习 Web 开发"},{"uri":"/zh-CN/docs/Learn/Server-side","title":"服务器端网页编程"},{"uri":"/zh-CN/docs/Learn/Server-side/Express_Nodejs","title":"Express Web Framework (Node.js/JavaScript)"},{"uri":"/zh-CN/docs/Learn/Server-side/Express_Nodejs/deployment","title":"Express 教程 7: 部署到生产环境"}],"pageTitle":"Express 教程 7: 部署到生产环境 - 学习 Web 开发 | MDN","noIndexing":false}}