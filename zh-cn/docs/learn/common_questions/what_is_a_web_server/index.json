{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"什么是网络服务器？","mdn_url":"/zh-CN/docs/Learn/Common_questions/What_is_a_web_server","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>在这篇文章中我们会重温什么是网络服务器，它们如何工作，以及为什么它们很重要。</p>\n<table class=\"learn-box standard-table\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">前提：</th>\n      <td>\n        你应该已经知道\n        <a href=\"/zh-CN/docs/Learn/Common_questions/How_does_the_Internet_work\">互联网是怎么工作的</a>，并且<a href=\"/zh-CN/docs/Learn/Common_questions/Pages_sites_servers_and_search_engines\">了解网页，网站，网络服务器和搜索引擎的区别是什么</a>\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">目标：</th>\n      <td>了解网络服务器，明白它大概的工作原理</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"概述","title":"概述","isH3":false,"content":"<p>“网络服务器（Web server）”可以代指硬件或软件，或者是它们协同工作的整体。</p>\n<ol>\n  <li>硬件部分，一个网络服务器是一台存储了网络服务软件以及网站的组成文件（比如，HTML 文档、图片、CSS 样式表和 JavaScript 文件）的计算机。它接入到互联网并且支持与其他连接到互联网的设备进行物理数据的交互。</li>\n  <li>软件部分，网络服务器包括控制网络用户如何访问托管文件的几个部分，至少他要是一台 HTTP 服务器。一台 HTTP 服务器是一种能够理解 URL（网络地址）和 HTTP（浏览器用来查看网页的协议）的软件。通过服务器上存储的网站的域名（比如 mozilla.org）可以访问这个服务器，并且他还可以将他的内容分发给最终用户的设备。</li>\n</ol>\n<p>基本上，当浏览器需要一个托管在网络服务器上的文件的时候，浏览器通过 HTTP 请求这个文件。当这个请求到达正确的网络服务器（硬件）时，HTTP 服务器（软件）收到这个请求，找到这个被请求的文档（如果这个文档不存在，那么将返回一个 404 响应），并把这个文档通过 HTTP 发送给浏览器。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Common_questions/What_is_a_web_server/web-server.svg\" alt=\"Basic representation of a client/server connection through HTTP\" width=\"600\" height=\"200\" loading=\"lazy\">\n</p>\n<p>要发布一个网站，你需要一个静态或动态的服务器。</p>\n<p>静态网络服务器（<strong>static web server</strong>），或者堆栈，由一个计算机（硬件）和一个 HTTP 服务器（软件）组成。我们称它为“静态”是因为这个服务器把它托管文件的“保持原样”地传送到你的浏览器。</p>\n<p>动态网络服务器（<strong>dynamic web server</strong>）由一个静态的网络服务器加上额外的软件组成，最普遍的是一个<em>应用服务器</em>和一个<em>数据库</em>。我们称它为“动态”是因为这个应用服务器会在通过 HTTP 服务器把托管文件传送到你的浏览器之前会对这些托管文件进行更新。</p>\n<p>举个例子，要生成你在浏览器中看到的最终网页，应用服务器或许会用一个数据库中的内容填充一个 HTML 模板。网站像 MDN 或者维基百科 [Wikipedia] 有成千上万的网页，但是它们不是真正的 HTML 文档，它们只是少数的 HTML 模板以及一个巨大的数据库。这样的设置让它更快更简单地维护以及分发内容。</p>"}},{"type":"prose","value":{"id":"自主学习","title":"自主学习","isH3":false,"content":"<p><em>还没有可用的资料。请考虑为此投稿 [<a href=\"/zh-CN/docs/MDN/Community/Contributing/Getting_started\">Please, consider contributing</a>]。</em></p>"}},{"type":"prose","value":{"id":"深入探索","title":"深入探索","isH3":false,"content":"<p>要取得一个网页，如同我们已经说过的那样，你的浏览器会发送一个请求到网络服务器，继而这个网络服务器会在它自己的存储空间中搜索所请求的文件。当找到这文件时，这个服务器会读取它，按需处理它，并且把它传送回浏览器。让我们更仔细地观察这些步骤。</p>"}},{"type":"prose","value":{"id":"托管文件","title":"托管文件","isH3":true,"content":"<p>一个网络服务器首先需要存储这个网站的文件，也就是说所有的 HTML 文档和它们的相关资源（related assets），包括图片，CSS 样式表，JavaScript 文件，字形（fonts）以及影像。</p>\n<p>严格来说，你可以在你自己的计算机上托管所有的这些文件，但是在一个专用的网络服务器上存储它们会方便得多，因为它</p>\n<ul>\n  <li>会一直启动和运行</li>\n  <li>会一直与互联网连接</li>\n  <li>会一直拥有一样的 IP 地址（不是所有的 <a href=\"/zh-CN/docs/Glossary/ISP\">ISP</a> 都会为家庭线提供一个固定的 IP 地址）</li>\n  <li>由一个第三方提供者维护</li>\n</ul>\n<p>因为所有的这些原因，寻找一个优秀的托管提供者是建立你的网站的一个重要部分。比较不同公司提供的服务并选择一个适合你的需求和预算的服务（服务的价格从免费到每月上万美金不等）。你可以在这篇文章（<a href=\"/zh-CN/docs/Learn/How_much_does_it_cost#hosting\">article</a>）中找到更多的细节。</p>\n<p>一旦你设置好一个网络托管解决方案，你只需要去<a href=\"/zh-CN/docs/Learn/Common_questions/Upload_files_to_a_web_server\">上传你的文件到你的 web 服务器</a>。</p>"}},{"type":"prose","value":{"id":"通过_http_交流","title":"通过 HTTP 交流","isH3":true,"content":"<p>第二点，一个网络服务器提供了 <a href=\"/zh-CN/docs/Glossary/HTTP\">HTTP</a>（超文本传输协议）支持。正如它的名字暗示，HTTP 明确提出了如何在两台计算机间传输超文本（比如说链接的网络文档（linked web documents））。</p>\n<p>一个*<a href=\"/zh-CN/docs/Glossary/Protocol\">协议</a>*是一套为了在两台计算机间交流而制定的规则。HTTP 是一个文本化的（textual），无状态的（stateless）协议。</p>\n<dl>\n  <dt id=\"文本化\">文本化</dt>\n  <dd>\n    <p>所有的命令都是纯文本的（plain-text）和人类可读的（human-readable）。</p>\n  </dd>\n  <dt id=\"无状态\">无状态</dt>\n  <dd>\n    <p>无论是服务器还是客户都不会记住之前的交流。举个例子，仅依靠 HTTP，一个服务器不能记住你输入的密码或者你正处于业务中的哪一步。你需要一个应用服务器来进行这样的工作。（我们会在日后的文章中涵盖这类的技术。）</p>\n  </dd>\n</dl>\n<p>HTTP 为客户和服务器间的如何沟通提供清晰的规则。我们会在日后的一篇<a href=\"/zh-CN/docs/Web/HTTP\">技术文章</a>中覆盖 HTTP 本身。就目前而言，只需要知道这几点：</p>\n<ul>\n  <li>只有<em>用户</em>可以制定 HTTP 请求，然后只会发送到<em>服务器</em>。服务器只能响应客户端的 HTTP 请求。</li>\n  <li>当通过 HTTP 请求一个文件时，客户必须提供这个文件的<a href=\"/zh-CN/docs/Glossary/URL\">URL</a>。</li>\n  <li>网络服务器<em>必须应答</em>每一个 HTTP 请求，至少也要回复一个错误信息。</li>\n</ul>\n<p><a href=\"/zh-CN/docs/Web/HTTP/Status/404\"><img src=\"/en-US/docs/Learn/Common_questions/What_is_a_web_server/mdn-404.jpg\" alt=\"The MDN 404 page as an example of such error page\" width=\"300\" height=\"300\" loading=\"lazy\"></a>在一个网络服务器上，HTTP 服务器负责处理和应答传入的请求。</p>\n<ol>\n  <li>当收到一个请求时，HTTP 服务器首先要检查所请求的 URL 是否与一个存在的文件相匹配。</li>\n  <li>如果是，网络服务器会传送文件内容回到浏览器。如果不是，一个应用服务器会建立必要的文件。</li>\n  <li>如果两种处理都不可能，网络服务器会返回一个错误信息到浏览器，最常见的是“404 未找到” [\"404 Not Found\"]。（这错误太常见以至于很多网页设计者花费许多时间去设计 404 错误页面 [<a href=\"http://www.404notfound.fr/\" class=\"external\" rel=\" noopener\">404 error pages</a>]。）</li>\n</ol>"}},{"type":"prose","value":{"id":"静态和动态内容","title":"静态和动态内容","isH3":true,"content":"<p>粗略地说，一个服务器可以提供静态或者动态的内容。“静态”意味着“保持原样地提供”。静态的网站是最容易建立的，所以我们建议你制作一个静态的网站作为你的第一个网站。</p>\n<p>“动态”意味着服务器会处理内容甚至实时地从一个数据库中产生它。这个解决方案提供了更多的灵活性，但是技术堆栈变得更难去处理，让建立网站更惊人地复杂。</p>\n<p>这里有太多的应用服务器，所以提供一个具体的服务器是挺难的。有些应用服务器迎合具体的网站类别，像是博客，百科或者电子商店；其他的应用服务器，叫做 <a href=\"/zh-CN/docs/Glossary/CMS\">CMSs</a>（内容管理系统 [content management systems]），则更加通用。如果你正在开发一个动态网站，请花一些时间去选择适合你需求的工具。除非你想要学习一些网络服务器编程 [web server programming]（而这本身就是一个令人兴奋的领域！），否则你不需要去创建你自己的应用服务器。这只是在<a href=\"https://zh.wikipedia.org/wiki/reinventing_the_wheel\" class=\"external\" rel=\" noopener\">重新创造轮子</a>。</p>"}},{"type":"prose","value":{"id":"下一步","title":"下一步","isH3":false,"content":"<p>现在您已熟悉了网络服务器，你可以</p>\n<ul>\n  <li>钻研<a href=\"/zh-CN/docs/Learn/Common_questions/How_much_does_it_cost\">在 web 上做某些事情要花费多少</a></li>\n  <li>学习关于<a href=\"/zh-CN/docs/Learn/Common_questions/What_software_do_I_need\">创建一个网页所需要的各种软件</a></li>\n  <li>移步到某些实用的东西，像是<a href=\"/zh-CN/docs/Learn/Common_questions/Upload_files_to_a_web_server\">如何上传文件到一个网页服务器</a>。</li>\n</ul>"}}],"toc":[{"text":"概述","id":"概述"},{"text":"自主学习","id":"自主学习"},{"text":"深入探索","id":"深入探索"},{"text":"下一步","id":"下一步"}],"summary":"在这篇文章中我们会重温什么是网络服务器，它们如何工作，以及为什么它们很重要。","popularity":0.0007,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"What is a web server?","locale":"en-US","native":"English (US)"},{"title":"Que es un servidor WEB?","locale":"es","native":"Español"},{"title":"Qu'est-ce qu'un serveur web ?","locale":"fr","native":"Français"},{"title":"ウェブサーバーとは？","locale":"ja","native":"日本語"},{"title":"웹 서버란 무엇일까?","locale":"ko","native":"한국어"},{"title":"O que é um servidor web (web server)?","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Что такое веб-сервер","locale":"ru","native":"Русский"},{"title":"何謂網路伺服器？","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/learn/common_questions/what_is_a_web_server","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/learn/common_questions/what_is_a_web_server/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Learn","title":"学习 Web 开发"},{"uri":"/zh-CN/docs/Learn/Common_questions","title":"常见问题"},{"uri":"/zh-CN/docs/Learn/Common_questions/What_is_a_web_server","title":"什么是网络服务器？"}],"pageTitle":"什么是网络服务器？ - 学习 Web 开发 | MDN","noIndexing":false}}