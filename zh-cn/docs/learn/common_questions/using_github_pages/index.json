{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"应该如何使用 Github Pages?","mdn_url":"/zh-CN/docs/Learn/Common_questions/Using_Github_pages","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"https://github.com/\" class=\"external\" rel=\" noopener\">GitHub</a>是一个“公共编码”网站。它允许您上传代码存储库并存储在 <a href=\"http://git-scm.com/\" class=\"external\" rel=\" noopener\">Git</a> 版本控制系统上。然后，您可以在代码项目上进行协作，默认情况下系统是开源的，这意味着世界上任何人都可以找到您的 GitHub 代码，使用它，从中学习，并改进它。同样的，对于其他人的代码您也可以这么做！本文提供了一个基本的指南，即使用 Github 的 gh-pages 功能发布内容。</p>"}},{"type":"prose","value":{"id":"发布内容","title":"发布内容","isH3":false,"content":"<p>GitHub 是一个非常重要和有用的社区，值得参与其中，Git / GitHub 也是一个非常受欢迎的<a href=\"http://git-scm.com/book/en/v2/Getting-Started-About-Version-Control\" class=\"external\" rel=\" noopener\">版本控制系统</a> - 现在大多数科技公司在其工作流程中使用它。GitHub 有一个非常有用的功能，称为<a href=\"https://pages.github.com/\" class=\"external\" rel=\" noopener\">GitHub Pages</a>，它允许您在 Web 上实时发布网站代码。</p>"}},{"type":"prose","value":{"id":"基本_github_设置","title":"基本 Github 设置","isH3":true,"content":"<ol>\n  <li>首先，在您的机器上<a href=\"http://git-scm.com/downloads\" class=\"external\" rel=\" noopener\">安装 Git</a>。这是 GitHub 工作的底层版本控制系统软件。</li>\n  <li>接下来，<a href=\"https://github.com/join\" class=\"external\" rel=\" noopener\">注册一个 GitHub 帐户</a>。这很简单易操作。</li>\n  <li>注册后，用您的用户名和密码登录<a href=\"https://github.com/\" class=\"external\" rel=\" noopener\">github.com</a>。</li>\n</ol>"}},{"type":"prose","value":{"id":"准备上传代码","title":"准备上传代码","isH3":true,"content":"<p>您可以将任何您喜欢的代码存储在 Github 资源库中，但要使用 GitHub Pages 功能实现全面效果，您的代码应该被构造为典型的网站，例如主入口点是一个名为 index.html 的 HTML 文件。</p>\n<p>第一步，您需要做的另一件事是将您的代码目录初始化为 Git 存储库。按照下述步骤：</p>\n<ol>\n  <li>将命令行指向您的 test-site 目录（或者任何一个您能调用的包含有您的网站的目录）。为此，请使用 cd 命令（即“更改目录”）。如果您已经将您的网站放到了位于桌面上的 test-site 目录中，则可以输入以下内容：\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token builtin class-name\">cd</span> Desktop/test-site\n</code></pre></div>\n  </li>\n  <li>当命令行指向您的网站所在目录时，键入以下命令，该命令告诉 git 工具将目录转换为 git 仓库：\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> init\n</code></pre></div>\n  </li>\n</ol>\n<h4 id=\"命令行界面\">命令行界面</h4>\n<p>将代码上传到 Github 的最佳方法是通过命令行 - 这是一个窗口，您可以在其中输入命令来执行诸如创建文件和运行程序等操作，而不是在用户界面内单击。它看起来像这样：</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Common_questions/Using_Github_pages/command-line.png\" alt=\"\" width=\"697\" height=\"478\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 您也可以考虑使用<a href=\"http://git-scm.com/downloads/guis\" class=\"external\" rel=\" noopener\">Git 图形用户界面</a>来执行相同的工作，如果您不熟悉命令行。</p>\n</div>\n<p>每个操作系统都附带有一个命令行工具：</p>\n<ul>\n  <li><strong>Windows</strong>: 可以通过按 Windows 键，键入<strong>命令提示符</strong>，并从出现的列表中选择命令提示符。请注意，Windows 具有与 Linux 和 OS X 不同的命令约定，因此以下命令可能因您的机器而异。</li>\n  <li><strong>OS X</strong>: <strong>终端</strong>可以在应用程序&gt;实用程序中找到。</li>\n  <li><strong>Linux</strong>: 通常你可以用 Ctrl + Alt + T 启动一个终端。如果不行，请在应用程序栏或菜单中查找<strong>Terminal</strong>。</li>\n</ul>\n<p>起初这可能看起来有点吓人，但不要担心 - 你很快就会得到基本的窍门。您可以通过键入命令并按 Enter 键来告诉计算机在终端中执行某些操作，如上所示。</p>"}},{"type":"prose","value":{"id":"为您的代码创建一个仓库","title":"为您的代码创建一个仓库","isH3":true,"content":"<ol>\n  <li>接下来，您需要为您的文件创建一个新的仓库。单击 GitHub 主页右上角的加号（+），然后选择“<em>New Repository</em>”。</li>\n  <li>在此页面的“<em>Repository name</em>”框中，为您的代码库起一个名字，例如：<em>my-repository</em>。</li>\n  <li>\n    还要填写一个描述来说明您的存储库将包含哪些内容。你的屏幕应该是这样的\n    \n    <img src=\"/en-US/docs/Learn/Common_questions/Using_Github_pages/create-new-repo.png\" alt=\"\" width=\"800\" height=\"548\" loading=\"lazy\">\n  </li>\n  <li>\n    单击<em>Create repository</em>;您将会看到如下页面：\n    \n    <img src=\"/en-US/docs/Learn/Common_questions/Using_Github_pages/github-repo.png\" alt=\"\" width=\"800\" height=\"520\" loading=\"lazy\">\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"将您的文件上传到_github","title":"将您的文件上传到 GitHub","isH3":true,"content":"<ol>\n  <li>在当前页面上，您可能对本节的这部分感兴趣“<strong><em>…or push an existing repository from the command line</em></strong>（或者从命令行推送一个现有存储库）”。您应该看到本节中列出的两行代码。复制整个第一行，将其粘贴到命令行中，然后按 Enter 键。命令应该看起来像是这样的：\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin https://github.com/chrisdavidmills/my-repository.git\n</code></pre></div>\n  </li>\n  <li>接下来，键入以下两个命令，每个命令之后按 Enter。这些指令将会把代码上传到 GitHub，并要求 Git 管理这些文件。\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> <span class=\"token function\">add</span> --all\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">'adding my files to my repository'</span>\n</code></pre></div>\n  </li>\n  <li>最后，将代码推送到 GitHub，通过您正在访问的 GitHub 网页，然后输入我们看到的两个命令中的第二个命令“ <strong>…or push an existing repository from the command line</strong>（或从命令行部分推入现有存储库）部分”：\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> push -u origin master\n</code></pre></div>\n  </li>\n  <li>\n    现在你需要为你的仓库创建一个 gh-pages 分支;刷新当前页面，您将看到一个类似下面的存储库页面。您需要点击<strong>Branch：master</strong>按钮，在文本输入框中输入 gh-pages，然后按蓝色按钮，即创建分支**<em>Create branch: gh-pages</em>**。这将创建一个特殊的代码分支，称为 gh-pages，该分支会在特殊位置发布。它的 URL 采用 <code>https://username.github.io/my-repository-name</code> 的格式，所以在我的例子中，URL 是 <code>https://chrisdavidmills.github.io/my-repository</code>。显示的页面是 index.html 页面。\n    \n    <img src=\"https://mdn.mozillademos.org/files/12145/repo-site.png\" alt=\"\" loading=\"lazy\">\n  </li>\n  <li>在新的浏览器标签中浏览您的 GitHub Pages 的网址，您将能够在线访问您的网站！通过电子邮件把地址发送给你的朋友，炫耀你的掌握的成果吧。</li>\n</ol>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 如果卡住了，<a href=\"https://pages.github.com/\" class=\"external\" rel=\" noopener\">GitHub Pages 主页</a>也是非常有帮助的。</p>\n</div>"}},{"type":"prose","value":{"id":"更多的_github_知识","title":"更多的 GitHub 知识","isH3":true,"content":"<p>如果您想对 test-site 进行更多更改并将其上传到 GitHub，那么您只需像以前一样对文件进行更改。然后，您需要输入以下命令（在每个之后按 Enter 键）将这些更改推送到 GitHub：</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> <span class=\"token function\">add</span> --all\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">'another commit'</span>\n<span class=\"token function\">git</span> push\n</code></pre></div>\n<p>您可以使用更合适的消息替换上一次的提交信息，以描述您刚刚做出的更改。</p>\n<p>我们仅仅提供了 Git 的浅显基本的信息。要了解更多信息，请先从<a href=\"https://help.github.com/index.html\" class=\"external\" rel=\" noopener\">GitHub 帮助站点</a>开始。</p>"}}],"toc":[{"text":"发布内容","id":"发布内容"}],"summary":"GitHub是一个“公共编码”网站。它允许您上传代码存储库并存储在 Git 版本控制系统上。然后，您可以在代码项目上进行协作，默认情况下系统是开源的，这意味着世界上任何人都可以找到您的 GitHub 代码，使用它，从中学习，并改进它。同样的，对于其他人的代码您也可以这么做！本文提供了一个基本的指南，即使用 Github 的 gh-pages 功能发布内容。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"How do I use GitHub Pages?","locale":"en-US","native":"English (US)"},{"title":"¿Cómo se utiliza Github pages?","locale":"es","native":"Español"},{"title":"Utiliser les pages GitHub","locale":"fr","native":"Français"},{"title":"GitHub Pages を使うには？","locale":"ja","native":"日本語"},{"title":"How do I use GitHub Pages?","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Как использовать GitHub Pages?","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/learn/common_questions/using_github_pages","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/learn/common_questions/using_github_pages/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Learn","title":"学习 Web 开发"},{"uri":"/zh-CN/docs/Learn/Common_questions","title":"常见问题"},{"uri":"/zh-CN/docs/Learn/Common_questions/Using_Github_pages","title":"应该如何使用 Github Pages?"}],"pageTitle":"应该如何使用 Github Pages? - 学习 Web 开发 | MDN","noIndexing":false}}