{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"控制流","mdn_url":"/zh-CN/docs/Glossary/Control_flow","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><em>控制流</em> 是计算机执行一个程序中语句的顺序。</p>\n<p>程序会从第一行代码开始执行直至最后一行，除非遇到（实际中是非常普遍地）改变控制流的代码结构，比如条件语句和循环。</p>\n<p>比如，下面的程序被用来校验用户在网页上输入的数据。数据经过校验后会被提交，但当用户没有输入任何数据时 (field==empty)，这个程序会提醒用户去填入数据。为了做到这一点，这个程序使用了 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Conditional\">条件 <small>(en-US)</small></a> 结构 <code>if...else</code>，这样就可以根据数据是否被填充而执行不同的代码。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field <span class=\"token operator\">==</span> empty<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">promptUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">submitForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>在 <a href=\"/zh-CN/docs/Glossary/JavaScript\">JavaScript</a> 或者 <a href=\"/zh-CN/docs/Glossary/PHP\">PHP</a> 中存在许多控制结构，比如条件语句、循环和函数。还有部分语句可能被设定为当 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/event\">事件 <small>(en-US)</small></a> 发生的时候才执行。</p>\n<p>例如，上面的代码可能被放入一个函数，而这个函数只有在用户点击了表单的<strong>提交</strong>按钮时才执行。而这个函数也可以再包含一个循环，来达到按照顺序遍历表单中的所有数据的目的。往回看 <code>if...else</code> 代码块，<code>promptUser</code> 和 <code>submitForm</code> 也可以是对其他函数的调用。如你所见，控制结构依靠几行代码就能完成复杂的处理过程。</p>\n<p>控制流的存在意味着在读代码时，你不能只从第一行读到最后一行，你还要注意代码的结构以及它对语句执行顺序的影响。</p>"}},{"type":"prose","value":{"id":"learn_more","title":"Learn more","isH3":false,"content":""}},{"type":"prose","value":{"id":"general_knowledge","title":"General knowledge","isH3":true,"content":"<ul>\n  <li><a href=\"https://zh.wikipedia.org/wiki/Control_flow\" class=\"external\" rel=\" noopener\">Control flow</a> on Wikipedia</li>\n</ul>"}},{"type":"prose","value":{"id":"technical_reference","title":"Technical reference","isH3":true,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference#control_flow\">JavaScript Reference - Control flow</a> on MDN</li>\n</ul>"}},{"type":"prose","value":{"id":"learn_about_it","title":"Learn about it","isH3":true,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">Statements (Control flow)</a> on MDN</li>\n</ul>"}}],"toc":[{"text":"Learn more","id":"learn_more"}],"summary":"控制流 是计算机执行一个程序中语句的顺序。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Control flow","locale":"en-US","native":"English (US)"},{"title":"Structure de contrôle","locale":"fr","native":"Français"},{"title":"Control flow (制御フロー)","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/glossary/control_flow","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/glossary/control_flow/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Glossary","title":"术语表"},{"uri":"/zh-CN/docs/Glossary/Control_flow","title":"控制流"}],"pageTitle":"控制流 - 术语表 | MDN","noIndexing":false}}