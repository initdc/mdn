{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"安全（HTTP 方法）","mdn_url":"/zh-CN/docs/Glossary/Safe/HTTP","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>如果说一个 HTTP 方法是<code>安全</code>的，是指这是个不会修改服务器的数据的方法。也就是说，这是一个对服务器只读操作的方法。这些方法是安全的：<a href=\"/zh-CN/docs/Web/HTTP/Methods/GET\"><code>GET</code></a>，<a href=\"/zh-CN/docs/Web/HTTP/Methods/HEAD\"><code>HEAD</code></a> 和 <a href=\"/zh-CN/docs/Web/HTTP/Methods/OPTIONS\"><code>OPTIONS</code></a>。所有安全的方法都是<a href=\"/zh-CN/docs/Glossary/Idempotent\">幂等</a>的，但并非所有幂等方法都是安全的，例如，<a href=\"/zh-CN/docs/Web/HTTP/Methods/PUT\"><code>PUT</code></a> 和 <a href=\"/zh-CN/docs/Web/HTTP/Methods/DELETE\"><code>DELETE</code></a> 都是幂等的，但不是安全的。</p>\n<p>就算方法具有只读的语义，服务器也能更改它自己的数据，比如：记录这次请求的日志或者数据分析。安不安全的定义是这个方法需不需要服务器修改数据。客户端不需要服务端修改数据，也就不会给服务端造成不必要的负担。浏览器调用安全的方法不用考虑会给服务端造成什么危害，这样，服务端就能允许客户端预加载资源。网络爬虫也是依赖于安全的 HTTP 方法。</p>\n<p>安全的方法并不意味着只是对服务端的静态文件的请求，服务端可以在请求的时候即时生成资源返回，只要生成资源的脚本保证是安全的即可：也就是说生成资源的时候没有额外的影响。就像在一个电商网站添加删除购物车里的物品一样。</p>\n<p>服务端有正确响应安全请求动作的义务，但是像 Apache、nginx 和 IIS，并没有关于此项的强制规定。再次强调，任何应用都不应让 <a href=\"/zh-CN/docs/Web/HTTP/Methods/GET\"><code>GET</code></a> 请求修改服务端的状态（数据）。</p>\n<p>安全的请求，不会改变服务端的状态（数据）：</p>\n<pre class=\"notranslate\">GET /pageX.html HTTP/1.1\n</pre>\n<p>非安全的请求方式，可能会引起服务端状态的改变：</p>\n<pre class=\"notranslate\">POST /pageX.html HTTP/1.1\n</pre>\n<p>一个幂等（idempotent）但是不安全的方法：</p>\n<pre class=\"notranslate\">DELETE /idX/delete HTTP/1.1\n</pre>"}},{"type":"prose","value":{"id":"更多","title":"更多","isH3":false,"content":""}},{"type":"prose","value":{"id":"一般了解","title":"一般了解","isH3":true,"content":"<ul>\n  <li>HTTP 规范中的 <a href=\"https://tools.ietf.org/html/rfc7231#section-4.2.1\" class=\"external\" rel=\" noopener\">安全</a> 定义。</li>\n</ul>"}},{"type":"prose","value":{"id":"技术规范","title":"技术规范","isH3":true,"content":"<ul>\n  <li>安全方法的详细解释：<a href=\"/zh-CN/docs/Web/HTTP/Methods/GET\"><code>GET</code></a>, <a href=\"/zh-CN/docs/Web/HTTP/Methods/HEAD\"><code>HEAD</code></a>, <a href=\"/zh-CN/docs/Web/HTTP/Methods/OPTIONS\"><code>OPTIONS</code></a></li>\n  <li>非安全方法的详细解释：<a href=\"/zh-CN/docs/Web/HTTP/Methods/PUT\"><code>PUT</code></a>, <a href=\"/zh-CN/docs/Web/HTTP/Methods/DELETE\"><code>DELETE</code></a>, <a href=\"/zh-CN/docs/Web/HTTP/Methods/POST\"><code>POST</code></a></li>\n</ul>"}}],"toc":[{"text":"更多","id":"更多"}],"summary":"如果说一个 HTTP 方法是安全的，是指这是个不会修改服务器的数据的方法。也就是说，这是一个对服务器只读操作的方法。这些方法是安全的：GET，HEAD 和 OPTIONS。所有安全的方法都是幂等的，但并非所有幂等方法都是安全的，例如，PUT 和 DELETE 都是幂等的，但不是安全的。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Safe (HTTP Methods)","locale":"en-US","native":"English (US)"},{"title":"Safe (安全) (HTTP メソッド)","locale":"ja","native":"日本語"},{"title":"안전함 (HTTP 메서드)","locale":"ko","native":"한국어"}],"source":{"folder":"zh-cn/glossary/safe/http","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/glossary/safe/http/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Glossary","title":"术语表"},{"uri":"/zh-CN/docs/Glossary/Safe","title":"Safe（安全）"},{"uri":"/zh-CN/docs/Glossary/Safe/HTTP","title":"安全（HTTP 方法）"}],"pageTitle":"安全（HTTP 方法） - 术语表 | MDN","noIndexing":false}}