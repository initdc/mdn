{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"幂等","mdn_url":"/zh-CN/docs/Glossary/Idempotent","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>一个 HTTP 方法是<strong>幂等</strong>的，指的是同样的请求被执行一次与连续执行多次的效果是一样的，服务器的状态也是一样的。换句话说就是，幂等方法不应该具有副作用（统计用途除外）。在正确实现的条件下， <a href=\"/zh-CN/docs/Web/HTTP/Methods/GET\"><code>GET</code></a> ， <a href=\"/zh-CN/docs/Web/HTTP/Methods/HEAD\"><code>HEAD</code></a> ， <a href=\"/zh-CN/docs/Web/HTTP/Methods/PUT\"><code>PUT</code></a> 和 <a href=\"/zh-CN/docs/Web/HTTP/Methods/DELETE\"><code>DELETE</code></a> 等方法都是<strong>幂等</strong>的，而 <a href=\"/zh-CN/docs/Web/HTTP/Methods/POST\"><code>POST</code></a> 方法不是。所有的 <a href=\"/zh-CN/docs/Glossary/Safe\">safe</a> 方法也都是幂等的。</p>\n<p>幂等性只与后端服务器的实际状态有关，而每一次请求接收到的状态码不一定相同。例如，第一次调用 <a href=\"/zh-CN/docs/Web/HTTP/Methods/DELETE\"><code>DELETE</code></a> 方法有可能返回 <a href=\"/zh-CN/docs/Web/HTTP/Status/200\"><code>200</code></a> ，但是后续的请求可能会返回 <a href=\"/zh-CN/docs/Web/HTTP/Status/404\"><code>404</code></a> 。 <a href=\"/zh-CN/docs/Web/HTTP/Methods/DELETE\"><code>DELETE</code></a> 的言外之意是，开发者不应该使用 <code>DELETE</code> 法实现具有删除最后条目功能的 RESTful API。</p>\n<p>需要注意的是，服务器不一定会确保请求方法的幂等性，有些应用可能会错误地打破幂等性约束。</p>\n<p><code>GET /pageX HTTP/1.1</code> 幂等的。连续调用多次，客户端接收到的结果都是一样的：</p>\n<pre class=\"notranslate\">GET /pageX HTTP/1.1\nGET /pageX HTTP/1.1\nGET /pageX HTTP/1.1\nGET /pageX HTTP/1.1\n</pre>\n<p><code>POST /add_row HTTP/1.1</code> 不是幂等的。如果调用多次，就会增加多行记录：</p>\n<pre class=\"notranslate\">POST /add_row HTTP/1.1\nPOST /add_row HTTP/1.1   -&gt; Adds a 2nd row\nPOST /add_row HTTP/1.1   -&gt; Adds a 3rd row\n</pre>\n<p><code>DELETE /idX/delete HTTP/1.1</code> 是幂等的，即便是不同请求之间接收到的状态码不一样：</p>\n<pre class=\"notranslate\">DELETE /idX/delete HTTP/1.1   -&gt; Returns 200 if idX exists\nDELETE /idX/delete HTTP/1.1   -&gt; Returns 404 as it just got deleted\nDELETE /idX/delete HTTP/1.1   -&gt; Returns 404\n</pre>"}},{"type":"prose","value":{"id":"了解更多","title":"了解更多","isH3":false,"content":""}},{"type":"prose","value":{"id":"基本知识","title":"基本知识","isH3":true,"content":"<ul>\n  <li>在 HTTP 协议中<a href=\"https://tools.ietf.org/html/rfc7231#section-4.2.2\" class=\"external\" rel=\" noopener\">幂等</a>的定义。</li>\n</ul>"}},{"type":"prose","value":{"id":"技术知识","title":"技术知识","isH3":true,"content":"<ul>\n  <li>常见的幂等方法： <a href=\"/zh-CN/docs/Web/HTTP/Methods/GET\"><code>GET</code></a> ， <a href=\"/zh-CN/docs/Web/HTTP/Methods/HEAD\"><code>HEAD</code></a> , <a href=\"/zh-CN/docs/Web/HTTP/Methods/PUT\"><code>PUT</code></a> ， <a href=\"/zh-CN/docs/Web/HTTP/Methods/DELETE\"><code>DELETE</code></a> ， <a href=\"/zh-CN/docs/Web/HTTP/Methods/OPTIONS\"><code>OPTIONS</code></a></li>\n  <li>常见的非幂等方法： <a href=\"/zh-CN/docs/Web/HTTP/Methods/POST\"><code>POST</code></a></li>\n</ul>"}}],"toc":[{"text":"了解更多","id":"了解更多"}],"summary":"一个 HTTP 方法是幂等的，指的是同样的请求被执行一次与连续执行多次的效果是一样的，服务器的状态也是一样的。换句话说就是，幂等方法不应该具有副作用（统计用途除外）。在正确实现的条件下， GET ， HEAD ， PUT 和 DELETE 等方法都是幂等的，而 POST 方法不是。所有的 safe 方法也都是幂等的。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Idempotent","locale":"en-US","native":"English (US)"},{"title":"Idempotente","locale":"fr","native":"Français"},{"title":"Idempotent (べき等)","locale":"ja","native":"日本語"},{"title":"멱등성","locale":"ko","native":"한국어"},{"title":"Idempotente","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Идемпотентный метод","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/glossary/idempotent","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/glossary/idempotent/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Glossary","title":"术语表"},{"uri":"/zh-CN/docs/Glossary/Idempotent","title":"幂等"}],"pageTitle":"幂等 - 术语表 | MDN","noIndexing":false}}