{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"浏览器引擎前缀","mdn_url":"/zh-CN/docs/Glossary/Vendor_Prefix","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>浏览器厂商们有时会给实验性的或者非标准的 CSS 属性和 JavaScript API 添加前缀，这样开发者就可以用这些新的特性进行试验，同时（理论上）防止他们的试验代码被依赖，从而在标准化过程中破坏 web 开发者的代码。开发者应该等到浏览器行为标准化之后再使用未加前缀的属性。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 浏览器厂商们正在努力停止使用前缀来表示实验性质的代码的行为。Web 开发者一直在生产环境的网站上使用这些实验性代码，这使得浏览器厂商更难保证浏览器兼容性和处理新特性；这也伤害了更小众的浏览器，它们被迫添加其他浏览器前缀以加载热门网站。</p>\n  <p>现在的趋势是将实验性功能添加在需要用户自行设置偏好或标记（flag）的地方，同时编写一个更小规模的规范，以更快达到稳定状态。</p>\n</div>"}},{"type":"prose","value":{"id":"css_前缀","title":"CSS 前缀","isH3":false,"content":"<p>主流浏览器引擎前缀：</p>\n<ul>\n  <li><code>-webkit-</code> （谷歌，Safari，新版 Opera 浏览器，以及几乎所有 iOS 系统中的浏览器（包括 iOS 系统中的火狐浏览器）；基本上所有基于 WebKit 内核的浏览器）</li>\n  <li><code>-moz-</code> （火狐浏览器）</li>\n  <li><code>-o-</code> （旧版 Opera 浏览器）</li>\n  <li><code>-ms-</code> （IE 浏览器 和 Edge 浏览器）</li>\n</ul>\n<p>示例：</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token property\">-webkit-transition</span><span class=\"token punctuation\">:</span> all 4s ease<span class=\"token punctuation\">;</span>\n<span class=\"token property\">-moz-transition</span><span class=\"token punctuation\">:</span> all 4s ease<span class=\"token punctuation\">;</span>\n<span class=\"token property\">-ms-transition</span><span class=\"token punctuation\">:</span> all 4s ease<span class=\"token punctuation\">;</span>\n<span class=\"token property\">-o-transition</span><span class=\"token punctuation\">:</span> all 4s ease<span class=\"token punctuation\">;</span>\n<span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> all 4s ease<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"api_前缀","title":"API 前缀","isH3":false,"content":"<p>过去，浏览器引擎也使用前缀修饰实验性质的 API。如果整个接口都是实验性的，前缀修饰的就是接口名（但不包括其中的属性或者方法）。如果将一个实验性的接口或者方法添加到一个标准化的接口中，这个新增的接口或者方法被前缀修饰。</p>"}},{"type":"prose","value":{"id":"接口前缀","title":"接口前缀","isH3":true,"content":"<p>需要使用大写的前缀修饰接口名：</p>\n<ul>\n  <li><code>WebKit</code> (谷歌，Safari, 新版 Opera 浏览器，以及几乎所有 iOS 系统中的浏览器 (包括 iOS 系统中的火狐浏览器); 简单的说，所有基于 WebKit 内核的浏览器)</li>\n  <li><code>Moz</code> (火狐浏览器)</li>\n  <li><code>O</code> (旧版 Opera 浏览器)</li>\n  <li><code>MS</code> (IE 浏览器 和 Edge 浏览器)</li>\n</ul>"}},{"type":"prose","value":{"id":"属性和方法前缀","title":"属性和方法前缀","isH3":true,"content":"<p>需要使用小写的前缀修饰属性或者方法</p>\n<ul>\n  <li><code>webkit</code> (谷歌，Safari, 新版 Opera 浏览器，以及几乎所有 iOS 系统中的浏览器 (包括 iOS 系统中的火狐浏览器); 简单的说，所有基于 WebKit 内核的浏览器)</li>\n  <li><code>moz</code> (火狐浏览器)</li>\n  <li><code>o</code> (旧版 Opera 浏览器等</li>\n  <li><code>ms</code> (IE 浏览器 和 Edge 浏览器)</li>\n</ul>\n<p>示例：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> requestAnimationFrame <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>requestAnimationFrame <span class=\"token operator\">||</span>\n                            window<span class=\"token punctuation\">.</span>mozRequestAnimationFrame <span class=\"token operator\">||</span>\n                            window<span class=\"token punctuation\">.</span>webkitRequestAnimationFrame <span class=\"token operator\">||</span>\n                            window<span class=\"token punctuation\">.</span>oRequestAnimationFrame <span class=\"token operator\">||</span>\n                            window<span class=\"token punctuation\">.</span>msRequestAnimationFrame<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"了解更多","title":"了解更多","isH3":false,"content":""}},{"type":"prose","value":{"id":"基础知识","title":"基础知识","isH3":true,"content":"<ul>\n  <li>维基百科<a href=\"https://zh.wikipedia.org/wiki/CSS_hack#Browser_prefixes\" class=\"external\" rel=\" noopener\">浏览器引擎前缀（Vendor prefix）</a></li>\n</ul>"}}],"toc":[{"text":"CSS 前缀","id":"css_前缀"},{"text":"API 前缀","id":"api_前缀"},{"text":"了解更多","id":"了解更多"}],"summary":"浏览器厂商们有时会给实验性的或者非标准的 CSS 属性和 JavaScript API 添加前缀，这样开发者就可以用这些新的特性进行试验，同时（理论上）防止他们的试验代码被依赖，从而在标准化过程中破坏 web 开发者的代码。开发者应该等到浏览器行为标准化之后再使用未加前缀的属性。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Vendor Prefix","locale":"en-US","native":"English (US)"},{"title":"Vendor Prefix","locale":"es","native":"Español"},{"title":"Préfixe vendeur","locale":"fr","native":"Français"},{"title":"Vendor Prefix (ベンダー接頭辞)","locale":"ja","native":"日本語"},{"title":"Prefixos vendor","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Vendor Prefix","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/glossary/vendor_prefix","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/glossary/vendor_prefix/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Glossary","title":"术语表"},{"uri":"/zh-CN/docs/Glossary/Vendor_Prefix","title":"浏览器引擎前缀"}],"pageTitle":"浏览器引擎前缀 - 术语表 | MDN","noIndexing":false}}