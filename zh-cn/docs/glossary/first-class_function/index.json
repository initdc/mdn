{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"First-class Function（头等函数）","mdn_url":"/zh-CN/docs/Glossary/First-class_Function","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>当一门编程语言的函数可以被当作变量一样用时，则称这门语言拥有<strong>头等函数</strong>。例如，在这门语言中，函数可以被当作参数传递给其他函数，可以作为另一个函数的返回值，还可以被赋值给一个变量。</p>"}},{"type":"prose","value":{"id":"示例_把函数赋值给变量","title":"示例 | 把函数赋值给变量","isH3":false,"content":""}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">foo</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foobar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 用变量来调用它</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>这里我们把一个匿名函数赋值给一个<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Variable\">变量 <small>(en-US)</small></a>，然后我们在这个变量后面加上一对圆括号 <code>()</code> 来调用这个函数。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 即使你的函数有自己的函数名称，你仍然可以用这个变量名去调用它。给函数命名只会方便你调试，但不会影响我们调用它。</p>\n</div>"}},{"type":"prose","value":{"id":"示例_传递一个函数作为参数","title":"示例 | 传递一个函数作为参数","isH3":false,"content":""}},{"type":"prose","value":{"id":"javascript_2","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello, \"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">helloMessage<span class=\"token punctuation\">,</span> name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">helloMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 传递 `sayHello` 作为 `greeting` 函数的参数</span>\n<span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span>sayHello<span class=\"token punctuation\">,</span> <span class=\"token string\">\"JavaScript!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello, JavaScript!</span>\n</code></pre></div>\n<p>这里我们传递 <code>sayHello()</code> 函数作为 <code>greeting()</code> 函数的参数，这就印证了头等函数定义所说的——我们把函数当作<strong>值</strong>或者说是<strong>变量</strong>来对待。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 回调函数：我们把一个函数作为参数传递给另外一个函数，那么我们就称这个函数为回调函数。<code>sayHello()</code> 函数就是一个回调函数。</p>\n</div>"}},{"type":"prose","value":{"id":"示例_返回一个函数","title":"示例 | 返回一个函数","isH3":false,"content":""}},{"type":"prose","value":{"id":"javascript_3","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>在这个例子中，我们需要从另外一个函数中返回一个函数，<em>之所以可以返回一个函数，是因为在 Javascript 中，函数可被作为<strong>值</strong>来对待。</em></p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 高阶函数（Higher-Order Function）：一个返回另外一个函数的函数被称为高阶函数。</p>\n</div>\n<p>我们再来看看上面的例子：假如我们需要调用 <code>sayHello</code> 这个函数，然后让它返回一个<strong>匿名函数</strong>，我们有两种方法：</p>"}},{"type":"prose","value":{"id":"1-_用一个变量","title":"1- 用一个变量","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sayHello</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> myFunc <span class=\"token operator\">=</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello!</span>\n</code></pre></div>\n<p>用这种方法，它返回一个 <code>Hello!</code> 的消息。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>备注：</strong> 你要用另外一个变量来调用它。如果你直接用 <code>sayHello</code> 来调用这个函数，它会返回这个函数自身，而不会调用它里面被返回的函数。</p>\n</div>"}},{"type":"prose","value":{"id":"2-_使用双括号","title":"2- 使用双括号","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>我们使用双括号 <code>()()</code> 来调用 <code>sayHello()</code> 返回的函数。</p>"}},{"type":"prose","value":{"id":"了解更多","title":"了解更多","isH3":false,"content":""}},{"type":"prose","value":{"id":"常识","title":"常识","isH3":true,"content":"<ul>\n  <li><a href=\"https://zh.wikipedia.org/wiki/First-class_functions\" class=\"external\" rel=\" noopener\">First-class functions</a> 在维基百科</li>\n</ul>"}}],"toc":[{"text":"示例 | 把函数赋值给变量","id":"示例_把函数赋值给变量"},{"text":"示例 | 传递一个函数作为参数","id":"示例_传递一个函数作为参数"},{"text":"示例 | 返回一个函数","id":"示例_返回一个函数"},{"text":"了解更多","id":"了解更多"}],"summary":"当一门编程语言的函数可以被当作变量一样用时，则称这门语言拥有头等函数。例如，在这门语言中，函数可以被当作参数传递给其他函数，可以作为另一个函数的返回值，还可以被赋值给一个变量。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"First-class Function","locale":"en-US","native":"English (US)"},{"title":"Funcion de primera clase","locale":"es","native":"Español"},{"title":"Fonction de première classe","locale":"fr","native":"Français"},{"title":"First-class Function (第一級関数)","locale":"ja","native":"日本語"},{"title":"일급 함수","locale":"ko","native":"한국어"},{"title":"Função First-class","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Функции первого класса","locale":"ru","native":"Русский"},{"title":"一級函式（First-class Function）","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/glossary/first-class_function","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/glossary/first-class_function/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Glossary","title":"术语表"},{"uri":"/zh-CN/docs/Glossary/First-class_Function","title":"First-class Function（头等函数）"}],"pageTitle":"First-class Function（头等函数） - 术语表 | MDN","noIndexing":false}}