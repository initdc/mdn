{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"原型编程","mdn_url":"/zh-CN/docs/Glossary/Prototype-based_programming","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>原型编程</strong> 是一种 <a href=\"/zh-CN/docs/Glossary/OOP\">面向对象编程</a> 的风格。在这种风格中，我们不会显式地定义<a href=\"/zh-CN/docs/Glossary/Class\">类</a> ，而会通过向其它类的实例（对象）中添加属性和方法来创建类，甚至偶尔使用空对象创建类。</p>\n<p>简单来说，这种风格是在不定义<a href=\"/zh-CN/docs/Glossary/Class\">class</a>的情况下创建一个 <a href=\"/zh-CN/docs/Glossary/Object\">object</a>。</p>"}},{"type":"prose","value":{"id":"更多内容","title":"更多内容","isH3":false,"content":""}},{"type":"prose","value":{"id":"常识","title":"常识","isH3":true,"content":"<ul>\n  <li><a href=\"https://zh.wikipedia.org/wiki/Prototype-based_programming\" class=\"external\" rel=\" noopener\">原型编程</a> 的维基页面</li>\n</ul>"}}],"toc":[{"text":"更多内容","id":"更多内容"}],"summary":"原型编程 是一种 面向对象编程 的风格。在这种风格中，我们不会显式地定义类 ，而会通过向其它类的实例（对象）中添加属性和方法来创建类，甚至偶尔使用空对象创建类。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Prototype-based programming","locale":"en-US","native":"English (US)"},{"title":"Prototype-based programming","locale":"es","native":"Español"},{"title":"Programmation orientée prototype","locale":"fr","native":"Français"},{"title":"プロトタイプベース","locale":"ja","native":"日本語"},{"title":"프로토타입 기반 프로그래밍","locale":"ko","native":"한국어"},{"title":"Прототипно-ориентированное программирование","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/glossary/prototype-based_programming","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/glossary/prototype-based_programming/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Glossary","title":"术语表"},{"uri":"/zh-CN/docs/Glossary/Prototype-based_programming","title":"原型编程"}],"pageTitle":"原型编程 - 术语表 | MDN","noIndexing":false}}