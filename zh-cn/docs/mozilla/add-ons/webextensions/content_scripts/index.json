{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Content scripts","mdn_url":"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Content_scripts","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n  <ol>\n    <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions\"><strong>浏览器扩展程序</strong></a></li>\n    <li class=\"toggle\">\n      <details>\n        <summary>开始</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/What_are_WebExtensions\">什么是扩展程序?</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Your_first_WebExtension\">你的第一个扩展程序</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Your_second_WebExtension\">你的第二个扩展程序</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Anatomy_of_a_WebExtension\">详解扩展程序</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Examples\">扩展程序示例</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/What_next_\">接下来呢?</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>概念</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Using_the_JavaScript_APIs\">使用 JavaScript APIs</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Content_scripts\">Content scripts</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Match_patterns\">匹配样式</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Working_with_files\">处理文件</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Internationalization\">国际化</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Content_Security_Policy\">内容安全举措</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Native_messaging\">本地消息</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Differences_between_API_implementations\">API实现之间的差异</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Chrome_incompatibilities\">Chrome不兼容</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>用户界面</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/user_interface\">用户界面</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/user_interface/Browser_action\">工具栏按钮</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/user_interface/Page_actions\">地址栏按钮</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/user_interface/Sidebars\">侧边栏</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/user_interface/Context_menu_items\">上下文菜单项</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/user_interface/Options_pages\">选项页面</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/user_interface/Extension_pages\">扩展页面</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/user_interface/Notifications\">通知</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/user_interface/Omnibox\">地址栏建议</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/user_interface/devtools_panels\">开发人员工具面板</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>怎么做</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Intercept_HTTP_requests\">拦截HTTP 请求</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Modify_a_web_page\">修改网页</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Safely_inserting_external_content_into_a_page\">插入外部内容</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Sharing_objects_with_page_scripts\">Share objects with page scripts</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Add_a_button_to_the_toolbar\">向工具栏添加按钮</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Implement_a_settings_page\">应用设置页面</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Working_with_the_Tabs_API\">使用Tabs API</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Work_with_the_Bookmarks_API\">使用Bookmarks API</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Work_with_the_Cookies_API\">使用Cookies API</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Work_with_contextual_identities\">使用上下文身份</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Interact_with_the_clipboard\">Interact with the clipboard</a></li>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Build_a_cross_browser_extension\">构建跨浏览器扩展</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Firefox_differentiators\">Firefox的优势</a></summary>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>JavaScript APIs</summary>\n        <ol><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Browser_support_for_JavaScript_APIs\">Browser support for JavaScript APIs</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/alarms\">alarms</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/bookmarks\">bookmarks</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/browserAction\">browserAction</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/captivePortal\">captivePortal</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/clipboard\">clipboard</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/contentScripts\">contentScripts</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/cookies\">cookies</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/downloads\">downloads</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/find\">find</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/history\">history</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/i18n\">i18n</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/idle\">idle</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/menus\">menus</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/permissions\">permissions</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/proxy\">proxy</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/runtime\">runtime</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/search\">search</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/sessions\">sessions</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/storage\">storage</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/tabs\">tabs</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/types\">types</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/webNavigation\">webNavigation</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/webRequest\">webRequest</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/windows\">windows</a></li></ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n      <summary>Manifest keys</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json\">介绍</a></li>\n        </ol>\n      <ol><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/browser_specific_settings\">applications</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/browser_action\">browser_action</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/content_scripts\">content_scripts</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/default_locale\">default_locale</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/developer\">developer</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/homepage_url\">homepage_url</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/manifest_version\">manifest_version</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/version\">version</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/web_accessible_resources\">web_accessible_resources</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/author\">作者 - author</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/name\">名称 - name</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/background\">后台 - background</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/description\">描述 - description</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/permissions\">权限 - permissions</a></li><li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/manifest.json/short_name\">短名称 - short_name</a></li></ol>\n      </details>\n    </li>\n     <li class=\"toggle\">\n      <details>\n        <summary>Extension Workshop</summary>\n        <ol>\n          <li><a href=\"https://extensionworkshop.com/documentation/develop/\">Develop</a></li>\n          <li><a href=\"https://extensionworkshop.com/documentation/publish/\">Publish</a></li>\n          <li><a href=\"https://extensionworkshop.com/documentation/manage/\">Manage</a></li>\n          <li><a href=\"https://extensionworkshop.com/documentation/enterprise/\">Enterprise</a></li>\n        </ol>\n      </details>\n    </li>\n    <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/Contact_us\"><strong>联系我们</strong></a></li>\n    <li class=\"toggle\">\n      <details>\n        <summary>渠道</summary>\n        <ol>\n          <li><a href=\"https://blog.mozilla.org/addons\">Add-ons博客</a></li>\n          <li><a href=\"https://discourse.mozilla.org/c/add-ons\">Add-ons论坛</a></li>\n          <li><a href=\"https://chat.mozilla.org/#/room/%23addons:mozilla.org\">Add-ons chat</a></li>\n        </ol>\n      </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Content script 是你扩展的一部分，运行于一个特定的网页环境（而并不是后台脚本，后台脚本是扩展的一部分，也不是该网页利用 <a href=\"/zh-CN/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> 加载的一个脚本，<a href=\"/zh-CN/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> 加载的脚本是网页的一部分）。</p>\n<p>后台脚本可以访问所有 WebExtension JavaScript APIS，但是他们不能直接访问网页的内容，所以如果你需要 Content Scripts 来做到这点。</p>\n<p>就像通常的网页加载的脚本一样，Content Scripts 可以使用 standard DOM APIS 读取和修改页面内容。</p>\n<p>Content Script 只能访问 WebExtension APIS 的一个小的子集，但是它们可以使用通信系统与后台脚本进行通信，从而间接的访问 WebExtension APIS。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> content scripts 在 addons.mozilla.org 现在已被禁止，如果你在这个域名尝试插入一个 Content script 将会失败而这个页面会 LOG 一个 CSP 错误。</p>\n</div>"}},{"type":"prose","value":{"id":"加载_content_scripts","title":"加载 Content scripts","isH3":false,"content":"<p>你可以通过两种方法之一在一个页面加载 Content script：</p>\n<ul>\n  <li><strong>声明式</strong>: 在你的 manifest.json 中使用 content_scripts 关键字，你可以要求浏览器每当加载一个与指定正则表达式匹配的网页时加载一个 Content Script。</li>\n  <li><strong>程序式</strong>: 使用 <a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/Tabs/executeScript\"><code>tabs.executeScript()</code></a> API, 你可以在任何你想要的时候加载一个 Content script 到一个指定的标签：比如，作为用户点击事件的回应。</li>\n</ul>\n<p>在每一个 extension 的每一个 frame 中，只有一个全局作用域。所以在一个 content script 中的变量可以被另外的 content script 访问到，而与 content script 如何被加载无关。</p>"}},{"type":"prose","value":{"id":"content_script_环境","title":"Content script 环境","isH3":false,"content":""}},{"type":"prose","value":{"id":"dom_访问","title":"DOM 访问","isH3":true,"content":"<p>Content scripts 可以访问和修改页面的 DOM，就像普通的页面脚本一样。他们也可以察觉页面脚本对页面做出的任何修改。</p>\n<p>不过，content scripts 得到的是一个“干净的 DOM 视图”，这意味着：</p>\n<ul>\n  <li>content scripts 不能看见页面脚本定义的 javascript 变量。</li>\n  <li>如果一个页面脚本重定义了一个 DOM 内置属性，content scripts 将获取到这个属性的原始版本，而不是重定义版本。</li>\n</ul>\n<p>在 Gecko（译者注：Gecko 是由 Mozilla 工程开发出的布局引擎的名字）, 这种行为被称为射线视觉。</p>\n<p>举个例子，考虑一个网页如下：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content-type<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html; charset=utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>page-scripts/page-script.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>脚本文件“page-script.js”如下：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// page-script.js</span>\n\n<span class=\"token comment\">// add a new element to the DOM</span>\n<span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\np<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"This paragraph was added by a page script.\"</span><span class=\"token punctuation\">;</span>\np<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"page-script-para\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// define a new property on the window</span>\nwindow<span class=\"token punctuation\">.</span>foo <span class=\"token operator\">=</span> <span class=\"token string\">\"This global variable was added by a page script\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// redefine the built-in window.confirm() function</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">confirm</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The page script has also redefined 'confirm'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>现在一个扩展插入一个 content script 如下：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\n<span class=\"token comment\">// can access and modify the DOM</span>\n<span class=\"token keyword\">var</span> pageScriptPara <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"page-script-para\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npageScriptPara<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// can't see page-script-added properties</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// undefined</span>\n\n<span class=\"token comment\">// sees the original form of redefined properties</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">confirm</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Are you sure?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// calls the original window.confirm()</span>\n</code></pre></div>\n<p>相反的情况也是成立的：页面脚本不能察觉到通过 content scripts 添加的 JavaScript 属性。</p>\n<p>这意味着 content script 可以依靠 DOM 属性获取可预期的行为</p>\n<p>这种行为造成的一个结果是 content script 不能获取任何通过页面加载的 Javascript 库。所以，如果这个页面包含 JQuery，content script 将不会在意它。</p>\n<p>如果一个 content script 想要使用 Javascript 库，这个库本身就必须像一个 content script 一样在这个 content script 旁被插入：</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token property\">\"content_scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"matches\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"*://*.mozilla.org/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"js\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"jquery.js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"content-script.js\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"webextension_apis","title":"WebExtension APIs","isH3":true,"content":"<p>除了 standard DOM APIS，content script 还能使用以下 WebExtension APIS:</p>\n<p>From <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/extension\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">extension (en-US)</a>:</p>\n<ul>\n  <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/extension/getURL\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">getURL() (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/extension/inIncognitoContext\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">inIncognitoContext (en-US)</a></li>\n</ul>\n<p>From <a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/runtime\"><code>runtime</code></a>:</p>\n<ul>\n  <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/connect\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">connect() (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/runtime/getManifest\"><code>getManifest()</code></a></li>\n  <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/getURL\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">getURL() (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onConnect\"><code>onConnect</code></a></li>\n  <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage\"><code>onMessage</code></a></li>\n  <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/runtime/sendMessage\"><code>sendMessage()</code></a></li>\n</ul>\n<p>From <a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/i18n\"><code>i18n</code></a>:</p>\n<ul>\n  <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/i18n/getMessage\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">getMessage() (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/i18n/getAcceptLanguages\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">getAcceptLanguages() (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/i18n/getUILanguage\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">getUILanguage() (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/i18n/detectLanguage\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">detectLanguage() (en-US)</a></li>\n</ul>\n<p>所有 <a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/storage\"><code>storage</code></a>.</p>"}},{"type":"prose","value":{"id":"跨域名权限","title":"跨域名权限","isH3":true,"content":"<p>content scripts 拥有与扩展剩余部分一致的权限：所以如果这个扩展已在 manifest.json 文件中使用 permission 关键字请求跨域权限，其 content script 将能很好获取某些跨域权限。</p>"}},{"type":"prose","value":{"id":"后台脚本通信","title":"后台脚本通信","isH3":false,"content":"<p>尽管 content scripts 不能直接使用大部分 WebExtension APIS，但他们可以通过使用 messaging APIS 与扩展的后台脚本通信，然后便能够间接地调用所有的后台脚本能够调用的 APIS。</p>\n<p>在 background script 和 content script 中有两种基本的通讯方式：你可以发送带有可选回复的一次性的消息，或者在两者之间建立一个长期活动的连接并用这个连接来进行信息交换。</p>"}},{"type":"prose","value":{"id":"一次性消息","title":"一次性消息","isH3":true,"content":"<p>为了发送一个带有可选回复选项的一次性消息，你能使用以下 API:</p>\n<table class=\"fullwidth-table standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"row\"></th>\n      <th scope=\"col\">In content script</th>\n      <th scope=\"col\">In background script</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">Send a message</th>\n      <td><code><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/runtime/sendMessage\">browser.runtime.sendMessage()</a></code></td>\n      <td><code><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/tabs/sendMessage\">browser.tabs.sendMessage()</a></code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Receive a message</th>\n      <td><code><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage\">browser.runtime.onMessage</a></code></td>\n      <td><code><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage\">browser.runtime.onMessage</a></code></td>\n    </tr>\n  </tbody>\n</table>\n<p>举例，这里是一个监听点击事件的 content script，如果点击发生在一个链接上，他将会将该链接的地址发送给后台脚本：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> notifyExtension<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">notifyExtension</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>tagName <span class=\"token operator\">!=</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  browser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"url\"</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>后台脚本监听这个消息然后使用<a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/notifications\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">notifications (en-US)</a> API 显示一个通知：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// background-script.js</span>\n\nbrowser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>notify<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  browser<span class=\"token punctuation\">.</span>notifications<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"basic\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"iconUrl\"</span><span class=\"token operator\">:</span> browser<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span><span class=\"token function\">getURL</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"link.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"You clicked a link!\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"message\"</span><span class=\"token operator\">:</span> message<span class=\"token punctuation\">.</span>url\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>这个示范代码从 Github 上的 <a href=\"https://github.com/mdn/webextensions-examples/tree/master/notify-link-clicks-i18n\" class=\"external\" rel=\" noopener\">notify-link-clicks-i18n</a> 例子 修改而来。</p>"}},{"type":"prose","value":{"id":"connection-based_messaging","title":"Connection-based messaging","isH3":true,"content":"<p>如果你将在一个 content script 和 后台脚本间交换大量的消息，一次性消息会变得笨重而缓慢。所以一个更好的方案是在两个脚本间建立一个长久连接，然后使用该连接交换消息。</p>\n<p>每个脚本都有一个 <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/Port\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">runtime.Port (en-US)</a> 对象用以交换消息。</p>\n<p>建立过程：:</p>\n<ul>\n  <li>在一个脚本中使用 <a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onConnect\"><code>runtime.onConnect</code></a> 监听连接</li>\n  <li>另一个脚本中调用 <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/tabs/connect\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">tabs.connect() (en-US)</a> (如果连接 content script) or <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/connect\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">runtime.connect() (en-US)</a> (如果连接后台脚本). 这会返回一个 <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/Port\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">runtime.Port (en-US)</a> 对象。</li>\n  <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onConnect\"><code>runtime.onConnect</code></a> 传递它自己的 <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/Port\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">runtime.Port (en-US)</a> 对象。</li>\n</ul>\n<p>每个脚本都拥有一个 port，两个脚本可以使用 runtime.Port.postMessage() 来发送消息，runtime.Port.onMessage 来接收消息</p>\n<p>比如，当加载该 content script 时：</p>\n<ul>\n  <li>连接到后台脚本，存取 Port 对象至 <code>myPort</code></li>\n  <li>监听 myPort 上的消息，并记录。</li>\n  <li>当用户点击网页是发送消息至后台脚本。</li>\n</ul>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\n<span class=\"token keyword\">var</span> myPort <span class=\"token operator\">=</span> browser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">\"port-from-cs\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyPort<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">greeting</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hello from content script\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmyPort<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"In content script, received message from background script: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>greeting<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myPort<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">greeting</span><span class=\"token operator\">:</span> <span class=\"token string\">\"they clicked the page!\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>对应的后台脚本：</p>\n<ul>\n  <li>监听 content script 的所有连接企图。</li>\n  <li>当收到连接请求后：\n    <ul>\n      <li>存贮 Port 对象至 <code>portFromCS</code></li>\n      <li>使用 portFromCS 发送一个消息到 content script</li>\n      <li>开始监听消息并记录它们。</li>\n    </ul>\n  </li>\n  <li>当用户点击浏览器的某些扩展按钮或动作后，发送一个消息到 content script。</li>\n</ul>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// background-script.js</span>\n\n<span class=\"token keyword\">var</span> portFromCS<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">connected</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  portFromCS <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span>\n  portFromCS<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">greeting</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hi there content script!\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  portFromCS<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"In background script, received message from content script\"</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>greeting<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbrowser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>onConnect<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>connected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbrowser<span class=\"token punctuation\">.</span>browserAction<span class=\"token punctuation\">.</span>onClicked<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  portFromCS<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">greeting</span><span class=\"token operator\">:</span> <span class=\"token string\">\"they clicked the button!\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><a href=\"https://github.com/mdn/webextensions-examples/tree/master/inpage-toolbar-ui\" class=\"external\" rel=\" noopener\">inpage-toolbar-ui</a> 例子使用了 connection-based messaging.</p>"}},{"type":"prose","value":{"id":"网页通信","title":"网页通信","isH3":false,"content":"<p>尽管 content script 通常不能获取由网页脚本创建的对象，但他们可以通过 <a href=\"/zh-CN/docs/Web/API/Window/postMessage\"><code>window.postMessage</code></a> 和 <a href=\"/zh-CN/docs/Web/API/EventTarget/addEventListener\"><code>window.addEventListener</code></a> APIs 与网页脚本进行通信。</p>\n<p>比如：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// page-script.js</span>\n\n<span class=\"token keyword\">var</span> messenger <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"from-page-script\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmessenger<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> messageContentScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">messageContentScript</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">direction</span><span class=\"token operator\">:</span> <span class=\"token string\">\"from-page-script\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Message from the page\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>source <span class=\"token operator\">==</span> window <span class=\"token operator\">&amp;&amp;</span>\n      event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">&amp;&amp;</span>\n      event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">==</span> <span class=\"token string\">\"from-page-script\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content script received message: \\\"\"</span> <span class=\"token operator\">+</span> event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>完整的例子请访问该链接，<a href=\"https://mdn.github.io/webextensions-examples/content-script-page-script-messaging.html\" class=\"external\" rel=\" noopener\">visit the demo page on GitHub</a> 并且观看以下介绍。</p>\n<div class=\"notecard warning\" id=\"sect2\">\n  <p><strong>警告：</strong> 需要注意的是当你用该方法与一些不被信任的网页进行交互式需要特别小心。WebExtensions 拥有高等级权限，而一些恶意页面可以很轻松的获取这些权限。</p>\n  <p>做一个微小的示范，假定有如下 content script 代码：</p>\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>source <span class=\"token operator\">==</span> window <span class=\"token operator\">&amp;&amp;</span>\n      event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">&amp;&amp;</span>\n      event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">==</span> <span class=\"token string\">\"from-page-script\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n  <p>现在网页脚本可以在 content script 权限范围内运行任何代码。</p>\n</div>"}},{"type":"prose","value":{"id":"与页面脚本共享对象","title":"与页面脚本共享对象","isH3":false,"content":"<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 这个部分的技术描述只适用于 49 版本后的 Firefox</p>\n</div>\n<div class=\"notecard warning\" id=\"sect4\">\n  <p><strong>警告：</strong> 作为一个插件开发者你必须考虑脚本运行在任何伺机偷取用户个人隐私，破坏他们的电脑，或者使用其他方式攻击的网页上。</p>\n  <p>隔离 content script 和 页面脚本 便是为了使恶意网页的攻击变得更加困难。</p>\n  <p>这部分的技术打破了这个隔离，它们从根本上是危险的而应该被谨慎使用。</p>\n</div>\n<p>我们在 <a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Content_scripts#dom_access\">DOM access</a> 中看到 content scripts 不会察觉到通过网页脚本修改的某些属性。这意味着，如果一个网页加载了一个库比如 JQuery，content script 将不会使用它，而不得不加载它自己的一个复制。相反的，网页加载的脚本也不能获知 content script 的修改。</p>\n<p>然而，Firefox 提供了一些 APIS 可以使得 content script 能够：</p>\n<ul>\n  <li>访问页面脚本创建的 Javascript 对象</li>\n  <li>暴露他们自己的 JavaScript 对象给页面脚本。</li>\n</ul>"}},{"type":"prose","value":{"id":"xray_vision_in_firefox","title":"Xray vision in Firefox","isH3":true,"content":"<p>在 Firefox 中，隔离 content script 和页面脚本通过使用一种称为“Xray vision”的功能实现。当一个处于更高权限的脚本访问一个被定义于一个更低权限版本的域中时，它将只能看见这个对象的原始版本。</p>\n<p>任何 <a href=\"/zh-CN/docs/Glossary/Expando\">expando</a> 属性都是不可见得，而且如果对象的任何属性被重定义，他也只能能看见原始的实现而不是重定义的实现。</p>\n<p>这个功能的目的是为了让低权限的脚本不至于因为重定义原始对象属性而使高权限脚本行为异常。</p>\n<p>让我们来举个例子，当一个 content script 访问一个页面的 <a href=\"/zh-CN/docs/Web/API/Window\">window</a> 类，他不会看见任何该页面脚本对这个 window 添加的任何属性，如果页面脚本重定义了任何已存在的属性，content script 将只能看见该属性的原始版本。</p>\n<p>更多信心请查看 <a href=\"https://firefox-source-docs.mozilla.org/dom/scriptSecurity/xray_vision.html\" class=\"only-in-en-us external\" title=\"Currently only available in English (US)\" rel=\" noopener\">Xray vision (en-US)</a> 和 <a href=\"/zh-CN/docs/Mozilla/Gecko/Script_security\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Script security</a>.</p>"}},{"type":"prose","value":{"id":"从_content_script_中访问_页面脚本对象","title":"从 content script 中访问 页面脚本对象","isH3":true,"content":"<p>在 Firefox 中，content script 中的 DOM 对象会获得一个额外的属性 wrappedJSObject。这是一个会包含任何由页面脚本所造成修改的”未包裹“对象。</p>\n<p>让我们来看一个简单的例子，假定一个页面载入脚本如下：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>这个脚本添加一个全局的属性到全局 <code>window</code>：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// main.js</span>\n\n<span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> <span class=\"token string\">\"I'm defined in a page script!\"</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Xray vision 意味着 如果一个 content script 尝试访问 foo，它将是未定义的：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n</code></pre></div>\n<p>在 Firefox，content script 可以使用 window.wrappedJSObject 来看见全局属性：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>wrappedJSObject<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"I'm defined in a page script!\"</span>\n</code></pre></div>\n<p>注意因为这个原因，你最好不在依赖该对象的任何属性或方法 建立或执行某些操作，你所期望的，它们，甚至 setter 和 getter 都可能被不被信任的代码重定义。</p>\n<p>同时注意 unwarapping 是及物的：当你使用 wrappedJSObject，该未包裹对象的任何属性都是未包裹的（同时都是不可靠的），所以 一个好的建议是只在你需要时获取这个对象，重新包裹他，你能这样做：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">XPCNativeWrapper</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>wrappedJSObject<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>查看 <a href=\"https://firefox-source-docs.mozilla.org/dom/scriptSecurity/xray_vision.html\" class=\"only-in-en-us external\" title=\"Currently only available in English (US)\" rel=\" noopener\">Xray vision (en-US)</a> 文档获取更多。</p>"}},{"type":"prose","value":{"id":"与页面脚本共享_content_script_对象","title":"与页面脚本共享 content script 对象","isH3":true,"content":"<p>Firefox 同样提供 APIS 允许 content scripts 是对象对于页面脚本可用。这里是两个主要的 APIS:</p>\n<ul>\n  <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Content_scripts#exportfunction\"><code>exportFunction()</code></a>: 导出一个函数至页面脚本</li>\n  <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Content_scripts#cloneinto\"><code>cloneInto()</code></a>: 导出一个对象至页面脚本</li>\n</ul>\n<h4 id=\"exportfunction\">exportFunction</h4>\n<p>给予一个定义于 content script 中的方法，exportFunction（）导出他至页面脚本域，然后脚本可以调用它。</p>\n<p>比如，让我们考虑一个 WebExtension 有一个后台脚本如下：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/*\nExecute content script in the active tab.\n*/</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">loadContentScript</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  browser<span class=\"token punctuation\">.</span>tabs<span class=\"token punctuation\">.</span><span class=\"token function\">executeScript</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">file</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/content_scripts/export.js\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*\nAdd loadContentScript() as a listener to clicks\non the browser action.\n*/</span>\nbrowser<span class=\"token punctuation\">.</span>browserAction<span class=\"token punctuation\">.</span>onClicked<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>loadContentScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\nShow a notification when we get messages from\nthe content script.\n*/</span>\nbrowser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  browser<span class=\"token punctuation\">.</span>notifications<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"basic\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Message from the page\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> message<span class=\"token punctuation\">.</span>content\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>该脚本做了两件事：</p>\n<ul>\n  <li>当用户点击浏览器按钮时，在当前标签执行一个 content script。</li>\n  <li>监听从 content script 传递的消息，并在消息到达时显示一个通知。</li>\n</ul>\n<p>content script 如下：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/*\nDefine a function in the content script's scope, then export it\ninto the page script's scope.\n*/</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  browser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Function call: \"</span> <span class=\"token operator\">+</span> message<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">exportFunction</span><span class=\"token punctuation\">(</span>notify<span class=\"token punctuation\">,</span> window<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">defineAs</span><span class=\"token operator\">:</span><span class=\"token string\">'notify'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>该脚本定义了一个函数 notify（）用以发送其参数到后台脚本，而后他导出了这个函数至页面脚本域。现在页面脚本可以调用该函数：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Message from the page script!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>更详细的信息请看，<a href=\"/zh-CN/docs/Mozilla/Tech/XPCOM/Language_Bindings/Components.utils.exportFunction\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>Components.utils.exportFunction</code></a>.</p>\n<h4 id=\"cloneinto\">cloneInto</h4>\n<p>给予一个定义于 content script 的对象，该技术可以创建该对象的一个复制到页面脚本域，从而使该复制可以被页面脚本访问。通常使用 <a href=\"/zh-CN/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\">structured clone algorithm</a> 复制对象，这意味着该对象中的方法不会被复制为了复制方法，需要传递 cloneFunction 选项。</p>\n<p>比如，这里有一个 content script 定义了一个包含方法的对象，然后复制他们至页面脚本域：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/*\nCreate an object that contains functions in\nthe content script's scope, then clone it\ninto the page script's scope.\n\nBecause the object contains functions,\nthe cloneInto call must include\nthe `cloneFunctions` option.\n*/</span>\n<span class=\"token keyword\">var</span> messenger <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">notify</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    browser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Object method call: \"</span> <span class=\"token operator\">+</span> message\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nwindow<span class=\"token punctuation\">.</span>wrappedJSObject<span class=\"token punctuation\">.</span>messenger <span class=\"token operator\">=</span> <span class=\"token function\">cloneInto</span><span class=\"token punctuation\">(</span>\n  messenger<span class=\"token punctuation\">,</span>\n  window<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">cloneFunctions</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>现在页面脚本将看到新的含有 <code>notify</code> 方法的属性：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span>messenger<span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Message from the page script!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>详情请看 <a href=\"/zh-CN/docs/Mozilla/Tech/XPCOM/Language_Bindings/Components.utils.cloneInto\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>Components.utils.cloneInto</code></a>.</p>"}},{"type":"prose","value":{"id":"在_content_script_中使用_eval","title":"在 content script 中使用 eval()","isH3":false,"content":"<p>在 Chrome 中，<code>eval()</code> 总是在 content script 的上下文环境中运行，而不是在页面的上下文环境中运行。</p>\n<p>在 Firefox 中：</p>\n<ul>\n  <li>如果你调用<code>eval()</code>，它在 content script 的上下文中运行</li>\n  <li>如果你调用<code>window.eval()</code>，它在页面的上下文中运行</li>\n</ul>\n<p>比如，有一个 content script 如下：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'window.x = 1;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'window.y = 2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">In content script, window.x: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">In content script, window.y: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"check\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>这段代码仅仅通过调用<code>window.eval()</code> 和 <code>eval()</code>创建了变量 x 和 y。然后记录它们的值并通知页面更新。</p>\n<p>接收到消息后页面的脚本记录下这些变量：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>source <span class=\"token operator\">===</span> window <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>data <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message <span class=\"token operator\">===</span> <span class=\"token string\">\"check\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">In page script, window.x: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">In page script, window.y: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在 Chrome 中，输出类似下面所示：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">In content script, window.x: 1\nIn content script, window.y: 2\nIn page script, window.x: undefined\nIn page script, window.y: undefined\n</pre></div>\n<p>在 Firefox 中，输出类似下面所示：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">In content script, window.x: undefined\nIn content script, window.y: 2\nIn page script, window.x: 1\nIn page script, window.y: undefined\n</pre></div>\n<p>上述内容同样适用于 <a href=\"/zh-CN/docs/Web/API/setTimeout\"><code>setTimeout()</code></a>, <a href=\"/zh-CN/docs/Web/API/setInterval\"><code>setInterval()</code></a>, and <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function()</code></a>.</p>\n<p>当在页面的上下文中运行代码时，适用于上面所提到的\"<a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Content_scripts#sharing_objects_with_page_scripts\">Sharing content script objects with page scripts</a>\" 这一部分的警告：页面的环境可能会被恶意的网页所控制，这可能会导致你所交互的对象会有意想不到的行为：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// page.js redefines console.log</span>\n\n<span class=\"token keyword\">var</span> original <span class=\"token operator\">=</span> console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">log</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">original</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js calls the redefined version</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'console.log(false)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}}],"toc":[{"text":"加载 Content scripts","id":"加载_content_scripts"},{"text":"Content script 环境","id":"content_script_环境"},{"text":"后台脚本通信","id":"后台脚本通信"},{"text":"网页通信","id":"网页通信"},{"text":"与页面脚本共享对象","id":"与页面脚本共享对象"},{"text":"在 content script 中使用 eval()","id":"在_content_script_中使用_eval"}],"summary":"Content script 是你扩展的一部分，运行于一个特定的网页环境（而并不是后台脚本，后台脚本是扩展的一部分，也不是该网页利用 <script> 加载的一个脚本，<script> 加载的脚本是网页的一部分）。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Content scripts","locale":"en-US","native":"English (US)"},{"title":"Scripts de contenu","locale":"fr","native":"Français"},{"title":"コンテンツスクリプト","locale":"ja","native":"日本語"},{"title":"Content scripts","locale":"ko","native":"한국어"},{"title":"Встраиваемый скрипт","locale":"ru","native":"Русский"},{"title":"內容腳本","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/mozilla/add-ons/webextensions/content_scripts","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/mozilla/add-ons/webextensions/content_scripts/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Mozilla","title":"Mozilla"},{"uri":"/zh-CN/docs/Mozilla/Add-ons","title":"附加组件"},{"uri":"/zh-CN/docs/Mozilla/Add-ons/WebExtensions","title":"浏览器扩展"},{"uri":"/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Content_scripts","title":"Content scripts"}],"pageTitle":"Content scripts - Mozilla | MDN","noIndexing":false}}