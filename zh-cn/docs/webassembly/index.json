{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"WebAssembly","mdn_url":"/zh-CN/docs/WebAssembly","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"open\"><a href=\"/zh-CN/docs/WebAssembly\"><strong>WebAssembly home page</strong></a>\n  </li><li class=\"toggle\">\n    <details open=\"\">\n      <summary>Tutorials</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/WebAssembly/Concepts\">WebAssembly concepts</a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/C_to_wasm\">Compiling from C/C++ to WebAssembly</a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/Rust_to_wasm\">Compiling from Rust to WebAssembly</a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/Using_the_JavaScript_API\">Using the WebAssembly JavaScript API</a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/Understanding_the_text_format\">Understanding WebAssembly text format</a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/Text_format_to_wasm\">Converting WebAssembly text format to wasm</a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/Loading_and_running\">Loading and running WebAssembly code</a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/Caching_modules\">Caching compiled WebAssembly modules</a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/Exported_functions\">Exported WebAssembly functions</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Object reference</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface\"><code>WebAssembly</code></a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Global\"><code>WebAssembly.Global</code></a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Instance\"><code>WebAssembly.Instance</code></a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Table\"><code>WebAssembly.Table</code></a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/CompileError\"><code>WebAssembly.CompileError</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/RuntimeError\"><code>WebAssembly.RuntimeError</code></a></li>\n      </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>WebAssembly 是一种新的编码方式，可以在现代的网络浏览器中运行 － 它是一种低级的类汇编语言，具有紧凑的二进制格式，可以接近原生的性能运行，并为诸如 C / C ++等语言提供一个编译目标，以便它们可以在 Web 上运行。它也被设计为可以与 JavaScript 共存，允许两者一起工作。</p>"}},{"type":"prose","value":{"id":"简而言之","title":"简而言之","isH3":false,"content":"<p>对于网络平台而言，WebAssembly 具有巨大的意义——它提供了一条途径，以使得以各种语言编写的代码都可以以接近原生的速度在 Web 中运行。在这种情况下，以前无法以此方式运行的客户端软件都将可以运行在 Web 中。</p>\n<p>WebAssembly 被设计为可以和 JavaScript 一起协同工作——通过使用 WebAssembly 的 JavaScript API，你可以把 WebAssembly 模块加载到一个 JavaScript 应用中并且在两者之间共享功能。这允许你在同一个应用中利用 WebAssembly 的性能和威力以及 JavaScript 的表达力和灵活性，即使你可能并不知道如何编写 WebAssembly 代码。</p>\n<p>而且，更棒的是，这是通过<a href=\"https://www.w3.org/community/webassembly/\" class=\"external\" rel=\" noopener\">W3C WebAssembly Community Group</a>开发的一项网络标准，并得到了来自各大主要浏览器厂商的积极参与。</p>"}},{"type":"prose","value":{"id":"指南","title":"指南","isH3":false,"content":"<dl>\n  <dt id=\"webassembly_概念\"><a href=\"/zh-CN/docs/WebAssembly/Concepts\">WebAssembly 概念</a></dt>\n  <dd>\n    <p>通过阅读 WebAssembly 后面的高层概念开始——也就是说，它为什么如此有用，它是如何适应网络平台的（以及其他）和如何使用它。</p>\n  </dd>\n  <dt id=\"从_cc编译为_webassembly\"><a href=\"/zh-CN/docs/WebAssembly/C_to_wasm\">从 C/C++编译为 WebAssembly</a></dt>\n  <dd>\n    <p>当你使用 C/C++编写了代码后，你可以使用诸如 Emscripten 的工具把它编译为.wasm 文件。让我们看看这是如何工作的。</p>\n  </dd>\n  <dt id=\"加载运行_webassembly_代码\"><a href=\"/zh-CN/docs/WebAssembly/Loading_and_running\">加载运行 WebAssembly 代码</a></dt>\n  <dd>\n    <p>本文介绍如何通过把<a href=\"/zh-CN/docs/Web/API/Fetch_API\">Fetch</a>或者<a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\">XHR</a> API 与<a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface\">WebAssembly JavaScript</a> API 结合在一起来获取、编译和实例化.wasm 文件。</p>\n  </dd>\n  <dt id=\"缓存编译后的_webassembly_模块\"><a href=\"/zh-CN/docs/WebAssembly/Caching_modules\">缓存编译后的 WebAssembly 模块</a></dt>\n  <dd>\n    <p>就提升应用启动速度而言，在客户端缓存大的 WebAssembly 模块是有用的。本文解释了如何使用<a href=\"/zh-CN/docs/Web/API/IndexedDB_API\">IndexedDB</a>来实现这一点。</p>\n  </dd>\n  <dt id=\"使用_webassembly_的_javascript_api\"><a href=\"/zh-CN/docs/WebAssembly/Using_the_JavaScript_API\">使用 WebAssembly 的 JavaScript API</a></dt>\n  <dd>\n    <p>当加载了一个.wasm 模块之后，你就想要使用它。在本文中，我们向你展示了如何通过 WebAssembly 的 JavaScript API 来使用 WebAssembly。</p>\n  </dd>\n  <dt id=\"导出的_webassembly_函数\"><a href=\"/zh-CN/docs/WebAssembly/Exported_functions\">导出的 WebAssembly 函数</a></dt>\n  <dd>\n    <p>导出的 WebAssembly 函数是 WebAssembly 函数的 JavaScript 表现形式，并且允许从 JavaScript 中调用 WebAssembly 代码。本文描述它们。</p>\n  </dd>\n  <dt id=\"理解_webassembly_的文本格式\"><a href=\"/zh-CN/docs/WebAssembly/Understanding_the_text_format\">理解 WebAssembly 的文本格式</a></dt>\n  <dd>\n    <p>本文介绍了 wasm 的文本格式。这是在进行调试的时候浏览器开发者工具中展现出来的.wasm 模块的一种低级文本表示。</p>\n  </dd>\n  <dt id=\"把_webassembly_文本格式转换为_wasm\"><a href=\"/zh-CN/docs/WebAssembly/Text_format_to_wasm\">把 WebAssembly 文本格式转换为 wasm</a></dt>\n  <dd>\n    <p>本文提供了一个如何把编写的文本格式的 WebAssembly 模块转换为 wasm 二进制的指南。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"api_参考","title":"API 参考","isH3":false,"content":"<dl>\n  <dt id=\"webassembly\"><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface\"><code>WebAssembly</code></a></dt>\n  <dd>\n    <p>本对象是所有与 WebAssembly 相关功能的命名空间。</p>\n  </dd>\n  <dt id=\"webassembly.module\"><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a></dt>\n  <dd>\n    <p>一个<code>WebAssembly.Module</code>对象包括了无状态的 WebAssembly 代码。该代码已经被浏览器编译并且能够<a href=\"/zh-CN/docs/Web/API/Worker/postMessage\">通过 Workers 高效地共享</a>，<a href=\"/zh-CN/docs/WebAssembly/Caching_modules\">缓存到 IndexedDB 中</a>以及多次实例化。</p>\n  </dd>\n  <dt id=\"webassembly.instance\"><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Instance\"><code>WebAssembly.Instance</code></a></dt>\n  <dd>\n    <p>一个<code>WebAssembly.Instance</code>对象是一个有状态的、可执行的模块的实例。实例对象包含所有的能够从 JavaScript 调用到 WebAssembly 代码的<a href=\"/zh-CN/docs/WebAssembly/Exported_functions\">导出的 WebAssembly 函数</a>。</p>\n  </dd>\n  <dt id=\"webassembly.instantiate\"><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/instantiate\"><code>WebAssembly.instantiate()</code></a></dt>\n  <dd>\n    <p><code>WebAssembly.instantiate()</code> 函数是编译和实例化 WebAssembly 代码的主要的 API，它返回一个<code>Module</code>及其第一个实例。</p>\n  </dd>\n  <dt id=\"webassembly.memory\"><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory()</code></a></dt>\n  <dd>\n    <p>一个<code>WebAssembly.Memory</code> 对象是一个可变长的<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>。它拥有能够被实例存取的原始字节内存。</p>\n  </dd>\n  <dt id=\"webassembly.table\"><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Table\"><code>WebAssembly.Table()</code></a></dt>\n  <dd>\n    <p><code>WebAssembly.Table</code>对象是一个可变长类型数组。它存储诸如函数引用之类的不透明值并且能够被实例存取。</p>\n  </dd>\n  <dt id=\"webassembly.compileerror\"><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/CompileError\"><code>WebAssembly.CompileError()</code></a></dt>\n  <dd>\n    <p>创建一个新的 WebAssembly <code>CompileError</code>对象。</p>\n  </dd>\n  <dt id=\"webassembly.linkerror_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>创建一个新的 WebAssembly <code>LinkError</code>对象。</p>\n  </dd>\n  <dt id=\"webassembly.runtimeerror\"><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/RuntimeError\"><code>WebAssembly.RuntimeError()</code></a></dt>\n  <dd>\n    <p>创建一个新的 WebAssembly <code>RuntimeError</code>对象。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/JasonWeathersby/WASMSobel\" class=\"external\" rel=\" noopener\">WASMSobel</a></li>\n  <li>参考我们的<a href=\"https://github.com/mdn/webassembly-examples/\" class=\"external\" rel=\" noopener\">WebAssembly 示例</a>库来获取一些其他的例子。</li>\n</ul>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webassembly.github.io/spec/js-api/#webassembly-namespace","title":"WebAssembly JavaScript Interface"}],"query":"javascript.builtins.WebAssembly"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"javascript.builtins.WebAssembly","dataURL":"/zh-CN/docs/WebAssembly/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"https://research.mozilla.org/webassembly/\" class=\"external\" rel=\" noopener\">WebAssembly on Mozilla Research</a></li>\n  <li><a href=\"http://webassembly.org/\" class=\"external\" rel=\" noopener\">webassembly.org</a></li>\n  <li><a href=\"https://hacks.mozilla.org/category/webassembly/\" class=\"external\" rel=\" noopener\">WebAssembly articles on Mozilla Hacks blog</a></li>\n  <li><a href=\"https://www.w3.org/community/webassembly/\" class=\"external\" rel=\" noopener\">W3C WebAssembly Community Group</a></li>\n  <li><a href=\"/zh-CN/docs/Web/HTTP/Headers/Large-Allocation\">Large-Allocation HTTP header</a></li>\n</ul>"}}],"toc":[{"text":"简而言之","id":"简而言之"},{"text":"指南","id":"指南"},{"text":"API 参考","id":"api_参考"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"WebAssembly 是一种新的编码方式，可以在现代的网络浏览器中运行 － 它是一种低级的类汇编语言，具有紧凑的二进制格式，可以接近原生的性能运行，并为诸如 C / C ++等语言提供一个编译目标，以便它们可以在 Web 上运行。它也被设计为可以与 JavaScript 共存，允许两者一起工作。","popularity":0.0017,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"WebAssembly","locale":"en-US","native":"English (US)"},{"title":"WebAssembly","locale":"es","native":"Español"},{"title":"WebAssembly","locale":"fr","native":"Français"},{"title":"WebAssembly","locale":"ja","native":"日本語"},{"title":"웹어셈블리","locale":"ko","native":"한국어"},{"title":"WebAssembly","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"WebAssembly","locale":"ru","native":"Русский"},{"title":"WebAssembly","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/webassembly","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/webassembly/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"pageTitle":"WebAssembly | MDN","noIndexing":false}}