{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"WebAssembly.Global","mdn_url":"/zh-CN/docs/WebAssembly/JavaScript_interface/Global","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects\">标准内置对象</a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface\"><code>WebAssembly</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>方法</strong></a><ol><li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/compile\"><code>WebAssembly.compile()</code></a></li><li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/compileStreaming\"><code>WebAssembly.compileStreaming()</code></a></li><li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/instantiate\"><code>WebAssembly.instantiate()</code></a></li><li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/instantiateStreaming\"><code>WebAssembly.instantiateStreaming()</code></a></li><li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/validate\"><code>WebAssembly.validate()</code></a></li></ol></li><li><strong>相关页面：</strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Global\"><code>WebAssembly.Global</code></a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Instance\"><code>WebAssembly.Instance</code></a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Table\"><code>WebAssembly.Table</code></a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/CompileError\"><code>WebAssembly.CompileError</code></a></strong></li><li><strong><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError</code> <small>(en-US)</small></a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/RuntimeError\"><code>WebAssembly.RuntimeError</code></a></strong></li><li><strong>继承</strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>属性</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>方法</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>WebAssembly.Global</code></strong> 对象表示一个全局变量实例，可以被 JavaScript 和 importable/exportable 访问 ,跨越一个或多个<a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a> 实例。他允许被多个 modules 动态连接。</p>"}},{"type":"prose","value":{"id":"构造函数语法","title":"构造函数语法","isH3":false,"content":"<p><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Global\">WebAssembly.Global()</a></strong></p>\n<p>创建一个新的<code>全局</code>对象。</p>"}},{"type":"prose","value":{"id":"global_实例","title":"Global 实例","isH3":false,"content":"<p>所有的 <code>Global</code> 实例 继承自 <code>Global()</code> 构造函数 <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Global\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">prototype object (en-US)</a> — 修改会影响 所有 <code>Global</code> 实例。</p>"}},{"type":"prose","value":{"id":"实例属性","title":"实例属性","isH3":true,"content":"<dl>\n  <dt id=\"global.prototype.constructor\"><code>Global.prototype.constructor</code></dt>\n  <dd>\n    <p>返回创建对象实例的函数。缺省为构造函数为 <a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Global\" aria-current=\"page\"><code>WebAssembly.Global()</code></a></p>\n  </dd>\n  <dt id=\"global.prototypetostringtag\"><code>Global.prototype[@@toStringTag]</code></dt>\n  <dd>\n    <p>属性 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag\">@@toStringTag</a> 初始值为字符串 \"WebAssembly.Global\".</p>\n  </dd>\n  <dt id=\"global.prototype.value\"><code>Global.prototype.value</code></dt>\n  <dd>\n    <p>全局变量包含的值 — 可以直接用于设置和获取全局变量的值。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"实例方法","title":"实例方法","isH3":true,"content":"<dl>\n  <dt id=\"global.prototype.valueof\"><code>Global.prototype.valueOf()</code></dt>\n  <dd>\n    <p>旧式的方法，返回全局变量包含的值。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":""}},{"type":"prose","value":{"id":"创建_global_实例","title":"创建 Global 实例","isH3":true,"content":"<p>以下例子展示了使用 <code>WebAssembly.Global()</code> 构造函数创建一个新的实例。它定义为可修饰的类型为<code>i32</code>，值为 0。</p>\n<p>global 的值发生改变，首先设置<code>Global.value</code> 为 42，然后使用导出函数 <code>incGlobal()</code> 增加为 43. 导出函数在 <code>global.wasm</code> 模块中 (它将参数的值加一并返回).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'output'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">assertEq</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg<span class=\"token punctuation\">,</span> got<span class=\"token punctuation\">,</span> expected</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    output<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Testing </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>msg<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>got <span class=\"token operator\">!==</span> expected<span class=\"token punctuation\">)</span>\n        output<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">FAIL!&lt;br&gt;Got: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>got<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;br&gt;Expected: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>expected<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n        output<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">SUCCESS! Got: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>got<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">assertEq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WebAssembly.Global exists\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">typeof</span> WebAssembly<span class=\"token punctuation\">.</span>Global<span class=\"token punctuation\">,</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> global <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebAssembly<span class=\"token punctuation\">.</span>Global</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'i32'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">mutable</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nWebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">instantiateStreaming</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'global.wasm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">js</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> global <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>instance<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">assertEq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getting initial value from wasm\"</span><span class=\"token punctuation\">,</span> instance<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    global<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">assertEq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getting JS-updated value from wasm\"</span><span class=\"token punctuation\">,</span> instance<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    instance<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">incGlobal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">assertEq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getting wasm-updated value from JS\"</span><span class=\"token punctuation\">,</span> global<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 你可以在<a href=\"https://mdn.github.io/webassembly-examples/js-api-examples/global.html\" class=\"external\" rel=\" noopener\">running live on GitHub</a> 查看例子; 也可以访问<a href=\"https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/global.html\" class=\"external\" rel=\" noopener\">source code</a>.</p>\n</div>"}},{"type":"specifications","value":{"title":"规格","id":"规格","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webassembly.github.io/spec/js-api/#globals","title":"WebAssembly JavaScript Interface"}],"query":"javascript.builtins.WebAssembly.Global"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"javascript.builtins.WebAssembly.Global","dataURL":"/zh-CN/docs/WebAssembly/JavaScript_interface/Global/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/WebAssembly\">WebAssembly</a> overview page</li>\n  <li><a href=\"/zh-CN/docs/WebAssembly/Concepts\">WebAssembly concepts</a></li>\n  <li><a href=\"/zh-CN/docs/WebAssembly/Using_the_JavaScript_API\">Using the WebAssembly JavaScript API</a></li>\n  <li><a href=\"https://github.com/WebAssembly/mutable-global/blob/master/proposals/mutable-global/Overview.md\" class=\"external\" rel=\" noopener\">Import/Export mutable globals proposal</a></li>\n</ul>"}}],"toc":[{"text":"构造函数语法","id":"构造函数语法"},{"text":"Global 实例","id":"global_实例"},{"text":"示例","id":"示例"},{"text":"规格","id":"规格"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"See also","id":"see_also"}],"summary":"WebAssembly.Global 对象表示一个全局变量实例，可以被 JavaScript 和 importable/exportable 访问 ,跨越一个或多个WebAssembly.Module 实例。他允许被多个 modules 动态连接。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"WebAssembly.Global","locale":"en-US","native":"English (US)"},{"title":"WebAssembly.Global","locale":"fr","native":"Français"},{"title":"WebAssembly.Global","locale":"ja","native":"日本語"},{"title":"WebAssembly.Global","locale":"ko","native":"한국어"}],"source":{"folder":"zh-cn/webassembly/javascript_interface/global","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/webassembly/javascript_interface/global/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/WebAssembly","title":"WebAssembly"},{"uri":"/zh-CN/docs/WebAssembly/JavaScript_interface","title":"WebAssembly"},{"uri":"/zh-CN/docs/WebAssembly/JavaScript_interface/Global","title":"WebAssembly.Global"}],"pageTitle":"WebAssembly.Global - WebAssembly | MDN","noIndexing":false}}