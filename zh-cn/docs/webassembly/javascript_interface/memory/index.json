{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"WebAssembly.Memory()","mdn_url":"/zh-CN/docs/WebAssembly/JavaScript_interface/Memory","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects\">标准内置对象</a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface\"><code>WebAssembly</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>方法</strong></a><ol><li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/compile\"><code>WebAssembly.compile()</code></a></li><li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/compileStreaming\"><code>WebAssembly.compileStreaming()</code></a></li><li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/instantiate\"><code>WebAssembly.instantiate()</code></a></li><li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/instantiateStreaming\"><code>WebAssembly.instantiateStreaming()</code></a></li><li><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/validate\"><code>WebAssembly.validate()</code></a></li></ol></li><li><strong>相关页面：</strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Global\"><code>WebAssembly.Global</code></a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Instance\"><code>WebAssembly.Instance</code></a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Table\"><code>WebAssembly.Table</code></a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/CompileError\"><code>WebAssembly.CompileError</code></a></strong></li><li><strong><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError</code> <small>(en-US)</small></a></strong></li><li><strong><a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/RuntimeError\"><code>WebAssembly.RuntimeError</code></a></strong></li><li><strong>继承</strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>属性</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>方法</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>WebAssembly.Memory()</code></strong> 构造函数创建一个新的 <code>Memory</code> 对象。该对象的 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>buffer</code></a> 属性是一个可调整大小的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a> ，其内存储的是 WebAssembly <code>实例</code> 所访问内存的原始字节码。</p>\n<p>从 JavaScript 或 WebAssembly 中所创建的内存，可以由 JavaScript 或 WebAssembly 来访问及更改。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">var myMemory = new WebAssembly.Memory(memoryDescriptor);\n</pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"memorydescriptor\"><em>memoryDescriptor</em></dt>\n  <dd>\n    <p>一个可包含以下成员的对象：</p>\n    <dl>\n      <dt id=\"initial\"><em>initial</em></dt>\n      <dd>\n        <p>WebAssembly 内存的初始大小，以 WebAssembly 页面为单位。</p>\n      </dd>\n      <dt id=\"maximum_可选\"><em>maximum <span class=\"badge inline optional\">可选</span></em></dt>\n      <dd>\n        <p>以 WebAssembly 页面为单位，可允许 WebAssembly 内存的 <code>最大值</code>。当存在此属性时，此参数用于提示引擎预先保留内存。但是，引擎可能会忽略或限制此预留请求。通常情况下大多数 WebAssembly 模块不需要设置 <code>最大值</code>。</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> A WebAssembly 页面的大小为一个常量 65,536 字节，即 64KB。</p>\n</div>"}},{"type":"prose","value":{"id":"异常","title":"异常","isH3":true,"content":"<ul>\n  <li>如果 <code>memoryDescriptor</code> 的类型不是对象，则抛出 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> 异常。</li>\n  <li>如果指定了 <code>maximum</code> 并且小于 <code>initial</code>，则抛出 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RangeError\"><code>RangeError</code></a> 异常。</li>\n</ul>"}},{"type":"prose","value":{"id":"memory_实例","title":"<code>Memory</code> 实例","isH3":false,"content":"<p>所有 <code>Memory</code> 实例都继承自 <code>Memory()</code> 构造函数的 <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Memory\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">原型对象 (en-US)</a> — 这个原型可被修改并影响到所有的 <code>Memory</code> 实例。</p>","titleAsText":"Memory 实例"}},{"type":"prose","value":{"id":"实例属性","title":"实例属性","isH3":true,"content":"<dl>\n  <dt id=\"memory.prototype.constructor\"><code>Memory.prototype.constructor</code></dt>\n  <dd>\n    <p>返回创建此对象实例的函数。默认情况下，它是 <a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/Memory\" aria-current=\"page\"><code>WebAssembly.Memory()</code></a> 构造函数。</p>\n  </dd>\n  <dt id=\"memory.prototype.buffer\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Memory.prototype.buffer</code></a></dt>\n  <dd>\n    <p>一个访问器，用于返回内存中包含的缓冲区。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"实例方法","title":"实例方法","isH3":true,"content":"<dl>\n  <dt id=\"memory.prototype.grow\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Memory.prototype.grow()</code></a></dt>\n  <dd>\n    <p>通过指定 WebAssembly 页面数量来增加内存实例的大小。（每个页面大小为 64KB）</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>有两种方法可以获得 <code>WebAssembly.Memory</code> 对象。第一种方法是由 JavaScript 来创建。以下示例创建了一个新的 WebAssembly 内存实例，初始大小为 10 页（640KB），最大值设置为 100 页（6.4MB）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> memory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebAssembly<span class=\"token punctuation\">.</span>Memory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">initial</span><span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">maximum</span><span class=\"token operator\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>获取 <code>WebAssembly.Memory</code> 对象的第二种方法是从 WebAssembly 模块中导出。以下示例（详见 GitHub 页面 <a href=\"https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html\" class=\"external\" rel=\" noopener\">memory.html</a> ，也可以 <a href=\"https://mdn.github.io/webassembly-examples/js-api-examples/memory.html\" class=\"external\" rel=\" noopener\">用浏览器运行查看</a>）使用 <a href=\"/zh-CN/docs/WebAssembly/JavaScript_interface/instantiateStreaming\"><code>WebAssembly.instantiateStreaming()</code></a> 方法实例化已加载的 memory.wasm 字节代码，同时导入上面一行中创建的内存。用它来存储一些值，然后导出一个函数并用它来对一些值进行求和操作。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>WebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">instantiateStreaming</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'memory.wasm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">js</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">mem</span><span class=\"token operator\">:</span> memory <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> i32 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint32Array</span><span class=\"token punctuation\">(</span>memory<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    i32<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">var</span> sum <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">accumulate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"标准规范","id":"标准规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webassembly.github.io/spec/js-api/#memories","title":"WebAssembly JavaScript Interface"}],"query":"javascript.builtins.WebAssembly.Memory"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"javascript.builtins.WebAssembly.Memory","dataURL":"/zh-CN/docs/WebAssembly/JavaScript_interface/Memory/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/WebAssembly\">WebAssembly</a> overview page</li>\n  <li><a href=\"/zh-CN/docs/WebAssembly/Concepts\">WebAssembly concepts</a></li>\n  <li><a href=\"/zh-CN/docs/WebAssembly/Using_the_JavaScript_API\">Using the WebAssembly JavaScript API</a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"<code>Memory</code> 实例","id":"memory_实例"},{"text":"示例","id":"示例"},{"text":"标准规范","id":"标准规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"WebAssembly.Memory() 构造函数创建一个新的 Memory 对象。该对象的 buffer 属性是一个可调整大小的 ArrayBuffer ，其内存储的是 WebAssembly 实例 所访问内存的原始字节码。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"WebAssembly.Memory","locale":"en-US","native":"English (US)"},{"title":"WebAssembly.Memory()","locale":"fr","native":"Français"},{"title":"WebAssembly.Memory()","locale":"ja","native":"日本語"},{"title":"WebAssembly.Memory()","locale":"ko","native":"한국어"}],"source":{"folder":"zh-cn/webassembly/javascript_interface/memory","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/webassembly/javascript_interface/memory/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/WebAssembly","title":"WebAssembly"},{"uri":"/zh-CN/docs/WebAssembly/JavaScript_interface","title":"WebAssembly"},{"uri":"/zh-CN/docs/WebAssembly/JavaScript_interface/Memory","title":"WebAssembly.Memory()"}],"pageTitle":"WebAssembly.Memory() - WebAssembly | MDN","noIndexing":false}}