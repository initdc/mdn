{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Subresource Integrity","mdn_url":"/zh-CN/docs/Web/Security/Subresource_Integrity","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n<ol><li><a href=\"/zh-CN/docs/Web/Security/Certificate_Transparency\">HTTP Public Key Pinning (HPKP)</a></li><li><a href=\"/zh-CN/docs/Web/Security/Subresource_Integrity\">Subresource Integrity</a></li><li><a href=\"/zh-CN/docs/Web/Security/Transport_Layer_Security\">传输层安全协议</a></li><li><a href=\"/zh-CN/docs/Web/Security/Secure_Contexts\">安全上下文</a></li><li><a href=\"/zh-CN/docs/Web/Security/Weak_Signature_Algorithm\">弱签名算法</a></li><li><a href=\"/zh-CN/docs/Web/Security/Same-origin_policy\">浏览器的同源策略</a></li><li><a href=\"/zh-CN/docs/Web/Security/Securing_your_site\">确保你的站点安全</a><ol><li><a href=\"/zh-CN/docs/Web/Security/Securing_your_site\">确保你的站点安全</a></li><li><a href=\"/zh-CN/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\">如何关闭表单自动填充</a></li></ol></li></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>子资源完整性</strong>(SRI) 是允许浏览器检查其获得的资源（例如从 <a href=\"/zh-CN/docs/Glossary/CDN\">CDN</a> 获得的）是否被篡改的一项安全特性。它通过验证获取文件的哈希值是否和你提供的哈希值一样来判断资源是否被篡改。</p>"}},{"type":"prose","value":{"id":"sri_如何工作","title":"SRI 如何工作","isH3":false,"content":"<p>\n  使用<a href=\"/zh-CN/docs/Glossary/CDN\">内容分发网络（CDN）</a>在多个站点之间共享脚本和样式表等文件可以提高站点性能并节省带宽。然而，使用 CDN 也存在风险，如果攻击者获得对 CDN 的控制权，则可以将任意恶意内容注入到 CDN 上的文件中（或完全替换掉文件）\n  ），因此可能潜在地攻击所有从该 CDN 获取文件的站点。\n</p>\n<p>子资源完整性通过确保 Web 应用程序获得的文件未经第三方注入或其他任何形式的修改来降低这种攻击的风险。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> SRI 并不能规避所有的风险。第三方库经常会自己请求额外的信息，这就有可能会携带用户的账号密码等关键信息。这些经常需要 js 功能的支持，比如一个地图库会需要取&lt;svg&gt;数据来渲染，但是包含点击事件。</p>\n</div>"}},{"type":"prose","value":{"id":"如何使用_sri","title":"如何使用 SRI","isH3":false,"content":"<p>将使用 base64 编码过后的文件哈希值写入你所引用的 <a href=\"/zh-CN/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> 或 <a href=\"/zh-CN/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> 标签的 <strong>integrity</strong> 属性值中即可启用子资源完整性功能。</p>\n<p>integrity 值分成两个部分，第一部分指定哈希值的生成算法（目前支持 sha256、sha384 及 sha512），第二部分是经过 base64 编码的实际哈希值，两者之间通过一个短横（-）分割。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> <strong>integrity</strong> 值可以包含多个由空格分隔的哈希值，只要文件匹配其中任意一个哈希值，就可以通过校验并加载该资源。</p>\n</div>\n<p>使用 base64 编码 sha384 算法计算出摘要后的 <strong>integrity</strong> 值的例子：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">sha384-oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC\n</pre></div>\n<p><code>oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC</code> 即哈希值部分，<code>sha384</code> 前缀说明使用的是 sha384 哈希方法。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> <strong>integrity</strong> 中的“hash”部分，严格来说，是一种经过特定的哈希函数转换之后的密码学摘要。但是更一般的叫法就是<strong>哈希</strong>，本文用的也是这种叫法。</p>\n</div>"}},{"type":"prose","value":{"id":"生成_sri_哈希的工具","title":"生成 SRI 哈希的工具","isH3":true,"content":"<p>你可以用 <strong>openssl</strong> 在命令行中执行如下命令来生成 SRI 哈希值：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">cat FILENAME.js | openssl dgst -sha384 -binary | openssl enc -base64 -A\n</pre></div>\n<p>或者用 <strong>shasum</strong> 在命令行中执行：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">shasum -b -a 384 FILENAME.js | xxd -r -p | base64\n</pre></div>\n<p>另外，<a href=\"https://srihash.org/\" class=\"external\" rel=\" noopener\">SRI Hash Generator</a> 是一个在线生成 SRI 哈希值的工具。</p>"}},{"type":"prose","value":{"id":"内容安全策略及子资源完整性","title":"内容安全策略及子资源完整性","isH3":false,"content":"<p>你可以根据<a href=\"/zh-CN/docs/Web/HTTP/CSP\">内容安全策略</a>来配置你的服务器使得指定类型的文件遵守 SRI。这是通过在 CSP 头部添加 <a href=\"/zh-CN/docs/Web/HTTP/Headers/Content-Security-Policy/require-sri-for\"><code>require-sri-for</code></a> 指令实现的：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">Content-Security-Policy: require-sri-for script;\n</pre></div>\n<p>这条指令规定了所有 JavaScript 都要有 integrity 属性，且通过验证才能被加载。</p>\n<p>你也可以指定所有样式表也要通过 SRI 验证：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">Content-Security-Policy: require-sri-for style;\n</pre></div>\n<p>你也可以对两者都加上验证。</p>"}},{"type":"prose","value":{"id":"范例","title":"范例","isH3":false,"content":"<p>在这个例子中，我们已知 <code>oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC</code> 是一个指定文件，比如 <code>example-framework.js</code>，经过 <code>SHA-384</code> 算法得出的摘要，同时在 <code>https://example.com/example-framework.js</code> 上有其一份拷贝。</p>"}},{"type":"prose","value":{"id":"在_script_标签中增加_sri","title":"在 script 标签中增加 SRI","isH3":true,"content":"<p>你可以使用以下的 <a href=\"/zh-CN/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> 元素告诉浏览器在执行 <code>https://example.com/example-framework.js</code> 中的内容之前，必须先比较该文件的哈希值是否和预期的一致，只有一致才能执行。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://example.com/example-framework.js<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">integrity</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sha384-oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>备注：</strong> 有关 <strong>crossorigin</strong> 属性的更多信息，见 <a href=\"/zh-CN/docs/Web/HTML/Attributes/crossorigin\">CORS settings attributes</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"浏览器如何处理_sri","title":"浏览器如何处理 SRI","isH3":false,"content":"<p>浏览器根据以下步骤处理 SRI：</p>\n<ol>\n  <li>当浏览器在 <a href=\"/zh-CN/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> 或者 <a href=\"/zh-CN/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> 标签中遇到 <strong>integrity</strong> 属性之后，会在执行脚本或者应用样式表之前对比所加载文件的哈希值和期望的哈希值。</li>\n  <li>当脚本或者样式表的哈希值和期望的不一致时，浏览器必须拒绝执行脚本或者应用样式表，并且必须返回一个网络错误说明获得脚本或样式表失败。</li>\n</ol>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"query":"html.elements.link.integrity,html.elements.script.integrity","specifications":[]}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"data":null,"query":"html.elements.link.integrity,html.elements.script.integrity","browsers":null}},{"type":"prose","value":{"id":"相关资料","title":"相关资料","isH3":false,"content":"<ul>\n  <li>Content Security Policy 内容安全策略</li>\n  <li><a href=\"/zh-CN/docs/Web/HTTP/Headers/Content-Security-Policy\"><code>Content-Security-Policy</code></a></li>\n  <li><a href=\"https://frederik-braun.com/using-subresource-integrity.html\" class=\"external\" rel=\" noopener\">A CDN that can not XSS you: Using Subresource Integrity</a></li>\n</ul>"}}],"toc":[{"text":"SRI 如何工作","id":"sri_如何工作"},{"text":"如何使用 SRI","id":"如何使用_sri"},{"text":"内容安全策略及子资源完整性","id":"内容安全策略及子资源完整性"},{"text":"范例","id":"范例"},{"text":"浏览器如何处理 SRI","id":"浏览器如何处理_sri"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"相关资料","id":"相关资料"}],"summary":"子资源完整性(SRI) 是允许浏览器检查其获得的资源（例如从 CDN 获得的）是否被篡改的一项安全特性。它通过验证获取文件的哈希值是否和你提供的哈希值一样来判断资源是否被篡改。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Subresource Integrity","locale":"en-US","native":"English (US)"},{"title":"Subresource Integrity","locale":"fr","native":"Français"},{"title":"サブリソース完全性","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/security/subresource_integrity","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/security/subresource_integrity/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/Security","title":"Web 安全"},{"uri":"/zh-CN/docs/Web/Security/Subresource_Integrity","title":"Subresource Integrity"}],"pageTitle":"Subresource Integrity - Web 安全 | MDN","noIndexing":false}}