{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Using the button role","mdn_url":"/zh-CN/docs/Web/Accessibility/ARIA/Roles/button_role","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><a href=\"https://www.w3.org/TR/wai-aria/roles#button\" class=\"external\" rel=\" noopener\">button</a></strong> 角色应该用于可单击的元素，当用户激活时触发响应。在其本身，<code>role=\"button\"</code> 可以使任何元素 (e.g. <a href=\"/zh-CN/docs/Web/HTML/Element/p\"><code>&lt;p&gt;</code></a>, <a href=\"/zh-CN/docs/Web/HTML/Element/span\"><code>&lt;span&gt;</code></a> or <a href=\"/zh-CN/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a>) 作为一个屏幕阅读器的按钮控件出现。此外，该角色还可以与 <code>aria-pressed</code> 属性组合使用，以创建切换按钮。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 在可能的情况下，建议使用原生 HTML 按钮 (<code>&lt;button&gt;</code>, <code>&lt;input type=\"button\" /&gt;</code>, <code>&lt;input type=\"submit\" /&gt;, &lt;input type=\"reset\" /&gt;</code> and <code>&lt;input type=\"image\" /&gt;</code>) 而不是按钮角色，因为原生 HTML 按钮得到了较老用户代理和辅助技术的广泛支持。原生 HTML 按钮也支持键盘和焦点需求，不需要额外的定制。</p>\n</div>"}},{"type":"prose","value":{"id":"键盘_and_聚焦","title":"键盘 and 聚焦","isH3":false,"content":"<p>按钮是交互式控件，因此其本身是可聚焦的。如果<code>button</code> 角色被添加到一个自身不可聚焦的元素 (such as <code>&lt;span&gt;</code>, <code>&lt;div&gt;</code> or <code>&lt;p&gt;</code>) 那么必须使用<code>tabindex</code> 属性来使按钮可聚焦。</p>\n<p>按钮可以由鼠标用户和键盘用户操作。对于原生 HTML <code>&lt;button&gt;</code> 元素，按钮的 <code>onclick</code> 事件会在鼠标单击和按下键盘的 <kbd>Space</kbd> or <kbd>Enter</kbd> 时被触发，同时这个按钮处于聚焦状态。但是如果使用其他标签来创建“自定义按钮”，那么<code>onclick</code>事件只会在点击鼠标光标时触发，即使使用<code>role=\"button\"</code> 。因此，开发人员必须向元素添加一个单独的关键事件处理程序，以便在按下 <kbd>Space</kbd> or <kbd>Enter</kbd> 时触发按钮。</p>\n<p><strong>Warning:</strong> 把给一个链接标记为按钮角色的链接时要谨慎。按钮将使用 <kbd>Space</kbd> or <kbd>Enter</kbd> 键触发，而链接被期望使用 <kbd>Enter</kbd> 键触发。换句话说，当链接被用来作为按钮的时候，仅仅添加<code>role=\"button\"</code>是不够的。还需要添加一个 key 事件处理程序来侦听 <kbd>Space</kbd> 键，以便与原生按钮保持一致。</p>"}},{"type":"prose","value":{"id":"可切换的按钮","title":"可切换的按钮","isH3":false,"content":"<p>使用<code>role=\"button\"</code>的一个优点是它允许创建切换按钮。一个切换按钮可以有两个状态:pressed，not pressed。除了 <code>button</code>角色之外，按钮是否为切换按钮，也可以用<code>aria-pressed</code>的属性来表示。</p>\n<ul>\n  <li>如果没有 <code>aria-pressed</code>表明这不是一个切换按钮。</li>\n  <li>如果 <code>aria-pressed=\"false\"</code> 表示这个按钮当前是 not pressed 的。</li>\n  <li>如果 <code>aria-pressed=\"true\"</code> 表示这个按钮当前是 pressed 的。</li>\n  <li>如果 <code>aria-pressed=\"mixed\"</code> 则认为按钮部分是 partially pressed 的。</li>\n</ul>"}},{"type":"prose","value":{"id":"labeling_buttons","title":"Labeling buttons","isH3":false,"content":"<p>按钮应该总是有一个可访问的名称。对于大多数按钮，这个名称将与按钮中的文本相同。在某些情况下，例如图标按钮，可通过 <a href=\"/zh-CN/docs/Web/Accessibility/ARIA/Attributes/aria-label\"><code>aria-label</code></a> 或 <a href=\"/zh-CN/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby\"><code>aria-labelledby</code></a> 属性提供可访问的名称。</p>"}},{"type":"prose","value":{"id":"对用户代理和辅助技术的可能影响","title":"对用户代理和辅助技术的可能影响","isH3":false,"content":"<p>当使用 <code>button</code> 角色时，用户代理应该将该元素公开为操作系统的易访问性 API 中的按钮控件。屏幕阅读器应该将元素声明为一个按钮并描述其可访问的名称。语音识别软件应该可以通过说：\"点击\"+ 按钮的可访问的 name 就能激活这个按钮。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 关于辅助技术如何处理这种技术，意见可能有所不同。上面所提供的信息是其中之一，因此并非规范。</p>\n</div>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"aria_basic_button","title":"ARIA Basic Button","isH3":true,"content":"<p>在下面的代码片段中，一个 span 元素已经被赋予了按钮角色。由于使用的是 <code>&lt;span&gt;</code> 元素，因此需要提供 <code>tabindex</code> 属性使按钮的可聚焦并成为 tab 顺序流中的一部分。注意，这段代码提供了 CSS 样式，以使 <code>&lt;span&gt;</code>元素看起来像一个按钮， <code>handleBtnClick</code> 和<code>handleBtnKeyPress</code> 是事件处理程序，当鼠标单击、 <kbd>Space</kbd> or <kbd>Enter</kbd> 被按下时，执行该按钮的操作。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">handleBtnClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">onKeyPress</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleBtnKeyPress()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Save<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"aria_toggle_button","title":"ARIA Toggle Button","isH3":true,"content":"<p>在这个片段中，使用 <code>button</code> 角色和 <code>aria-pressed</code> 属性，来将 <code>&lt;span&gt;</code> 元素转换为一个切换按钮，当按钮被激活时， <code>aria-pressed</code> 的值在 true 和 false 之间切换。</p>\n<h4 id=\"html\">HTML</h4>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-pressed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">handleBtnClick</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n  Native button toggle\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span>\n <span class=\"token attr-name\">aria-pressed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">handleBtnClick</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span>\n <span class=\"token attr-name\">onKeyPress</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleBtnKeyPress(event)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  Span button toggle\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<h4 id=\"css\">CSS</h4>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">button,\n[role=\"button\"]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #CCC<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">button[aria-pressed=\"true\"],\n[role=\"button\"][aria-pressed=\"true\"]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 2px solid #000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"javascript\">JavaScript</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleBtnClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">toggleButton</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleBtnKeyPress</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Check to see if space or enter were pressed</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">||</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">\"Enter\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Prevent the default action to stop scrolling when space is pressed</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">toggleButton</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">toggleButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Check to see if the button is pressed</span>\n  <span class=\"token keyword\">var</span> pressed <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aria-pressed\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Change aria-pressed to the opposite state</span>\n  element<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aria-pressed\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span>pressed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"result","title":"Result","isH3":true,"content":"<iframe class=\"sample-code-frame\" title=\"ARIA Toggle Button sample\" id=\"frame_aria_toggle_button\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-CN/docs/Web/Accessibility/ARIA/Roles/button_role/_sample_.aria_toggle_button.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"notes","title":"Notes","isH3":false,"content":""}},{"type":"prose","value":{"id":"aria_attributes_used","title":"ARIA attributes used","isH3":true,"content":"<ul>\n  <li><a href=\"https://www.w3.org/TR/wai-aria/roles#button\" class=\"external\" rel=\" noopener\"><code>button</code></a></li>\n  <li><a href=\"https://www.w3.org/TR/wai-aria/states_and_properties#aria-pressed\" class=\"external\" rel=\" noopener\"><code>aria-pressed</code></a></li>\n</ul>"}},{"type":"prose","value":{"id":"additional_resources","title":"Additional resources","isH3":true,"content":"<ul>\n  <li><a href=\"https://www.w3.org/TR/html5/dom.html#aria-usage-note\" class=\"external\" rel=\" noopener\">Strong native semantics in HTML5</a></li>\n  <li><a href=\"https://www.w3.org/TR/aria-in-html/\" class=\"external\" rel=\" noopener\">Notes on Using ARIA in HTML</a></li>\n</ul>"}}],"toc":[{"text":"键盘 and 聚焦","id":"键盘_and_聚焦"},{"text":"可切换的按钮","id":"可切换的按钮"},{"text":"Labeling buttons","id":"labeling_buttons"},{"text":"对用户代理和辅助技术的可能影响","id":"对用户代理和辅助技术的可能影响"},{"text":"Examples","id":"examples"},{"text":"Notes","id":"notes"}],"summary":"button 角色应该用于可单击的元素，当用户激活时触发响应。在其本身，role=\"button\" 可以使任何元素 (e.g. <p>, <span> or <div>) 作为一个屏幕阅读器的按钮控件出现。此外，该角色还可以与 aria-pressed 属性组合使用，以创建切换按钮。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"ARIA: button role","locale":"en-US","native":"English (US)"},{"title":"ARIA : le rôle button","locale":"fr","native":"Français"},{"title":"ARIA: button ロール","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/accessibility/aria/roles/button_role","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/accessibility/aria/roles/button_role/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/Accessibility","title":"无障碍"},{"uri":"/zh-CN/docs/Web/Accessibility/ARIA","title":"ARIA"},{"uri":"/zh-CN/docs/Web/Accessibility/ARIA/Roles","title":"WAI-ARIA Roles"},{"uri":"/zh-CN/docs/Web/Accessibility/ARIA/Roles/button_role","title":"Using the button role"}],"pageTitle":"Using the button role - 无障碍 | MDN","noIndexing":false}}