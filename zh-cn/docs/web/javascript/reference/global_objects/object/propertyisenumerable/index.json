{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Object.prototype.propertyIsEnumerable()","mdn_url":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects\">标准内置对象</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>属性</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>方法</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"><code>Object.assign()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\"><code>Object.defineProperties()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"><code>Object.entries()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\"><code>Object.freeze()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\"><code>Object.fromEntries()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\"><code>Object.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors\"><code>Object.getOwnPropertyDescriptors()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\"><code>Object.getOwnPropertyNames()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\"><code>Object.getOwnPropertySymbols()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/GetPrototypeOf\"><code>Object.getPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn\"><code>Object.hasOwn()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\"><code>Object.isFrozen()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\"><code>Object.isSealed()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\"><code>Object.preventExtensions()</code></a></li><li><em><code>Object.prototype.propertyIsEnumerable()</code></em></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\"><code>Object.seal()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/values\"><code>Object.values()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>propertyIsEnumerable()</code></strong> 方法返回一个布尔值，表示指定的属性是否可枚举。</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/object-prototype-propertyisenumerable.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">obj.propertyIsEnumerable(prop)\n</pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"prop\"><code>prop</code></dt>\n  <dd>\n    <p>需要测试的属性名。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>用来表示指定的属性名是否可枚举的<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>布尔值</code></a>。</p>"}},{"type":"prose","value":{"id":"描述","title":"描述","isH3":false,"content":"<p>每个对象都有一个 <code>propertyIsEnumerable</code> 方法。此方法可以确定对象中指定的属性是否可以被 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a> 循环枚举，但是通过原型链继承的属性除外。如果对象没有指定的属性，则此方法返回 <code>false</code>。</p>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":""}},{"type":"prose","value":{"id":"propertyisenumerable_方法的基本用法","title":"<code>propertyIsEnumerable</code> 方法的基本用法","isH3":true,"content":"<p>下面的例子演示了 <code>propertyIsEnumerable</code> 方法在普通对象和数组上的基本用法：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\no<span class=\"token punctuation\">.</span>prop <span class=\"token operator\">=</span> <span class=\"token string\">'is enumerable'</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'is enumerable'</span><span class=\"token punctuation\">;</span>\n\no<span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'prop'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回 true</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 返回 true</span>\n</code></pre></div>","titleAsText":"propertyIsEnumerable 方法的基本用法"}},{"type":"prose","value":{"id":"用户自定义对象和内置对象","title":"用户自定义对象和内置对象","isH3":true,"content":"<p>下面的例子演示了用户自定义对象和内置对象上属性可枚举性的区别。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'is enumerable'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\na<span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 返回 true</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'length'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回 false</span>\n\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'random'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回 false</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Math'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 返回 false</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"自身属性和继承属性","title":"自身属性和继承属性","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'constructor'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回 false</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">firstConstructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>property <span class=\"token operator\">=</span> <span class=\"token string\">'is not enumerable'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nfirstConstructor<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">firstMethod</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">secondConstructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">method</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string\">'is enumerable'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nsecondConstructor<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">firstConstructor</span><span class=\"token punctuation\">;</span>\nsecondConstructor<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">=</span> secondConstructor<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">secondConstructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\no<span class=\"token punctuation\">.</span>arbitraryProperty <span class=\"token operator\">=</span> <span class=\"token string\">'is enumerable'</span><span class=\"token punctuation\">;</span>\n\no<span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'arbitraryProperty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回 true</span>\no<span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'method'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 返回 true</span>\no<span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'property'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 返回 false</span>\n\no<span class=\"token punctuation\">.</span>property <span class=\"token operator\">=</span> <span class=\"token string\">'is enumerable'</span><span class=\"token punctuation\">;</span>\n\no<span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'property'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 返回 true</span>\n\n<span class=\"token comment\">// 之所以这些会返回 false，是因为，在原型链上 propertyIsEnumerable 不被考虑</span>\n<span class=\"token comment\">// (尽管最后两个在 for-in 循环中可以被循环出来)。</span>\no<span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'prototype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 返回 false (根据 JS 1.8.1/FF3.6)</span>\no<span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'constructor'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回 false</span>\no<span class=\"token punctuation\">.</span><span class=\"token function\">propertyIsEnumerable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'firstMethod'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回 false</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.prototype.propertyisenumerable","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Object.propertyIsEnumerable"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"javascript.builtins.Object.propertyIsEnumerable","dataURL":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable/bcd.json"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">属性的可枚举性和所有权</a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys()</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"描述","id":"描述"},{"text":"例子","id":"例子"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"相关链接","id":"相关链接"}],"summary":"propertyIsEnumerable() 方法返回一个布尔值，表示指定的属性是否可枚举。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Object.prototype.propertyIsEnumerable()","locale":"en-US","native":"English (US)"},{"title":"Object.prototype.propertyIsEnumerable()","locale":"es","native":"Español"},{"title":"Object.prototype.propertyIsEnumerable()","locale":"fr","native":"Français"},{"title":"Object.prototype.propertyIsEnumerable()","locale":"ja","native":"日本語"},{"title":"Object.prototype.propertyIsEnumerable()","locale":"ko","native":"한국어"},{"title":"Object.prototype.propertyIsEnumerable()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Object.prototype.propertyIsEnumerable()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/javascript/reference/global_objects/object/propertyisenumerable","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/javascript/reference/global_objects/object/propertyisenumerable/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference","title":"JavaScript 参考"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects","title":"JavaScript 标准内置对象"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object","title":"Object"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable","title":"Object.prototype.propertyIsEnumerable()"}],"pageTitle":"Object.prototype.propertyIsEnumerable() - JavaScript | MDN","noIndexing":false}}