{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Proxy","mdn_url":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects\">标准内置对象</a></strong></li><li><strong><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\"><code>Proxy/handler</code> <small>(en-US)</small></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>方法</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/apply\"><code>handler.apply()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/construct\"><code>handler.construct()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/defineProperty\"><code>handler.defineProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/deleteProperty\"><code>handler.deleteProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/get\"><code>handler.get()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor\"><code>handler.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getPrototypeOf\"><code>handler.getPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/has\"><code>handler.has()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/isExtensible\"><code>handler.isExtensible()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/ownKeys\"><code>handler.ownKeys()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/preventExtensions\"><code>handler.preventExtensions()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set\"><code>handler.set()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/setPrototypeOf\"><code>handler.setPrototypeOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>Proxy</strong> 对象用于创建一个对象的代理，从而实现基本操作的拦截和自定义（如属性查找、赋值、枚举、函数调用等）。</p>"}},{"type":"prose","value":{"id":"术语","title":"术语","isH3":false,"content":"<dl>\n  <dt id=\"handler_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\"><code><dfn>handler</dfn></code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>包含捕捉器（trap）的占位符对象，可译为处理器对象。</p>\n  </dd>\n  <dt id=\"traps\"><em>traps</em></dt>\n  <dd>\n    <p>提供属性访问的方法。这类似于操作系统中捕获器的概念。</p>\n  </dd>\n  <dt id=\"target\"><em>target</em></dt>\n  <dd>\n    <p>被 Proxy 代理虚拟化的对象。它常被作为代理的存储后端。根据目标验证关于对象不可扩展性或不可配置属性的不变量（保持不变的语义）。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">const p = new Proxy(target, handler)\n</pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"target_2\"><code>target</code></dt>\n  <dd>\n    <p>要使用 <code>Proxy</code> 包装的目标对象（可以是任何类型的对象，包括原生数组，函数，甚至另一个代理）。</p>\n  </dd>\n  <dt id=\"handler\"><code>handler</code></dt>\n  <dd>\n    <p>一个通常以函数作为属性的对象，各属性中的函数分别定义了在执行各种操作时代理 <code>p</code> 的行为。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"proxy.revocable\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/revocable\"><code>Proxy.revocable()</code></a></dt>\n  <dd>\n    <p>创建一个可撤销的<code>Proxy</code>对象。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"handler_对象的方法","title":"handler 对象的方法","isH3":false,"content":"<p><code>handler</code> 对象是一个容纳一批特定属性的占位符对象。它包含有 <code>Proxy</code> 的各个捕获器（trap）。</p>\n<p>所有的捕捉器是可选的。如果没有定义某个捕捉器，那么就会保留源对象的默认行为。</p>\n<dl>\n  <dt id=\"handler.getprototypeof\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getPrototypeOf\"><code>handler.getPrototypeOf()</code></a></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/GetPrototypeOf\"><code>Object.getPrototypeOf</code></a> 方法的捕捉器。</p>\n  </dd>\n  <dt id=\"handler.setprototypeof\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/setPrototypeOf\"><code>handler.setPrototypeOf()</code></a></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf</code></a> 方法的捕捉器。</p>\n  </dd>\n  <dt id=\"handler.isextensible\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/isExtensible\"><code>handler.isExtensible()</code></a></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible</code></a> 方法的捕捉器。</p>\n  </dd>\n  <dt id=\"handler.preventextensions\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/preventExtensions\"><code>handler.preventExtensions()</code></a></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\"><code>Object.preventExtensions</code></a> 方法的捕捉器。</p>\n  </dd>\n  <dt id=\"handler.getownpropertydescriptor\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor\"><code>handler.getOwnPropertyDescriptor()</code></a></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\"><code>Object.getOwnPropertyDescriptor</code></a> 方法的捕捉器。</p>\n  </dd>\n  <dt id=\"handler.defineproperty\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/defineProperty\"><code>handler.defineProperty()</code></a></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty</code></a> 方法的捕捉器。</p>\n  </dd>\n  <dt id=\"handler.has\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/has\"><code>handler.has()</code></a></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators/in\"><code>in</code></a> 操作符的捕捉器。</p>\n  </dd>\n  <dt id=\"handler.get\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/get\"><code>handler.get()</code></a></dt>\n  <dd>\n    <p>属性读取操作的捕捉器。</p>\n  </dd>\n  <dt id=\"handler.set\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set\"><code>handler.set()</code></a></dt>\n  <dd>\n    <p>属性设置操作的捕捉器。</p>\n  </dd>\n  <dt id=\"handler.deleteproperty\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/deleteProperty\"><code>handler.deleteProperty()</code></a></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators/delete\"><code>delete</code></a> 操作符的捕捉器。</p>\n  </dd>\n  <dt id=\"handler.ownkeys\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/ownKeys\"><code>handler.ownKeys()</code></a></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\"><code>Object.getOwnPropertyNames</code></a> 方法和 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\"><code>Object.getOwnPropertySymbols</code></a> 方法的捕捉器。</p>\n  </dd>\n  <dt id=\"handler.apply\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/apply\"><code>handler.apply()</code></a></dt>\n  <dd>\n    <p>函数调用操作的捕捉器。</p>\n  </dd>\n  <dt id=\"handler.construct\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/construct\"><code>handler.construct()</code></a></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a> 操作符的捕捉器。</p>\n  </dd>\n</dl>\n<p>一些不标准的捕捉器已经被<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features#proxy\">废弃并且移除</a>了。</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":""}},{"type":"prose","value":{"id":"基础示例","title":"基础示例","isH3":true,"content":"<p>在以下简单的例子中，当对象中不存在属性名时，默认返回值为 <code>37</code>。下面的代码以此展示了 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/get\"><code>get</code></a> handler 的使用场景。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> handler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> prop</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> prop <span class=\"token keyword\">in</span> obj <span class=\"token operator\">?</span> obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token number\">37</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\np<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\np<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 1, undefined</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c'</span> <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false, 37</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"无操作转发代理","title":"无操作转发代理","isH3":true,"content":"<p>在以下例子中，我们使用了一个原生 JavaScript 对象，代理会将所有应用到它的操作转发到这个对象上。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\np<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">37</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 操作转发到目标</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 37. 操作已经被正确地转发</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"验证","title":"验证","isH3":true,"content":"<p>通过代理，你可以轻松地验证向一个对象的传值。下面的代码借此展示了 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set\"><code>set</code></a> handler 的作用。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> validator <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop <span class=\"token operator\">===</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The age is not an integer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">&gt;</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RangeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The age seems invalid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// The default behavior to store the value</span>\n    obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 表示成功</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> validator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nperson<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 100</span>\n\nperson<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token string\">'young'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 抛出异常：Uncaught TypeError: The age is not an integer</span>\n\nperson<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 抛出异常：Uncaught RangeError: The age seems invalid</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"扩展构造函数","title":"扩展构造函数","isH3":true,"content":"<p>方法代理可以轻松地通过一个新构造函数来扩展一个已有的构造函数。这个例子使用了<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/construct\"><code>construct</code></a>和<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/apply\"><code>apply</code></a>。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sup<span class=\"token punctuation\">,</span> base</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> descriptor <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyDescriptor</span><span class=\"token punctuation\">(</span>\n    base<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> <span class=\"token string\">\"constructor\"</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  base<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>sup<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> handler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">construct</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">apply</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> that<span class=\"token punctuation\">,</span> args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">sup</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>that<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>that<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> proxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  descriptor<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> proxy<span class=\"token punctuation\">;</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> <span class=\"token string\">\"constructor\"</span><span class=\"token punctuation\">,</span> descriptor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> proxy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">Person</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> Boy <span class=\"token operator\">=</span> <span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>Person<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">Boy</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>sex <span class=\"token operator\">=</span> <span class=\"token string\">\"M\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> Peter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boy</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Peter\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Peter<span class=\"token punctuation\">.</span>sex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \"M\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Peter<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Peter\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Peter<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 13</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"操作_dom_节点","title":"操作 DOM 节点","isH3":true,"content":"<p>有时，我们可能需要互换两个不同的元素的属性或类名。下面的代码以此为目标，展示了 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set\"><code>set</code></a> handler 的使用场景。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> view <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">selected</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> newval</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> oldval <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop <span class=\"token operator\">===</span> <span class=\"token string\">'selected'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldval<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        oldval<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aria-selected'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'false'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newval<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        newval<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aria-selected'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'true'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 默认行为是存储被传入 setter 函数的属性值</span>\n    obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> newval<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 表示操作成功</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> i1 <span class=\"token operator\">=</span> view<span class=\"token punctuation\">.</span>selected <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'item-1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i1<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aria-selected'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'true'</span>\n\n<span class=\"token keyword\">let</span> i2 <span class=\"token operator\">=</span> view<span class=\"token punctuation\">.</span>selected <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'item-2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i1<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aria-selected'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'false'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i2<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aria-selected'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'true'</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"值修正及附加属性","title":"值修正及附加属性","isH3":true,"content":"<p>以下<code>products</code>代理会计算传值并根据需要转换为数组。这个代理对象同时支持一个叫做 <code>latestBrowser</code>的附加属性，这个属性可以同时作为 getter 和 setter。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> products <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">browsers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Internet Explorer'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Netscape'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> prop</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 附加一个属性</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop <span class=\"token operator\">===</span> <span class=\"token string\">'latestBrowser'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">.</span>browsers<span class=\"token punctuation\">[</span>obj<span class=\"token punctuation\">.</span>browsers<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 默认行为是返回属性值</span>\n    <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 附加属性</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop <span class=\"token operator\">===</span> <span class=\"token string\">'latestBrowser'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      obj<span class=\"token punctuation\">.</span>browsers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 如果不是数组，则进行转换</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      value <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 默认行为是保存属性值</span>\n    obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 表示成功</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">.</span>browsers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['Internet Explorer', 'Netscape']</span>\nproducts<span class=\"token punctuation\">.</span>browsers <span class=\"token operator\">=</span> <span class=\"token string\">'Firefox'</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 如果不小心传入了一个字符串</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">.</span>browsers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['Firefox'] &lt;- 也没问题，得到的依旧是一个数组</span>\n\nproducts<span class=\"token punctuation\">.</span>latestBrowser <span class=\"token operator\">=</span> <span class=\"token string\">'Chrome'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">.</span>browsers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// ['Firefox', 'Chrome']</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">.</span>latestBrowser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Chrome'</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"通过属性查找数组中的特定对象","title":"通过属性查找数组中的特定对象","isH3":true,"content":"<p>以下代理为数组扩展了一些实用工具。如你所见，通过 Proxy，我们可以灵活地“定义”属性，而不需要使用 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\"><code>Object.defineProperties</code></a> 方法。以下例子可以用于通过单元格来查找表格中的一行。在这种情况下，target 是 <a href=\"/en-US/docs/Web/API/HTMLTableElement/rows\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">table.rows (en-US)</a>。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> products <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Firefox'</span>    <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'browser'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'SeaMonkey'</span>  <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'browser'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Thunderbird'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'mailer'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> prop</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 默认行为是返回属性值，prop ?通常是一个整数</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 获取 products 的 number; 它是 products.length 的别名</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop <span class=\"token operator\">===</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">let</span> result<span class=\"token punctuation\">,</span> types <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> product <span class=\"token keyword\">of</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> prop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        result <span class=\"token operator\">=</span> product<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>types<span class=\"token punctuation\">[</span>product<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        types<span class=\"token punctuation\">[</span>product<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        types<span class=\"token punctuation\">[</span>product<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>product<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 通过 name 获取 product</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 通过 type 获取 products</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop <span class=\"token keyword\">in</span> types<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> types<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 获取 product type</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop <span class=\"token operator\">===</span> <span class=\"token string\">'types'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>types<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { name: 'Firefox', type: 'browser' }</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">[</span><span class=\"token string\">'Firefox'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { name: 'Firefox', type: 'browser' }</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">[</span><span class=\"token string\">'Chrome'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">.</span>browser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [{ name: 'Firefox', type: 'browser' }, { name: 'SeaMonkey', type: 'browser' }]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['browser', 'mailer']</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"一个完整的_traps_列表示例","title":"一个完整的 <code>traps</code> 列表示例","isH3":true,"content":"<p>出于教学目的，这里为了创建一个完整的 traps 列表示例，我们将尝试代理化一个非原生对象，这特别适用于这类操作：由 <a href=\"/en-US/docs/Web/API/document/cookie#a_little_framework.3a_a_complete_cookies_reader.2fwriter_with_full_unicode_support\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">发布在 document.cookie 页面上的“小型框架” (en-US)</a>创建的<code>docCookies</code>全局对象。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/*\n  var docCookies = ... get the \"docCookies\" object here:\n  https://developer.mozilla.org/zh-CN/docs/DOM/document.cookie#A_little_framework.3A_a_complete_cookies_reader.2Fwriter_with_full_unicode_support\n*/</span>\n\n<span class=\"token keyword\">var</span> docCookies <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>docCookies<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"get\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">oTarget<span class=\"token punctuation\">,</span> sKey</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> oTarget<span class=\"token punctuation\">[</span>sKey<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> oTarget<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>sKey<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"set\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">oTarget<span class=\"token punctuation\">,</span> sKey<span class=\"token punctuation\">,</span> vValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sKey <span class=\"token keyword\">in</span> oTarget<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> oTarget<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>sKey<span class=\"token punctuation\">,</span> vValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"deleteProperty\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">oTarget<span class=\"token punctuation\">,</span> sKey</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sKey <span class=\"token keyword\">in</span> oTarget<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> oTarget<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span>sKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"enumerate\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">oTarget<span class=\"token punctuation\">,</span> sKey</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> oTarget<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"ownKeys\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">oTarget<span class=\"token punctuation\">,</span> sKey</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> oTarget<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"has\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">oTarget<span class=\"token punctuation\">,</span> sKey</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> sKey <span class=\"token keyword\">in</span> oTarget <span class=\"token operator\">||</span> oTarget<span class=\"token punctuation\">.</span><span class=\"token function\">hasItem</span><span class=\"token punctuation\">(</span>sKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"defineProperty\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">oTarget<span class=\"token punctuation\">,</span> sKey<span class=\"token punctuation\">,</span> oDesc</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oDesc <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"value\"</span> <span class=\"token keyword\">in</span> oDesc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> oTarget<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>sKey<span class=\"token punctuation\">,</span> oDesc<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> oTarget<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"getOwnPropertyDescriptor\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">oTarget<span class=\"token punctuation\">,</span> sKey</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> vValue <span class=\"token operator\">=</span> oTarget<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>sKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> vValue <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> vValue<span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"writable\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"enumerable\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"configurable\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* Cookies 测试 */</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>docCookies<span class=\"token punctuation\">.</span>my_cookie1 <span class=\"token operator\">=</span> <span class=\"token string\">\"First value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>docCookies<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my_cookie1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndocCookies<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my_cookie1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Changed value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>docCookies<span class=\"token punctuation\">.</span>my_cookie1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"一个完整的 traps 列表示例"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/reflection.html#sec-proxy-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Proxy"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"javascript.builtins.Proxy","dataURL":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/bcd.json"}},{"type":"prose","value":{"id":"参考","title":"参考","isH3":false,"content":"<ul>\n  <li><a href=\"http://jsconf.eu/2010/speaker/be_proxy_objects.html\" class=\"external\" rel=\" noopener\">\"Proxies are awesome\" Brendan Eich presentation at JSConf</a> (<a href=\"https://www.slideshare.net/BrendanEich/metaprog-5303821\" class=\"external\" rel=\" noopener\">slides</a>)</li>\n  <li><a href=\"http://wiki.ecmascript.org/doku.php?id=harmony:proxies\" class=\"external\" rel=\" noopener\">ECMAScript Harmony Proxy proposal page</a> and <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony:proxies_semantics\" class=\"external\" rel=\" noopener\">ECMAScript Harmony proxy semantics page</a></li>\n  <li><a href=\"http://soft.vub.ac.be/~tvcutsem/proxies/\" class=\"external\" rel=\" noopener\">Tutorial on proxies</a></li>\n  <li><a href=\"/zh-CN/docs/JavaScript/Old_Proxy_API\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">SpiderMonkey specific Old Proxy API</a></li>\n  <li><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Object.watch()</code></a> is a non-standard feature but has been supported in Gecko for a long time.</li>\n</ul>"}},{"type":"prose","value":{"id":"版权声明","title":"版权声明","isH3":false,"content":"<p>一些内容（如文本、例子）是复制自或修改自<a href=\"http://wiki.ecmascript.org/doku.php\" class=\"external\" rel=\" noopener\">ECMAScript wiki</a>（版权声明 <a href=\"https://creativecommons.org/licenses/by-nc-sa/2.0/\" class=\"external\" rel=\" noopener\">CC 2.0 BY-NC-SA</a>）。</p>"}}],"toc":[{"text":"术语","id":"术语"},{"text":"语法","id":"语法"},{"text":"方法","id":"方法"},{"text":"handler 对象的方法","id":"handler_对象的方法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参考","id":"参考"},{"text":"版权声明","id":"版权声明"}],"summary":"Proxy 对象用于创建一个对象的代理，从而实现基本操作的拦截和自定义（如属性查找、赋值、枚举、函数调用等）。","popularity":0.0067,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Proxy","locale":"en-US","native":"English (US)"},{"title":"Proxy","locale":"es","native":"Español"},{"title":"Proxy","locale":"fr","native":"Français"},{"title":"Proxy","locale":"ja","native":"日本語"},{"title":"Proxy","locale":"ko","native":"한국어"},{"title":"Proxy","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Прокси","locale":"ru","native":"Русский"},{"title":"Proxy","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/javascript/reference/global_objects/proxy","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/javascript/reference/global_objects/proxy/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference","title":"JavaScript 参考"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects","title":"JavaScript 标准内置对象"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy","title":"Proxy"}],"pageTitle":"Proxy - JavaScript | MDN","noIndexing":false}}