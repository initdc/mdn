{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Date.parse()","mdn_url":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/parse","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects\">标准内置对象</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>方法</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/@@toPrimitive\"><code>Date.prototype[@@toPrimitive]</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getDate\"><code>Date.prototype.getDate()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay\"><code>Date.prototype.getDay()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getFullYear\"><code>Date.prototype.getFullYear()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getHours\"><code>Date.prototype.getHours()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getMilliseconds\"><code>Date.prototype.getMilliseconds()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getMinutes\"><code>Date.prototype.getMinutes()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getMonth\"><code>Date.prototype.getMonth()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getSeconds\"><code>Date.prototype.getSeconds()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime\"><code>Date.prototype.getTime()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\"><code>Date.prototype.getTimezoneOffset()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDate\"><code>Date.prototype.getUTCDate()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDay\"><code>Date.prototype.getUTCDay()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCFullYear\"><code>Date.prototype.getUTCFullYear()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCHours\"><code>Date.prototype.getUTCHours()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMilliseconds\"><code>Date.prototype.getUTCMilliseconds()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMinutes\"><code>Date.prototype.getUTCMinutes()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMonth\"><code>Date.prototype.getUTCMonth()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCSeconds\"><code>Date.prototype.getUTCSeconds()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getYear\"><code>Date.prototype.getYear()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/now\"><code>Date.now()</code></a></li><li><em><code>Date.parse()</code></em></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setDate\"><code>Date.prototype.setDate()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setFullYear\"><code>Date.prototype.setFullYear()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setHours\"><code>Date.prototype.setHours()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setMilliseconds\"><code>Date.prototype.setMilliseconds()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setMinutes\"><code>Date.prototype.setMinutes()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setMonth\"><code>Date.prototype.setMonth()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setSeconds\"><code>Date.prototype.setSeconds()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setTime\"><code>Date.prototype.setTime()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCDate\"><code>Date.prototype.setUTCDate()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCFullYear\"><code>Date.prototype.setUTCFullYear()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCHours\"><code>Date.prototype.setUTCHours()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMilliseconds\"><code>Date.prototype.setUTCMilliseconds()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMinutes\"><code>Date.prototype.setUTCMinutes()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMonth\"><code>Date.prototype.setUTCMonth()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCSeconds\"><code>Date.prototype.setUTCSeconds()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setYear\"><code>Date.prototype.setYear()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toDateString\"><code>Date.prototype.toDateString()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toGMTString\"><code>Date.prototype.toGMTString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\"><code>Date.prototype.toISOString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON\"><code>Date.prototype.toJSON()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleDateString\"><code>Date.prototype.toLocaleDateString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\"><code>Date.prototype.toLocaleString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\"><code>Date.prototype.toLocaleTimeString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toString\"><code>Date.prototype.toString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toTimeString\"><code>Date.prototype.toTimeString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\"><code>Date.prototype.toUTCString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC\"><code>Date.UTC()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/valueOf\"><code>Date.prototype.valueOf()</code></a></li></ol></li><li><strong>继承</strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>属性</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>方法</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Date.parse()</code></strong> 方法解析一个表示某个日期的字符串，并返回从 1970-1-1 00:00:00 UTC 到该日期对象（该日期对象的 UTC 时间）的毫秒数，如果该字符串无法识别，或者一些情况下，包含了不合法的日期数值（如：2015-02-31），则返回值为 NaN。</p>\n<p>不推荐在 ES5 之前使用 Date.parse 方法，因为字符串的解析完全取决于实现。直到至今，不同宿主在如何解析日期字符串上仍存在许多差异，因此最好还是手动解析日期字符串（在需要适应不同格式时库能起到很大帮助）。</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/date-parse.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<p>显式调用：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">Date.parse(dateString)\n</pre></div>\n<p><code>隐式调用：</code></p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">new Date(dateString).getTime()\n</pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"datestring\"><code>dateString</code></dt>\n  <dd>\n    <p>一个符合 <a href=\"https://tools.ietf.org/html/rfc2822#page-14\" class=\"external\" rel=\" noopener\">RFC2822</a> 或 ISO 8601 日期格式的字符串（其他格式也许也支持，但结果可能与预期不符）。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>一个表示从 1970-1-1 00:00:00 UTC 到给定日期字符串所表示时间的毫秒数的数值。如果参数不能解析为一个有效的日期，则返回<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>。</p>"}},{"type":"prose","value":{"id":"描述","title":"描述","isH3":false,"content":"<p><code>parse</code> 方法接受一个日期字符串（例如 \"<code>Dec 25, 1995</code>\"），并返回从 1970-1-1 00:00:00 UTC 到该日期字符串所表示日期的毫秒数。该方法在基于字符串值设置日期值时很有用，例如结合使用<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setTime\"><code>setTime()</code></a> 方法和 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date()</code></a> 构造函数。</p>\n<p><code>parse</code> 方法接受一个表示时间的字符串，返回相应的时间值。该方法可以接受符合 RFC2822 / IETF 日期语法 (<a href=\"https://tools.ietf.org/html/rfc2822#page-14\" class=\"external\" rel=\" noopener\">RFC2822 Section 3.3</a>) 的字符串，如 \"<code>Mon, 25 Dec 1995 13:30:00 GMT</code>\"。该方法能够理解美国大陆时区的缩写，但是为了更通用，应该使用时区偏移，如 \"<code>Mon, 25 Dec 1995 13:30:00 +0430</code>\"（格林威治的子午线向东偏移 4 小时 30 分钟）。如果没有指定时区，默认使用本地时区。</p>\n<p>GMT 和 UTC 被看作相等。如果 <a href=\"https://tools.ietf.org/html/rfc2822#page-14\" class=\"external\" rel=\" noopener\">RFC2822 Section 3.3</a> 格式中不包含时区信息时，会以本地时区来解析日期字符串。</p>\n<p>由于在解析日期字符串时存在偏差会导致结果不一致，因此推荐始终手动解析日期字符串，特别是不同的 ECMAScript 实现会把诸如“2015-10-12 12:00:00”的字符串解析为 NaN，UTC 或者本地时间。</p>"}},{"type":"prose","value":{"id":"ecmascript_5_iso-8601_日期格式支持","title":"ECMAScript 5 ISO-8601 日期格式支持","isH3":true,"content":"<p>另外，日期时间字符串也可以使用 <a href=\"https://www.w3.org/TR/NOTE-datetime\" class=\"external\" rel=\" noopener\">ISO 8601</a> 格式。例如，\"<code>2011-10-10</code>\"（仅日期）或 \"<code>2011-10-10T14:48:00</code>\"（日期和时间）能够作为参数被传递和解析。如果参数字符串只包含日期格式，那么将会使用 UTC 时区来解析该参数。而如果是<a href=\"https://www.w3.org/TR/NOTE-datetime\" class=\"external\" rel=\" noopener\">ISO 8601</a> 格式中规定的时间加日期的格式，则将会被作为本地时区处理。</p>\n<p>虽然在日期字符串解析过程中会使用时区修饰符，但返回值总会是从由 NaN 表示的 1970-1-1 00:00:00 UTC 到该日期字符串所表示日期的毫秒数。</p>\n<p>由于 <code>parse()</code> 是 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> 的一个静态方法 , 所以应该使用 <code>Date.parse()</code> 来调用，而不是作为 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> 的实例方法。</p>"}},{"type":"prose","value":{"id":"默认时区的区别","title":"默认时区的区别","isH3":true,"content":"<p>当输入为 \"<code>March 7, 2014</code>\" 时， <code>parse()</code> 将默认使用本地时区。但如果使用 ISO 格式如 <code>\"2014-03-07\"</code> ，则会被默认为 UTC (ES5 和 ECMAScript 2015) 时区。因此除非系统本地时区为 UTC，由这些字符串解析出的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> 对象可能会因为 ECMAScript 版本不同而代表不同的时间。这意味着两个看起来等效的字符串可能因为它们的格式不同而被转换成不同的值。</p>"}},{"type":"prose","value":{"id":"引擎相关的日期格式","title":"引擎相关的日期格式","isH3":true,"content":"<p>ECMAScript 规范规定：如果一个字符串不符合标准格式，则函数可以使用任何由引擎决定的策略或解析算法。 <code>Date.parse()</code> 对于因包含有无效元素而无法识别的 ISO 格式字符串或者日期应该返回 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a> 。</p>\n<p>但是，在如 ECMA-262 规范中定义的情况，如果因为无效值而导致日期字符串不能被识别为 ISO 格式时，根据浏览器和给定的值不同，返回值可以是，也可以不是 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a> 。比如：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 包含无效值的非 ISO 格式字符串</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'23/25/2014'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在 Firefox 30 中会被识别为本地时区的 2015 年 12 月 25 日，而在 Safari 7 中则是无效日期。但是，如果字符串被识别为 ISO 格式并且包含无效值，则在所有遵循 ES5 或者更新标准的浏览器中都会返回 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a> 。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 包含无效值的 ISO 格式字符串</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2014-25-23'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 在所有遵循 ES5 的浏览器中返回 \"RangeError: invalid date\"</span>\n</code></pre></div>\n<p>SpiderMonkey 的引擎策略可以在 <a href=\"http://mxr.mozilla.org/mozilla-central/source/js/src/jsdate.cpp?rev=64553c483cd1#889\" class=\"external\" rel=\" noopener\"><code>jsdate.cpp</code></a> 中找到。字符串 <code>\"10 06 2014\"</code> 可以作为非 ISO 格式字符串使用自定义处理方式的例子。参见这篇关于解析如何进行的<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1023155#c6\" class=\"external\" rel=\" noopener\">粗略纲要</a>。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'10 06 2014'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>将会被解析为本地时间 2014 年 10 月 6 日，而不是 6 月 10 日。另一个例子</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo-bar 2014'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 返回：\"Invalid Date\"</span>\n\nDate<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo-bar 2014'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 返回：NaN</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":""}},{"type":"prose","value":{"id":"例子：使用_date.parse","title":"例子：使用 <code>Date.parse()</code>","isH3":true,"content":"<p>如果 <code>IPOdate</code> 是一个已经存在的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> 对象，则可以把其设置为本地时间 1995 年 8 月 9 日。如下：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>IPOdate<span class=\"token punctuation\">.</span><span class=\"token function\">setTime</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Aug 9, 1995'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>其他一些解析非标准格式日期的例子：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Aug 9, 1995\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在时区 GMT-0300 中返回 807937200000，在其他时区中返回另外的值，因为未指定时区并且不是 ISO 格式，所以默认使用本地时区。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wed, 09 Aug 1995 00:00:00 GMT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>因为指定了时区 GMT (UTC)，所以不管本地时区如何，总是返回 <code>807926400000</code> 。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wed, 09 Aug 1995 00:00:00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在时区 GMT-0300 中返回 807937200000，在其他时区中返回另外的值，因为没有时区标志并且不是 ISO 格式，所以作为本地时区处理。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thu, 01 Jan 1970 00:00:00 GMT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>因为指定了时区 GMT (UTC)，所以不管本地时区如何，总是返回 <code>0</code> 。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thu, 01 Jan 1970 00:00:00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在时区 GMT-0400 中返回 <code>14400000</code>，在其他时区中返回另外的值，因为未指定时区并且不是 ISO 格式，所以使用本地时区处理。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thu, 01 Jan 1970 00:00:00 GMT-0400\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>因为指定了时区 GMT (UTC)，所以不管本地时区如何，总是返回 <code>14400000</code> 。</p>","titleAsText":"例子：使用 Date.parse()"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/numbers-and-dates.html#sec-date.parse","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Date.parse"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"javascript.builtins.Date.parse","dataURL":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/parse/bcd.json"}},{"type":"prose","value":{"id":"兼容性提示","title":"兼容性提示","isH3":false,"content":"<p>Firefox 49 (Firefox 49 / Thunderbird 49 / SeaMonkey 2.46) 修改了解析 2 位数年份的方式，从和 Internet Explorer 一致改为和 Google Chrome 浏览器一致。现在，2 位数的年份小于等于 <code>50</code> 的将会被解析为 21 世纪的年份。比如， <code>04/16/17</code> ，在之前会被解析为 1917 年 4 月 16 日，现在将被解析为 2017 年 4 月 16 日。为了避免任何可能的同步问题或者有歧义的年份，推荐使用 ISO 8601 格式如 \"2017-04-16\" (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1265136\" class=\"external\" rel=\" noopener\">bug&nbsp;1265136</a>)。</p>"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC\"><code>Date.UTC()</code></a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"描述","id":"描述"},{"text":"例子","id":"例子"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"兼容性提示","id":"兼容性提示"},{"text":"相关链接","id":"相关链接"}],"summary":"Date.parse() 方法解析一个表示某个日期的字符串，并返回从 1970-1-1 00:00:00 UTC 到该日期对象（该日期对象的 UTC 时间）的毫秒数，如果该字符串无法识别，或者一些情况下，包含了不合法的日期数值（如：2015-02-31），则返回值为 NaN。","popularity":0.0017,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Date.parse()","locale":"en-US","native":"English (US)"},{"title":"Date.parse()","locale":"es","native":"Español"},{"title":"Date.parse()","locale":"fr","native":"Français"},{"title":"Date.parse()","locale":"ja","native":"日本語"},{"title":"Date.parse()","locale":"ko","native":"한국어"},{"title":"Date.parse()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Date.parse()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/javascript/reference/global_objects/date/parse","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/javascript/reference/global_objects/date/parse/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference","title":"JavaScript 参考"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects","title":"JavaScript 标准内置对象"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date","title":"Date"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/parse","title":"Date.parse()"}],"pageTitle":"Date.parse() - JavaScript | MDN","noIndexing":false}}