{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Number","mdn_url":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects\">标准内置对象</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>属性</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\"><code>Number.EPSILON</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE\"><code>Number.MAX_VALUE</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\"><code>Number.MIN_SAFE_INTEGER</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE\"><code>Number.MIN_VALUE</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN\"><code>Number.NaN</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY\"><code>Number.NEGATIVE_INFINITY</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY\"><code>Number.POSITIVE_INFINITY</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>方法</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\"><code>Number.isFinite()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\"><code>Number.isInteger()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\"><code>Number.isNaN()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\"><code>Number.isSafeInteger()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat\"><code>Number.parseFloat()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt\"><code>Number.parseInt()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\"><code>Number.prototype.toExponential()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\"><code>Number.prototype.toFixed()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\"><code>Number.prototype.toLocaleString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision\"><code>Number.prototype.toPrecision()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\"><code>Number.prototype.toString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/valueOf\"><code>Number.prototype.valueOf()</code></a></li></ol></li><li><strong>继承</strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>属性</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code> <small>(en-US)</small></a></li></ol></li><li><a href=\"#\"><strong>方法</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>属性</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>方法</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>JavaScript 的 <strong><code>Number</code></strong> 对象是经过封装的能让你处理数字值的对象。<code>Number</code> 对象由 <code>Number()</code> 构造器创建。</p>\n<p>JavaScript 的<code>Number</code>类型为<a href=\"https://en.wikipedia.org/wiki/Floating-point_arithmetic\" class=\"external\" rel=\" noopener\">双精度 IEEE 754 64 位浮点</a>类型。</p>\n<p>最近出了 stage3<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a> 任意精度数字类型，已经进入 stage3 规范</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">new Number(value);\nvar a = new Number('123'); // a === 123 is false\nvar b = Number('123'); // b === 123 is true\na instanceof Number; // is true\nb instanceof Number; // is false\n</pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"value\"><code>value</code></dt>\n  <dd>\n    <p>被创建对象的数字值。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"描述","title":"描述","isH3":false,"content":"<p><code>Number</code> 对象主要用于：</p>\n<ul>\n  <li>如果参数无法被转换为数字，则返回 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>。</li>\n  <li>在非构造器上下文中 (如：没有 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a> 操作符)，<code>Number</code> 能被用来执行类型转换。</li>\n</ul>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<dl>\n  <dt id=\"number.epsilon\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\"><code>Number.EPSILON</code></a></dt>\n  <dd>\n    <p>两个可表示 (representable) 数之间的最小间隔。</p>\n  </dd>\n  <dt id=\"number.max_safe_integer\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a></dt>\n  <dd>\n    <p>JavaScript 中最大的安全整数 (<code>2^53 - 1</code>)。</p>\n  </dd>\n  <dt id=\"number.max_value\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE\"><code>Number.MAX_VALUE</code></a></dt>\n  <dd>\n    <p>能表示的最大正数。最小的负数是 <code>-MAX_VALUE</code>。</p>\n  </dd>\n  <dt id=\"number.min_safe_integer\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\"><code>Number.MIN_SAFE_INTEGER</code></a></dt>\n  <dd>\n    <p>JavaScript 中最小的安全整数 (<code>-(2^53 - 1)</code>).</p>\n  </dd>\n  <dt id=\"number.min_value\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE\"><code>Number.MIN_VALUE</code></a></dt>\n  <dd>\n    <p>能表示的最小正数即最接近 0 的正数 (实际上不会变成 0)。最大的负数是 <code>-MIN_VALUE</code>。</p>\n  </dd>\n  <dt id=\"number.nan\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN\"><code>Number.NaN</code></a></dt>\n  <dd>\n    <p>特殊的“非数字”值。</p>\n  </dd>\n  <dt id=\"number.negative_infinity\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY\"><code>Number.NEGATIVE_INFINITY</code></a></dt>\n  <dd>\n    <p>特殊的负无穷大值，在溢出时返回该值。</p>\n  </dd>\n  <dt id=\"number.positive_infinity\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY\"><code>Number.POSITIVE_INFINITY</code></a></dt>\n  <dd>\n    <p>特殊的正无穷大值，在溢出时返回该值。</p>\n  </dd>\n  <dt id=\"number.prototype_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number.prototype</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Number 对象上允许的额外属性。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"number.isnan\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\"><code>Number.isNaN()</code></a></dt>\n  <dd>\n    <p>确定传递的值是否是 NaN。</p>\n  </dd>\n  <dt id=\"number.isfinite\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\"><code>Number.isFinite()</code></a></dt>\n  <dd>\n    <p>确定传递的值类型及本身是否是有限数。</p>\n  </dd>\n  <dt id=\"number.isinteger\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\"><code>Number.isInteger()</code></a></dt>\n  <dd>\n    <p>确定传递的值类型是“number”，且是整数。</p>\n  </dd>\n  <dt id=\"number.issafeinteger\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\"><code>Number.isSafeInteger()</code></a></dt>\n  <dd>\n    <p>确定传递的值是否为安全整数 ( -<code>(2^53 - 1)</code> 至 <code>2^53 - 1</code>) 之间。</p>\n  </dd>\n  <dt id=\"number.tointeger\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Number.toInteger()</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>计算传递的值并将其转换为整数 (或无穷大)。</p>\n  </dd>\n  <dt id=\"number.parsefloat\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat\"><code>Number.parseFloat()</code></a></dt>\n  <dd>\n    <p>和全局对象 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\"><code>parseFloat()</code></a> 一样。</p>\n  </dd>\n  <dt id=\"number.parseint\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt\"><code>Number.parseInt()</code></a></dt>\n  <dd>\n    <p>和全局对象 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/parseInt\"><code>parseInt()</code></a> 一样。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"number_实例","title":"<code>Number</code> 实例","isH3":false,"content":"<p>所有 <code>Number</code> 实例都继承自 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number.prototype</code> <small>(en-US)</small></a>。<code>被修改的 Number</code> 构造器的原型对象对全部 <code>Number</code> 实例都生效。</p>","titleAsText":"Number 实例"}},{"type":"prose","value":{"id":"方法_2","title":"方法","isH3":true,"content":"<dl>\n  <dt id=\"number.prototype.toexponentialfractiondigits\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\"><code>Number.prototype.toExponential(<var>fractionDigits</var>)</code></a></dt>\n  <dd>\n    <p>返回使用指数表示法表示数字的字符串。</p>\n  </dd>\n  <dt id=\"number.prototype.tofixeddigits\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\"><code>Number.prototype.toFixed(<var>digits</var>)</code></a></dt>\n  <dd>\n    <p>返回使用定点表示法表示数字的字符串。</p>\n  </dd>\n  <dt id=\"number.prototype.tolocalestringlocales_options\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\"><code>Number.prototype.toLocaleString([<var>locales</var> [, <var>options</var>]])</code></a></dt>\n  <dd>\n    <p>返回数字在特定语言环境下表示的字符串。覆盖 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a> 方法。</p>\n  </dd>\n  <dt id=\"number.prototype.toprecisionprecision\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision\"><code>Number.prototype.toPrecision(<var>precision</var>)</code></a></dt>\n  <dd>\n    <p>返回数字使用定点表示法或指数表示法至指定精度的字符串。</p>\n  </dd>\n  <dt id=\"number.prototype.tostringradix\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\"><code>Number.prototype.toString([<var>radix</var>])</code></a></dt>\n  <dd>\n    <p>返回一个代表给定对象的字符串，基于指定的基数。覆盖 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a> 方法。</p>\n  </dd>\n  <dt id=\"number.prototype.valueof\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/valueOf\"><code>Number.prototype.valueOf()</code></a></dt>\n  <dd>\n    <p>返回指定对象的原始值。覆盖 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a> 方法。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":""}},{"type":"prose","value":{"id":"使用_number_对象给数字变量赋值","title":"使用 Number 对象给数字变量赋值","isH3":true,"content":"<p>下例使用 <code>Number</code> 对象的属性给几个数字变量赋值：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> biggestNum <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_VALUE</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> smallestNum <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MIN_VALUE</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> infiniteNum <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">POSITIVE_INFINITY</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> negInfiniteNum <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">NEGATIVE_INFINITY</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> notANum <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"整数类型的范围","title":"整数类型的范围","isH3":true,"content":"<p>JavaScript 能够准确表示的整数范围在<code>-2^53</code>到<code>2^53</code>之间（不含两个端点），超过这个范围，无法精确表示这个整数。 (详情请参阅 ECMAScript standard, chapter <em><a href=\"https://www.ecma-international.org/ecma-262/#sec-ecmascript-language-types-number-type\" class=\"external\" rel=\" noopener\">6.1.6 The Number Type</a></em>):</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> biggestInt <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_SAFE_INTEGER</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//9007199254740991</span>\n<span class=\"token keyword\">var</span> smallestInt <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MIN_SAFE_INTEGER</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//-9007199254740991</span>\n</code></pre></div>\n<p>在解析序列化的 JSON 时，如果 JSON 解析器将它们强制转换为 Number 类型，那么超出此范围的整数值可能会被破坏。在工作中使用<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> 类型代替，是一个可行的解决方案。</p>"}},{"type":"prose","value":{"id":"使用_number_转换_date_对象","title":"使用 <code>Number</code> 转换 <code>Date</code> 对象","isH3":true,"content":"<p>下例使用 Number 作为函数来转换 <code>Date</code> 对象为数字值：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"December 17, 1995 03:24:00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>这将输出 \"819199440000\"。</p>","titleAsText":"使用 Number 转换 Date 对象"}},{"type":"prose","value":{"id":"转换数字字符串为数字","title":"转换数字字符串为数字","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 123</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'12.3'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 12.3</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'12.00'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 12</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'123e-1'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 12.3</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">// 0</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">// 0</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0x11'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 17</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0b11'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 3</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0o11'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 9</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'100a'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-Infinity'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//-Infinity</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/numbers-and-dates.html#sec-number-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Number"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"javascript.builtins.Number","dataURL":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/bcd.json"}},{"type":"prose","value":{"id":"参阅","title":"参阅","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a></li>\n  <li>全局对象 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a></li>\n  <li>Integers with arbitrary precision: <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a></li>\n  <li><a href=\"https://medium.com/@maximus.koretskyi/javascripts-number-type-8d59199db1b6#.9whwe88tz\" class=\"external\" rel=\" noopener\">Number type in details</a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"描述","id":"描述"},{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"<code>Number</code> 实例","id":"number_实例"},{"text":"示例","id":"示例"},{"text":"Specifications","id":"specifications"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参阅","id":"参阅"}],"summary":"JavaScript 的 Number 对象是经过封装的能让你处理数字值的对象。Number 对象由 Number() 构造器创建。","popularity":0.0034,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Number","locale":"en-US","native":"English (US)"},{"title":"Number","locale":"es","native":"Español"},{"title":"Number","locale":"fr","native":"Français"},{"title":"Number","locale":"ja","native":"日本語"},{"title":"Number","locale":"ko","native":"한국어"},{"title":"Número","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Number","locale":"ru","native":"Русский"},{"title":"Number","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/javascript/reference/global_objects/number","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/javascript/reference/global_objects/number/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference","title":"JavaScript 参考"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects","title":"JavaScript 标准内置对象"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number","title":"Number"}],"pageTitle":"Number - JavaScript | MDN","noIndexing":false}}