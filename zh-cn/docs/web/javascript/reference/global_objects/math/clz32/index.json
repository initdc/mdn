{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Math.clz32()","mdn_url":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects\">标准内置对象</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>属性</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/E\"><code>Math.E</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/LN10\"><code>Math.LN10</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/LN2\"><code>Math.LN2</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/LOG10E\"><code>Math.LOG10E</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/LOG2E\"><code>Math.LOG2E</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/PI\"><code>Math.PI</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/SQRT1_2\"><code>Math.SQRT1_2</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/SQRT2\"><code>Math.SQRT2</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>方法</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/abs\"><code>Math.abs()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/acos\"><code>Math.acos()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/acosh\"><code>Math.acosh()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/asin\"><code>Math.asin()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/asinh\"><code>Math.asinh()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/atan\"><code>Math.atan()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/atan2\"><code>Math.atan2()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/atanh\"><code>Math.atanh()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt\"><code>Math.cbrt()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil\"><code>Math.ceil()</code></a></li><li><em><code>Math.clz32()</code></em></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/cos\"><code>Math.cos()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh\"><code>Math.cosh()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/exp\"><code>Math.exp()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/expm1\"><code>Math.expm1()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\"><code>Math.floor()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\"><code>Math.fround()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/hypot\"><code>Math.hypot()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\"><code>Math.imul()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/log\"><code>Math.log()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/log10\"><code>Math.log10()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/log1p\"><code>Math.log1p()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/log2\"><code>Math.log2()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/max\"><code>Math.max()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/min\"><code>Math.min()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\"><code>Math.pow()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/random\"><code>Math.random()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/round\"><code>Math.round()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\"><code>Math.sign()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\"><code>Math.sin()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh\"><code>Math.sinh()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt\"><code>Math.sqrt()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/tan\"><code>Math.tan()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh\"><code>Math.tanh()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\"><code>Math.trunc()</code></a></li></ol></li><li><strong>继承</strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>属性</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>方法</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":"概述","title":"概述","isH3":false,"content":"<p><strong><code>Math.clz32()</code></strong> 函数返回一个数字在转换成 32 无符号整形数字的二进制形式后，开头的 0 的个数，比如 <code>1000000</code> 转换成 32 位无符号整形数字的二进制形式后是 <code>00000000000011110100001001000000</code>, 开头的 0 的个数是 12 个，则 <code>Math.clz32(1000000)</code> 返回 <code>12</code>.</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">Math.clz32 (x)\n</pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"x\">x</dt>\n  <dd>\n    <p>一个数字。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"描述","title":"描述","isH3":false,"content":"<p>\"clz32\" 是 CountLeadingZeroes32 的缩写。</p>\n<p>如果 <code>x</code> 不是数字类型，则它首先会被转换成数字类型，然后再转成 32 位无符号整形数字。</p>\n<p>如果转换后的 32 位无符号整形数字是 <code>0</code>, 则返回 <code>32</code>, 因为此时所有位上都是 <code>0</code>.</p>\n<p><code>NaN</code>, <code>Infinity</code>, <code>-Infinity</code> 这三个数字转成 32 位无符号整形数字后都是 <code>0</code>.</p>\n<p>这个函数主要用于那些编译目标为 JS 语言的系统中，比如 Emscripten.</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Math<span class=\"token punctuation\">.</span><span class=\"token function\">clz32</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>                <span class=\"token comment\">// 31</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">clz32</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>             <span class=\"token comment\">// 22</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">clz32</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>                 <span class=\"token comment\">// 32</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">,</span> <span class=\"token number\">Infinity</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">clz32</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token number\">32</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>                           <span class=\"token comment\">// []</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">clz32</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>             <span class=\"token comment\">// 31</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">clz32</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">// 30</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"计算前导_1_的个数","title":"计算前导 1 的个数","isH3":false,"content":"<p>目前 javascript 尚未提供 <code>Math.clon</code> 函数来计算前导 1 的个数（之所以叫“clon”而非“clo”，是因为“clo”与“clz”太过相似，特别对那些母语不是英语的人来说），但是你可以通过将一个数取反并将其作为 <code>Math.clz32</code> 的参数来实现 clon 函数。其中的原理非常简单，因为对 1 取反是 0，反之亦然，所以用 <code>Math.clz32</code> 计算前导 0 的个数就变成计算前导 1 的个数。</p>\n<p>先看以下代码：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">var a = 32776;   // 00000000000000001000000000001000 (16 个前导 0)\nMath.clz32(a);   // 16\n\nvar b = ~32776;  // 11111111111111110111111111110111 (对 32776 取反，0 个前导 0)\nMath.clz32(b);   // 0 (相当于 0 个前导 1)\n</pre></div>\n<p>通过以上方法，<code>clon</code> 函数可以定义如下：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">var clz = Math.clz32;\nfunction clon(integer){\n    return clz(~integer);\n}\n</pre></div>\n<p>现在，我们可以进一步实现计算“尾随 0”和“尾随 1”的个数了。下面的<code>ctrz</code>函数将第一个 1 之后的高数位全部置为 1 然后取反，再用<code>Math.clz32 求得</code>尾随 0 的个数。</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">var clz = Math.clz32;\nfunction ctrz(integer){ // 计算尾随 0 个数\n    // 1. 将第一个 1 之后的高数位全部置为 1\n    // 00000000000000001000000000001000 =&gt; 11111111111111111111111111111000\n    integer |= integer &lt;&lt; 16;\n    integer |= integer &lt;&lt; 8;\n    integer |= integer &lt;&lt; 4;\n    integer |= integer &lt;&lt; 2;\n    integer |= integer &lt;&lt; 1;\n    // 2. 然后，对该数取反，此时低位的 1 的个数即为所求\n    return 32 - clz(~integer) |0; // `|0`用于保证结果为整数\n}\nfunction ctron(integer){ // 计算尾随 1 个数\n    // JavaScript 中没有移位补 1 的运算符\n    // 所以下面的代码是最快的\n    return ctrz(~integer);\n    /* 为了看起来比较对称，你也可以使用以下代码：\n       // 1. 将第一个 0 之后的高数位全部置为 0\n       integer &amp;= (integer &lt;&lt; 16) | 0xffff;\n       integer &amp;= (integer &lt;&lt; 8 ) | 0x00ff;\n       integer &amp;= (integer &lt;&lt; 4 ) | 0x000f;\n       integer &amp;= (integer &lt;&lt; 2 ) | 0x0003;\n       integer &amp;= (integer &lt;&lt; 1 ) | 0x0001;\n       // 2. 然后，对该数取反，此时低位的 0 的个数即为所求\n       return 32 - clon(~integer) |0;\n    */\n}\n</pre></div>\n<p>将以上函数改写成 ASM.JS 模块——然后，你就可以去跟别人炫耀了！ASM.JS 就是用来干这个的。</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">var countTrailsMethods = (function(stdlib, foreign, heap) {\n    \"use asm\";\n    var clz = stdlib.Math.clz32;\n    function ctrz(integer) { // 计算尾随 0 个数\n        integer = integer | 0; // 确保是整数\n        // 1. 将第一个 1 之后的高数位全部置为 1\n        // ASMjs 中不允许^=、&amp;=、和 |=\n        integer = integer | (integer &lt;&lt; 16);\n        integer = integer | (integer &lt;&lt; 8);\n        integer = integer | (integer &lt;&lt; 4);\n        integer = integer | (integer &lt;&lt; 2);\n        integer = integer | (integer &lt;&lt; 1);\n        // 2. 然后，对该数取反，此时低位的 1 的个数即为所求\n        return 32 - clz(~integer) |0;\n    }\n    function ctron(integer) { // 计算尾随 1 个数\n        integer = integer | 0; // 确保是整数\n        return ctrz(~integer) |0;\n    }\n    // 蛋疼的是，ASM.JS 必须使用糟糕的 object 类型：\n    // unfourtunately, ASM.JS demands slow crummy objects:\n    return {a: ctrz, b: ctron};\n})(window, null, null);\nvar ctrz = countTrailsMethods.a;\nvar ctron = countTrailsMethods.b;\n</pre></div>"}},{"type":"prose","value":{"id":"polyfill","title":"Polyfill","isH3":false,"content":"<p>这个 polyfill 效率最高。</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">if (!Math.clz32) Math.clz32 = (function(log, LN2){\n  return function(x) {\n    var asUint = x &gt;&gt;&gt; 0; // 将 x 转换为 Uint32 类型\n    if (asUint === 0) {\n      return 32;\n    }\n    return 31 - (log(asUint) / LN2 | 0) |0; // \"| 0\"相当于 Math.floor\n  };\n})(Math.log, Math.LN2);\n</pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/numbers-and-dates.html#sec-math.clz32","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Math.clz32"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"javascript.builtins.Math.clz32","dataURL":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32/bcd.json"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\"><code>Math.imul</code></a></li>\n</ul>"}}],"toc":[{"text":"概述","id":"概述"},{"text":"语法","id":"语法"},{"text":"描述","id":"描述"},{"text":"示例","id":"示例"},{"text":"计算前导 1 的个数","id":"计算前导_1_的个数"},{"text":"Polyfill","id":"polyfill"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"相关链接","id":"相关链接"}],"summary":"Math.clz32() 函数返回一个数字在转换成 32 无符号整形数字的二进制形式后，开头的 0 的个数，比如 1000000 转换成 32 位无符号整形数字的二进制形式后是 00000000000011110100001001000000, 开头的 0 的个数是 12 个，则 Math.clz32(1000000) 返回 12.","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Math.clz32()","locale":"en-US","native":"English (US)"},{"title":"Math.clz32()","locale":"fr","native":"Français"},{"title":"Math.clz32()","locale":"ja","native":"日本語"},{"title":"Math.clz32()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Math.clz32()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/javascript/reference/global_objects/math/clz32","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/javascript/reference/global_objects/math/clz32/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference","title":"JavaScript 参考"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects","title":"JavaScript 标准内置对象"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math","title":"Math"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32","title":"Math.clz32()"}],"pageTitle":"Math.clz32() - JavaScript | MDN","noIndexing":false}}