{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Reflect","mdn_url":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects\">标准内置对象</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect\"><code>Reflect</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>方法</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/apply\"><code>Reflect.apply()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/construct\"><code>Reflect.construct()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/defineProperty\"><code>Reflect.defineProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/deleteProperty\"><code>Reflect.deleteProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/get\"><code>Reflect.get()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getOwnPropertyDescriptor\"><code>Reflect.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getPrototypeOf\"><code>Reflect.getPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/has\"><code>Reflect.has()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/isExtensible\"><code>Reflect.isExtensible()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/ownKeys\"><code>Reflect.ownKeys()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/preventExtensions\"><code>Reflect.preventExtensions()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/set\"><code>Reflect.set()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf\"><code>Reflect.setPrototypeOf()</code></a></li></ol></li><li><strong>继承</strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>属性</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>方法</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>Reflect</strong> 是一个内置的对象，它提供拦截 JavaScript 操作的方法。这些方法与<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">proxy handlers (en-US)</a>的方法相同。<code>Reflect</code>不是一个函数对象，因此它是不可构造的。</p>"}},{"type":"prose","value":{"id":"描述","title":"描述","isH3":false,"content":"<p>与大多数全局对象不同<code>Reflect</code>并非一个构造函数，所以不能通过<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators/new\">new 运算符</a>对其进行调用，或者将<code>Reflect</code>对象作为一个函数来调用。<code>Reflect</code>的所有属性和方法都是静态的（就像<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a>对象）。</p>\n<p><code>Reflect</code> 对象提供了以下静态方法，这些方法与<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">proxy handler methods (en-US)</a>的命名相同。</p>\n<p>其中的一些方法与 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a> 相同，尽管二者之间存在<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/Comparing_Reflect_and_Object_methods\">某些细微上的差别</a>。</p>"}},{"type":"prose","value":{"id":"静态方法","title":"静态方法","isH3":false,"content":"<dl>\n  <dt id=\"reflect.applytarget_thisargument_argumentslist\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/apply\"><code>Reflect.apply(<var>target</var>, <var>thisArgument</var>, <var>argumentsList</var>)</code></a></dt>\n  <dd>\n    <p>对一个函数进行调用操作，同时可以传入一个数组作为调用参数。和 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a> 功能类似。</p>\n  </dd>\n  <dt id=\"reflect.constructtarget_argumentslist_newtarget\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/construct\"><code>Reflect.construct(<var>target</var>, <var>argumentsList</var>[, <var>newTarget</var>])</code></a></dt>\n  <dd>\n    <p>对构造函数进行 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a> 操作，相当于执行 <code>new target(...args)</code>。</p>\n  </dd>\n  <dt id=\"reflect.definepropertytarget_propertykey_attributes\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/defineProperty\"><code>Reflect.defineProperty(<var>target</var>, <var>propertyKey</var>, <var>attributes</var>)</code></a></dt>\n  <dd>\n    <p>和 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a> 类似。如果设置成功就会返回 <code>true</code></p>\n  </dd>\n  <dt id=\"reflect.deletepropertytarget_propertykey\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/deleteProperty\"><code>Reflect.deleteProperty(<var>target</var>, <var>propertyKey</var>)</code></a></dt>\n  <dd>\n    <p>作为函数的<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators/delete\"><code>delete</code></a>操作符，相当于执行 <code>delete target[name]</code>。</p>\n  </dd>\n  <dt id=\"reflect.gettarget_propertykey_receiver\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/get\"><code>Reflect.get(<var>target</var>, <var>propertyKey</var>[, <var>receiver</var>])</code></a></dt>\n  <dd>\n    <p>获取对象身上某个属性的值，类似于 <code>target[name]</code>。</p>\n  </dd>\n  <dt id=\"reflect.getownpropertydescriptortarget_propertykey\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getOwnPropertyDescriptor\"><code>Reflect.getOwnPropertyDescriptor(<var>target</var>, <var>propertyKey</var>)</code></a></dt>\n  <dd>\n    <p>类似于 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\"><code>Object.getOwnPropertyDescriptor()</code></a>。如果对象中存在该属性，则返回对应的属性描述符，否则返回 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>。</p>\n  </dd>\n  <dt id=\"reflect.getprototypeoftarget\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getPrototypeOf\"><code>Reflect.getPrototypeOf(<var>target</var>)</code></a></dt>\n  <dd>\n    <p>类似于 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/GetPrototypeOf\"><code>Object.getPrototypeOf()</code></a>。</p>\n  </dd>\n  <dt id=\"reflect.hastarget_propertykey\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/has\"><code>Reflect.has(<var>target, propertyKey</var>)</code></a></dt>\n  <dd>\n    <p>判断一个对象是否存在某个属性，和 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators/in\"><code>in</code> 运算符</a> 的功能完全相同。</p>\n  </dd>\n  <dt id=\"reflect.isextensibletarget\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/isExtensible\"><code>Reflect.isExtensible(<var>target</var>)</code></a></dt>\n  <dd>\n    <p>类似于 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible()</code></a>.</p>\n  </dd>\n  <dt id=\"reflect.ownkeystarget\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/ownKeys\"><code>Reflect.ownKeys(<var>target</var>)</code></a></dt>\n  <dd>\n    <p>返回一个包含所有自身属性（不包含继承属性）的数组。(类似于 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys()</code></a>, 但不会受<code>enumerable</code> 影响).</p>\n  </dd>\n  <dt id=\"reflect.preventextensionstarget\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/preventExtensions\"><code>Reflect.preventExtensions(<var>target</var>)</code></a></dt>\n  <dd>\n    <p>类似于 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\"><code>Object.preventExtensions()</code></a>。返回一个<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>。</p>\n  </dd>\n  <dt id=\"reflect.settarget_propertykey_value_receiver\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/set\"><code>Reflect.set(<var>target</var>, <var>propertyKey</var>, <var>value</var>[, <var>receiver</var>])</code></a></dt>\n  <dd>\n    <p>将值分配给属性的函数。返回一个<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>，如果更新成功，则返回<code>true</code>。</p>\n  </dd>\n  <dt id=\"reflect.setprototypeoftarget_prototype\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf\"><code>Reflect.setPrototypeOf(<var>target</var>, <var>prototype</var>)</code></a></dt>\n  <dd>\n    <p>设置对象原型的函数。返回一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>，如果更新成功，则返回 <code>true</code>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"检测一个对象是否存在特定属性","title":"检测一个对象是否存在特定属性","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">const duck = {\n  name: 'Maurice',\n  color: 'white',\n  greeting: function() {\n    console.log(`Quaaaack! My name is ${this.name}`);\n  }\n}\n\nReflect.has(duck, 'color');\n// true\nReflect.has(duck, 'haircut');\n// false\n</pre></div>"}},{"type":"prose","value":{"id":"返回这个对象自身的属性","title":"返回这个对象自身的属性","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">Reflect.ownKeys(duck);\n// [ \"name\", \"color\", \"greeting\" ]\n</pre></div>"}},{"type":"prose","value":{"id":"为这个对象添加一个新的属性","title":"为这个对象添加一个新的属性","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">Reflect.set(duck, 'eyes', 'black');\n// returns \"true\" if successful\n// \"duck\" now contains the property \"eyes: 'black'\"\n</pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/reflection.html#sec-reflect-object","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Reflect"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"javascript.builtins.Reflect","dataURL":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/bcd.json"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy\"><code>Proxy</code></a> 全局对象。</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\"><code>处理器</code> <small>(en-US)</small></a> 对象。</li>\n</ul>"}}],"toc":[{"text":"描述","id":"描述"},{"text":"静态方法","id":"静态方法"},{"text":"Examples","id":"examples"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"相关链接","id":"相关链接"}],"summary":"Reflect 是一个内置的对象，它提供拦截 JavaScript 操作的方法。这些方法与proxy handlers (en-US)的方法相同。Reflect不是一个函数对象，因此它是不可构造的。","popularity":0.0028,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Reflect","locale":"en-US","native":"English (US)"},{"title":"Reflect","locale":"es","native":"Español"},{"title":"Reflect","locale":"fr","native":"Français"},{"title":"Reflect","locale":"ja","native":"日本語"},{"title":"Reflect","locale":"ko","native":"한국어"},{"title":"Reflect","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Reflect","locale":"ru","native":"Русский"},{"title":"Reflect","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/javascript/reference/global_objects/reflect","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/javascript/reference/global_objects/reflect/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference","title":"JavaScript 参考"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects","title":"JavaScript 标准内置对象"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect","title":"Reflect"}],"pageTitle":"Reflect - JavaScript | MDN","noIndexing":false}}