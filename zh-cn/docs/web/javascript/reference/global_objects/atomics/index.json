{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Atomics","mdn_url":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects\">标准内置对象</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics\"><code>Atomics</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>方法</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/add\"><code>Atomics.add()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/and\"><code>Atomics.and()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/compareExchange\"><code>Atomics.compareExchange()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/exchange\"><code>Atomics.exchange()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/isLockFree\"><code>Atomics.isLockFree()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/load\"><code>Atomics.load()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/notify\"><code>Atomics.notify()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/or\"><code>Atomics.or()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/store\"><code>Atomics.store()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/sub\"><code>Atomics.sub()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait\"><code>Atomics.wait()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/waitAsync\"><code>Atomics.waitAsync()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/xor\"><code>Atomics.xor()</code></a></li></ol></li><li><strong>继承</strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>属性</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>方法</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Atomics</code></strong> 对象提供了一组静态方法对 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\"><code>SharedArrayBuffer</code></a> 和 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> 对象进行原子操作。</p>"}},{"type":"prose","value":{"id":"描述","title":"描述","isH3":false,"content":"<p>这些原子操作属于 <code>Atomics</code> 模块。与一般的全局对象不同，<code>Atomics</code> 不是构造函数，因此不能使用 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators/new\">new</a> 操作符调用，也不能将其当作函数直接调用。<code>Atomics</code> 的所有属性和方法都是静态的（与 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a> 对象一样）。</p>"}},{"type":"prose","value":{"id":"原子操作","title":"原子操作","isH3":true,"content":"<p>多个共享内存的线程能够同时读写同一位置上的数据。原子操作会确保正在读或写的数据的值是符合预期的，即下一个原子操作一定会在上一个原子操作结束后才会开始，其操作过程不会中断。</p>"}},{"type":"prose","value":{"id":"等待和通知","title":"等待和通知","isH3":true,"content":"<p><code>wait()</code> 和 <code>notify()</code> 方法采用的是 Linux 上的 futexes 模型（“快速用户空间互斥量”），可以让进程一直等待直到某个特定的条件为真，主要用于实现阻塞。</p>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"atomics.add\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/add\"><code>Atomics.add()</code></a></dt>\n  <dd>\n    <p>将指定位置上的数组元素与给定的值相加，并返回相加前该元素的值。</p>\n  </dd>\n  <dt id=\"atomics.and\"><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/and\"><code>Atomics.and()</code></a></strong></dt>\n  <dd>\n    <p>将指定位置上的数组元素与给定的值相与，并返回与操作前该元素的值。</p>\n  </dd>\n  <dt id=\"atomics.compareexchange\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/compareExchange\"><code>Atomics.compareExchange()</code></a></dt>\n  <dd>\n    <p>如果数组中指定的元素与给定的值相等，则将其更新为新的值，并返回该元素原先的值。</p>\n  </dd>\n  <dt id=\"atomics.exchange\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/exchange\"><code>Atomics.exchange()</code></a></dt>\n  <dd>\n    <p>将数组中指定的元素更新为给定的值，并返回该元素更新前的值。</p>\n  </dd>\n  <dt id=\"atomics.islockfreesize\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/isLockFree\"><code>Atomics.isLockFree(size)</code></a></dt>\n  <dd>\n    <p>可以用来检测当前系统是否支持硬件级的原子操作。对于指定大小的数组，如果当前系统支持硬件级的原子操作，则返回 <code>true</code>；否则就意味着对于该数组，<code>Atomics</code> 对象中的各原子操作都只能用锁来实现。此函数面向的是技术专家。</p>\n  </dd>\n  <dt id=\"atomics.load\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/load\"><code>Atomics.load()</code></a></dt>\n  <dd>\n    <p>返回数组中指定元素的值。</p>\n  </dd>\n  <dt id=\"atomics.notify\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/notify\"><code>Atomics.notify()</code></a></dt>\n  <dd>\n    <p>唤醒等待队列中正在数组指定位置的元素上等待的线程。返回值为成功唤醒的线程数量。</p>\n  </dd>\n  <dt id=\"atomics.or\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/or\"><code>Atomics.or()</code></a></dt>\n  <dd>\n    <p>将指定位置上的数组元素与给定的值相或，并返回或操作前该元素的值。</p>\n  </dd>\n  <dt id=\"atomics.store\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/store\"><code>Atomics.store()</code></a></dt>\n  <dd>\n    <p>将数组中指定的元素设置为给定的值，并返回<strong>该值</strong>。</p>\n  </dd>\n  <dt id=\"atomics.sub\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/sub\"><code>Atomics.sub()</code></a></dt>\n  <dd>\n    <p>将指定位置上的数组元素与给定的值相减，并返回相减前该元素的值。</p>\n  </dd>\n  <dt id=\"atomics.wait\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait\"><code>Atomics.wait()</code></a></dt>\n  <dd>\n    <p>检测数组中某个指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒或超时。返回值为 \"<code>ok</code>\"、\"<code>not-equal</code>\" 或 \"<code>time-out</code>\"。调用时，如果当前线程不允许阻塞，则会抛出异常（大多数浏览器都不允许在主线程中调用 <code>wait()</code>）。</p>\n  </dd>\n  <dt id=\"atomics.xor\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/xor\"><code>Atomics.xor()</code></a></dt>\n  <dd>\n    <p>将指定位置上的数组元素与给定的值相异或，并返回异或操作前该元素的值。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":""}},{"type":"prose","value":{"id":"使用_atomics","title":"使用 Atomics","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> sab <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SharedArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ta <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>sab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nta<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 0</span>\n\nta<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 5</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 5</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 17 ✅</span>\n<span class=\"token comment\">// 12 ❌</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 17</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 1</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">compareExchange</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 12</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">exchange</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 12</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">isLockFree</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">isLockFree</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">isLockFree</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">isLockFree</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 5</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">store</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 12</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">xor</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 4</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"waiting_和_notifiying","title":"Waiting 和 notifiying","isH3":true,"content":"<p>给定一个共享的 <code>Int32Array</code>：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> sab <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SharedArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> int32 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int32Array</span><span class=\"token punctuation\">(</span>sab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>读取线程正在休眠并位置 0 上等待。只要该位置应为 0，它就不会继续。但是，一旦写入线程存储了新值，写入线程将通知它并返回新值（123）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Atomics<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>int32<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 123</span>\n</code></pre></div>\n<p>写入线程存储一个新值并再写入完成时通知等待线程：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>int32<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0;</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">store</span><span class=\"token punctuation\">(</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/structured-data.html#sec-atomics-object","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Atomics"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"javascript.builtins.Atomics","dataURL":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics/bcd.json"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Typed_arrays\">JavaScript typed arrays</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n  <li><a href=\"https://github.com/lars-t-hansen/parlib-simple\" class=\"external\" rel=\" noopener\">parlib-simple</a> – a simple library providing synchronization and work distribution abstractions.</li>\n  <li><a href=\"https://github.com/tc39/ecmascript_sharedmem/blob/master/TUTORIAL.md\" class=\"external\" rel=\" noopener\">Shared Memory – a brief tutorial</a></li>\n  <li><a href=\"https://hacks.mozilla.org/2016/05/a-taste-of-javascripts-new-parallel-primitives/\" class=\"external\" rel=\" noopener\">A Taste of JavaScript’s New Parallel Primitives – Mozilla Hacks</a></li>\n</ul>"}}],"toc":[{"text":"描述","id":"描述"},{"text":"方法","id":"方法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"相关链接","id":"相关链接"}],"summary":"Atomics 对象提供了一组静态方法对 SharedArrayBuffer 和 ArrayBuffer 对象进行原子操作。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Atomics","locale":"en-US","native":"English (US)"},{"title":"Atomics","locale":"fr","native":"Français"},{"title":"Atomics","locale":"ja","native":"日本語"},{"title":"Atomics","locale":"ko","native":"한국어"},{"title":"Atomics","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Atomics","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/javascript/reference/global_objects/atomics","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/javascript/reference/global_objects/atomics/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference","title":"JavaScript 参考"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects","title":"JavaScript 标准内置对象"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Atomics","title":"Atomics"}],"pageTitle":"Atomics - JavaScript | MDN","noIndexing":false}}