{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Generator.prototype.next()","mdn_url":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Generator/next","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects\">标准内置对象</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Generator\"><code>Generator</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>方法</strong></a><ol><li><em><code>Generator.prototype.next()</code></em></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Generator/return\"><code>Generator.prototype.return()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Generator/throw\"><code>Generator.prototype.throw()</code></a></li></ol></li><li><strong>继承</strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>属性</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code> <small>(en-US)</small></a></li></ol></li><li><a href=\"#\"><strong>方法</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>属性</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>方法</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>next()</code></strong> 方法返回一个包含属性 <code>done</code> 和 <code>value</code> 的对象。该方法也可以通过接受一个参数用以向生成器传值。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">gen.next(value)\n</pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"value\"><code>value</code></dt>\n  <dd>\n    <p>向生成器传递的值。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>返回的<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\">对象</a>包含两个属性：</p>\n<ul>\n  <li><code>done</code> (布尔类型)\n    <ul>\n      <li>如果迭代器超过迭代序列的末尾，则值为 <code>true</code>。在这种情况下，<code>value</code> 可选地指定迭代器的返回值。</li>\n      <li>如果迭代器能够生成序列中的下一个值，则值为 <code>false</code>。这相当于没有完全指定 <code>done</code> 属性。</li>\n    </ul>\n  </li>\n  <li><code>value</code> - 迭代器返回的任意的 JavaScript 值。当 <code>done</code> 的值为 <code>true</code> 时可以忽略该值。</li>\n</ul>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":""}},{"type":"prose","value":{"id":"使用_next_方法","title":"使用 <code>next()</code> 方法","isH3":true,"content":"<p>下面的例子展示了一个简单的生成器，以及调用 <code>next</code> 后方法的返回值：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">gen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">yield</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">yield</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">yield</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> g <span class=\"token operator\">=</span> <span class=\"token function\">gen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Generator { }\"</span>\ng<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// \"Object { value: 1, done: false }\"</span>\ng<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// \"Object { value: 2, done: false }\"</span>\ng<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// \"Object { value: 3, done: false }\"</span>\ng<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// \"Object { value: undefined, done: true }\"</span>\n</code></pre></div>","titleAsText":"使用 next() 方法"}},{"type":"prose","value":{"id":"向生成器传值","title":"向生成器传值","isH3":true,"content":"<p>在此示例中，使用值调用 <code>next</code>。请注意，第一次调用没有记录任何内容，因为生成器最初没有产生任何结果。</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">function* gen() {\n  while(true) {\n    var value = yield null;\n    console.log(value);\n  }\n}\n\nvar g = gen();\ng.next(1);\n// \"{ value: null, done: false }\"\ng.next(2);\n// 2\n// \"{ value: null, done: false }\"\n</pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-generator.prototype.next","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Generator.next"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"javascript.builtins.Generator.next","dataURL":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Generator/next/bcd.json"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Statements/function*\"><code>function*</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Guide/Iterators_and_Generators\">Iterators and generators</a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"相关链接","id":"相关链接"}],"summary":"next() 方法返回一个包含属性 done 和 value 的对象。该方法也可以通过接受一个参数用以向生成器传值。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Generator.prototype.next()","locale":"en-US","native":"English (US)"},{"title":"Generator.prototype.next()","locale":"es","native":"Español"},{"title":"Generator.prototype.next()","locale":"fr","native":"Français"},{"title":"Generator.prototype.next()","locale":"ja","native":"日本語"},{"title":"Generator.prototype.next()","locale":"ko","native":"한국어"},{"title":"Generator.prototype.next()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/javascript/reference/global_objects/generator/next","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/javascript/reference/global_objects/generator/next/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference","title":"JavaScript 参考"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects","title":"JavaScript 标准内置对象"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Generator","title":"Generator"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Generator/next","title":"Generator.prototype.next()"}],"pageTitle":"Generator.prototype.next() - JavaScript | MDN","noIndexing":false}}