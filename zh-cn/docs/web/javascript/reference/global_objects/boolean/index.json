{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Boolean","mdn_url":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects\">标准内置对象</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>方法</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean/toString\"><code>Boolean.prototype.toString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean/valueOf\"><code>Boolean.prototype.valueOf()</code></a></li></ol></li><li><strong>继承</strong></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>属性</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code> <small>(en-US)</small></a></li></ol></li><li><a href=\"#\"><strong>方法</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>属性</strong></a><ol><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>方法</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Boolean</code></strong> 对象是一个布尔值的对象包装器。</p>"}},{"type":"prose","value":{"id":"描述","title":"描述","isH3":false,"content":"<p>如果需要，作为第一个参数传递的值将转换为布尔值。如果省略该参数或参数值为 <code>0</code>、<code>-0</code>、<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a>、<code>false</code>、<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>、<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>，或空字符串（<code>\"\"</code>），则该对象具有的初始值为 <code>false</code>。所有其它值，包括任何对象，空数组（<code>[]</code>）或字符串 <code>\"false\"</code>，都会创建一个初始值为 <code>true</code> 的对象。</p>\n<p>注意不要将基本类型中的布尔值 <code>true</code> 和 <code>false</code> 与值为 <code>true</code> 和 <code>false</code> 的 <code>Boolean</code> 对象弄混了。</p>\n<p>其值不是 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> 或 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> 的任何对象（包括其值为 <code>false</code> 的布尔对象）在传递给条件语句时都将计算为 <code>true</code>。例如，以下 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Statements/if...else\"><code>if</code></a> 语句中的条件评估为 <code>true</code>：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 这里的代码会被执行</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>基本类型的布尔值不受此规则影响。例如下面的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Statements/if...else\"><code>if</code></a> 语句的条件为假：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 这里的代码不会执行</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>不要用创建 <code>Boolean</code> 对象的方式将一个非布尔值转化成布尔值，直接将 <code>Boolean</code> 当做转换函数来使用即可，或者使用<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators/Logical_NOT#double_not_!!\">双重非（!!）运算符</a>：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// use this...</span>\n<span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// ...or this</span>\n<span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// don't use this!</span>\n</code></pre></div>\n<p>对于任何对象，即使是值为 <code>false</code> 的 <code>Boolean</code> 对象，当将其传给 <code>Boolean</code> 函数时，生成的 <code>Boolean</code> 对象的值都是 <code>true</code>。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myFalse <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// initial value of false</span>\n<span class=\"token keyword\">const</span> g <span class=\"token operator\">=</span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>myFalse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// initial value of true</span>\n<span class=\"token keyword\">const</span> myString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// string object</span>\n<span class=\"token keyword\">const</span> s <span class=\"token operator\">=</span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>myString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// initial value of true</span>\n</code></pre></div>\n<p>最后，不要在应该使用基本类型布尔值的地方使用 <code>Boolean</code> 对象。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 当将非标准属性 <a href=\"/zh-CN/docs/Web/API/Document#%E5%B1%9E%E6%80%A7\"><code>document.all</code></a> 用作此构造函数的参数时，结果是值为 <code>false</code> 的布尔对象。此属性是旧的、非标准的属性，不应使用。</p>\n</div>\n<p>当使用非严格相等（<code>==</code>）来比较一个对象和布尔原始值时，最重要的是需要弄明白最终比较的是什么。请看一下的示例：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[] is truthy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>         <span class=\"token comment\">// logs \"[] is truthy\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[] == false\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// logs \"[] == false\"</span>\n</code></pre></div>\n<p><code>[]</code> 是真值而 <code>[] == false</code> 也同时成立的原因是：非严格比较 <code>[] == false</code> 会将 <code>[]</code> 的原始值和 <code>false</code> 进行比较。而获取 <code>[]</code> 的原始值时，JavaScript 引擎会首先调用 <code>[].toString()</code>。其结果为 <code>\"\"</code>，也是最终和 <code>false</code> 一起比较的值。换句话说，<code>[] == false</code> 等价于 <code>\"\" == false</code>，而 <code>\"\"</code> 是假值——这也解释了为什么会得到这一结果。</p>"}},{"type":"prose","value":{"id":"构造函数","title":"构造函数","isH3":false,"content":"<dl>\n  <dt id=\"boolean_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean/Boolean\"><code>Boolean()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>创建一个新的 <code>Boolean</code> 对象。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"实例方法","title":"实例方法","isH3":false,"content":"<dl>\n  <dt id=\"boolean.prototype.tostring\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean/toString\"><code>Boolean.prototype.toString()</code></a></dt>\n  <dd>\n    <p>根据对象的值返回字符串 <code>true</code> 或 <code>false</code>。覆盖了 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a> 方法。</p>\n  </dd>\n  <dt id=\"boolean.prototype.valueof\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean/valueOf\"><code>Boolean.prototype.valueOf()</code></a></dt>\n  <dd>\n    <p>返回 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" aria-current=\"page\"><code>Boolean</code></a> 对象的原始值。覆盖了 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a> 方法。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":""}},{"type":"prose","value":{"id":"以初始值_false_创建_boolean_对象","title":"以初始值 <code>false</code> 创建 <code>Boolean</code> 对象","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> bNoParam <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bZero <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bNull <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bEmptyString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bfalse <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"以初始值 false 创建 Boolean 对象"}},{"type":"prose","value":{"id":"以初始值_true_创建_boolean_对象","title":"以初始值 <code>true</code> 创建 <code>Boolean</code> 对象","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> btrue <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> btrueString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">'true'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bfalseString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">'false'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bSuLin <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Su Lin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bArrayProto <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bObjProto <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"以初始值 true 创建 Boolean 对象"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-boolean-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Boolean"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"javascript.builtins.Boolean","dataURL":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Glossary/Boolean\">Boolean</a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Data_structures#%E5%B8%83%E5%B0%94%E7%B1%BB%E5%9E%8B\">基本类型：布尔类型</a></li>\n  <li><a href=\"https://zh.wikipedia.org/wiki/%E5%B8%83%E6%9E%97_(%E8%B3%87%E6%96%99%E9%A1%9E%E5%9E%8B)\" class=\"external\" rel=\" noopener\">布尔类型（维基百科）</a></li>\n</ul>"}}],"toc":[{"text":"描述","id":"描述"},{"text":"构造函数","id":"构造函数"},{"text":"实例方法","id":"实例方法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"Boolean 对象是一个布尔值的对象包装器。","popularity":0.001,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Boolean","locale":"en-US","native":"English (US)"},{"title":"Booleano","locale":"es","native":"Español"},{"title":"Boolean","locale":"fr","native":"Français"},{"title":"Boolean","locale":"ja","native":"日本語"},{"title":"Boolean","locale":"ko","native":"한국어"},{"title":"Boolean","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Boolean","locale":"ru","native":"Русский"},{"title":"Boolean","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/javascript/reference/global_objects/boolean","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/javascript/reference/global_objects/boolean/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference","title":"JavaScript 参考"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects","title":"JavaScript 标准内置对象"},{"uri":"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean","title":"Boolean"}],"pageTitle":"Boolean - JavaScript | MDN","noIndexing":false}}