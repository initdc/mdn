{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Beacon API","mdn_url":"/zh-CN/docs/Web/API/Beacon_API","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Beacon_API\">Beacon API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>指南</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Beacon_API\">Beacon API</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>接口</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Navigator\"><code>Navigator</code></a></li><li><a href=\"/zh-CN/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p><strong><code>Beacon</code></strong> 接口用于将异步和非阻塞请求发送到服务器。信标（Beacon）请求使用 HTTP 协议中的 POST 方法，请求通常不需要响应。这个请求被保证在，页面的<strong>unload</strong>状态从发起到完成之前，被发送。而并不需要一个阻塞请求，例如 <a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> 。</p>\n<p>Beacon API 的示例用例是记录活动并向服务器发送分析数据。</p>\n<p>本文档中描述的接口的示例代码包含在<a href=\"/en-US/docs/Web/API/Beacon_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">使用信标 API (en-US)</a> 中。</p>"}},{"type":"prose","value":{"id":"为什么是信标？","title":"为什么是信标？","isH3":false,"content":"<p><code>Beacon</code> 接口满足了分析和诊断代码的需要，这些代码通常会尝试在卸载文档之前将数据发送到 web 服务器。发送数据的任何过早时机都可能导致错失收集数据的机会。但是，确保在卸载文档期间发送数据是开发人员难以做到的。</p>\n<p>用户代理通常会忽略卸载文档处理程序中的异步 <a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\" title=\"XMLHttpRequests\"><code>XMLHttpRequests</code></a> 请求。若要解决此问题，为了分析和诊断代码，通常会在 <code><a href=\"/en-US/docs/Web/API/Window/unload_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">unload (en-US)</a></code> 事件或 <code><a href=\"/en-US/docs/Web/API/Window/beforeunload_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">beforeunload (en-US)</a></code> 事件中创建同步 <a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> 请求以提交数据。同步 <a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> 请求强制浏览器延迟卸载文档，并使下一个页面跳转看起来较慢。下一页面没有任何办法来避免这种页面加载性能不佳的感觉。</p>\n<p>其他技术也可以用来确保提交数据。其中一种技术是通过创建 Image 元素并在卸载文档处理程序中设置其 <code>src</code> 属性来延迟卸载以提交数据。由于大多数用户代理会延迟文档卸载，以完成挂起的图片加载，因此可以在卸载过程中提交数据。另一种方法是在卸载处理程序中创建一个无操作循环，花费数秒以延迟卸载并将数据提交到服务器。</p>\n<p>但是上述技术不仅代表了较差的编码模式，其中一些还是不可靠的，会导致下一个导航的页面加载性能较差的感觉。信标 API 提供了解决这些问题的标准方法。</p>"}},{"type":"prose","value":{"id":"全局环境","title":"全局环境","isH3":false,"content":"<p><code>Beacon</code> API 的 <a href=\"/zh-CN/docs/Web/API/Navigator/sendBeacon\"><code>Navigator.sendBeacon()</code></a> 方法用于在<em>全局浏览上下文</em>中向服务器发送<em>数据信标</em>。该方法有两个参数，URL 和要在请求中发送的数据 data。data 参数是可选的，其类型可以是 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>ArrayBufferView</code></a>、<a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a>、<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 或<a href=\"/zh-CN/docs/Web/API/FormData\"><code>FormData</code></a>。如果浏览器成功的以队列形式排列了用于传递的请求，则该方法返回“<code>true</code>”，否则返回“<code>false</code>”。</p>"}},{"type":"prose","value":{"id":"生产环境","title":"生产环境","isH3":false,"content":"<p><code>Beacon</code> API 的 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>WorkerNavigator.sendBeacon()</code></a> 方法用于从 <em><a href=\"/zh-CN/docs/Web/API/WorkerGlobalScope\" title=\"worker global scope\"><code>worker global scope</code></a></em> 向服务器发送<em>数据信标</em>。该方法有两个参数，URL 和要在请求中发送的数据 data。data 参数是可选的，其类型可以是 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>ArrayBufferView</code></a>、<a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a>、<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 或 <a href=\"/zh-CN/docs/Web/API/FormData\"><code>FormData</code></a>。如果浏览器成功的以队列形式排列了用于传递的请求，则该方法返回“<code>true</code>”，否则返回“<code>false</code>”。</p>"}},{"type":"prose","value":{"id":"浏览器兼容性","title":"浏览器兼容性","isH3":false,"content":"<p><a href=\"/zh-CN/docs/Web/API/Navigator/sendBeacon#browser_compatibility\" title=\"Navigator.sendBeacon()\"><code>Navigator.sendBeacon().Browser_compatibility</code></a>表说明了该方法具有相对广泛地实现。但是，<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>WorkerNavigator.sendBeacon().Browser_compatibility</code></a>数据显示该方法没有被实现。</p>"}},{"type":"prose","value":{"id":"相关知识","title":"相关知识","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a></li>\n  <li><a href=\"https://w3c.github.io/beacon/\" class=\"external\" rel=\" noopener\">信标标准（Beacon standard）</a></li>\n  <li><a href=\"http://caniuse.com/#search=beacon\" class=\"external\" rel=\" noopener\">信标 CanIUse 数据</a></li>\n  <li><a href=\"https://ehsanakhgari.org/blog/2015-04-08/intercepting-beacons-through-service-workers\" class=\"external\" rel=\" noopener\">通过服务程序拦截信标</a>（Intercepting beacons through service workers）; Ehsan Akhgari; 2015-Apr-08</li>\n  <li><a href=\"https://webkit.org/blog/8821/link-click-analytics-and-privacy/\" class=\"external\" rel=\" noopener\">https://webkit.org/blog/8821/link-click-analytics-and-privacy/</a></li>\n  <li><a href=\"https://davidwalsh.name/ping-attribute\" class=\"external\" rel=\" noopener\">https://davidwalsh.name/ping-attribute</a></li>\n</ul>"}}],"toc":[{"text":"为什么是信标？","id":"为什么是信标？"},{"text":"全局环境","id":"全局环境"},{"text":"生产环境","id":"生产环境"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"相关知识","id":"相关知识"}],"summary":"Beacon 接口用于将异步和非阻塞请求发送到服务器。信标（Beacon）请求使用 HTTP 协议中的 POST 方法，请求通常不需要响应。这个请求被保证在，页面的unload状态从发起到完成之前，被发送。而并不需要一个阻塞请求，例如 XMLHttpRequest 。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Beacon API","locale":"en-US","native":"English (US)"},{"title":"Beacon API","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/beacon_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/beacon_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Beacon_API","title":"Beacon API"}],"pageTitle":"Beacon API - Web API 接口参考 | MDN","noIndexing":false}}