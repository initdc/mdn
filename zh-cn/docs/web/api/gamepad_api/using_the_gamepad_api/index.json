{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"使用 Gamepad API","mdn_url":"/zh-CN/docs/Web/API/Gamepad_API/Using_the_Gamepad_API","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Gamepad_API\">Gamepad API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>指南</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Gamepad_API/Using_the_Gamepad_API\">Using the Gamepad API</a></li><li><a href=\"/zh-CN/docs/Games/Techniques/Controls_Gamepad_API\">Implementing controls using the Gamepad API</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>接口</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Gamepad\"><code>Gamepad</code></a></li><li><a href=\"/zh-CN/docs/Web/API/GamepadButton\"><code>GamepadButton</code></a></li><li><a href=\"/zh-CN/docs/Web/API/GamepadEvent\"><code>GamepadEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Navigator/getGamepads\"><code>Navigator.getGamepads()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Window/gamepadconnected_event\"><code>Window</code>: <code>gamepadconnected</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Window/gamepaddisconnected_event\"><code>Window</code>: <code>gamepaddisconnected</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p>HTML5 为丰富的交互式游戏开发引入了许多必要的组件。像 <code>&lt;canvas&gt;</code> 、WebGL、 <code>&lt;audio&gt;</code> 和 <code>&lt;video&gt;</code> 这样的技术，随着 JavaScript 的逐渐成熟，许多以前需要 native code 来实现的功能现在都可以实现了。Gamepad(手柄) API 是开发人员和设计者识别和使用游戏控制板和其他游戏控制器的一种方法。</p>\n<p><a href=\"/zh-CN/docs/Web/API/Gamepad_API\">Gamepad API</a> 引入新的事件在 <a href=\"/zh-CN/docs/Web/API/Window\"><code>Window</code></a> 对象中，来读取手柄和控制器（以下称“控制器”）的状态。除此之外，API 还添加了一个 <a href=\"/zh-CN/docs/Web/API/Gamepad\"><code>Gamepad</code></a> 对象，你可以用它来查询已连接控制器的状态；还有一个 <a href=\"/zh-CN/docs/Web/API/Navigator/getGamepads\"><code>navigator.getGamepads()</code></a> 方法，你可以使用它来获取页面已知的控制器列表。</p>"}},{"type":"prose","value":{"id":"连接控制器","title":"连接控制器","isH3":false,"content":"<p>当一个新的手柄连接到计算机时，焦点页面 (当前页面) 首先接收一个 <code><a href=\"/en-US/docs/Web/API/Window/gamepadconnected_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">gamepadconnected (en-US)</a></code> 事件。如果在加载页面时已经连接了手柄，则会在用户按下某个按钮或移动坐标方向 (axes) 时触发焦点页面的 <code><a href=\"/en-US/docs/Web/API/Window/gamepadconnected_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">gamepadconnected (en-US)</a></code> 事件。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 在 Firefox 中，控制器只会暴露给与用户产生交互的可见页面。这有助于防止控制器被用于获取用户的指纹。一旦有一个手柄与页面产生交互，那么其他连接的控制器将自动对页面可见。</p>\n</div>\n<p>你可以这样使用 <code><a href=\"/en-US/docs/Web/API/Window/gamepadconnected_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">gamepadconnected (en-US)</a></code> ：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gamepadconnected\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"控制器已连接于 %d 位：%s. %d 个按钮，%d 个坐标方向。\"</span><span class=\"token punctuation\">,</span>\n    e<span class=\"token punctuation\">.</span>gamepad<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>gamepad<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n    e<span class=\"token punctuation\">.</span>gamepad<span class=\"token punctuation\">.</span>buttons<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>gamepad<span class=\"token punctuation\">.</span>axes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>每个控制器都有一个与之关联的唯一 ID，其在事件的 <a href=\"/zh-CN/docs/Web/API/GamepadEvent/gamepad\" title=\"gamepad\"><code>gamepad</code></a> 属性上可用。</p>"}},{"type":"prose","value":{"id":"断开控制器连接","title":"断开控制器连接","isH3":false,"content":"<p>当控制器断开连接时，如果页面以前接收过该手柄的数据 (例如 <code><a href=\"/en-US/docs/Web/API/Window/gamepadconnected_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">gamepadconnected (en-US)</a></code>)，那么第二个事件 <code><a href=\"/en-US/docs/Web/API/Window/gamepaddisconnected_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">gamepaddisconnected (en-US)</a></code> 将会分配至焦点页面：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gamepaddisconnected\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"控制器已从 %d 位断开：%s\"</span><span class=\"token punctuation\">,</span>\n    e<span class=\"token punctuation\">.</span>gamepad<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>gamepad<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>即使使用相同类型的多个控制器，控制器的 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Gamepad/index\"><code>index</code> <small>(en-US)</small></a> 属性都会是唯一的，每一个设备都有一个。<code>index</code> 属性还可充当 <a href=\"/zh-CN/docs/Web/API/Navigator/getGamepads\"><code>Navigator.getGamepads()</code></a> 返回 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> 的索引。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> gamepads <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">gamepadHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> connecting</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> gamepad <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>gamepad<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 注：</span>\n  <span class=\"token comment\">// gamepad === navigator.getGamepads()[gamepad.index]</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>connecting<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gamepads<span class=\"token punctuation\">[</span>gamepad<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> gamepad<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">delete</span> gamepads<span class=\"token punctuation\">[</span>gamepad<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gamepadconnected\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">gamepadHandler</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gamepaddisconnected\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">gamepadHandler</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>上面的示例同时演示了在事件完成后如何保存 <code>gamepad</code> 属性，并在之后使用其查询设备状态。</p>"}},{"type":"prose","value":{"id":"查询_gamepad_对象","title":"查询 Gamepad 对象","isH3":false,"content":"<p>正如你看到的，上面讨论的 <strong>gamepad</strong> 事件，包括事件对象上的 <code>gamepad</code> 属性，会返回一个 <a href=\"/zh-CN/docs/Web/API/Gamepad\"><code>Gamepad</code></a> 对象。因为可能同时连接不止一个控制器，所以我们可以使用它来确定是哪个控制器 (或者说 ID) 触发了事件。我们可以使用 <a href=\"/zh-CN/docs/Web/API/Gamepad\"><code>Gamepad</code></a> 对象做很多事，比如保留对象的引用并用其查询，以找出哪些按钮和摇杆在什么时候被按下了。相较于在下次触发，现在立即就可以获取控制器的状态对于游戏或其他交互式网页来说是一般是可取的。</p>\n<p>开发者执行此类查询时往往涉及将 <a href=\"/zh-CN/docs/Web/API/Gamepad\"><code>Gamepad</code></a> 对象和一个动画循环 (例如 <a href=\"/zh-CN/docs/Web/API/Window/requestAnimationFrame\" title=\"requestAnimationFrame\"><code>requestAnimationFrame</code></a>) 结合在一起，希望根据控制器的状态来对决定当前框架的行为。</p>\n<p><a href=\"/zh-CN/docs/Web/API/Navigator/getGamepads\"><code>Navigator.getGamepads()</code></a> 方法返回当前对网页可见的所有设备的数组，<a href=\"/zh-CN/docs/Web/API/Gamepad\"><code>Gamepad</code></a> 对象 (初始值始终为 <code>null</code>，所以当没有控制器连接的时候将会返回 <code>null</code> ) 也一样可以用来获取的控制器信息。例如下面将会重写开头的第一个例子：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gamepadconnected\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> gp <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span><span class=\"token function\">getGamepads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">.</span>gamepad<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"控制器已连接于 %d 位：%s. %d 个按钮，%d 个坐标方向。\"</span><span class=\"token punctuation\">,</span>\n    gp<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> gp<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n    gp<span class=\"token punctuation\">.</span>buttons<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> gp<span class=\"token punctuation\">.</span>axes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>以下是 <a href=\"/zh-CN/docs/Web/API/Gamepad\"><code>Gamepad</code></a> 对象的属性说明：</p>\n<ul>\n  <li><code>id</code>: 包含一些关于控制器信息的字符串。它的格式没有特定规范，但是在 Firefox 中它将会含有三部分信息并以连接线连接 (<code>-</code>)：包含控制器的 USB 供应商、产品 ID 的两个 4 位十六进制字符串以及驱动程序提供的控制器的名称。此信息旨在允许你为设备上的控件查找适当的映射，并向用户显示有用的反馈。</li>\n  <li><code>index</code>: 每个已连接手柄唯一的索引数字，可以用来区分多个控制器。请注意，断开目前的设备并连接一个新的设备可能会使用之前的索引值。</li>\n  <li><code>mapping</code>: 一个用来指示浏览器是否已将设备上的控件重新映射到已知布局的字符串。目前只有一个受支持的已知布局 - <a href=\"https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html#remapping\" class=\"external\" rel=\" noopener\">standard gamepad</a>(标准控制器)。如果浏览器能够将设备上的控件映射为该布局，<code>mapping</code> 属性将会为字符串 <code>standard</code>。</li>\n  <li><code>connected</code>: 一个用来指示控制器是否连接到系统的布尔值。如果已连接则为 <code>True</code>；反之则为 <code>False</code>。</li>\n  <li><code>buttons</code>: 一个表示设备上按钮的 <a href=\"/zh-CN/docs/Web/API/GamepadButton\"><code>GamepadButton</code></a> 数组对象。每个 <a href=\"/zh-CN/docs/Web/API/GamepadButton\"><code>GamepadButton</code></a> 都含有一个 <code>pressed</code> 和一个 <code>value</code> 属性：\n    <ul>\n      <li><code>pressed</code> 属性是一个表示按钮当前是按下 (<code>true</code>) 还是没按下 (<code>false</code>) 的布尔值。</li>\n      <li><code>value</code> 属性是一个表示已触发模拟按钮 (例如目前很多控制器的线性/段式扳机键) 的值的浮点值。值的范围被规范为 0.0 到 1.0。0.0 表示没被按下的按钮，1.0 表示被完全按下的按钮。</li>\n    </ul>\n  </li>\n  <li><code>axes</code>: 一个表示设备上坐标输入控件 (例如控制器摇杆) 的数组对象。数组中的每个值都是介于 -1.0 到 1.0 的浮点值，来表示坐标方向的最低 (-1.0) 和最大 (1.0) 值。</li>\n  <li><code>timestamp</code>: 它将返回一个 <a href=\"/zh-CN/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> ，该值表示上次更新此控制器数据的时间，以便开发者确定 <code>axes</code> 和 <code>button</code> 数据是否已从硬件更新。该值必须相对于 <a href=\"/zh-CN/docs/Web/API/PerformanceTiming\"><code>PerformanceTiming</code></a> 接口的 <code>navigationStart</code> 对象。值是单调递增的，这意味着可以通过对比大小来确定数据更新的先后顺序，因为新的值始终比旧的值大。请注意 Firefox 当前不支持该属性。</li>\n</ul>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 出于安全原因，Gamepad 对象在 <code><a href=\"/en-US/docs/Web/API/Window/gamepadconnected_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">gamepadconnected (en-US)</a></code> 事件上可用而在 <a href=\"/zh-CN/docs/Web/API/Window\"><code>Window</code></a> 对象上不可用。一旦我们得到了对它的引用，我们就可以获取其属性以了解有关控制器当前状态的信息。在后台，此对象将会在控制器状态更改时更新。</p>\n</div>"}},{"type":"prose","value":{"id":"使用按键信息","title":"使用按键信息","isH3":true,"content":"<p>让我们看一个简单的示例：显示一个控制器的连接信息 (忽略后续连接的控制器) ，并让您使用控制器右侧的四个操作按钮移动屏幕上一个球。你可以 <a href=\"http://chrisdavidmills.github.io/gamepad-buttons/\" class=\"external\" rel=\" noopener\">查看在线演示</a>，并可在 Github 上<a href=\"https://github.com/chrisdavidmills/gamepad-buttons/tree/master\" class=\"external\" rel=\" noopener\">找到源代码</a>。</p>\n<p>我们首先声明一些变量：<code>gamepadInfo</code> 用于写入连接信息的段落；<code>ball</code> 是我们希望控制移动的球；<code>start</code> 作为 <code>requestAnimation Frame</code> ID 的初始变量； <code>a</code> 和 <code>b</code> 变量作为球位置动量，并且变量会被用于 <a href=\"/zh-CN/docs/Web/API/Window/requestAnimationFrame\" title=\"requestAnimationFrame()\"><code>requestAnimationFrame()</code></a> 和 <a href=\"/zh-CN/docs/Web/API/Window/cancelAnimationFrame\" title=\"cancelAnimationFrame()\"><code>cancelAnimationFrame()</code></a> 。（？）</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> gamepadInfo <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gamepad-info\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ball <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ball\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> start<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>接下来我们使用 <code><a href=\"/en-US/docs/Web/API/Window/gamepadconnected_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">gamepadconnected (en-US)</a></code> 事件来检查控制器是否连接。当有一个控制连接时，我们就使用 <a href=\"/zh-CN/docs/Web/API/Navigator/getGamepads\"><code>Navigator.getGamepads()</code></a><code>[0]</code> 来抓取，输出控制器信息到我们“控制器信息”的 <code>div</code> 里，并开始 <code>gameLoop()</code> 函数来启动球的运动进程。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gamepadconnected\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> gp <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span><span class=\"token function\">getGamepads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">.</span>gamepad<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  gamepadInfo<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"控制器已连接于 \"</span> <span class=\"token operator\">+</span> gp<span class=\"token punctuation\">.</span>index <span class=\"token operator\">+</span> <span class=\"token string\">\" 位：\"</span> <span class=\"token operator\">+</span> gp<span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span> <span class=\"token string\">\"。它有 \"</span> <span class=\"token operator\">+</span> gp<span class=\"token punctuation\">.</span>buttons<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> <span class=\"token string\">\" 个按钮和 \"</span> <span class=\"token operator\">+</span> gp<span class=\"token punctuation\">.</span>axes<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> <span class=\"token string\">\" 个坐标方向。\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">gameLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>现在我们再使用 <code><a href=\"/en-US/docs/Web/API/Window/gamepaddisconnected_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">gamepaddisconnected (en-US)</a></code> 事件来检查如果控制器断开的情况。如果断开了，我们会停止 <a href=\"/zh-CN/docs/Web/API/Window/requestAnimationFrame\" title=\"requestAnimationFrame()\"><code>requestAnimationFrame()</code></a> 循环 (见下方) 并重置控制器信息到原来的样子。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gamepaddisconnected\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  gamepadInfo<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"正在等待控制器。\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">cancelRequestAnimationFrame</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Chrome 在这里有些区别。它没有在变量内不断的更新存储控制器的最后状态，而存储只是当时的一个快照，所以你要在 Chrome 中做到同样的事情的话，就需要不断地轮询，然后在可用的时候只能在代码中使用 <a href=\"/zh-CN/docs/Web/API/Gamepad\"><code>Gamepad</code></a> 对象来达到目的。我们下面用 <a href=\"/zh-CN/docs/Web/API/setInterval\"><code>Window.setInterval()</code></a>实现了; 一旦对象可用，控制器信息就会被输出，游戏循环就会开始，可以使用 <a href=\"/zh-CN/docs/Web/API/clearInterval\"><code>Window.clearInterval()</code></a> 清除定时循环。请注意在较旧版本的 Chrome 中实现 <a href=\"/zh-CN/docs/Web/API/Navigator/getGamepads\"><code>Navigator.getGamepads()</code></a> 需要加上 <code>webkit</code> 前缀。我们尝试对两种前缀版本都进行监测和处理，以向后兼容。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> interval<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ongamepadconnected'</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 没有控制器事件可用，则开始轮询。</span>\n  interval <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>pollGamepads<span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">pollGamepads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> gamepads <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>getGamepads <span class=\"token operator\">?</span> navigator<span class=\"token punctuation\">.</span><span class=\"token function\">getGamepads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>webkitGetGamepads <span class=\"token operator\">?</span> navigator<span class=\"token punctuation\">.</span>webkitGetGamepads <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> gamepads<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> gp <span class=\"token operator\">=</span> gamepads<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      gamepadInfo<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"控制器已连接于 \"</span> <span class=\"token operator\">+</span> gp<span class=\"token punctuation\">.</span>index <span class=\"token operator\">+</span> <span class=\"token string\">\" 位：\"</span> <span class=\"token operator\">+</span> gp<span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span>\n        <span class=\"token string\">\"。它有 \"</span> <span class=\"token operator\">+</span> gp<span class=\"token punctuation\">.</span>buttons<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> <span class=\"token string\">\" 个按钮和 \"</span> <span class=\"token operator\">+</span> gp<span class=\"token punctuation\">.</span>axes<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> <span class=\"token string\">\" 个坐标方向。\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">gameLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>现在看主要的游戏循环。在每次我们所需的四个按钮被按下的时候进行处理。如果被按下了我就会适当地更新动量变量 <code>a</code> 和 <code>b</code> 的值，然后分别用 <code>a</code> 和 <code>b</code> 的值更新球的 <a href=\"/zh-CN/docs/Web/CSS/left\"><code>left</code></a> 和 <a href=\"/zh-CN/docs/Web/CSS/top\"><code>top</code></a> 属性。这样就可以在屏幕上移动数的位置了。在当前版本的 Chrome 中 (版本 34) button 的值是存储为数组的两个值，而不是 <a href=\"/zh-CN/docs/Web/API/GamepadButton\"><code>GamepadButton</code></a> 对象。此问题已于开发者版本修复了。</p>\n<p>当这些处理好之后，我们使用我们的 <code>requestAnimationFrame()</code> 来请求下一个动画帧，然后运行 <code>gameLoop()</code> 再继续执行。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">buttonPressed</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> b<span class=\"token punctuation\">.</span>pressed<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> b <span class=\"token operator\">==</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">gameLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> gamepads <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>getGamepads <span class=\"token operator\">?</span> navigator<span class=\"token punctuation\">.</span><span class=\"token function\">getGamepads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>webkitGetGamepads <span class=\"token operator\">?</span> navigator<span class=\"token punctuation\">.</span>webkitGetGamepads <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>gamepads<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">var</span> gp <span class=\"token operator\">=</span> gamepads<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">buttonPressed</span><span class=\"token punctuation\">(</span>gp<span class=\"token punctuation\">.</span>buttons<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    b<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">buttonPressed</span><span class=\"token punctuation\">(</span>gp<span class=\"token punctuation\">.</span>buttons<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    b<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">buttonPressed</span><span class=\"token punctuation\">(</span>gp<span class=\"token punctuation\">.</span>buttons<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">buttonPressed</span><span class=\"token punctuation\">(</span>gp<span class=\"token punctuation\">.</span>buttons<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  ball<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"px\"</span><span class=\"token punctuation\">;</span>\n  ball<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> b <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"px\"</span><span class=\"token punctuation\">;</span>\n\n  start <span class=\"token operator\">=</span> <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>gameLoop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"使用坐标方向_axes_信息","title":"使用坐标方向 (axes) 信息","isH3":true,"content":"<p><strong>待讨论 (除了一个用 axes[i] 一个用 button[i].value，其他基本一样，Firefox 与 Chrome 均是。)</strong></p>"}},{"type":"prose","value":{"id":"完整的例子：显示控制器状态","title":"完整的例子：显示控制器状态","isH3":false,"content":"<p>这个例子展示了怎样使用 <a href=\"/zh-CN/docs/Web/API/Gamepad\"><code>Gamepad</code></a> 对象，还有 <code><a href=\"/en-US/docs/Web/API/Window/gamepadconnected_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">gamepadconnected (en-US)</a></code> 和 <code><a href=\"/en-US/docs/Web/API/Window/gamepaddisconnected_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">gamepaddisconnected (en-US)</a></code> 事件显示所有已连接到系统的控制器的状态。你可以查看<a href=\"http://luser.github.io/gamepadtest/\" class=\"external\" rel=\" noopener\">在线演示</a>并且可在 Github 上看到<a href=\"https://github.com/luser/gamepadtest\" class=\"external\" rel=\" noopener\">完整的源代码</a>。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> haveEvents <span class=\"token operator\">=</span> <span class=\"token string\">'ongamepadconnected'</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> controllers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">connecthandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">addgamepad</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>gamepad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addgamepad</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gamepad</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  controllers<span class=\"token punctuation\">[</span>gamepad<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> gamepad<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  d<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"controller\"</span> <span class=\"token operator\">+</span> gamepad<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  t<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"控制器：\"</span> <span class=\"token operator\">+</span> gamepad<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  d<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  b<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"buttons\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> gamepad<span class=\"token punctuation\">.</span>buttons<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    e<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"button\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//e.id = \"b\" + i;</span>\n    e<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n    b<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  d<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  a<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"axes\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> gamepad<span class=\"token punctuation\">.</span>axes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"progress\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"axis\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//p.id = \"a\" + i;</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n    a<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  d<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 见 https://github.com/luser/gamepadtest/blob/master/index.html</span>\n  <span class=\"token keyword\">var</span> start <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    start<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>updateStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">disconnecthandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">removegamepad</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>gamepad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">removegamepad</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gamepad</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"controller\"</span> <span class=\"token operator\">+</span> gamepad<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">delete</span> controllers<span class=\"token punctuation\">[</span>gamepad<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>haveEvents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">scangamepads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> j<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token keyword\">in</span> controllers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> controller <span class=\"token operator\">=</span> controllers<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"controller\"</span> <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> buttons <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> controller<span class=\"token punctuation\">.</span>buttons<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> buttons<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> val <span class=\"token operator\">=</span> controller<span class=\"token punctuation\">.</span>buttons<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> pressed <span class=\"token operator\">=</span> val <span class=\"token operator\">==</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        pressed <span class=\"token operator\">=</span> val<span class=\"token punctuation\">.</span>pressed<span class=\"token punctuation\">;</span>\n        val <span class=\"token operator\">=</span> val<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">var</span> pct <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>val <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"%\"</span><span class=\"token punctuation\">;</span>\n      b<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundSize <span class=\"token operator\">=</span> pct <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> pct<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        b<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"button pressed\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        b<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"button\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">var</span> axes <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"axis\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> controller<span class=\"token punctuation\">.</span>axes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> axes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      a<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> controller<span class=\"token punctuation\">.</span>axes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      a<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">,</span> controller<span class=\"token punctuation\">.</span>axes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>updateStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">scangamepads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> gamepads <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>getGamepads <span class=\"token operator\">?</span> navigator<span class=\"token punctuation\">.</span><span class=\"token function\">getGamepads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>webkitGetGamepads <span class=\"token operator\">?</span> navigator<span class=\"token punctuation\">.</span><span class=\"token function\">webkitGetGamepads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> gamepads<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gamepads<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gamepads<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index <span class=\"token keyword\">in</span> controllers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        controllers<span class=\"token punctuation\">[</span>gamepads<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> gamepads<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">addgamepad</span><span class=\"token punctuation\">(</span>gamepads<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gamepadconnected\"</span><span class=\"token punctuation\">,</span> connecthandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gamepaddisconnected\"</span><span class=\"token punctuation\">,</span> disconnecthandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>haveEvents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>scangamepads<span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/gamepad/#gamepad-interface","title":"Gamepad"},{"bcdSpecificationURL":"https://w3c.github.io/gamepad/extensions.html#partial-gamepad-interface","title":"Gamepad Extensions"}],"query":"api.Gamepad"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Gamepad","dataURL":"/zh-CN/docs/Web/API/Gamepad_API/Using_the_Gamepad_API/bcd.json"}}],"toc":[{"text":"连接控制器","id":"连接控制器"},{"text":"断开控制器连接","id":"断开控制器连接"},{"text":"查询 Gamepad 对象","id":"查询_gamepad_对象"},{"text":"完整的例子：显示控制器状态","id":"完整的例子：显示控制器状态"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"HTML5 为丰富的交互式游戏开发引入了许多必要的组件。像 <canvas> 、WebGL、 <audio> 和 <video> 这样的技术，随着 JavaScript 的逐渐成熟，许多以前需要 native code 来实现的功能现在都可以实现了。Gamepad(手柄) API 是开发人员和设计者识别和使用游戏控制板和其他游戏控制器的一种方法。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using the Gamepad API","locale":"en-US","native":"English (US)"},{"title":"Utiliser l'API Gamepad","locale":"fr","native":"Français"},{"title":"ゲームパッド API の使用","locale":"ja","native":"日本語"},{"title":"Using the Gamepad API","locale":"ko","native":"한국어"},{"title":"Using the Gamepad API","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/gamepad_api/using_the_gamepad_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/gamepad_api/using_the_gamepad_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Gamepad_API","title":"Gamepad API"},{"uri":"/zh-CN/docs/Web/API/Gamepad_API/Using_the_Gamepad_API","title":"使用 Gamepad API"}],"pageTitle":"使用 Gamepad API - Web API 接口参考 | MDN","noIndexing":false}}