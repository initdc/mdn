{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Response.type","mdn_url":"/zh-CN/docs/Web/API/Response/type","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Response/Response\"><code>Response()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Response/body\"><code>body</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/bodyUsed\"><code>bodyUsed</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/headers\"><code>headers</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/ok\"><code>ok</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/redirected\"><code>redirected</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/status\"><code>status</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/statusText\"><code>statusText</code></a></li><li><em><code>type</code></em></li><li><a href=\"/zh-CN/docs/Web/API/Response/url\"><code>url</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Response/arrayBuffer\"><code>arrayBuffer()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/blob\"><code>blob()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/clone\"><code>clone()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/error\"><code>error()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/formData\"><code>formData()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/json\"><code>json()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/redirect\"><code>redirect()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/text\"><code>text()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p><strong><code>type</code></strong> 是<a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a> 接口包含的一种响应类型，是只读属性。它可以是以下某一种值：</p>\n<ul>\n  <li><code>basic</code>: 标准值，同源响应，带有所有的头部信息除了“Set-Cookie” 和 “Set-Cookie2″.</li>\n  <li><code>cors</code>: Response 接收到一个有效的跨域请求。<a href=\"https://fetch.spec.whatwg.org/#concept-filtered-response-cors\" class=\"external\" rel=\" noopener\">部分 headers 和 body</a>可以被访问。</li>\n  <li><code>error</code>: 网络错误。没有有用的描述错误的信息。响应的状态为 0，header 为空且不可变。从 <code>Response.error()</code>中获得的响应的类型。</li>\n  <li><code>opaque</code>: 响应 “no-cors” 的跨域请求。<a href=\"https://fetch.spec.whatwg.org/#concept-filtered-response-opaque\" class=\"external\" rel=\" noopener\">严重受限</a>.</li>\n</ul>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> “错误”响应从来没有真正暴露于脚本：这种响应 <a href=\"/zh-CN/docs/Web/API/fetch\" title=\"fetch()\"><code>fetch()</code></a> 将被 promise 拒绝。</p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myType <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":true,"content":"<p><code>ResponseType</code>说明响应类型。</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>In our <a href=\"https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-response\" class=\"external\" rel=\" noopener\">Fetch Response example</a> (see <a href=\"https://mdn.github.io/fetch-examples/fetch-response/\" class=\"external\" rel=\" noopener\">Fetch Response live</a>) we create a new <a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a> object using the <a href=\"/zh-CN/docs/Web/API/Request/Request\" title=\"Request()\"><code>Request()</code></a> constructor, passing it a JPG path. We then fetch this request using <a href=\"/zh-CN/docs/Web/API/fetch\" title=\"fetch()\"><code>fetch()</code></a>, extract a blob from the response using <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/blob\"><code>Body.blob</code> <small>(en-US)</small></a>, create an object URL out of it using <a href=\"/zh-CN/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL</code></a>, and display this in an <a href=\"/zh-CN/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>.</p>\n<p>Note that at the top of the <code>fetch()</code> block we log the response <code>type</code> to the console.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns basic by default</span>\n  response<span class=\"token punctuation\">.</span><span class=\"token function\">blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">myBlob</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> objectURL <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>myBlob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> objectURL<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fetch.spec.whatwg.org/#ref-for-dom-response-type①","title":"Fetch Standard"}],"query":"api.Response.type"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Response.type","dataURL":"/zh-CN/docs/Web/API/Response/type/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">ServiceWorker API (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/HTTP/CORS\">HTTP access control (CORS)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"type 是Response 接口包含的一种响应类型，是只读属性。它可以是以下某一种值：","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Response.type","locale":"en-US","native":"English (US)"}],"source":{"folder":"zh-cn/web/api/response/type","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/response/type/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Response","title":"Response"},{"uri":"/zh-CN/docs/Web/API/Response/type","title":"Response.type"}],"pageTitle":"Response.type - Web API 接口参考 | MDN","noIndexing":false}}