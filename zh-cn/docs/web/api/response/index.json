{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Response","mdn_url":"/zh-CN/docs/Web/API/Response","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Fetch_API\">Fetch API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Response/Response\"><code>Response()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Response/body\"><code>body</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/bodyUsed\"><code>bodyUsed</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/headers\"><code>headers</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/ok\"><code>ok</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/redirected\"><code>redirected</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/status\"><code>status</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/statusText\"><code>statusText</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/type\"><code>type</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/url\"><code>url</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Response/arrayBuffer\"><code>arrayBuffer()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/blob\"><code>blob()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/clone\"><code>clone()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/error\"><code>error()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/formData\"><code>formData()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/json\"><code>json()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/redirect\"><code>redirect()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/text\"><code>text()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Fetch API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Headers\"><code>Headers</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a></li><li><a href=\"/zh-CN/docs/Web/API/fetch\"><code>fetch()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/zh-CN/docs/Web/API/Fetch_API\">Fetch API</a> 的 <code>Response</code> 接口呈现了对一次请求的响应数据。</p>\n<p>你可以使用 <a href=\"/zh-CN/docs/Web/API/Response/Response\"><code>Response.Response()</code></a> 构造函数来创建一个 <code>Response</code> 对象，但通常更可能遇到的情况是，其他的 API 操作返回了一个 Response 对象。例如一个 service worker 的 <a href=\"/zh-CN/docs/Web/API/FetchEvent/respondWith\"><code>Fetchevent.respondWith</code></a>，或者一个简单的 <a href=\"/zh-CN/docs/Web/API/fetch\"><code>GlobalFetch.fetch()</code></a>。</p>"}},{"type":"prose","value":{"id":"构造函数","title":"构造函数","isH3":false,"content":"<dl>\n  <dt id=\"response\"><a href=\"/zh-CN/docs/Web/API/Response/Response\" title=\"Response()\"><code>Response()</code></a></dt>\n  <dd>\n    <p>创建一个新的 <code>Response</code> 对象。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<dl>\n  <dt id=\"response.headers\"><a href=\"/zh-CN/docs/Web/API/Response/headers\"><code>Response.headers</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含此 Response 所关联的 <a href=\"/zh-CN/docs/Web/API/Headers\"><code>Headers</code></a> 对象。</p>\n  </dd>\n  <dt id=\"response.ok\"><a href=\"/zh-CN/docs/Web/API/Response/ok\"><code>Response.ok</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含了一个布尔值，标示该 Response 成功（HTTP 状态码的范围在 200-299）。</p>\n  </dd>\n  <dt id=\"response.redirected\"><a href=\"/zh-CN/docs/Web/API/Response/redirected\"><code>Response.redirected</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>表示该 Response 是否来自一个重定向，如果是的话，它的 URL 列表将会有多个条目。</p>\n  </dd>\n  <dt id=\"response.status\"><a href=\"/zh-CN/docs/Web/API/Response/status\"><code>Response.status</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含 Response 的状态码（例如 <code>200</code> 表示成功）。</p>\n  </dd>\n  <dt id=\"response.statustext\"><a href=\"/zh-CN/docs/Web/API/Response/statusText\"><code>Response.statusText</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含了与该 Response 状态码一致的状态信息（例如，OK 对应 <code>200</code>）。</p>\n  </dd>\n  <dt id=\"response.type\"><a href=\"/zh-CN/docs/Web/API/Response/type\"><code>Response.type</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含 Response 的类型（例如，<code>basic</code>、<code>cors</code>）。</p>\n  </dd>\n  <dt id=\"response.url\"><a href=\"/zh-CN/docs/Web/API/Response/url\"><code>Response.url</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含 Response 的 URL。</p>\n  </dd>\n  <dt id=\"response.usefinalurl\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Response.useFinalURL</code></a></dt>\n  <dd>\n    <p>包含了一个布尔值，来标示这是否是该 Response 的最终 URL。</p>\n  </dd>\n</dl>\n<p><code>Response</code> 实现了 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Body</code></a> 接口，所以以下属性亦可用：</p>\n<dl>\n  <dt id=\"response.body\"><a href=\"/zh-CN/docs/Web/API/Response/body\"><code>Response.body</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>一个简单的 getter，用于暴露一个 <a href=\"/zh-CN/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> 类型的 body 内容。</p>\n  </dd>\n  <dt id=\"response.bodyused\"><a href=\"/zh-CN/docs/Web/API/Response/bodyUsed\"><code>Response.bodyUsed</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含了一个<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>布尔值</code> <small>(en-US)</small></a>来标示该 Response 是否读取过 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Body</code></a>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"response.clone\"><a href=\"/zh-CN/docs/Web/API/Response/clone\"><code>Response.clone()</code></a></dt>\n  <dd>\n    <p>创建一个 <code>Response</code> 对象的克隆。</p>\n  </dd>\n  <dt id=\"response.error\"><a href=\"/zh-CN/docs/Web/API/Response/error\"><code>Response.error()</code></a></dt>\n  <dd>\n    <p>返回一个绑定了网络错误的新的 <code>Response</code> 对象。</p>\n  </dd>\n  <dt id=\"response.redirect\"><a href=\"/zh-CN/docs/Web/API/Response/redirect\"><code>Response.redirect()</code></a></dt>\n  <dd>\n    <p>用另一个 URL 创建一个新的 <code>Response</code>。</p>\n  </dd>\n</dl>\n<p><code>Response</code> 实现了 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Body</code></a> 接口，所以以下方法同样可用：</p>\n<dl>\n  <dt id=\"body.arraybuffer_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/arrayBuffer\"><code>Body.arrayBuffer()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>读取 <a href=\"/zh-CN/docs/Web/API/Response\" aria-current=\"page\"><code>Response</code></a> 对象并且将它设置为已读（因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次），并返回一个被解析为 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> 格式的 Promise 对象。</p>\n  </dd>\n  <dt id=\"body.blob_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/blob\"><code>Body.blob()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>读取 <a href=\"/zh-CN/docs/Web/API/Response\" aria-current=\"page\"><code>Response</code></a> 对象并且将它设置为已读（因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次），并返回一个被解析为 <a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a> 格式的 Promise 对象。</p>\n  </dd>\n  <dt id=\"body.formdata_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/formData\"><code>Body.formData()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>读取<a href=\"/zh-CN/docs/Web/API/Response\" aria-current=\"page\"><code>Response</code></a> 对象并且将它设置为已读（因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次），并返回一个被解析为 <a href=\"/zh-CN/docs/Web/API/FormData\"><code>FormData</code></a> 格式的 Promise 对象。</p>\n  </dd>\n  <dt id=\"body.json_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/json\"><code>Body.json()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>读取 <a href=\"/zh-CN/docs/Web/API/Response\" aria-current=\"page\"><code>Response</code></a> 对象并且将它设置为已读（因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次），并返回一个被解析为 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>JSON</code></a> 格式的 Promise 对象。</p>\n  </dd>\n  <dt id=\"body.text_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/text\"><code>Body.text()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>读取 <a href=\"/zh-CN/docs/Web/API/Response\" aria-current=\"page\"><code>Response</code></a> 对象并且将它设置为已读（因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次），并返回一个被解析为 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>USVString</code></a> 格式的 Promise 对象。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>在我们的<a href=\"https://github.com/mdn/fetch-examples/tree/master/basic-fetch\" class=\"external\" rel=\" noopener\">基础实例</a> (<a href=\"https://mdn.github.io/fetch-examples/basic-fetch/\" class=\"external\" rel=\" noopener\">点击运行</a>) 中，我们使用了一个简单的函数调用，调用了 <code>fetch()</code> 函数来获取一张图片并将其显示在 HTML 的 IMG 标签中，<code>fetch()</code> 函数返回了一个 Promise，它使用与资源获取操作相关联的 Response 对象进行解析。你会注意到，由于我们正在请求一张图片，我们需要运行 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/blob\"><code>Body.blob</code> <small>(en-US)</small></a>（<a href=\"/zh-CN/docs/Web/API/Response\" aria-current=\"page\"><code>Response</code></a> 实现了），以为响应提供正确的 MIME 类型。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> image <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.my-image'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">blob</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> objectURL <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  image<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> objectURL<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>你也可以使用 <a href=\"/zh-CN/docs/Web/API/Response/Response\"><code>Response.Response()</code></a> 这样的构造方法，来创建自定义的 <code>Response</code> 对象：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Response</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fetch.spec.whatwg.org/#response-class","title":"Fetch Standard"}],"query":"api.Response"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Response","dataURL":"/zh-CN/docs/Web/API/Response/bcd.json"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">ServiceWorker API (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/HTTP/CORS\">HTTP access control (CORS)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"构造函数","id":"构造函数"},{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"相关链接","id":"相关链接"}],"summary":"Fetch API 的 Response 接口呈现了对一次请求的响应数据。","popularity":0.0012,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Response","locale":"en-US","native":"English (US)"},{"title":"Response","locale":"es","native":"Español"},{"title":"Response","locale":"fr","native":"Français"},{"title":"Response","locale":"ja","native":"日本語"},{"title":"Response","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Response","locale":"ru","native":"Русский"},{"title":"Response","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/response","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/response/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Response","title":"Response"}],"pageTitle":"Response - Web API 接口参考 | MDN","noIndexing":false}}