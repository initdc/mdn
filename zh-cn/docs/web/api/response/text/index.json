{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Response.text()","mdn_url":"/zh-CN/docs/Web/API/Response/text","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Response/Response\"><code>Response()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Response/body\"><code>body</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/bodyUsed\"><code>bodyUsed</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/headers\"><code>headers</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/ok\"><code>ok</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/redirected\"><code>redirected</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/status\"><code>status</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/statusText\"><code>statusText</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/type\"><code>type</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/url\"><code>url</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Response/arrayBuffer\"><code>arrayBuffer()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/blob\"><code>blob()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/clone\"><code>clone()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/error\"><code>error()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/formData\"><code>formData()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/json\"><code>json()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/redirect\"><code>redirect()</code></a></li><li><em><code>text()</code></em></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a> mixin 的 <strong><code>text()</code></strong> 方法提供了一个可供读取的“返回流”（<a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a> stream），并将它读取完。它返回一个包含 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>USVString</code></a> 对象（也就是文本）的 Promise 对象，返回结果的编码<em>永远是</em> UTF-8。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>response<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">text</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do something with the text response</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<p>无。</p>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>A promise that resolves with a <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>USVString</code></a>.</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>在我们 <a href=\"https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-text\" class=\"external\" rel=\" noopener\">fetch text example</a> (运行 <a href=\"https://mdn.github.io/fetch-examples/fetch-text/\" class=\"external\" rel=\" noopener\">fetch text live</a>) 的案例中， 我们有一个 <a href=\"/zh-CN/docs/Web/HTML/Element/article\"><code>&lt;article&gt;</code></a> 元素和三个链接（储存在 <code>myLinks</code> 数组中），首先，遍历 <code>myLinks</code> 数组，并且给数组中的所有元素添加 <code>onclick</code> 事件监听器，当按钮被点击的时候，链接的 <code>data-page</code> 标识作为会参数传入 <code>getData()</code> 中。</p>\n<p>当进入 <code>getData()</code> 函数， 我们使用 <a href=\"/zh-CN/docs/Web/API/Request/Request\" title=\"Request()\"><code>Request()</code></a> 构造函数创建了一个请求（Request）对象，然后，使用它获取指定的<code>.txt</code>的文件， 当 fetch 函数执行成功， 我们使用 <code>text()</code> 函数来返回一个<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>USVString</code></a> (text) 对象，将它设置到 <a href=\"/zh-CN/docs/Web/HTML/Element/article\"><code>&lt;article&gt;</code></a> 对象的<a href=\"/zh-CN/docs/Web/API/Element/innerHTML\" title=\"innerHTML\"><code>innerHTML</code></a>（元素文本）中。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myArticle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'article'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> myLinks   <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> myLinks<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myLinks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> linkData <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-page'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>linkData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pageId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>pageId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span>pageId <span class=\"token operator\">+</span> <span class=\"token string\">'.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">text</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      myArticle<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fetch.spec.whatwg.org/#ref-for-dom-body-text①","title":"Fetch Standard"}],"query":"api.Response.text"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Response.text","dataURL":"/zh-CN/docs/Web/API/Response/text/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">ServiceWorker API (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/HTTP/CORS\">HTTP access control (CORS)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"See also","id":"see_also"}],"summary":"Response mixin 的 text() 方法提供了一个可供读取的“返回流”（Response stream），并将它读取完。它返回一个包含 USVString 对象（也就是文本）的 Promise 对象，返回结果的编码永远是 UTF-8。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Response.text()","locale":"en-US","native":"English (US)"},{"title":"Response.text()","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/response/text","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/response/text/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Response","title":"Response"},{"uri":"/zh-CN/docs/Web/API/Response/text","title":"Response.text()"}],"pageTitle":"Response.text() - Web API 接口参考 | MDN","noIndexing":false}}