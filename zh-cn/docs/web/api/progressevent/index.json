{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ProgressEvent","mdn_url":"/zh-CN/docs/Web/API/ProgressEvent","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/ProgressEvent\"><code>ProgressEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/ProgressEvent/ProgressEvent\"><code>ProgressEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/ProgressEvent/lengthComputable\"><code>lengthComputable</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ProgressEvent/loaded\"><code>loaded</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ProgressEvent/total\"><code>total</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>ProgressEvent</code></strong> 接口是测量如 HTTP 请求（一个<code>XMLHttpRequest</code>，或者一个 <a href=\"/zh-CN/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>，<a href=\"/zh-CN/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a>，<a href=\"/zh-CN/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>，<a href=\"/zh-CN/docs/Web/HTML/Element/style\"><code>&lt;style&gt;</code></a> 或 <a href=\"/zh-CN/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> 等底层资源的加载）等底层流程进度的事件。</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/zh-CN/docs/Web/API/Event\">\n    <rect x=\"0\" y=\"0\" width=\"75\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"37.5\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      Event\n    </text>\n  </a>\n  <line x1=\"75\" y1=\"14\" x2=\"105\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"75,14 85,9 85,19 75,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/zh-CN/docs/Web/API/ProgressEvent\" aria-current=\"page\">\n    <rect x=\"105\" y=\"0\" width=\"104\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"157\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      ProgressEvent\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"构造方法","title":"构造方法","isH3":false,"content":"<dl>\n  <dt id=\"progressevent\"><a href=\"/zh-CN/docs/Web/API/ProgressEvent/ProgressEvent\" title=\"ProgressEvent()\"><code>ProgressEvent()</code></a></dt>\n  <dd>\n    <p>用给定的参数创建一个 <code>ProgressEvent</code> 事件。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<p><em>同时继承它的父元素 <a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a> 的属性。</em></p>\n<dl>\n  <dt id=\"progressevent.lengthcomputable\"><a href=\"/zh-CN/docs/Web/API/ProgressEvent/lengthComputable\"><code>ProgressEvent.lengthComputable</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>是一个 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a> 标志，表示底层流程将需要完成的总工作量和已经完成的工作量是否可以计算。换句话说，它告诉我们进度是否可以被测量。</p>\n  </dd>\n  <dt id=\"progressevent.loaded\"><a href=\"/zh-CN/docs/Web/API/ProgressEvent/loaded\"><code>ProgressEvent.loaded</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>是一个 <code>unsigned long long</code> 类型数据，表示底层流程已经执行的工作总量。可以用这个属性和 <code>ProgressEvent.total</code> 计算工作完成比例。当使用 HTTP 下载资源，它只表示内容本身的部分，不包括首部和其它开销。</p>\n  </dd>\n  <dt id=\"progressevent.total\"><a href=\"/zh-CN/docs/Web/API/ProgressEvent/total\"><code>ProgressEvent.total</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>是一个 <code>unsigned long long</code> 类型数据，表示正在执行的底层流程的工作总量。当使用 HTTP 下载资源，它只表示内容本身的部分，不包括首部和其它开销。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<p><em>同时继承它的父元素 <a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a> 的方法。</em></p>\n<dl>\n  <dt id=\"progressevent.initprogressevent_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ProgressEvent\"><code>ProgressEvent.initProgressEvent()</code> <small>(en-US)</small></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>使用被弃用的 <a href=\"/zh-CN/docs/Web/API/Document/createEvent\" title=\"Document.createEvent(\" progressevent\")\"=\"\"><code>Document.createEvent(\"ProgressEvent\")</code></a> 方法，来初始化一个已经创建好的 <code>ProgressEvent</code>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>下面的示例为一个新建的 <a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\"><code>XMLHTTPRequest</code></a> 添加了一个 <code>ProgressEvent</code>，并使用它来显示请求状态。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> progressBar <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nclient<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"magical-unicorns\"</span><span class=\"token punctuation\">)</span>\nclient<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onprogress</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pe</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pe<span class=\"token punctuation\">.</span>lengthComputable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    progressBar<span class=\"token punctuation\">.</span>max <span class=\"token operator\">=</span> pe<span class=\"token punctuation\">.</span>total\n    progressBar<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> pe<span class=\"token punctuation\">.</span>loaded\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nclient<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onloadend</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pe</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  progressBar<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> pe<span class=\"token punctuation\">.</span>loaded\n<span class=\"token punctuation\">}</span>\nclient<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://xhr.spec.whatwg.org/#interface-progressevent","title":"XMLHttpRequest Standard"}],"query":"api.ProgressEvent"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.ProgressEvent","dataURL":"/zh-CN/docs/Web/API/ProgressEvent/bcd.json"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li>The <a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a> base interface.</li>\n</ul>"}}],"toc":[{"text":"构造方法","id":"构造方法"},{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"相关链接","id":"相关链接"}],"summary":"ProgressEvent 接口是测量如 HTTP 请求（一个XMLHttpRequest，或者一个 <img>，<audio>，<video>，<style> 或 <link> 等底层资源的加载）等底层流程进度的事件。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"ProgressEvent","locale":"en-US","native":"English (US)"},{"title":"ProgressEvent","locale":"ja","native":"日本語"},{"title":"ProgressEvent","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/progressevent","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/progressevent/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/ProgressEvent","title":"ProgressEvent"}],"pageTitle":"ProgressEvent - Web API 接口参考 | MDN","noIndexing":false}}