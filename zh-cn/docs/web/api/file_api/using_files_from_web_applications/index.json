{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"在 web 应用程序中使用文件","mdn_url":"/zh-CN/docs/Web/API/File_API/Using_files_from_web_applications","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/File_API\">File API <small>(en-US)</small></a></strong></li><li><strong><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/File_API\"><code>File_API</code> <small>(en-US)</small></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>File API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a></li><li><a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FileList\"><code>FileList</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FileReader\"><code>FileReader</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FileReaderSync\"><code>FileReaderSync</code></a></li><li><a href=\"/zh-CN/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/URL/revokeObjectURL\"><code>URL.revokeObjectURL()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>通过使用在 HTML5 中加入到 DOM 的 File API，使在 web 内容中让用户选择本地文件然后读取这些文件的内容成为可能。用户可以通过 HTML 中的 <a href=\"/zh-CN/docs/Web/HTML/Element/Input/file\">&lt;input type=\"file\"&gt;</a> 元素或者是通过拖拽来选择本地文件。</p>\n<p>如果你想通过扩展或者其它的 chrome 源码浏览器（browser chrome code）使用 DOM File API，是可行的；然而，需要注意有一些附加特性。详细请见 <a href=\"/zh-CN/Extensions/Using_the_DOM_File_API_in_chrome_code\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Using the DOM File API in chrome code</a>。</p>"}},{"type":"prose","value":{"id":"访问被选择的文件","title":"访问被选择的文件","isH3":false,"content":"<p>考虑这段 HTML:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>通过 File API，我们可以访问 <a href=\"/zh-CN/docs/Web/API/FileList\"><code>FileList</code></a>，它包含了表示用户所选文件的 <a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a> 对象</p>\n<p>如果用户只选择了一个文件，那么只需要考虑列表中的第一个文件。</p>\n<p>使用传统的 DOM 选择器访问一个被选择的文件：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> selectedFile <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"通过_change_事件访问被选择的文件","title":"通过 change 事件访问被选择的文件","isH3":true,"content":"<p>可以（但不是强制的）通过 <code>change</code> 事件访问 <a href=\"/zh-CN/docs/Web/API/FileList\"><code>FileList</code></a>：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onchange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>当用户选择一个文件时，<code>handleFiles()</code> 方法会用一个 <a href=\"/zh-CN/docs/Web/API/FileList\"><code>FileList</code></a> 对象作为参数被调用，<a href=\"/zh-CN/docs/Web/API/FileList\"><code>FileList</code></a> 对象包含表示用户选择的文件的 <a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a> 对象。</p>\n<p>如果你想让用户选择多个文件，只需在 <code>input</code> 元素上使用 <code>multiple</code> 属性：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">multiple</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onchange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>在这个例子中，对于每个用户选择的文件，传递给 <code>handleFiles()</code>方法的文件列表都包含一个对应的 <a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a> 对象。</p>"}},{"type":"prose","value":{"id":"动态添加_change_监听器","title":"动态添加 change 监听器","isH3":true,"content":"<p>你需要使用 <a href=\"/zh-CN/docs/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener()</code></a> 去添加 <code>change</code> 事件监听器，像这样：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> inputElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ninputElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> handleFiles<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> fileList <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* now you can work with the file list */</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>注意在这个例子里，<code>handleFiles()</code> 方法本身是一个事件处理器，不像之前的例子中，它被事件处理器调用然后传递给它一个参数。</p>"}},{"type":"prose","value":{"id":"获取被选择文件的信息","title":"获取被选择文件的信息","isH3":false,"content":"<p>DOM 提供 <a href=\"/zh-CN/docs/Web/API/FileList\"><code>FileList</code></a> 对象列出了用户选择的所有文件，每一个文件被指定为一个 <a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a> 对象。你可以通过检查文件列表 <a href=\"/zh-CN/docs/Web/API/FileList\"><code>FileList</code></a> 的 <code>length</code> 属性来确定用户选择了多少个文件：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> numFiles <span class=\"token operator\">=</span> files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>可以像数组一样简单地访问文件列表来检索各个 <a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a> 对象：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> numFiles <span class=\"token operator\">=</span> files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numFiles<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> file <span class=\"token operator\">=</span> files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>这个循环遍历了文件列表里的所有文件。</p>\n<p><a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a> 对象提供了三个属性，包含了文件的有用信息。</p>\n<dl>\n  <dt id=\"name\"><code>name</code></dt>\n  <dd>\n    <p>文件名称，只读字符串。只包含文件名，不包含任何路径信息。</p>\n  </dd>\n  <dt id=\"size\"><code>size</code></dt>\n  <dd>\n    <p>以字节数为单位的文件大小，只读的 64 位整数。</p>\n  </dd>\n  <dt id=\"type\"><code>type</code></dt>\n  <dd>\n    <p>文件的 MIME 类型，只读字符串，当类型不能确定时为 <code>\"\"</code>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例：显示文件大小","title":"示例：显示文件大小","isH3":true,"content":"<p>下面的例子展示了 <code>size</code> 属性的一种可能用法：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>File(s) size<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> nBytes <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      oFiles <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uploadInput\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">,</span>\n      nFiles <span class=\"token operator\">=</span> oFiles<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> nFileId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> nFileId <span class=\"token operator\">&lt;</span> nFiles<span class=\"token punctuation\">;</span> nFileId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    nBytes <span class=\"token operator\">+=</span> oFiles<span class=\"token punctuation\">[</span>nFileId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">let</span> sOutput <span class=\"token operator\">=</span> nBytes <span class=\"token operator\">+</span> <span class=\"token string\">\" bytes\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// optional code for multiples approximation</span>\n  <span class=\"token keyword\">const</span> aMultiples <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"KiB\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"MiB\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"GiB\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"TiB\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"PiB\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"EiB\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ZiB\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"YiB\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>nMultiple <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> nApprox <span class=\"token operator\">=</span> nBytes <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span> nApprox <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> nApprox <span class=\"token operator\">/=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> nMultiple<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    sOutput <span class=\"token operator\">=</span> nApprox<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> aMultiples<span class=\"token punctuation\">[</span>nMultiple<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" (\"</span> <span class=\"token operator\">+</span> nBytes <span class=\"token operator\">+</span> <span class=\"token string\">\" bytes)\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// end of optional code</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileNum\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> nFiles<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileSize\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> sOutput<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">updateSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>uploadForm<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>uploadInput<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myFiles<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onchange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">updateSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">multiple</span><span class=\"token punctuation\">&gt;</span></span>\n      selected files: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileNum<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>;\n      total size: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileSize<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Send file<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"通过_click_方法使用隐藏的_file_input_元素","title":"通过 click() 方法使用隐藏的 file input 元素","isH3":false,"content":"<p>你可以隐藏公认难看的 file <a href=\"/zh-CN/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a> 元素并显示你自己的界面来打开文件选择器，然后显示哪个或哪些文件被用户选中了。你可以通过给 input 元素添加 <code>display:none</code> 的样式，再调用 <a href=\"/zh-CN/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a> 元素的 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>click()</code></a> 方法来实现。</p>\n<p>考虑这段 HTML：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileElem<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">multiple</span> <span class=\"token attr-name\">accept</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/*<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span>none</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onchange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileSelect<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Select some files<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>处理 <code>click</code> 事件的代码类似于这样：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> fileSelect <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileSelect\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  fileElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileElem\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfileSelect<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileElem<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fileElem<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>你可以给这个用来打开文件选择器的新按钮添加任何你想要的样式。</p>"}},{"type":"prose","value":{"id":"使用_label_元素来触发一个隐藏的_file_input_元素","title":"使用 label 元素来触发一个隐藏的 file input 元素","isH3":false,"content":"<p>允许在不使用 JavaScript（click() 方法）来打开文件选择器，可以使用 <a href=\"/zh-CN/docs/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a> 元素。注意在这种情况下，input 元素不能使用 <code>display: none</code>（或 <code>visibility: hidden</code>）隐藏，否则 label 将无法通过键盘访问。使用 <a href=\"https://a11yproject.com/posts/how-to-hide-content/\" class=\"external\" rel=\" noopener\">visually-hidden technique</a> 作为替代。</p>\n<p>考虑这段 HTML：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileElem<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">multiple</span> <span class=\"token attr-name\">accept</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/*<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>visually-hidden<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileElem<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Select some files<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>和这段 CSS：</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.visually-hidden</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 1px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 1px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">clip</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rect</span><span class=\"token punctuation\">(</span>1px<span class=\"token punctuation\">,</span> 1px<span class=\"token punctuation\">,</span> 1px<span class=\"token punctuation\">,</span> 1px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* Separate rule for compatibility, :focus-within is required on modern Firefox and Chrome */</span>\n<span class=\"token selector\">input.visually-hidden:focus + label</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">outline</span><span class=\"token punctuation\">:</span> thin dotted<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">input.visually-hidden:focus-within + label</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">outline</span><span class=\"token punctuation\">:</span> thin dotted<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>这里不需要添加任何 JavaScript 代码来调用<code>fileElem.click()</code>，另外，这时你也可以给 label 元素添加你想要的样式。您需要在其 label 上提供隐藏 input 字段的焦点状态的视觉提示，比如上面用的轮廓，或者背景颜色或边框阴影。（截至编写时为止，Firefox 不显示 <code>&lt;input type=\"file\"&gt;</code> 元素的视觉提示。）</p>"}},{"type":"prose","value":{"id":"使用拖放来选择文件","title":"使用拖放来选择文件","isH3":false,"content":"<p>你还可以让用户将文件拖拽到你的网页应用中。</p>\n<p>第一步是创建一个 drop 区域。虽然你网页内容的哪部分接受拖放取决于你的应用设计，但是使一个元素接收 drop 事件是很容易的。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> dropbox<span class=\"token punctuation\">;</span>\n\ndropbox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dropbox\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndropbox<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dragenter\"</span><span class=\"token punctuation\">,</span> dragenter<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndropbox<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dragover\"</span><span class=\"token punctuation\">,</span> dragover<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndropbox<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"drop\"</span><span class=\"token punctuation\">,</span> drop<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在这个例子中，我们将 ID 为<code>dropbox</code>的元素变为了我们的 drop 区域。这是通过给元素添加<code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code>, <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code>, 和<code><a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">drop (en-US)</a></code> 事件监听器实现的。</p>\n<p>我们其实并不需要对<code>dragenter</code> and <code>dragover</code> 事件进行处理，所以这些函数都很简单。他们只需要包括禁止事件传播和阻止默认事件：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">dragenter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">dragover</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>真正的奥妙在<code>drop()</code>这个函数中：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> dt <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> files <span class=\"token operator\">=</span> dt<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>这里，我们从事件中获取到了<code>dataTransfer</code> 这个域，然后从中得到文件列表，再将它们传递给<code>handleFiles()</code>函数。在这之后，处理文件的方法和用<code>input</code>元素或者用拖拽就是一样的了。</p>"}},{"type":"prose","value":{"id":"例子：显示用户选择的图片的缩略图","title":"例子：显示用户选择的图片的缩略图","isH3":false,"content":"<p>比方说，你正在开发一个炫酷的下一代图片分享网站，并且想使用 HTML5 来展示用户在实际上传之前的图片的缩略图。你可以像我们之前讨论的那样创建自己的 input 元素或者 drop 区域，然后对他们使用一个回调函数，比如下面的<code>handleFiles()</code>。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">files</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> file <span class=\"token operator\">=</span> files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> imageType <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^image\\/</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>imageType<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    img<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"obj\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    img<span class=\"token punctuation\">.</span>file <span class=\"token operator\">=</span> file<span class=\"token punctuation\">;</span>\n    preview<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 假设\"preview\"就是用来显示内容的 div</span>\n\n    <span class=\"token keyword\">var</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    reader<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">aImg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> aImg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    reader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsDataURL</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>这里我们循环处理用户选择的文件，看每个文件的<code>type</code>属性是不是 image（通过正则表达式来匹配 MIME 类型字符串模式\"<code>image/*</code>\"）。对每个文件而言，如果它是 image，我们就创建一个新的<code>img</code>元素。可以使用 css 来创建一个漂亮的边框或阴影来显示图片的具体大小，在这儿就不具体做了。</p>\n<p>为了在 DOM 树中更容易地找到他们，每个图片元素都被添加了一个名为<code>obj</code>的 CSS 类。我们还给每个图片添加了<code>file</code>属性使它具有 <a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a>；这样做可以让我们拿到稍后需要实际上传的图片。我们在预览页中使用 <a href=\"/zh-CN/docs/Web/API/Node/appendChild\"><code>Node.appendChild()</code></a>来添加新的缩略图。</p>\n<p>接下来，我们创建了<a href=\"/zh-CN/docs/Web/API/FileReader\"><code>FileReader</code></a>来处理异步的图片加载并把他赋给<code>img</code>元素。在创建一个新的 <code>FileReader</code>对象后，我们新建了它的<code>onload</code> 函数，然后调用<code>readAsDataURL()</code>函数开始后台读取文件。当整个图片文件的内容都被全部加载完后，它们被转换成了一个被传递到<code>onload</code>回调函数的<code>data:</code>URL。我们再执行常规操作将<code>img</code>元素的<code>src</code>属性设置为刚刚加载完毕的 URL，使得图像可以显示在用户屏幕上的缩略图中。</p>"}},{"type":"prose","value":{"id":"使用对象_url","title":"使用对象 URL","isH3":false,"content":"<p>Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)引入了对 DOM <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/URL/createObjectURL\"><code>window.URL.createObjectURL()</code> <small>(en-US)</small></a> 和 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/URL/revokeObjectURL\"><code>window.URL.revokeObjectURL()</code> <small>(en-US)</small></a> 方法的支持。这使得你可以创建用于引用任何数据的简单 URL 字符串，也可以引用一个包括用户电脑上的本地文件的 DOM <a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a>对象。</p>\n<p>当你需要在 HTML 中通过 URL 来引用一个<a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a>对象时，你可以创建一个对象 URL，就像这样：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> objectURL <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>fileObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>这个对象 URL 是一个标识<a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a>对象的字符串。每次你调用<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/URL/createObjectURL\"><code>window.URL.createObjectURL()</code> <small>(en-US)</small></a>，就会产生一个唯一的对象 URL，即使是你对一个已创建了对象 URL 的文件再次创建一个对象 URL。每个创建了的对象 URL 必须要释放。当文档关闭时，它们会自动被释放。如果你的网页要动态使用它们，你需要显式调用 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/URL/revokeObjectURL\"><code>window.URL.revokeObjectURL()</code> <small>(en-US)</small></a>来释放它们：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">revokeObjectURL</span><span class=\"token punctuation\">(</span>objectURL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"示例：使用对象_url_来显示图片","title":"示例：使用对象 URL 来显示图片","isH3":false,"content":"<p>这个例子使用对象 URL 来显示图片缩略图。另外，示例也会显示文件名和文件大小等其他文件信息。</p>\n<p>显示接口的 HTML 类似于这样：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileElem<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">multiple</span> <span class=\"token attr-name\">accept</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/*<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span>none</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onchange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileSelect<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Select some files<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileList<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>No files selected!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>这确定我们的文件 <a href=\"/zh-CN/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a> 元素显示为一个可以调用文件选择器的链接（我们隐藏了文件输入元素来阻止显示用户不友好的界面）。这个在 <a href=\"#%E9%80%9A%E8%BF%87_click_%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8%E9%9A%90%E8%97%8F%E7%9A%84_file_input_%E5%85%83%E7%B4%A0\">通过 click() 方法使用隐藏的 file input 元素</a>已经说明了这种调用文件选择器的方法。</p>\n<p><code>handleFiles()</code> 方法如下：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span> <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span> <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitURL<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> fileSelect <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileSelect\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    fileElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileElem\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    fileList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfileSelect<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileElem<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        fileElem<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prevent navigation to \"#\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">files</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        fileList<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;p&gt;No files selected!&lt;/p&gt;\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        fileList<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        fileList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> li <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            img<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n            img<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">revokeObjectURL</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            li<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> info <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            info<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>size <span class=\"token operator\">+</span> <span class=\"token string\">\" bytes\"</span><span class=\"token punctuation\">;</span>\n            li<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>首先，获取 ID 为 <code>fileList</code> 的 <a href=\"/zh-CN/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> 。这个区块里我们会插入我们的文件列表，包括缩略图。</p>\n<p>如果传入 <code>handleFiles()</code> 的 <a href=\"/zh-CN/docs/Web/API/FileList\"><code>FileList</code></a> 对象值为 <code>null</code> 时，我们只要简单将这块的内部 HTML 为显示“No files selected!”。否则，我们就需要像下面这样编写我们的文件列表：</p>\n<ol>\n  <li>创建一个无序列表 (<a href=\"/zh-CN/docs/Web/HTML/Element/ul\"><code>&lt;ul&gt;</code></a>) 元素。</li>\n  <li>通过调用列表的<a href=\"/zh-CN/docs/Web/API/Node/appendChild\"><code>Node.appendChild()</code></a>方法来将新的列表元素插入到 <a href=\"/zh-CN/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a>块。</li>\n  <li>遍历文件集合 <a href=\"/zh-CN/docs/Web/API/FileList\"><code>FileList</code></a>（即<code>files</code>）中的每个 <a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a>：\n    <ol>\n      <li>创建一个新的列表项（<a href=\"/zh-CN/docs/Web/HTML/Element/li\"><code>&lt;li&gt;</code></a>）元素并插入到列表中。</li>\n      <li>创建一个新的图片（<a href=\"/zh-CN/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>）元素。</li>\n      <li>设置图片的源为一个新的指代文件的对象 URL，使用<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/URL/createObjectURL\"><code>window.URL.createObjectURL()</code> <small>(en-US)</small></a>来创建 blob URL。</li>\n      <li>设置图片的高度为 60 像素。</li>\n      <li>设置图片的 load 事件处理器来释放对象 URL，当图片加载完成之后对象 URL 就不再需要了。这个可以通过调用<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/URL/revokeObjectURL\"><code>window.URL.revokeObjectURL()</code> <small>(en-US)</small></a>方法并且传递 <code>img.src</code>中的对象 URL 字符串来实现。</li>\n      <li>将新的列表项添加到列表中。</li>\n    </ol>\n  </li>\n</ol>\n<p>这是上面代码的一个在线示例：</p><iframe class=\"sample-code-frame\" title=\"示例：使用对象 URL 来显示图片 sample\" id=\"frame_示例：使用对象_url_来显示图片\" width=\"100%\" height=\"300px\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-CN/docs/Web/API/File_API/Using_files_from_web_applications/_sample_.%E7%A4%BA%E4%BE%8B%EF%BC%9A%E4%BD%BF%E7%94%A8%E5%AF%B9%E8%B1%A1_url_%E6%9D%A5%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"例子：上传一个用户选择的文件","title":"例子：上传一个用户选择的文件","isH3":false,"content":"<p>另一件您可能想要做的事是让用户将选定的一个或多个文件（例如前一个示例中选择的图像）上传到服务器。这用异步可以很容易地完成。</p>"}},{"type":"prose","value":{"id":"创建上传任务","title":"创建上传任务","isH3":true,"content":"<p>继续前面示例中构建缩略图的代码，回想一下每个缩略图图像都在 CSS 类<code>obj</code>中，并且<code>file</code>属性中附加了相应的 <a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a> 。这允许我们使用 <a href=\"/zh-CN/docs/Web/API/Document/querySelectorAll\"><code>Document.querySelectorAll()</code></a> 选择用户决定上传的所有图像，如下所示：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">sendFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> imgs <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".obj\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> imgs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileUpload</span><span class=\"token punctuation\">(</span>imgs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> imgs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>第 2 行获取了文档中所有 CSS 类为<code>obj</code>的元素的 <a href=\"/zh-CN/docs/Web/API/NodeList\"><code>NodeList</code></a>，命名为<code>imgs</code>。在我们的例子中，这些是包含所有图像缩略图的列表。有了这个列表，遍历并为每一项创建一个新的<code>FileUpload</code>实例就很简单了。每个实例都可以处理相应文件的上传。</p>"}},{"type":"prose","value":{"id":"handling_the_upload_process_for_a_file_处理文件的上传过程","title":"Handling the upload process for a file 处理文件的上传过程","isH3":true,"content":"<p><code>FileUpload</code>函数接受两个输入：一个 image 元素和一个包含图像数据的文件。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">FileUpload</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img<span class=\"token punctuation\">,</span> file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctrl <span class=\"token operator\">=</span> <span class=\"token function\">createThrobber</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xhr <span class=\"token operator\">=</span> xhr<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xhr<span class=\"token punctuation\">.</span>upload<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"progress\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>lengthComputable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">var</span> percentage <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>loaded <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> e<span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          self<span class=\"token punctuation\">.</span>ctrl<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>percentage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  xhr<span class=\"token punctuation\">.</span>upload<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n          self<span class=\"token punctuation\">.</span>ctrl<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>ctrl<span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">;</span>\n          canvas<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http://demos.hacks.mozilla.org/paul/demos/resources/webservices/devnull.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">overrideMimeType</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text/plain; charset=x-user-defined-binary'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  reader<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  reader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsBinaryString</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>上面的<code>FileUpload()</code> 函数创建了一个“加载中”指示器，用于显示进度信息，然后创建了一个 <a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> 来处理上传数据。</p>\n<p>实际传输数据前，采取了几道准备步骤：</p>\n<ol>\n  <li><code>XMLHttpRequest</code>的<code>progress</code>监听器被设为将加载指示器更新为新的百分比信息，这样随着上传进行，指示器会显示最新的信息。</li>\n  <li><code>XMLHttpRequest</code>的<code>load</code>事件监听器被设为将加载指示器的进度信息更新为 100%，以保证进度显示确实达到了 100%（以防在上传过程中出现粒度误差）。然后它移除了已经不再需要的加载指示器。这样上传一完成指示器就会消失。</li>\n  <li>上传图像文件的请求，是由调用<code>XMLHttpRequest</code>的<code>open()</code>函数发送 POST 请求完成的。</li>\n  <li>上传的 MIME 类型是通过调用<code>XMLHttpRequest</code>的<code>overrideMimeType()</code>函数来设置的。这个例子中，我们使用通用 MIME 类型。是否需要设置 MIME 类型取决于你的具体使用情况。</li>\n  <li><code>FileReader</code>对象用于将文件转换为二进制字符串。</li>\n  <li>最后，当内容被加载时，会调用<code>XMLHttpRequest</code>的<code>send()</code>函数来上传文件内容。</li>\n</ol>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 上面例子中使用的非标准的<code>sendAsBinary</code>方法在 Gecko 31 (Firefox 31 / Thunderbird 31 / SeaMonkey 2.28) 中已废弃。请使用标准的<code>send(Blob data)</code>方法代替。</p>\n</div>"}},{"type":"prose","value":{"id":"异步处理文件上传","title":"异步处理文件上传","isH3":true,"content":"<p>这个例子演示了如何异步上传文件，在服务器端使用了 php、在客户端使用了 JavaScript。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span>$_FILES<span class=\"token punctuation\">[</span><span class=\"token string\">'myFile'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Example:</span>\n    <span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span>$_FILES<span class=\"token punctuation\">[</span><span class=\"token string\">'myFile'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"uploads/\"</span> <span class=\"token punctuation\">.</span> $_FILES<span class=\"token punctuation\">[</span><span class=\"token string\">'myFile'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    exit<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span>dnd binary upload<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>meta http<span class=\"token operator\">-</span>equiv<span class=\"token operator\">=</span><span class=\"token string\">\"Content-Type\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"text/html; charset=UTF-8\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"application/javascript\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">sendFile</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> uri <span class=\"token operator\">=</span> <span class=\"token string\">\"/index.php\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> fd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span> uri<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">==</span> <span class=\"token number\">4</span> <span class=\"token operator\">&amp;&amp;</span> xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// handle response.</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n            fd<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myFile'</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// Initiate a multipart/form-data upload</span>\n            xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> dropzone <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dropzone\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dropzone<span class=\"token punctuation\">.</span>ondragover <span class=\"token operator\">=</span> dropzone<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondragenter</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                event<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            dropzone<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondrop</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                event<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">const</span> filesArray <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>filesArray<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">sendFile</span><span class=\"token punctuation\">(</span>filesArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"dropzone\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"margin:30px; width:500px; height:300px; border:1px dotted grey;\"</span><span class=\"token operator\">&gt;</span>Drag <span class=\"token operator\">&amp;</span> drop your file here<span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"例子：用对象_url_显示_pdf","title":"例子：用对象 URL 显示 PDF","isH3":false,"content":"<p>对象 URL 可以用于 image 之外的其它东西！它可以用于显示嵌入的 PDF 文件或任何其它浏览器能显示的资源。</p>\n<p>在 Firefox 中，要让 PDF 嵌入式地显示在 iframe 中（而不是作为下载的文件弹出），必须将<code>pdfjs.disabled</code>设为<code>false</code> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg>.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>这是<code>src</code>属性的改动：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> obj_url <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> iframe <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'viewer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\niframe<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> obj_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">revokeObjectURL</span><span class=\"token punctuation\">(</span>obj_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"例子：将对象_url_用于其它文件类型","title":"例子：将对象 URL 用于其它文件类型","isH3":false,"content":"<p>你可以用同样方式操作其它格式的文件。这是预览上传的视频的方法：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> video <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'video'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> obj_url <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvideo<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> obj_url<span class=\"token punctuation\">;</span>\nvideo<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">revokeObjectURL</span><span class=\"token punctuation\">(</span>obj_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/FileList\"><code>FileList</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/FileReader\"><code>FileReader</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/URL\"><code>URL</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\">Using XMLHttpRequest</a></li>\n</ul>"}}],"toc":[{"text":"访问被选择的文件","id":"访问被选择的文件"},{"text":"获取被选择文件的信息","id":"获取被选择文件的信息"},{"text":"通过 click() 方法使用隐藏的 file input 元素","id":"通过_click_方法使用隐藏的_file_input_元素"},{"text":"使用 label 元素来触发一个隐藏的 file input 元素","id":"使用_label_元素来触发一个隐藏的_file_input_元素"},{"text":"使用拖放来选择文件","id":"使用拖放来选择文件"},{"text":"例子：显示用户选择的图片的缩略图","id":"例子：显示用户选择的图片的缩略图"},{"text":"使用对象 URL","id":"使用对象_url"},{"text":"示例：使用对象 URL 来显示图片","id":"示例：使用对象_url_来显示图片"},{"text":"例子：上传一个用户选择的文件","id":"例子：上传一个用户选择的文件"},{"text":"例子：用对象 URL 显示 PDF","id":"例子：用对象_url_显示_pdf"},{"text":"例子：将对象 URL 用于其它文件类型","id":"例子：将对象_url_用于其它文件类型"},{"text":"相关链接","id":"相关链接"}],"summary":"通过使用在 HTML5 中加入到 DOM 的 File API，使在 web 内容中让用户选择本地文件然后读取这些文件的内容成为可能。用户可以通过 HTML 中的 <input type=\"file\"> 元素或者是通过拖拽来选择本地文件。","popularity":0.0016,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using files from web applications","locale":"en-US","native":"English (US)"},{"title":"Utilizar ficheros desde aplicaciones web","locale":"es","native":"Español"},{"title":"Utiliser des fichiers à partir d'applications web","locale":"fr","native":"Français"},{"title":"ウェブアプリケーションからのファイルの使用","locale":"ja","native":"日本語"},{"title":"웹 어플리케이션에서 파일 사용하기","locale":"ko","native":"한국어"},{"title":"Using files from web applications","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Использование файлов в веб приложениях","locale":"ru","native":"Русский"},{"title":"在網頁應用程式中使用本地檔案","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/file_api/using_files_from_web_applications","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/file_api/using_files_from_web_applications/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/File_API/Using_files_from_web_applications","title":"在 web 应用程序中使用文件"}],"pageTitle":"在 web 应用程序中使用文件 - Web API 接口参考 | MDN","noIndexing":false}}