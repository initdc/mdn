{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Determining the dimensions of elements","mdn_url":"/zh-CN/docs/Web/API/CSS_Object_Model/Determining_the_dimensions_of_elements","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/CSS_Object_Model\"><code>CSS_Object_Model</code></a></strong></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>当想要确认元素的宽高时有几种属性可以选择，但是我们很难确认使用哪个属性才是最适合的。本文将帮助你做出正确的选择。</p>"}},{"type":"prose","value":{"id":"元素占用了多少空间？","title":"元素占用了多少空间？","isH3":false,"content":"<p>如果你需要知道元素总共占用了多少空间，包括可视内容、滚动条（如果有的话）、内边距和边框的宽度，你会使用 <a href=\"/zh-CN/docs/DOM/element.offsetWidth\"><code>offsetWidth</code></a> 和 <a href=\"/zh-CN/docs/DOM/element.offsetHeight\">offsetHeight</a> 属性，大多数情况下，当元素没有什么形状上的变化时，他们与 <a href=\"/zh-CN/docs/DOM/element.getBoundingClientRect\">getBoundingClientRect()</a>的宽高一致。但是如果发生变化，offsetWidth 和 offsetHeight 将返回元素的布局宽高，而 getBoundingClientRect() 将返回实际渲染的宽高。例如：如果元素的宽 width:100px，变化 transform:scale(0.5)，此时 getBoundingClientRect() 将返回宽 50，而 offsetWidth 将返回宽 100.</p>\n<p>\n  <img src=\"/@api/deki/files/186/=Dimensions-offset.png\" alt=\"Image:Dimensions-offset.png\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"显示内容尺寸是多少？","title":"显示内容尺寸是多少？","isH3":false,"content":"<p>如果你需要知道展示区域内容占用了多少空间，包括内边距但是不包括边框、外边距或者滚动条，你会使用<a href=\"/zh-CN/docs/Web/API/Element/clientWidth\">clientWidth</a>和<a href=\"/zh-CN/docs/Web/API/Element/clientHeight\">clientHeight</a>属性：</p>\n<p>\n  <img src=\"/@api/deki/files/185/=Dimensions-client.png\" alt=\"Image:Dimensions-client.png\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"内容有多大？","title":"内容有多大？","isH3":false,"content":"<p>如果你想要知道内容区域的实际大小，而不局限于可见区域的话，你会使用 <a href=\"/zh-CN/docs/DOM/element.scrollWidth\"><code>scrollWidth</code></a>和<a href=\"/zh-CN/docs/Web/API/Element/scrollHeight\">scrollHeight</a>属性。即使使用了滚动条仅有部分内容可见，这两个属性仍会返回元素的完整内容宽高</p>\n<p>例如，一个 300x300 像素 的滚动盒子里放置了一个 600x400 像素的元素，scrollWidth 将会返回 600，scrooHeight 返回 400.</p>"}},{"type":"prose","value":{"id":"规范","title":"规范","isH3":false,"content":"<p><a href=\"https://www.w3.org/TR/cssom-view/\" class=\"external\" rel=\" noopener\">http://www.w3.org/TR/cssom-view/</a></p>"}},{"type":"prose","value":{"id":"参考文献","title":"参考文献","isH3":false,"content":"<p><a href=\"https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\" class=\"external\" rel=\" noopener\">MSDN Measuring Element Dimension and Location</a></p>"}}],"toc":[{"text":"元素占用了多少空间？","id":"元素占用了多少空间？"},{"text":"显示内容尺寸是多少？","id":"显示内容尺寸是多少？"},{"text":"内容有多大？","id":"内容有多大？"},{"text":"规范","id":"规范"},{"text":"参考文献","id":"参考文献"}],"summary":"当想要确认元素的宽高时有几种属性可以选择，但是我们很难确认使用哪个属性才是最适合的。本文将帮助你做出正确的选择。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Determining the dimensions of elements","locale":"en-US","native":"English (US)"},{"title":"Déterminer les dimensions des éléments","locale":"fr","native":"Français"},{"title":"要素の寸法の決定","locale":"ja","native":"日本語"},{"title":"Determining the dimensions of elements","locale":"ko","native":"한국어"},{"title":"Determining the dimensions of elements","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/css_object_model/determining_the_dimensions_of_elements","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/css_object_model/determining_the_dimensions_of_elements/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/CSS_Object_Model","title":"CSS Object Model"},{"uri":"/zh-CN/docs/Web/API/CSS_Object_Model/Determining_the_dimensions_of_elements","title":"Determining the dimensions of elements"}],"pageTitle":"Determining the dimensions of elements - Web API 接口参考 | MDN","noIndexing":false}}