{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"变形 Transformations","mdn_url":"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Transformations","locale":"zh-CN","native":"中文 (简体)","hasMathML":true,"sidebarHTML":"\n <ol>\n  <li><a href=\"/zh-CN/docs/Web/API/Canvas_API\"><strong>Canvas API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Canvas 教程</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Basic_usage\">基本用法</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes\">绘制形状</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors\">添加样式和颜色</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Drawing_text\">绘制文本</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Using_images\">使用图片</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Transformations\">变形</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Compositing\">合成与裁剪</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Basic_animations\">基本动画</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">高级动画</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas\">像素操作</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\">canvas 的优化</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Finale\">终极</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>示例</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/A_basic_ray-caster\">一个基本的光线投射例子</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">在 canvas 中操作视频</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>接口</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/ImageData\"><code>ImageData</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/TextMetrics\"><code>TextMetrics</code></a></li>\n        <li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg> <a href=\"/zh-CN/docs/Web/API/Path2D\"><code>Path2D</code></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/zh-CN/docs/MDN\">文档:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>贡献</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/MDN\">MDN 项目</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Using_images\">« 上一页</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Compositing\">下一页  »</a></li>\n</ul>\n<p>在本教程前面的部分中，我们已经了解了 Canvas 网格和坐标空间。到目前为止，我们只是根据我们的需要使用默认的网格，改变整个画布的大小。变形是一种更强大的方法，可以将原点移动到另一点、对网格进行旋转和缩放。</p>"}},{"type":"prose","value":{"id":"状态的保存和恢复_saving_and_restoring_state","title":"状态的保存和恢复 Saving and restoring state","isH3":false,"content":"<p>在了解变形之前，我先介绍两个在你开始绘制复杂图形时必不可少的方法。</p>\n<dl>\n  <dt id=\"save\"><a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/save\" title=\"save()\"><code>save()</code></a></dt>\n  <dd>\n    <p>保存画布 (canvas) 的所有状态</p>\n  </dd>\n  <dt id=\"restore\"><a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/restore\" title=\"restore()\"><code>restore()</code></a></dt>\n  <dd>\n    <p>save 和 restore 方法是用来保存和恢复 canvas 状态的，都没有参数。Canvas 的状态就是当前画面应用的所有样式和变形的一个快照。</p>\n  </dd>\n</dl>\n<p>Canvas 状态存储在栈中，每当<code>save()</code>方法被调用后，当前的状态就被推送到栈中保存。一个绘画状态包括：</p>\n<ul>\n  <li>当前应用的变形（即移动，旋转和缩放，见下）</li>\n  <li>以及下面这些属性：<a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/strokeStyle\" title=\"strokeStyle\"><code>strokeStyle</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/fillStyle\" title=\"fillStyle\"><code>fillStyle</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/globalAlpha\" title=\"globalAlpha\"><code>globalAlpha</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineWidth\" title=\"lineWidth\"><code>lineWidth</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineCap\" title=\"lineCap\"><code>lineCap</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineJoin\" title=\"lineJoin\"><code>lineJoin</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/miterLimit\" title=\"miterLimit\"><code>miterLimit</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset\" title=\"lineDashOffset\"><code>lineDashOffset</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/shadowOffsetX\" title=\"shadowOffsetX\"><code>shadowOffsetX</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/shadowOffsetY\" title=\"shadowOffsetY\"><code>shadowOffsetY</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/shadowBlur\" title=\"shadowBlur\"><code>shadowBlur</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/shadowColor\" title=\"shadowColor\"><code>shadowColor</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\" title=\"globalCompositeOperation\"><code>globalCompositeOperation</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/font\" title=\"font\"><code>font</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/textAlign\" title=\"textAlign\"><code>textAlign</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/textBaseline\" title=\"textBaseline\"><code>textBaseline</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/direction\" title=\"direction\"><code>direction</code></a>, <a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\" title=\"imageSmoothingEnabled\"><code>imageSmoothingEnabled</code></a></li>\n  <li>当前的<a href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Compositing#clipping_paths\">裁切路径（clipping path）</a>，会在下一节介绍</li>\n</ul>\n<p>你可以调用任意多次 <code>save</code>方法。每一次调用 <code>restore</code> 方法，上一个保存的状态就从栈中弹出，所有设定都恢复。</p>"}},{"type":"prose","value":{"id":"save_和_restore_的应用例子","title":"<code>save</code> 和 <code>restore</code> 的应用例子","isH3":true,"content":"<p>\n  <img src=\"/@api/deki/files/104/=Canvas_savestate.png\" alt=\"\" loading=\"lazy\">我们尝试用这个连续矩形的例子来描述 canvas 的状态栈是如何工作的。\n</p>\n<p>第一步是用默认设置画一个大四方形，然后保存一下状态。改变填充颜色画第二个小一点的蓝色四方形，然后再保存一下状态。再次改变填充颜色绘制更小一点的半透明的白色四方形。</p>\n<p>到目前为止所做的动作和前面章节的都很类似。不过一旦我们调用 <code>restore</code>，状态栈中最后的状态会弹出，并恢复所有设置。如果不是之前用 <code>save</code> 保存了状态，那么我们就需要手动改变设置来回到前一个状态，这个对于两三个属性的时候还是适用的，一旦多了，我们的代码将会猛涨。</p>\n<p>当第二次调用 <code>restore</code> 时，已经恢复到最初的状态，因此最后是再一次绘制出一个黑色的四方形。</p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/249/Canvas_savestate.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"save 和 restore 的应用例子\" id=\"frame_a_save_and_restore_canvas_state_example\" width=\"180\" height=\"180\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-CN/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.a_save_and_restore_canvas_state_example.html\" loading=\"lazy\"></iframe></td></tr></tbody></table>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 使用默认设置绘制一个矩形</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// 保存默认状态</span>\n\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#09F'</span>       <span class=\"token comment\">// 在原有配置基础上对颜色做改变</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span><span class=\"token number\">120</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 使用新的设置绘制一个矩形</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// 保存当前状态</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#FFF'</span>       <span class=\"token comment\">// 再次改变颜色配置</span>\n  ctx<span class=\"token punctuation\">.</span>globalAlpha <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 使用新的配置绘制一个矩形</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 重新加载之前的颜色状态</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 使用上一次的配置绘制一个矩形</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 加载默认颜色配置</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 使用加载的配置绘制一个矩形</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"save 和 restore 的应用例子"}},{"type":"prose","value":{"id":"移动_translating","title":"移动 Translating","isH3":false,"content":"<p>\n  <img src=\"/@api/deki/files/85/=Canvas_grid_translate.png\" alt=\"\" loading=\"lazy\">\n</p>\n<p>我们先介绍 <code>translate</code>方法，它用来移动 canvas 和它的原点到一个不同的位置。</p>\n<dl>\n  <dt id=\"translatex_y\"><code>translate(x, y)</code></dt>\n  <dd>\n    <p><code>translate</code>方法接受两个参数。*x *是左右偏移量，<em>y</em> 是上下偏移量，如右图所示。</p>\n  </dd>\n</dl>\n<p>在做变形之前先保存状态是一个良好的习惯。大多数情况下，调用 restore 方法比手动恢复原先的状态要简单得多。又，如果你是在一个循环中做位移但没有保存和恢复 canvas 的状态，很可能到最后会发现怎么有些东西不见了，那是因为它很可能已经超出 canvas 范围以外了。</p>"}},{"type":"prose","value":{"id":"translate_的例子","title":"<code>translate</code> 的例子","isH3":true,"content":"<p>这个例子显示了一些移动 canvas 原点的好处。如果不使用 <code>translate</code>方法，那么所有矩形都将被绘制在相同的位置（0,0）。<code>translate</code>方法同时让我们可以任意放置这些图案，而不需要在 <code>fillRect()</code> 方法中手工调整坐标值，既好理解也方便使用。</p>\n<p>我在 <code>draw</code>方法中调用 <code>fillRect()</code> 方法 9 次，用了 2 层循环。每一次循环，先移动 canvas，画螺旋图案，然后恢复到原始状态。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgb('</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">51</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span> <span class=\"token operator\">-</span> <span class=\"token number\">51</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">', 255)'</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">+</span> j <span class=\"token operator\">*</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/9857/translate.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"translate 的例子\" id=\"frame_a_translate_example\" width=\"160\" height=\"160\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-CN/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.a_translate_example.html\" loading=\"lazy\"></iframe></td></tr></tbody></table>","titleAsText":"translate 的例子"}},{"type":"prose","value":{"id":"旋转_rotating","title":"旋转 Rotating","isH3":false,"content":"<p>\n  <img src=\"/@api/deki/files/84/=Canvas_grid_rotate.png\" alt=\"\" loading=\"lazy\">\n</p>\n<p>第二个介绍 <code>rotate</code>方法，它用于以原点为中心旋转 canvas。</p>\n<dl>\n  <dt id=\"rotateangle\"><code>rotate(angle)</code></dt>\n  <dd>\n    <p>这个方法只接受一个参数：旋转的角度 (angle)，它是顺时针方向的，以弧度为单位的值。</p>\n  </dd>\n</dl>\n<p>旋转的中心点始终是 canvas 的原点，如果要改变它，我们需要用到 <code>translate</code>方法。</p>"}},{"type":"prose","value":{"id":"rotate_的例子","title":"<code>rotate</code> 的例子","isH3":true,"content":"<p>\n  <img src=\"/@api/deki/files/103/=Canvas_rotate.png\" alt=\"\" loading=\"lazy\">\n</p>\n<p>在这个例子里，见右图，我用 <code>rotate</code>方法来画圆并构成圆形图案。当然你也可以分别计算出 <em>x</em> 和 <em>y</em> 坐标（<code>x = r*Math.cos(a); y = r*Math.sin(a)</code>）。这里无论用什么方法都无所谓的，因为我们画的是圆。计算坐标的结果只是旋转圆心位置，而不是圆本身。即使用 <code>rotate</code>旋转两者，那些圆看上去还是一样的，不管它们绕中心旋转有多远。</p>\n<p>这里我们又用到了两层循环。第一层循环决定环的数量，第二层循环决定每环有多少个点。每环开始之前，我都保存一下 canvas 的状态，这样恢复起来方便。每次画圆点，我都以一定夹角来旋转 canvas，而这个夹角则是由环上的圆点数目的决定的。最里层的环有 6 个圆点，这样，每次旋转的夹角就是 360/6 = 60 度。往外每一环的圆点数目是里面一环的 2 倍，那么每次旋转的夹角随之减半。</p>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/9859/rotate.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"rotate 的例子\" id=\"frame_a_rotate_example\" width=\"310\" height=\"210\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-CN/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.a_rotate_example.html\" loading=\"lazy\"></iframe></td></tr></tbody></table>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// Loop through rings (from inside to out)</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgb('</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token number\">51</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">','</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token operator\">-</span><span class=\"token number\">51</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">',255)'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>i<span class=\"token operator\">*</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// draw individual dots</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">*</span><span class=\"token number\">12.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>","titleAsText":"rotate 的例子"}},{"type":"prose","value":{"id":"缩放_scaling","title":"缩放 Scaling","isH3":false,"content":"<p>接着是缩放。我们用它来增减图形在 canvas 中的像素数目，对形状，位图进行缩小或者放大。</p>\n<dl>\n  <dt id=\"scalex_y\"><strong><code>scale(x, y)</code></strong></dt>\n  <dd>\n    <p><code>scale</code>方法可以缩放画布的水平和垂直的单位。两个参数都是实数，可以为负数，x 为水平缩放因子，y 为垂直缩放因子，如果比 1 小，会缩小图形，如果比 1 大会放大图形。默认值为 1，为实际大小。</p>\n  </dd>\n</dl>\n<p>画布初始情况下，是以左上角坐标为原点的第一象限。如果参数为负实数，相当于以 x 或 y 轴作为对称轴镜像反转（例如，使用<code>translate(0,canvas.height); scale(1,-1);</code> 以 y 轴作为对称轴镜像反转，就可得到著名的笛卡尔坐标系，左下角为原点）。</p>\n<p>默认情况下，canvas 的 1 个单位为 1 个像素。举例说，如果我们设置缩放因子是 0.5，1 个单位就变成对应 0.5 个像素，这样绘制出来的形状就会是原先的一半。同理，设置为 2.0 时，1 个单位就对应变成了 2 像素，绘制的结果就是图形放大了 2 倍。</p>"}},{"type":"prose","value":{"id":"scale_的例子","title":"<code>scale</code> 的例子","isH3":true,"content":"<p>这最后的例子里，我们用不同的缩放方式来画两个图形。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// draw a simple rectangle, but scale it.</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// mirror horizontally</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>font <span class=\"token operator\">=</span> <span class=\"token string\">'48px serif'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'MDN'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">135</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/9861/scale.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"scale 的例子\" id=\"frame_a_scale_example\" width=\"160\" height=\"160\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-CN/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.a_scale_example.html\" loading=\"lazy\"></iframe></td></tr></tbody></table>","titleAsText":"scale 的例子"}},{"type":"prose","value":{"id":"变形_transforms","title":"变形 Transforms","isH3":false,"content":"<p>最后一个方法允许对变形矩阵直接修改。</p>\n<dl>\n  <dt id=\"transforma_b_c_d_e_f\"><a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/transform\" title=\"transform(a, b, c, d, e, f)\"><code>transform(a, b, c, d, e, f)</code></a></dt>\n  <dd>\n    <p>这个方法是将当前的变形矩阵乘上一个基于自身参数的矩阵，如下面的矩阵所示：</p>\n    <p>\n      <math>\n        <semantics>\n          <mrow>\n            <mo>[</mo>\n            <mtable columnalign=\"center center center\" rowspacing=\"0.5ex\">\n              <mtr>\n                <mtd>\n                  <mi>a</mi>\n                </mtd>\n                <mtd>\n                  <mi>c</mi>\n                </mtd>\n                <mtd>\n                  <mi>e</mi>\n                </mtd>\n              </mtr>\n              <mtr>\n                <mtd>\n                  <mi>b</mi>\n                </mtd>\n                <mtd>\n                  <mi>d</mi>\n                </mtd>\n                <mtd>\n                  <mi>f</mi>\n                </mtd>\n              </mtr>\n              <mtr>\n                <mtd>\n                  <mn>0</mn>\n                </mtd>\n                <mtd>\n                  <mn>0</mn>\n                </mtd>\n                <mtd>\n                  <mn>1</mn>\n                </mtd>\n              </mtr>\n            </mtable>\n            <mo>]</mo>\n          </mrow>\n          <annotation encoding=\"TeX\">\\left[ \\begin{array}{ccc} a &amp; c &amp; e \\ b &amp; d &amp; f \\ 0 &amp; 0 &amp; 1 \\end{array} \\right]</annotation>\n        </semantics>\n      </math>\n    </p>\n    <p>如果任意一个参数是<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Infinity\"><code>Infinity</code></a>，变形矩阵也必须被标记为无限大，否则会抛出异常。</p>\n    <p>这个函数的参数各自代表如下：</p>\n    <dl>\n      <dt id=\"a_m11\"><code>a (m11)</code></dt>\n      <dd>\n        <p>水平方向的缩放</p>\n      </dd>\n      <dt id=\"bm12\"><code>b(m12)</code></dt>\n      <dd>\n        <p>竖直方向的倾斜偏移</p>\n      </dd>\n      <dt id=\"cm21\"><code>c(m21)</code></dt>\n      <dd>\n        <p>水平方向的倾斜偏移</p>\n      </dd>\n      <dt id=\"dm22\"><code>d(m22)</code></dt>\n      <dd>\n        <p>竖直方向的缩放</p>\n      </dd>\n      <dt id=\"edx\"><code>e(dx)</code></dt>\n      <dd>\n        <p>水平方向的移动</p>\n      </dd>\n      <dt id=\"fdy\"><code>f(dy)</code></dt>\n      <dd>\n        <p>竖直方向的移动</p>\n      </dd>\n    </dl>\n  </dd>\n  <dt id=\"settransforma_b_c_d_e_f\"><a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/setTransform\" title=\"setTransform(a, b, c, d, e, f)\"><code>setTransform(a, b, c, d, e, f)</code></a></dt>\n  <dd>\n    <p>这个方法会将当前的变形矩阵重置为单位矩阵，然后用相同的参数调用 <code>transform</code>方法。如果任意一个参数是无限大，那么变形矩阵也必须被标记为无限大，否则会抛出异常。从根本上来说，该方法是取消了当前变形，然后设置为指定的变形，一步完成。</p>\n  </dd>\n  <dt id=\"resettransform\"><a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D/resetTransform\" title=\"resetTransform()\"><code>resetTransform()</code></a></dt>\n  <dd>\n    <p>重置当前变形为单位矩阵，它和调用以下语句是一样的：<code>ctx.setTransform(1, 0, 0, 1, 0, 0);</code></p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"transform_settransform_的例子","title":"<code>transform</code> / <code>setTransform</code> 的例子","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> sin <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> cos <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    c <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span> <span class=\"token operator\">/</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"rgb(\"</span> <span class=\"token operator\">+</span> c <span class=\"token operator\">+</span> <span class=\"token string\">\",\"</span> <span class=\"token operator\">+</span> c <span class=\"token operator\">+</span> <span class=\"token string\">\",\"</span> <span class=\"token operator\">+</span> c <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>cos<span class=\"token punctuation\">,</span> sin<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>sin<span class=\"token punctuation\">,</span> cos<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">setTransform</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"rgba(255, 128, 255, 0.5)\"</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>250<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/255/Canvas_transform.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"transform setTransform 的例子 sample\" id=\"frame_transform_settransform_的例子\" width=\"230\" height=\"280\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-CN/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.transform_settransform_%E7%9A%84%E4%BE%8B%E5%AD%90.html\" loading=\"lazy\"></iframe></td></tr></tbody></table>\n<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Using_images\">« 上一页</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Compositing\">下一页  »</a></li>\n</ul>","titleAsText":"transform / setTransform 的例子"}}],"toc":[{"text":"状态的保存和恢复 Saving and restoring state","id":"状态的保存和恢复_saving_and_restoring_state"},{"text":"移动 Translating","id":"移动_translating"},{"text":"旋转 Rotating","id":"旋转_rotating"},{"text":"缩放 Scaling","id":"缩放_scaling"},{"text":"变形 Transforms","id":"变形_transforms"}],"summary":"在本教程前面的部分中，我们已经了解了 Canvas 网格和坐标空间。到目前为止，我们只是根据我们的需要使用默认的网格，改变整个画布的大小。变形是一种更强大的方法，可以将原点移动到另一点、对网格进行旋转和缩放。","popularity":0.001,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Transformations","locale":"en-US","native":"English (US)"},{"title":"Transformations","locale":"fr","native":"Français"},{"title":"座標変換","locale":"ja","native":"日本語"},{"title":"변형 (transformations)","locale":"ko","native":"한국어"},{"title":"Transformations","locale":"ru","native":"Русский"},{"title":"變形效果","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/canvas_api/tutorial/transformations","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/canvas_api/tutorial/transformations/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Canvas_API","title":"Canvas"},{"uri":"/zh-CN/docs/Web/API/Canvas_API/Tutorial","title":"Canvas 教程"},{"uri":"/zh-CN/docs/Web/API/Canvas_API/Tutorial/Transformations","title":"变形 Transformations"}],"pageTitle":"变形 Transformations - Web API 接口参考 | MDN","noIndexing":false}}