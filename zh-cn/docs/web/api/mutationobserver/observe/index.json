{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"MutationObserver.observe()","mdn_url":"/zh-CN/docs/Web/API/MutationObserver/observe","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MutationObserver/MutationObserver\"><code>MutationObserver()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MutationObserver/disconnect\"><code>disconnect()</code></a></li><li><em><code>observe()</code></em></li><li><a href=\"/zh-CN/docs/Web/API/MutationObserver/takeRecords\"><code>takeRecords()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/zh-CN/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a> 的 <strong><code>observe()</code></strong> 方法配置了 <code>MutationObserver</code> 对象的回调方法以开始接收与给定选项匹配的 DOM 变化的通知。根据配置，观察者会观察 DOM 树中的单个 <a href=\"/zh-CN/docs/Web/API/Node\"><code>Node</code></a>，也可能会观察被指定节点的部分或者所有的子孙节点。</p>\n<p>要停止 <code>MutationObserver</code>（以便不再触发它的回调方法），需要调用 <a href=\"/zh-CN/docs/Web/API/MutationObserver/disconnect\"><code>MutationObserver.disconnect()</code></a> 方法。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">mutationObserver.observe(target[, options])\n</pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"target\"><code>target</code></dt>\n  <dd>\n    <p>DOM 树中的一个要观察变化的 DOM <a href=\"/zh-CN/docs/Web/API/Node\"><code>Node</code></a> (可能是一个 <a href=\"/zh-CN/docs/Web/API/Element\"><code>Element</code></a>)，或者是被观察的子节点树的根节点。</p>\n  </dd>\n  <dt id=\"options\"><code>options</code></dt>\n  <dd>\n    <p>此对象的配置项描述了 DOM 的哪些变化应该报告给 <code>MutationObserver</code> 的 <code>callback</code>。当调用 <a href=\"/zh-CN/docs/Web/API/MutationObserver/observe\" title=\"observe()\" aria-current=\"page\"><code>observe()</code></a> 时， <code>childList</code>、<code>attributes</code> 和 <code>characterData</code> 中，必须有一个参数为 <code>true</code>。否则会抛出 <code>TypeError</code> 异常。</p>\n    <p><code>options</code> 的属性如下：</p>\n    <dl>\n      <dt id=\"subtree\"><code>subtree</code> <span class=\"badge inline optional\">可选</span></dt>\n      <dd>\n        <p>当为 <code>true</code> 时，将会监听以 <code>target</code> 为根节点的整个子树。包括子树中所有节点的属性，而不仅仅是针对 <code>target</code>。默认值为 <code>false</code>。</p>\n      </dd>\n      <dt id=\"childlist\"><code>childList</code> <span class=\"badge inline optional\">可选</span></dt>\n      <dd>\n        <p>当为 <code>true</code> 时，监听 <code>target</code> 节点中发生的节点的新增与删除（同时，如果 <code>subtree</code> 为 <code>true</code>，会针对整个子树生效）。默认值为 <code>false</code>。</p>\n      </dd>\n      <dt id=\"attributes\"><code>attributes</code> <span class=\"badge inline optional\">可选</span></dt>\n      <dd>\n        <p>当为 <code>true</code> 时观察所有监听的节点属性值的变化。默认值为 <code>true</code>，当声明了 <code>attributeFilter</code> 或 <code>attributeOldValue</code>，默认值则为 <code>false</code>。</p>\n      </dd>\n      <dt id=\"attributefilter\"><code>attributeFilter</code> <span class=\"badge inline optional\">可选</span></dt>\n      <dd>\n        <p>一个用于声明哪些属性名会被监听的数组。如果不声明该属性，所有属性的变化都将触发通知。</p>\n      </dd>\n      <dt id=\"attributeoldvalue\"><code>attributeOldValue</code> <span class=\"badge inline optional\">可选</span></dt>\n      <dd>\n        <p>当为 <code>true</code> 时，记录上一次被监听的节点的属性变化；可查阅 <a href=\"/zh-CN/docs/Web/API/MutationObserver#monitoring_attribute_values\">Monitoring attribute values</a> in <a href=\"/zh-CN/docs/Web/API/MutationObserver\">MutationObserver</a> 了解关于观察属性变化和属性值记录的详情。默认值为 <code>false</code>。</p>\n      </dd>\n      <dt id=\"characterdata\"><code>characterData</code> <span class=\"badge inline optional\">可选</span></dt>\n      <dd>\n        <p>当为 <code>true</code> 时，监听声明的 <code>target</code> 节点上所有字符的变化。默认值为 <code>true</code>，如果声明了 <code>characterDataOldValue</code>，默认值则为 <code>false</code></p>\n      </dd>\n      <dt id=\"characterdataoldvalue\"><code>characterDataOldValue</code> <span class=\"badge inline optional\">可选</span></dt>\n      <dd>\n        <p>当为 <code>true</code> 时，记录前一个被监听的节点中发生的文本变化。默认值为 <code>false</code></p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p><code>undefined</code>。</p>"}},{"type":"prose","value":{"id":"异常","title":"异常","isH3":true,"content":"<dl>\n  <dt id=\"typeerror\"><code>TypeError</code></dt>\n  <dd>\n    <p>以下任一情况都会抛出异常：</p>\n    <ul>\n      <li>配置选项使得实际上不会监视任何内容（例如，如果 <a href=\"/zh-CN/docs/Web/API/MutationObserver/observe\" aria-current=\"page\"><code>MutationObserverInit.childList</code></a>，<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationObserver/observe\"><code>MutationObserverInit.attributes</code> <small>(en-US)</small></a> 和 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationObserver/observe\"><code>MutationObserverInit.characterData</code> <small>(en-US)</small></a> 都为 <code>false</code>）。</li>\n      <li><code>attributes</code> 选项为 <code>false</code>（表示不监视属性更改）但是<code>attributeOldValue</code> 为 <code>true</code> 并且/或者 <code>attributeFilter</code> 配置存在。</li>\n      <li><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>characterDataOldValue</code></a> 选项为 <code>true</code> 但是 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationObserver/observe\"><code>MutationObserverInit.characterData</code> <small>(en-US)</small></a> 为 <code>false</code>（表示不跟踪字符更改）。</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"使用说明","title":"使用说明","isH3":false,"content":""}},{"type":"prose","value":{"id":"复用_mutationobserver","title":"复用 MutationObserver","isH3":true,"content":"<p>你可以多次调用同一个 <code>MutationObserver</code> 对象的 <code>observe()</code> 方法，来观察 DOM 树中不同部分的变化，和/或不同类型的变化。有一些需要注意的注意事项：</p>\n<ul>\n  <li>如果在已经被同一 <code>MutationObserver</code> 观察的节点上调用 <code>observe()</code> 方法，则在激活新观察者之前，所有现有观察者将自动从所有正在观察的目标中移除。</li>\n  <li>如果同一个 <code>MutationObserver</code> 还没有作用在 target 上，则保留现有观察者并添加新观察者。</li>\n</ul>"}},{"type":"prose","value":{"id":"当节点断开连接时继续观察节点","title":"当节点断开连接时继续观察节点","isH3":true,"content":"<p><code>MutationObserver</code> 旨在让您能够随着时间的推移观察所需的节点集，即使这些节点之间的直接连接被切断。如果你开始观察节点的子树，并且该子树的一部分被分离并移动到 DOM 中的其他位置，你将继续观察分离的节点段，接收与节点从原始子树分离之前相同的回调。</p>\n<p>换句话说，在你收到有关节点从被观察子树中拆分的通知之前，你将收到有关该拆分子树及其节点的更改的通知。这可以防止你丢失在切断连接之后以及在你有机会专门开始观察已移动的节点或子树之前发生的变化。</p>\n<p>这意味着理论上如果你跟踪描述发生的变化的 <a href=\"/zh-CN/docs/Web/API/MutationRecord\"><code>MutationRecord</code></a> 对象，你就可以“撤销”这些改动，将 DOM 恢复到初始状态。</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>在此例子中，将为你演示如何在实例 <a href=\"/zh-CN/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a> 中调用 <strong><code>observe()</code></strong> 方法，一旦设置后，会传给他一个目标元素和一个 <a href=\"/zh-CN/docs/Web/API/MutationObserver/observe\" aria-current=\"page\"><code>MutationObserverInit</code></a> 配置对象。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 得到要观察的元素</span>\n<span class=\"token keyword\">var</span> elementToObserve <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#targetElementId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 创建一个叫 `observer` 的新 `MutationObserver` 实例，</span>\n<span class=\"token comment\">// 并将回调函数传给它</span>\n<span class=\"token keyword\">var</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MutationObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'callback that runs when observer is triggered'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 在 MutationObserver 实例上调用 `observe` 方法，</span>\n<span class=\"token comment\">// 并将要观察的元素与选项传给此方法</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>elementToObserve<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">subtree</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">childList</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#ref-for-dom-mutationobserver-observe②","title":"DOM Standard"}],"query":"api.MutationObserver.observe"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.MutationObserver.observe","dataURL":"/zh-CN/docs/Web/API/MutationObserver/observe/bcd.json"}}],"toc":[{"text":"语法","id":"语法"},{"text":"使用说明","id":"使用说明"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"MutationObserver 的 observe() 方法配置了 MutationObserver 对象的回调方法以开始接收与给定选项匹配的 DOM 变化的通知。根据配置，观察者会观察 DOM 树中的单个 Node，也可能会观察被指定节点的部分或者所有的子孙节点。","popularity":0.0009,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MutationObserver.observe()","locale":"en-US","native":"English (US)"},{"title":"MutationObserver.observe()","locale":"es","native":"Español"},{"title":"MutationObserver.observe()","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/mutationobserver/observe","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/mutationobserver/observe/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/MutationObserver","title":"MutationObserver"},{"uri":"/zh-CN/docs/Web/API/MutationObserver/observe","title":"MutationObserver.observe()"}],"pageTitle":"MutationObserver.observe() - Web API 接口参考 | MDN","noIndexing":false}}