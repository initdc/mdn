{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"MutationObserver.takeRecords()","mdn_url":"/zh-CN/docs/Web/API/MutationObserver/takeRecords","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MutationObserver/MutationObserver\"><code>MutationObserver()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MutationObserver/disconnect\"><code>disconnect()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MutationObserver/observe\"><code>observe()</code></a></li><li><em><code>takeRecords()</code></em></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/zh-CN/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a> 的 <strong><code>takeRecords()</code></strong> 方法返回已检测到但尚未由观察者的回调函数处理的所有匹配 DOM 更改的列表，使变更队列保持为空。此方法最常见的使用场景是在断开观察者之前立即获取所有未处理的更改记录，以便在停止观察者时可以处理任何未处理的更改。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<pre class=\"notranslate\">mutationRecords = mutationObserver.takeRecords()\n</pre>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<p>无。</p>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>返回一个<a href=\"/zh-CN/docs/Web/API/MutationRecord\"><code>MutationRecord</code></a> 对象列表，每个对象都描述了应用于 DOM 树某部分的一次改动。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 调用 <code>takeRecords()</code> 后，已发生但未传递给回调的变更队列将保留为空。</p>\n</div>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>下面的示例展示了在断开观察者之前如何通过调用 <code>takeRecords()</code> 来处理任何未传递的 <a href=\"/zh-CN/docs/Web/API/MutationRecord\"><code>MutationRecord</code></a>。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> targetNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#someElement\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> observerOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">childList</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MutationObserver</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>targetNode<span class=\"token punctuation\">,</span> observerOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* ...later, when it's time to stop observing... */</span>\n\n<span class=\"token comment\">/* handle any still-pending mutations */</span>\n\n<span class=\"token keyword\">var</span> mutations <span class=\"token operator\">=</span> observer<span class=\"token punctuation\">.</span><span class=\"token function\">takeRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mutations<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>mutations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>代码中第 12-17 行抓取了所有未处理的变更记录，然后调用回调，并将变更记录列表传递给回调，以保证所有变更记录都被处理。这是在调用 <a href=\"/zh-CN/docs/Web/API/MutationObserver/disconnect\" title=\"disconnect()\"><code>disconnect()</code></a> 之前完成的，以便停止观察 DOM。</p>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#ref-for-dom-mutationobserver-takerecords①","title":"DOM Standard"}],"query":"api.MutationObserver.takeRecords"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.MutationObserver.takeRecords","dataURL":"/zh-CN/docs/Web/API/MutationObserver/takeRecords/bcd.json"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"MutationObserver 的 takeRecords() 方法返回已检测到但尚未由观察者的回调函数处理的所有匹配 DOM 更改的列表，使变更队列保持为空。此方法最常见的使用场景是在断开观察者之前立即获取所有未处理的更改记录，以便在停止观察者时可以处理任何未处理的更改。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MutationObserver.takeRecords()","locale":"en-US","native":"English (US)"},{"title":"MutationObserver.takeRecords()","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/mutationobserver/takerecords","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/mutationobserver/takerecords/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/MutationObserver","title":"MutationObserver"},{"uri":"/zh-CN/docs/Web/API/MutationObserver/takeRecords","title":"MutationObserver.takeRecords()"}],"pageTitle":"MutationObserver.takeRecords() - Web API 接口参考 | MDN","noIndexing":false}}