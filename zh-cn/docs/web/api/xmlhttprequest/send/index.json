{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"XMLHttpRequest.send()","mdn_url":"/zh-CN/docs/Web/API/XMLHttpRequest/send","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/XMLHttpRequest\"><code>XMLHttpRequest()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/channel\"><code>channel</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/mozAnon\"><code>mozAnon</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/mozBackgroundRequest\"><code>mozBackgroundRequest</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/mozSystem\"><code>mozSystem</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLHttpRequest/msCaching\"><code>msCaching</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/readyState\"><code>readyState</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/response\"><code>response</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/responseText\"><code>responseText</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/responseType\"><code>responseType</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/responseURL\"><code>responseURL</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/responseXML\"><code>responseXML</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/status\"><code>status</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/statusText\"><code>statusText</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/timeout\"><code>timeout</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/upload\"><code>upload</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/withCredentials\"><code>withCredentials</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/abort\"><code>abort()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\"><code>getAllResponseHeaders()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/getResponseHeader\"><code>getResponseHeader()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLHttpRequest/msCachingEnabled\"><code>msCachingEnabled()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/open\"><code>open()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/overrideMimeType\"><code>overrideMimeType()</code></a></li><li><em><code>send()</code></em></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/setRequestHeader\"><code>setRequestHeader()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/abort_event\"><code>abort</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/error_event\"><code>error</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/load_event\"><code>load</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/loadend_event\"><code>loadend</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/loadstart_event\"><code>loadstart</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/progress_event\"><code>progress</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/readystatechange_event\"><code>readystatechange</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/timeout_event\"><code>timeout</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequestEventTarget\"><code>XMLHttpRequestEventTarget</code></a></li><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>XMLHttpRequest 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/FormData\"><code>FormData</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ProgressEvent\"><code>ProgressEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequestEventTarget\"><code>XMLHttpRequestEventTarget</code></a></li><li><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>XMLHttpRequestUpload</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>XMLHttpRequest.send()</code></strong> 方法用于发送 HTTP 请求。如果是异步请求（默认为异步请求），则此方法会在请求发送后立即返回；如果是同步请求，则此方法直到响应到达后才会返回。<code>XMLHttpRequest.send()</code> 方法接受一个可选的参数，其作为请求主体；如果请求方法是 GET 或者 HEAD，则应将请求主体设置为 null。</p>\n<p>如果没有使用 <a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/setRequestHeader\" title=\"setRequestHeader()\"><code>setRequestHeader()</code></a> 方法设置 <a href=\"/zh-CN/docs/Web/HTTP/Headers/Accept\"><code>Accept</code></a> 头部信息，则会发送带有 <code>\"* / *\"</code> 的<a href=\"/zh-CN/docs/Web/HTTP/Headers/Accept\"><code>Accept</code></a> 头部。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 请注意不要使用一个简单的 ArrayBuffer 对象作为参数，ArrayBuffer 已经不再是 AJAX 规范的一部分，请改用 ArrayBufferView（有关信息请参考兼容性列表。）</p>\n</div>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<pre class=\"notranslate\">XMLHttpRequest.send(body)\n</pre>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"body\"><code>body</code> <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>在 XHR 请求中要发送的数据体. 可以是：</p>\n    <ul>\n      <li>可以为 <a href=\"/zh-CN/docs/Web/API/Document\"><code>Document</code></a>, 在这种情况下，它在发送之前被序列化。</li>\n      <li>为 <code>XMLHttpRequestBodyInit</code>, 从 <a href=\"https://fetch.spec.whatwg.org/#typedefdef-xmlhttprequestbodyinit\" class=\"external\" rel=\" noopener\">per the Fetch spec</a> （规范中）可以是 <a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a>, <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>BufferSource</code></a>, <a href=\"/zh-CN/docs/Web/API/FormData\"><code>FormData</code></a>, <a href=\"/zh-CN/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>, 或者 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>USVString</code></a> 对象。</li>\n      <li><code>null</code></li>\n    </ul>\n    <p>如果 body 没有指定值，则默认值为 <code>null</code>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p><code>undefined</code>.</p>"}},{"type":"prose","value":{"id":"例外","title":"例外","isH3":true,"content":"<table>\n  <thead>\n    <tr>\n      <th>Exception</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>InvalidStateError</code></td>\n      <td><code>send()</code> has already been invoked for the request, and/or the request is complete.</td>\n    </tr>\n    <tr>\n      <td><code>NetworkError</code></td>\n      <td>The resource type to be fetched is a Blob, and the method is not <code>GET</code>.</td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>XMLHttpRequest<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nXMLHttpRequest<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>ArrayBuffer data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nXMLHttpRequest<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>ArrayBufferView data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nXMLHttpRequest<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>Blob data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nXMLHttpRequest<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>Document data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nXMLHttpRequest<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>DOMString<span class=\"token operator\">?</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nXMLHttpRequest<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>FormData data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>如果发送的数据是 Document 对象，需要在发送之前将其序列化。当发送一个 Document 对象时，Firefox 3 之前的版本都是使用 UTF-8 编码发送请求的；FireFox 3 则使用由 <code>body.xmlEncoding</code> 指定的编码格式正确的发送文档，但如果未指定编码格式，则使用 UTF-8 编码格式发送。</p>\n<p>如果是一个 nsIInputStream 接口，它必须与 nsIUploadChannel 的 <code>setUploadStream()</code> 方法兼容。在这种情况下，将 Content-Length 的头部添加到请求中，它的值则使用 nsIInputStream 接口的 <code>available()</code> 方法获取。任何报头包括在数据流顶部的都会被当做报文主体。所以，应该在发送请求即调用 <code>send()</code> 方法之前使用<a href=\"#setrequestheader\"><code>setRequestHeader()</code></a> 方法设置 Content-Type 头部来指定数据流的 MIME 类型。</p>\n<p>发送二进制内容的最佳方法（如上传文件）是使用一个与 <code>send()</code> 方法结合的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">ArrayBufferView</a> 或者 <a href=\"/zh-CN/docs/Web/API/Blob\">Blobs</a></p>"}},{"type":"prose","value":{"id":"案例_get","title":"案例: GET","isH3":false,"content":"<pre class=\"notranslate\">var xhr = new XMLHttpRequest();\nxhr.open('GET', '/server', true);\n\nxhr.onload = function () {\n   // 请求结束后，在此处写处理代码\n};\n\nxhr.send(null);\n// xhr.send('string');\n// xhr.send(new Blob());\n// xhr.send(new Int8Array());\n// xhr.send(document);\n</pre>"}},{"type":"prose","value":{"id":"案例_post","title":"案例: POST","isH3":false,"content":"<pre class=\"notranslate\">var xhr = new XMLHttpRequest();\nxhr.open(\"POST\", '/server', true);\n\n//发送合适的请求头信息\nxhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.onload = function () {\n    // 请求结束后，在此处写处理代码\n};\nxhr.send(\"foo=bar&amp;lorem=ipsum\");\n// xhr.send('string');\n// xhr.send(new Blob());\n// xhr.send(new Int8Array());\n// xhr.send(document);\n</pre>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://xhr.spec.whatwg.org/#the-send()-method","title":"XMLHttpRequest Standard"}],"query":"api.XMLHttpRequest.send"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.XMLHttpRequest.send","dataURL":"/zh-CN/docs/Web/API/XMLHttpRequest/send/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\">Using XMLHttpRequest</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/HTML_in_XMLHttpRequest\">HTML in XMLHttpRequest</a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"案例: GET","id":"案例_get"},{"text":"案例: POST","id":"案例_post"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"XMLHttpRequest.send() 方法用于发送 HTTP 请求。如果是异步请求（默认为异步请求），则此方法会在请求发送后立即返回；如果是同步请求，则此方法直到响应到达后才会返回。XMLHttpRequest.send() 方法接受一个可选的参数，其作为请求主体；如果请求方法是 GET 或者 HEAD，则应将请求主体设置为 null。","popularity":0.0012,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"XMLHttpRequest.send()","locale":"en-US","native":"English (US)"},{"title":"XMLHttpRequest.send()","locale":"fr","native":"Français"},{"title":"XMLHttpRequest.send()","locale":"ja","native":"日本語"},{"title":"XMLHttpRequest.send()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"XMLHttpRequest.send()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/xmlhttprequest/send","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/xmlhttprequest/send/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/XMLHttpRequest","title":"XMLHttpRequest"},{"uri":"/zh-CN/docs/Web/API/XMLHttpRequest/send","title":"XMLHttpRequest.send()"}],"pageTitle":"XMLHttpRequest.send() - Web API 接口参考 | MDN","noIndexing":false}}