{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"XMLHttpRequest.overrideMimeType()","mdn_url":"/zh-CN/docs/Web/API/XMLHttpRequest/overrideMimeType","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>XMLHttpRequest 的 <strong><code>overrideMimeType</code></strong> 方法是指定一个 MIME 类型用于替代服务器指定的类型，使服务端响应信息中传输的数据按照该指定 MIME 类型处理。例如强制使流方式处理为\"text/xml\"类型处理时会被使用到，即使服务器在响应头中并没有这样指定。此方法必须在 send 方法之前调用方为有效。</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">XMLHttpRequest.overrideMimeType(mimeType)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"mimetype\"><code>mimeType</code></dt>\n  <dd>\n    <p>一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 指定具体的 MIME 类型去代替有服务器指定的 MIME 类型. 如果服务器没有指定类型，那么 <code>XMLHttpRequest</code> 将会默认为 <code>\"text/xml\"</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p><code>undefined</code>.</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>这个样例指定 Content-Type 为“text/plain\",为接受的数据重写 ContentType</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 如果服务器没有指定一个<a href=\"/zh-CN/docs/Web/HTTP/Headers/Content-Type\"><code>Content-Type</code></a> 头，<a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> 默认 MIME 类型为<code>\"text/xml\"</code>. 如果接受的数据不是有效的 XML，将会出现格”格式不正确“的错误。你能够通过调用 <code>overrideMimeType()</code> 指定各种类型来避免这种情况。</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Interpret the received data as plain text</span>\n\nreq <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nreq<span class=\"token punctuation\">.</span><span class=\"token function\">overrideMimeType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nreq<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nreq<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nreq<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://xhr.spec.whatwg.org/#the-overridemimetype()-method","title":"XMLHttpRequest Standard"}],"query":"api.XMLHttpRequest.overrideMimeType"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.XMLHttpRequest.overrideMimeType","dataURL":"/zh-CN/docs/Web/API/XMLHttpRequest/overrideMimeType/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\">Using XMLHttpRequest</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/responseType\"><code>XMLHttpRequest.responseType</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"XMLHttpRequest 的 overrideMimeType 方法是指定一个 MIME 类型用于替代服务器指定的类型，使服务端响应信息中传输的数据按照该指定 MIME 类型处理。例如强制使流方式处理为\"text/xml\"类型处理时会被使用到，即使服务器在响应头中并没有这样指定。此方法必须在 send 方法之前调用方为有效。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"XMLHttpRequest.overrideMimeType()","locale":"en-US","native":"English (US)"},{"title":"XMLHttpRequest.overrideMimeType()","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/xmlhttprequest/overridemimetype","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/xmlhttprequest/overridemimetype/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/XMLHttpRequest","title":"XMLHttpRequest"},{"uri":"/zh-CN/docs/Web/API/XMLHttpRequest/overrideMimeType","title":"XMLHttpRequest.overrideMimeType()"}],"pageTitle":"XMLHttpRequest.overrideMimeType() - Web API 接口参考 | MDN","noIndexing":false}}