{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"XMLHttpRequest.readyState","mdn_url":"/zh-CN/docs/Web/API/XMLHttpRequest/readyState","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/XMLHttpRequest\"><code>XMLHttpRequest()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/channel\"><code>channel</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/mozAnon\"><code>mozAnon</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/mozBackgroundRequest\"><code>mozBackgroundRequest</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/mozSystem\"><code>mozSystem</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLHttpRequest/msCaching\"><code>msCaching</code> <small>(en-US)</small></a></li><li><em><code>readyState</code></em></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/response\"><code>response</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/responseText\"><code>responseText</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/responseType\"><code>responseType</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/responseURL\"><code>responseURL</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/responseXML\"><code>responseXML</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/status\"><code>status</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/statusText\"><code>statusText</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/timeout\"><code>timeout</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/upload\"><code>upload</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/withCredentials\"><code>withCredentials</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/abort\"><code>abort()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\"><code>getAllResponseHeaders()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/getResponseHeader\"><code>getResponseHeader()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLHttpRequest/msCachingEnabled\"><code>msCachingEnabled()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/open\"><code>open()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/overrideMimeType\"><code>overrideMimeType()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/send\"><code>send()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/setRequestHeader\"><code>setRequestHeader()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/abort_event\"><code>abort</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/error_event\"><code>error</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/load_event\"><code>load</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/loadend_event\"><code>loadend</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/loadstart_event\"><code>loadstart</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/progress_event\"><code>progress</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/readystatechange_event\"><code>readystatechange</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/timeout_event\"><code>timeout</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequestEventTarget\"><code>XMLHttpRequestEventTarget</code></a></li><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>XMLHttpRequest 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/FormData\"><code>FormData</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ProgressEvent\"><code>ProgressEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequestEventTarget\"><code>XMLHttpRequestEventTarget</code></a></li><li><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>XMLHttpRequestUpload</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>XMLHttpRequest.readyState</strong> 属性返回一个 XMLHttpRequest 代理当前所处的状态。一个 XHR 代理总是处于下列状态中的一个：</p>\n<table>\n  <thead>\n    <tr>\n      <th>值</th>\n      <th>状态</th>\n      <th>描述</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>0</code></td>\n      <td><code>UNSENT</code></td>\n      <td>代理被创建，但尚未调用 open() 方法。</td>\n    </tr>\n    <tr>\n      <td><code>1</code></td>\n      <td><code>OPENED</code></td>\n      <td><code>open()</code> 方法已经被调用。</td>\n    </tr>\n    <tr>\n      <td><code>2</code></td>\n      <td><code>HEADERS_RECEIVED</code></td>\n      <td><code>send()</code> 方法已经被调用，并且头部和状态已经可获得。</td>\n    </tr>\n    <tr>\n      <td><code>3</code></td>\n      <td><code>LOADING</code></td>\n      <td>下载中；<code>responseText</code> 属性已经包含部分数据。</td>\n    </tr>\n    <tr>\n      <td><code>4</code></td>\n      <td><code>DONE</code></td>\n      <td>下载操作已完成。</td>\n    </tr>\n  </tbody>\n</table>\n<dl>\n  <dt id=\"unsent\">UNSENT</dt>\n  <dd>\n    <p>XMLHttpRequest 代理已被创建， 但尚未调用 open() 方法。</p>\n  </dd>\n  <dt id=\"opened\">OPENED</dt>\n  <dd>\n    <p>open() 方法已经被触发。在这个状态中，可以通过 <a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/setRequestHeader\">setRequestHeader()</a> 方法来设置请求的头部， 可以调用 <a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/send\">send()</a> 方法来发起请求。</p>\n  </dd>\n  <dt id=\"headers_received\">HEADERS_RECEIVED</dt>\n  <dd>\n    <p>send() 方法已经被调用，响应头也已经被接收。</p>\n  </dd>\n  <dt id=\"loading\">LOADING</dt>\n  <dd>\n    <p>响应体部分正在被接收。如果 <a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/responseType\"><code>responseType</code></a> 属性是“text”或空字符串，<a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/responseText\"><code>responseText</code></a> 将会在载入的过程中拥有部分响应数据。</p>\n  </dd>\n  <dt id=\"done\">DONE</dt>\n  <dd>\n    <p>请求操作已经完成。这意味着数据传输已经彻底完成或失败。</p>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 在 IE 中，状态有着不同的名称，并不是 <code>UNSENT</code>，<code>OPENED</code> ，<code>HEADERS_RECEIVED</code> ，<code>LOADING</code> 和 <code>DONE</code>，而是 <code>READYSTATE_UNINITIALIZED</code> (0)，<code>READYSTATE_LOADING</code> (1) ，<code>READYSTATE_LOADED</code> (2) ，<code>READYSTATE_INTERACTIVE</code> (3) <code>和 READYSTATE_COMPLETE</code> (4) 。</p>\n</div>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'UNSENT'</span><span class=\"token punctuation\">,</span> xhr<span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// readyState 为 0</span>\n\nxhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/api'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'OPENED'</span><span class=\"token punctuation\">,</span> xhr<span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// readyState 为 1</span>\n\nxhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onprogress</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'LOADING'</span><span class=\"token punctuation\">,</span> xhr<span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// readyState 为 3</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nxhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DONE'</span><span class=\"token punctuation\">,</span> xhr<span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// readyState 为 4</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nxhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://xhr.spec.whatwg.org/#states","title":"XMLHttpRequest Standard"}],"query":"api.XMLHttpRequest.readyState"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.XMLHttpRequest.readyState","dataURL":"/zh-CN/docs/Web/API/XMLHttpRequest/readyState/bcd.json"}}],"toc":[{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"XMLHttpRequest.readyState 属性返回一个 XMLHttpRequest 代理当前所处的状态。一个 XHR 代理总是处于下列状态中的一个：","popularity":0.0009,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"XMLHttpRequest.readyState","locale":"en-US","native":"English (US)"},{"title":"XMLHttpRequest.readyState","locale":"fr","native":"Français"},{"title":"XMLHttpRequest.readyState","locale":"ja","native":"日本語"},{"title":"XMLHttpRequest.readyState","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"XMLHttpRequest.readyState","locale":"ru","native":"Русский"},{"title":"XMLHttpRequest.readyState","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/xmlhttprequest/readystate","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/xmlhttprequest/readystate/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/XMLHttpRequest","title":"XMLHttpRequest"},{"uri":"/zh-CN/docs/Web/API/XMLHttpRequest/readyState","title":"XMLHttpRequest.readyState"}],"pageTitle":"XMLHttpRequest.readyState - Web API 接口参考 | MDN","noIndexing":false}}