{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"CustomElementRegistry","mdn_url":"/zh-CN/docs/Web/API/CustomElementRegistry","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li class=\"toggle\"><details open=\"\"><summary>指南</summary><ol><li><a href=\"/zh-CN/docs/Web/Web_Components/Using_custom_elements\">Using custom elements</a></li><li><a href=\"/zh-CN/docs/Web/Web_Components/Using_shadow_DOM\">Using shadow DOM</a></li><li><a href=\"/zh-CN/docs/Web/Web_Components/Using_templates_and_slots\">Using templates and slots</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>接口</summary><ol><li><a href=\"/zh-CN/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLTemplateElement\"><code>HTMLTemplateElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ShadowRoot\"><code>ShadowRoot</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Element/shadowRoot\"><code>Element.shadowRoot</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element/slot\"><code>Element.slot</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/composed\"><code>Event.composed</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/composedPath\"><code>Event.composedPath</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/isConnected\"><code>Node.isConnected</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Window/customElements\"><code>Window.customElements</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Document/createElement\"><code>Document.createElement()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/getRootNode\"><code>Node.getRootNode()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>**<code>CustomElementRegistry</code>**接口提供注册自定义元素和查询已注册元素的方法。要获取它的实例，请使用 <a href=\"/zh-CN/docs/Web/API/Window/customElements\"><code>window.customElements</code></a>属性。</p>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"customelementregistry.define\"><a href=\"/zh-CN/docs/Web/API/CustomElementRegistry/define\"><code>CustomElementRegistry.define()</code></a></dt>\n  <dd>\n    <p>定义一个新的<a href=\"/zh-CN/docs/Web/Web_Components/Using_custom_elements\">自定义元素</a>。</p>\n  </dd>\n  <dt id=\"customelementregistry.get\"><a href=\"/zh-CN/docs/Web/API/CustomElementRegistry/get\"><code>CustomElementRegistry.get()</code></a></dt>\n  <dd>\n    <p>返回指定自定义元素的构造函数，如果未定义自定义元素，则返回<code>undefined</code>。</p>\n  </dd>\n  <dt id=\"customelementregistry.upgrade\"><a href=\"/zh-CN/docs/Web/API/CustomElementRegistry/upgrade\"><code>CustomElementRegistry.upgrade()</code></a></dt>\n  <dd>\n    <p>Upgrades a custom element directly, even before it is connected to its shadow root.</p>\n  </dd>\n  <dt id=\"customelementregistry.whendefined\"><a href=\"/zh-CN/docs/Web/API/CustomElementRegistry/whenDefined\"><code>CustomElementRegistry.whenDefined()</code></a></dt>\n  <dd>\n    <p>返回当使用给定名称定义自定义元素时将会执行的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a>。（如果已经定义了这样一个自定义元素，那么立即执行返回的 promise。）</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>以下代码来自我们的 <a href=\"https://github.com/mdn/web-components-examples/tree/master/word-count-web-component\" class=\"external\" rel=\" noopener\">word-count-web-component</a> 示例（<a href=\"https://mdn.github.io/web-components-examples/word-count-web-component/\" class=\"external\" rel=\" noopener\">see it live also</a>）。请注意我们如何使用 <a href=\"/zh-CN/docs/Web/API/CustomElementRegistry/define\"><code>CustomElementRegistry.define()</code></a> 方法在创建其类后定义自定义元素。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Create a class for the element</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WordCount</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLParagraphElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Always call super first in constructor</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// count words in element's parent element</span>\n    <span class=\"token keyword\">var</span> wcParent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>textContent\n      <span class=\"token keyword\">return</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> <span class=\"token string\">'Words: '</span> <span class=\"token operator\">+</span> <span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span>wcParent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create a shadow root</span>\n    <span class=\"token keyword\">var</span> shadow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create text node and add word count to it</span>\n    <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    text<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Append it to the shadow root</span>\n    shadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\">// Update count when element content changes</span>\n    <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> <span class=\"token string\">'Words: '</span> <span class=\"token operator\">+</span> <span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span>wcParent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      text<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Define the new element</span>\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'word-count'</span><span class=\"token punctuation\">,</span> WordCount<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token string\">'p'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/custom-elements.html#custom-elements-api","title":"HTML Standard"}],"query":"api.CustomElementRegistry"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.CustomElementRegistry","dataURL":"/zh-CN/docs/Web/API/CustomElementRegistry/bcd.json"}}],"toc":[{"text":"方法","id":"方法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"**CustomElementRegistry**接口提供注册自定义元素和查询已注册元素的方法。要获取它的实例，请使用 window.customElements属性。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"CustomElementRegistry","locale":"en-US","native":"English (US)"},{"title":"CustomElementRegistry","locale":"es","native":"Español"},{"title":"CustomElementRegistry","locale":"ja","native":"日本語"},{"title":"CustomElementRegistry","locale":"ko","native":"한국어"},{"title":"CustomElementRegistry","locale":"pt-BR","native":"Português (do Brasil)"}],"source":{"folder":"zh-cn/web/api/customelementregistry","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/customelementregistry/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/CustomElementRegistry","title":"CustomElementRegistry"}],"pageTitle":"CustomElementRegistry - Web API 接口参考 | MDN","noIndexing":false}}