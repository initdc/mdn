{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"CustomElementRegistry.define()","mdn_url":"/zh-CN/docs/Web/API/CustomElementRegistry/define","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><em><code>define()</code></em></li><li><a href=\"/zh-CN/docs/Web/API/CustomElementRegistry/get\"><code>get()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CustomElementRegistry/upgrade\"><code>upgrade()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CustomElementRegistry/whenDefined\"><code>whenDefined()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/zh-CN/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a>接口的 <strong><code>define()</code></strong> 方法定义了一个自定义元素。</p>\n<p>你可以创建两种类型的自定义元素：</p>\n<ul>\n  <li><strong>自主定制元素</strong>：独立元素; 它们不会从内置 HTML 元素继承。</li>\n  <li><strong>自定义内置元素</strong>：这些元素继承自 - 并扩展 - 内置 HTML 元素</li>\n</ul>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<pre class=\"notranslate\">customElements.define(name, constructor, options);\n</pre>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"name\">name</dt>\n  <dd>\n    <p>自定义元素名。</p>\n  </dd>\n  <dt id=\"constructor\">constructor</dt>\n  <dd>\n    <p>自定义元素构造器。</p>\n  </dd>\n  <dt id=\"options\">options <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>控制元素如何定义。目前有一个选项支持：</p>\n    <ul>\n      <li><code>extends</code>. 指定继承的已创建的元素。被用于创建自定义元素。</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>空</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":""}},{"type":"prose","value":{"id":"自主定制元素","title":"自主定制元素","isH3":true,"content":"<p>以下代码取自我们的 <a href=\"https://github.com/mdn/web-components-examples/tree/master/popup-info-box-web-component\" class=\"external\" rel=\" noopener\">popup-info-box-web-component</a> 示例 (<a href=\"https://mdn.github.io/web-components-examples/popup-info-box-web-component/\" class=\"external\" rel=\" noopener\">see it live also</a>)。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Create a class for the element</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PopUpInfo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Always call super first in constructor</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create a shadow root</span>\n    <span class=\"token keyword\">var</span> shadow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create spans</span>\n    <span class=\"token keyword\">var</span> wrapper <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'wrapper'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> icon <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    icon<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'icon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    icon<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabindex'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> info <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    info<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'info'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Take attribute content and put it inside the info span</span>\n    <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    info<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Insert icon</span>\n    <span class=\"token keyword\">var</span> imgUrl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      imgUrl <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      imgUrl <span class=\"token operator\">=</span> <span class=\"token string\">'img/default.png'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> imgUrl<span class=\"token punctuation\">;</span>\n    icon<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create some CSS to apply to the shadow dom</span>\n    <span class=\"token keyword\">var</span> style <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    style<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'.wrapper {'</span> <span class=\"token operator\">+</span>\n                           <span class=\"token string\">'position: relative;'</span> <span class=\"token operator\">+</span>\n                        <span class=\"token string\">'}'</span> <span class=\"token operator\">+</span>\n\n                         <span class=\"token string\">'.info {'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'font-size: 0.8rem;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'width: 200px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'display: inline-block;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'border: 1px solid black;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'padding: 10px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'background: white;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'border-radius: 10px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'opacity: 0;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'transition: 0.6s all;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'position: absolute;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'bottom: 20px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'left: 10px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'z-index: 3;'</span> <span class=\"token operator\">+</span>\n                          <span class=\"token string\">'}'</span> <span class=\"token operator\">+</span>\n\n                          <span class=\"token string\">'img {'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'width: 1.2rem'</span> <span class=\"token operator\">+</span>\n                          <span class=\"token string\">'}'</span> <span class=\"token operator\">+</span>\n\n                          <span class=\"token string\">'.icon:hover + .info, .icon:focus + .info {'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'opacity: 1;'</span> <span class=\"token operator\">+</span>\n                          <span class=\"token string\">'}'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// attach the created elements to the shadow dom</span>\n\n    shadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    shadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>icon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Define the new element</span>\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'popup-info'</span><span class=\"token punctuation\">,</span> PopUpInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>popup-info</span> <span class=\"token attr-name\">img</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img/alt.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Your card validation code (CVC) is an extra\n                                    security feature — it is the last 3 or 4\n                                    numbers on the back of your card.<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 自主自定义元素的构造函数必须扩展<a href=\"/zh-CN/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a>。</p>\n</div>"}},{"type":"prose","value":{"id":"自定义内置元素","title":"自定义内置元素","isH3":true,"content":"<p>以下代码取自我们的 <a href=\"https://github.com/mdn/web-components-examples/tree/master/word-count-web-component\" class=\"external\" rel=\" noopener\">word-count-web-component</a> 实例 (<a href=\"https://mdn.github.io/web-components-examples/word-count-web-component/\" class=\"external\" rel=\" noopener\">查看实例效果</a>).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Create a class for the element</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WordCount</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLParagraphElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Always call super first in constructor</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// count words in element's parent element</span>\n    <span class=\"token keyword\">var</span> wcParent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>textContent\n      <span class=\"token keyword\">return</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> <span class=\"token string\">'Words: '</span> <span class=\"token operator\">+</span> <span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span>wcParent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create a shadow root</span>\n    <span class=\"token keyword\">var</span> shadow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create text node and add word count to it</span>\n    <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    text<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Append it to the shadow root</span>\n    shadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\">// Update count when element content changes</span>\n    <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> <span class=\"token string\">'Words: '</span> <span class=\"token operator\">+</span> <span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span>wcParent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      text<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Define the new element</span>\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'word-count'</span><span class=\"token punctuation\">,</span> WordCount<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token string\">'p'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">is</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>word-count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/custom-elements.html#dom-customelementregistry-define-dev","title":"HTML Standard"}],"query":"api.CustomElementRegistry.define"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容","id":"浏览器兼容","isH3":false,"query":"api.CustomElementRegistry.define","dataURL":"/zh-CN/docs/Web/API/CustomElementRegistry/define/bcd.json"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容","id":"浏览器兼容"}],"summary":"CustomElementRegistry接口的 define() 方法定义了一个自定义元素。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"CustomElementRegistry.define()","locale":"en-US","native":"English (US)"},{"title":"CustomElementRegistry.define()","locale":"es","native":"Español"},{"title":"CustomElementRegistry.define()","locale":"ja","native":"日本語"},{"title":"CustomElementRegistry.define()","locale":"pt-BR","native":"Português (do Brasil)"}],"source":{"folder":"zh-cn/web/api/customelementregistry/define","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/customelementregistry/define/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/CustomElementRegistry","title":"CustomElementRegistry"},{"uri":"/zh-CN/docs/Web/API/CustomElementRegistry/define","title":"CustomElementRegistry.define()"}],"pageTitle":"CustomElementRegistry.define() - Web API 接口参考 | MDN","noIndexing":false}}