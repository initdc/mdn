{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Text.wholeText","mdn_url":"/zh-CN/docs/Web/API/Text/wholeText","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/Text\"><code>Text</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Text/Text\"><code>Text()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Text/assignedSlot\"><code>assignedSlot</code></a></li><li><em><code>wholeText</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Text/splitText\"><code>splitText()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>DOM 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Range\"><code>Range</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>该 <strong><code>Text.wholeText</code></strong> 只读属性返回<a href=\"/zh-CN/docs/Web/API/Text\"><code>Text</code></a>逻辑上相邻的节点的所有文本。文本按文档顺序连接。这允许指定任何文本节点并获取所有相邻文本作为单个字符串。</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">str = textnode.wholeText;\n</pre></div>"}},{"type":"prose","value":{"id":"notes_and_example","title":"Notes and example","isH3":false,"content":"<p>假设你的网页上有如下的简单文本(包括其中为了格式化代码而添加的一些空格), 其 DOM 节点 被储存在变量 <code>para</code> 中：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Thru-hiking is great!  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">&gt;</span></span>No insipid election coverage!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">&gt;</span></span>\n  However, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://en.wikipedia.org/wiki/Absentee_ballot<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>casting a\n  ballot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span> is tricky.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>你觉得你不喜欢中间的句子, 所以你移除了它:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>para<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>para<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>过了一会, 你又决定给“Thru-hiking is great, but casting a ballot is tricky.”这句换个说法， <em>同时保留超链接</em>。 所以你尝试以下代码:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>para<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> <span class=\"token string\">\"Thru-hiking is great, but \"</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>一切妥当, 是么? <em>不!</em> 这会使你移除 <code>strong</code> 元素, 而被删掉的句子分隔了两个文本节点. 一个是第一句, 一个是最后一个单词. 相反, 你现在获得如下效果:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Thru-hiking is great, but However, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n  <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://en.wikipedia.org/wiki/Absentee_ballot<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>casting a\n  ballot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span> is tricky.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>实际上，你更倾向于将这些相邻扽文本节点作为同一文本节点. 这就是 <code>wholeText</code> 的用武之地：如果你有许多相邻的文本节点, 你可以通过<code>wholeText</code>访问这些节点里的所有内容。让我们假设你从未犯过最后一个错误. 在这种情况下, 我们有:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>para<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">.</span>wholeText <span class=\"token operator\">==</span> <span class=\"token string\">\"Thru-hiking is great!    However, \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><code>wholeText</code> 只是文本节点的一个属性，特可以返回连接了所有相邻(i.e. 没有被其它元素边界分开) 文本节点数据的字符串 。</p>\n<p>现在让我们回到最初的问题. 我们想做的是用新的文本替代旧的文本. 这就是 <a href=\"/zh-CN/docs/Web/API/Text\" title=\"replaceWholeText()\"><code>replaceWholeText()</code></a> 用处所在:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>para<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">.</span><span class=\"token function\">replaceWholeText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thru-hiking is great, but \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>我们移除了所有的相邻文本节点 (所有构成 whole text 的文本节点) 除了调用<code>replaceWholeText()</code> 的，并且把剩余的文本改成了新文本. 我们现在所得到的是这样的：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Thru-hiking is great, but <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n  <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://en.wikipedia.org/wiki/Absentee_ballot<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>casting a\n  ballot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span> is tricky.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>有时候使用 whole-text 功能同时使用<code>Node.textContent</code> 或长期支持的 <a href=\"/zh-CN/docs/Web/API/Element/innerHTML\"><code>Element.innerHTML</code></a>; 可以得到更好的处理。如果你需要处理一个元素内的混合内容, 正如本文所介绍的, <code>wholeText</code> 和 <code>replaceWholeText()</code> 是有用的。</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#ref-for-dom-text-wholetext①","title":"DOM Standard"}],"query":"api.Text.wholeText"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Text.wholeText","dataURL":"/zh-CN/docs/Web/API/Text/wholeText/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The <a href=\"/zh-CN/docs/Web/API/Text\"><code>Text</code></a> interface it belongs to.</li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Notes and example","id":"notes_and_example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"该 Text.wholeText 只读属性返回Text逻辑上相邻的节点的所有文本。文本按文档顺序连接。这允许指定任何文本节点并获取所有相邻文本作为单个字符串。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Text.wholeText","locale":"en-US","native":"English (US)"},{"title":"Text.wholeText","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/text/wholetext","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/text/wholetext/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Text","title":"Text"},{"uri":"/zh-CN/docs/Web/API/Text/wholeText","title":"Text.wholeText"}],"pageTitle":"Text.wholeText - Web API 接口参考 | MDN","noIndexing":false}}