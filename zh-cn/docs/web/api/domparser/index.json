{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"DOMParser","mdn_url":"/zh-CN/docs/Web/API/DOMParser","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/DOMParser\"><code>DOMParser</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/DOMParser/DOMParser\"><code>DOMParser()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMParser/parseFromString\"><code>parseFromString()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>DOM 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Range\"><code>Range</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>DOMParser</code></strong> 可以将存储在字符串中的 <a href=\"/zh-CN/docs/Glossary/XML\">XML</a> 或 <a href=\"/zh-CN/docs/Glossary/HTML\">HTML</a> 源代码解析为一个 DOM <a href=\"/zh-CN/docs/Web/API/Document\"><code>Document</code></a>。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> <a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> 支持从 URL 可寻址资源解析 XML 和 HTML，在其<a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/response\" title=\"response\"><code>response</code></a> 属性中返回<code>Document</code>。</p>\n</div>\n<p>你可以使用<a href=\"/zh-CN/docs/Web/API/XMLSerializer\"><code>XMLSerializer</code></a> 接口执行相反的操作 - 将 DOM 树转换为 XML 或 HTML 源。</p>\n<p>对于 HTML 文档，您还可以通过设置 <a href=\"/zh-CN/docs/Web/API/Element/innerHTML\"><code>Element.innerHTML</code></a> 和<a href=\"/zh-CN/docs/Web/API/Element/outerHTML\" title=\"outerHTML\"><code>outerHTML</code></a> 属性的值，将部分 DOM 替换为从 HTML 构建的新 DOM 树。还可以读取这些属性以获取对应于相应 DOM 子树的 HTML 片段。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> domparser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>​​<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMParser/parseFromString\"><code>DOMParser.parseFromString()</code> <small>(en-US)</small></a>"}},{"type":"prose","value":{"id":"语法_2","title":"语法","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> doc <span class=\"token operator\">=</span> domparser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">,</span> mimeType<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>基于 <strong><a href=\"#argument02\"><code>mimeType</code></a></strong> 参数，返回 <a href=\"/zh-CN/docs/Web/API/Document\"><code>Document</code></a> 或 <a href=\"/zh-CN/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a> 或其他文档类型。</p>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<p>该方法接收 2 个必要参数：</p>\n<dl>\n  <dt id=\"string\"><code>string</code></dt>\n  <dd>\n    <p>要解析的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>。它必须包含 <a href=\"/zh-CN/docs/Glossary/HTML\">HTML</a>、<a href=\"/zh-CN/docs/Glossary/XML\">xml</a>、<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\">xhtml+xml</a> 或 <a href=\"/zh-CN/docs/Glossary/SVG\">svg</a> 文档。</p>\n  </dd>\n  <dt id=\"mimetype\"><code>mimeType</code></dt>\n  <dd>\n    <p>一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>。This string determines a class of the the method's return value. The possible values are the following:</p>\n  </dd>\n</dl>\n<table>\n  <thead>\n    <tr>\n      <th><code>mimeType</code></th>\n      <th>doc.constructor</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>text/html</code></td>\n      <td><code><a href=\"/zh-CN/docs/Web/API/Document\"><code>Document</code></a></code></td>\n    </tr>\n    <tr>\n      <td><code>text/xml</code></td>\n      <td><code><a href=\"/zh-CN/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></code></td>\n    </tr>\n    <tr>\n      <td><code>application/xml</code></td>\n      <td><code><a href=\"/zh-CN/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></code></td>\n    </tr>\n    <tr>\n      <td><code>application/xhtml+xml</code></td>\n      <td><code><a href=\"/zh-CN/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></code></td>\n    </tr>\n    <tr>\n      <td><code>image/svg+xml</code></td>\n      <td><code><a href=\"/zh-CN/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"解析_xml","title":"解析 XML","isH3":false,"content":"<p>一旦建立了一个解析对象以后，你就可以使用它的 <code>parseFromString</code> 方法来解析一个 XML 字符串：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> parser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    doc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>stringContainingXMLSource<span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"错误处理\">错误处理</h4>\n<p>如果解析失败，<code>DOMParser</code> 不会抛出任何异常，而是会返回一个给定的错误文档：</p>\n<div class=\"code-example\"><pre class=\"brush: xml notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>parsererror</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.mozilla.org/newlayout/xml/parsererror.xml<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n(error description)\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sourcetext</span><span class=\"token punctuation\">&gt;</span></span>(a snippet of the source XML)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sourcetext</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>parsererror</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>解析错误会显示在<a href=\"../../../zh-cn/Error_Console\">错误控制台</a>，包括文档的地址和错误的源代码。</p>"}},{"type":"prose","value":{"id":"解析_svg_或者_html_文档","title":"解析 SVG 或者 HTML 文档","isH3":false,"content":"<p><code>DOMParser</code> 也可以用来解析 SVG 文档 (Firefox 10.0 / Thunderbird 10.0 / SeaMonkey 2.7) 或者 HTML 文档 (Firefox 12.0 / Thunderbird 12.0 / SeaMonkey 2.9)。根据给定的 MIME 类型不同，<code>parseFromString</code> 方法可能返回三种不同类型的文档。如果 MIME 类型是 <code>text/xml</code>，则返回一个 <code>XMLDocument</code>，如果 MIME 类型是 <code>text/svg+xml</code>，则返回一个 <code>SVGDocument</code>，如果 MIME 类型是 <code>text/html</code>，则返回一个 <code>HTMLDocument</code>。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> parser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> doc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>stringContainingXMLSource<span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 返回一个 Document 对象，但不是 SVGDocument，也不是 HTMLDocument</span>\n\nparser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndoc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>stringContainingXMLSource<span class=\"token punctuation\">,</span> <span class=\"token string\">\"image/svg+xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 返回一个 SVGDocument 对象，同时也是一个 Document 对象。</span>\n\nparser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndoc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>stringContainingHTMLSource<span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 返回一个 HTMLDocument 对象，同时也是一个 Document 对象。</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"domparser_html_扩展","title":"DOMParser HTML 扩展","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/*\n * DOMParser HTML extension\n * 2012-09-04\n *\n * By Eli Grey, http://eligrey.com\n * Public domain.\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n */</span>\n\n<span class=\"token comment\">/*! @source https://gist.github.com/1129031 */</span>\n<span class=\"token comment\">/*global document, DOMParser*/</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">DOMParser</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> proto <span class=\"token operator\">=</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span>\n        nativeParse <span class=\"token operator\">=</span> proto<span class=\"token punctuation\">.</span>parseFromString<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Firefox/Opera/IE throw errors on unsupported types</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// WebKit returns null on unsupported types</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// text/html parsing is natively supported</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n    proto<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">parseFromString</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">markup<span class=\"token punctuation\">,</span> type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\s*text\\/html\\s*(?:;|$)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span>\n              doc <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>implementation<span class=\"token punctuation\">.</span><span class=\"token function\">createHTMLDocument</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">;</span>\n                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>markup<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;!doctype'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    doc<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> markup<span class=\"token punctuation\">;</span>\n                  <span class=\"token punctuation\">}</span>\n                  <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    doc<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> markup<span class=\"token punctuation\">;</span>\n                  <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> doc<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">nativeParse</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>DOMParser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization","title":"HTML Standard"}],"query":"api.DOMParser"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.DOMParser","dataURL":"/zh-CN/docs/Web/API/DOMParser/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/Guide/Parsing_and_serializing_XML\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Parsing and serializing XML (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/XMLSerializer\"><code>XMLSerializer</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a> - counterpart for <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON\"><code>JSON</code></a> documents.</li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"方法","id":"方法"},{"text":"解析 XML","id":"解析_xml"},{"text":"解析 SVG 或者 HTML 文档","id":"解析_svg_或者_html_文档"},{"text":"DOMParser HTML 扩展","id":"domparser_html_扩展"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"DOMParser 可以将存储在字符串中的 XML 或 HTML 源代码解析为一个 DOM Document。","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"DOMParser","locale":"en-US","native":"English (US)"},{"title":"DOMParser","locale":"es","native":"Español"},{"title":"DOMParser","locale":"fr","native":"Français"},{"title":"DOMParser","locale":"ja","native":"日本語"},{"title":"DOMParser","locale":"ko","native":"한국어"},{"title":"DOMParser","locale":"ru","native":"Русский"},{"title":"DOMParser","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/domparser","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/domparser/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/DOMParser","title":"DOMParser"}],"pageTitle":"DOMParser - Web API 接口参考 | MDN","noIndexing":false}}