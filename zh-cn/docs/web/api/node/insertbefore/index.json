{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Node.insertBefore()","mdn_url":"/zh-CN/docs/Web/API/Node/insertBefore","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/Node\"><code>Node</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Node/baseURI\"><code>baseURI</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/childNodes\"><code>childNodes</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/firstChild\"><code>firstChild</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/isConnected\"><code>isConnected</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/lastChild\"><code>lastChild</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/nextSibling\"><code>nextSibling</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/nodeName\"><code>nodeName</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/nodeType\"><code>nodeType</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/nodeValue\"><code>nodeValue</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/ownerDocument\"><code>ownerDocument</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/parentElement\"><code>parentElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/parentNode\"><code>parentNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/previousSibling\"><code>previousSibling</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/textContent\"><code>textContent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Node/appendChild\"><code>appendChild()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/cloneNode\"><code>cloneNode()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/compareDocumentPosition\"><code>compareDocumentPosition()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/contains\"><code>contains()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/getRootNode\"><code>getRootNode()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/hasChildNodes\"><code>hasChildNodes()</code></a></li><li><em><code>insertBefore()</code></em></li><li><a href=\"/zh-CN/docs/Web/API/Node/isDefaultNamespace\"><code>isDefaultNamespace()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/isEqualNode\"><code>isEqualNode()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/isSameNode\"><code>isSameNode()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Node/isSupported\"><code>isSupported()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/lookupNamespaceURI\"><code>lookupNamespaceURI()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/lookupPrefix\"><code>lookupPrefix()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/normalize\"><code>normalize()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/removeChild\"><code>removeChild()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node/replaceChild\"><code>replaceChild()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Node/selectstart_event\"><code>selectstart</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>DOM 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Range\"><code>Range</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Node.insertBefore()</code></strong> 方法在参考节点之前插入一个拥有指定父节点的子节点。如果给定的子节点是对文档中现有节点的引用，<code>insertBefore()</code> 会将其从当前位置移动到新位置（在将节点附加到其他节点之前，不需要从其父节点删除该节点）。</p>\n<p>这意味着一个节点不能同时位于文档的两个点中。因此，如果被插入节点已经有父节点，则首先删除该节点，然后将其插入到新位置。若要保留已在文档中的被插入节点，在将该节点追加到新父节点之前，可以使用 <a href=\"/zh-CN/docs/Web/API/Node/cloneNode\"><code>Node.cloneNode()</code></a> 复制节点。注意，使用 <code>cloneNode()</code> 创建的节点副本不会自动与原始节点保持同步。</p>\n<p>如果引用节点为 <code>null</code>，则将指定的节点添加到指定父节点的子节点列表的末尾。</p>\n<p>如果给定的子节点是 <a href=\"/zh-CN/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a>，那么 <code>DocumentFragment</code> 的全部内容将被移动到指定父节点的子节点列表中。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> insertedNode <span class=\"token operator\">=</span> parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newNode<span class=\"token punctuation\">,</span> referenceNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<ul>\n  <li><code>insertedNode</code> 被插入节点 (newNode)</li>\n  <li><code>parentNode</code> 新插入节点的父节点</li>\n  <li><code>newNode</code> 用于插入的节点</li>\n  <li><code>referenceNode</code> <code>newNode</code> 将要插在这个节点之前</li>\n</ul>\n<p>如果 <code>referenceNode</code> 为 <code>null</code> 则 <code>newNode</code> 将被插入到子节点的末尾*。*</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> <code>referenceNode</code> 引用节点<strong>不是</strong>可选参数——你必须显式传入一个 <code>Node</code> 或者 <code>null</code>。如果不提供节点或者传入无效值，在不同的浏览器中会有<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=119489\" class=\"external\" rel=\" noopener\">不同</a>的<a href=\"https://code.google.com/p/chromium/issues/detail?id=419780\" class=\"external\" rel=\" noopener\">表现</a>。</p>\n</div>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":false,"content":"<p>函数返回被插入过的子节点；当 <code>newNode</code> 是 <a href=\"/zh-CN/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a> 时，返回空 <a href=\"/zh-CN/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a>。</p>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":""}},{"type":"prose","value":{"id":"示例_1","title":"示例 1","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"parentElement\"</span><span class=\"token operator\">&gt;</span>\n   <span class=\"token operator\">&lt;</span>span id<span class=\"token operator\">=</span><span class=\"token string\">\"childElement\"</span><span class=\"token operator\">&gt;</span>foo bar<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token comment\">// 创建要插入的节点</span>\n<span class=\"token keyword\">var</span> newNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 获得父节点的引用</span>\n<span class=\"token keyword\">var</span> parentDiv <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"childElement\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//实验一：referenceNode 存在 --&gt; 正确返回</span>\n<span class=\"token keyword\">var</span> sp2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"childElement\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nparentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newNode<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//实验一结束</span>\n\n<span class=\"token comment\">//实验二：referenceNode 为 undefined</span>\n<span class=\"token keyword\">var</span> sp2 <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Not exist a node of id \"childElement\"</span>\nparentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newNode<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//隐式转换到节点类型</span>\n<span class=\"token comment\">//实验二结束</span>\n\n<span class=\"token comment\">//实验三：referenceNode 为字符类型的 \"undefined\"</span>\n<span class=\"token keyword\">var</span> sp2 <span class=\"token operator\">=</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//不存在 id 为\"childElement\"的 referenceNode</span>\nparentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newNode<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Generate \"Type Error: Invalid Argument\"</span>\n<span class=\"token comment\">//实验三结束</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"示例_2","title":"示例 2","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parentElement<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>childElement<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>foo bar<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token comment\">//创建一个新的、普通的&lt;span&gt;元素</span>\n<span class=\"token keyword\">var</span> sp1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//插入节点之前，要获得节点的引用</span>\n<span class=\"token keyword\">var</span> sp2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"childElement\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//获得父节点的引用</span>\n<span class=\"token keyword\">var</span> parentDiv <span class=\"token operator\">=</span> sp2<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//在 DOM 中在 sp2 之前插入一个新元素</span>\nparentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>sp1<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>没有 <code>insertAfter()</code>。不过，可以使用 <code>insertBefore</code> 和 <a href=\"/zh-CN/docs/Web/API/Node/nextSibling\"><code>Node.nextSibling</code></a> 来模拟它。</p>\n<p>在前一个例子中，可使用下面代码将 <code>sp1</code> 插入到 <code>sp2</code> 之后：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>parentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>sp1<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">.</span>nextSibling<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>如果 <code>sp2</code> 没有下一个节点，则它肯定是最后一个节点，则 <code>sp2.nextSibling</code> 返回 <code>null</code>，且 <code>sp1</code> 被插入到子节点列表的最后面（即 <code>sp2</code> 后面）。</p>"}},{"type":"prose","value":{"id":"示例_3","title":"示例 3","isH3":true,"content":"<p>在第一个子元素的前面插入一个元素，可使用 <a href=\"/zh-CN/docs/Web/API/Node/firstChild\">firstChild</a> 属性。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">//插入节点之前，要获得节点的引用</span>\n<span class=\"token keyword\">var</span> parentElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'parentElement'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//获得第一个子节点的引用</span>\n<span class=\"token keyword\">var</span> theFirstChild <span class=\"token operator\">=</span> parentElement<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//创建新元素</span>\n<span class=\"token keyword\">var</span> newElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//在第一个子节点之前插入新元素</span>\nparentElement<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newElement<span class=\"token punctuation\">,</span> theFirstChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>当元素没有首节点时，<code>firstChild</code> 返回 <code>null</code>。该元素仍然会被插入到父元素中，位于最后一个节点后面。又由于父元素没有第一个子节点，也没有最后一个子节点。最终，新元素成为唯一的子元素。</p>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#dom-node-insertbefore","title":"DOM Standard"}],"query":"api.Node.insertBefore"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Node.insertBefore","dataURL":"/zh-CN/docs/Web/API/Node/insertBefore/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Node/removeChild\"><code>Node.removeChild()</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Node/replaceChild\"><code>Node.replaceChild()</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Node/appendChild\"><code>Node.appendChild()</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Node/hasChildNodes\"><code>Node.hasChildNodes()</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Element/insertAdjacentElement\"><code>Element.insertAdjacentElement()</code></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Element/prepend\"><code>ParentNode.prepend()</code> <small>(en-US)</small></a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"返回值","id":"返回值"},{"text":"例子","id":"例子"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"Node.insertBefore() 方法在参考节点之前插入一个拥有指定父节点的子节点。如果给定的子节点是对文档中现有节点的引用，insertBefore() 会将其从当前位置移动到新位置（在将节点附加到其他节点之前，不需要从其父节点删除该节点）。","popularity":0.0014,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Node.insertBefore()","locale":"en-US","native":"English (US)"},{"title":"Node.insertBefore()","locale":"es","native":"Español"},{"title":"element.insertBefore","locale":"fr","native":"Français"},{"title":"Node.insertBefore()","locale":"ja","native":"日本語"},{"title":"Node.insertBefore()","locale":"ko","native":"한국어"},{"title":"Node.insertBefore","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Node.insertBefore()","locale":"ru","native":"Русский"},{"title":"Node.insertBefore()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/node/insertbefore","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/node/insertbefore/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Node","title":"Node"},{"uri":"/zh-CN/docs/Web/API/Node/insertBefore","title":"Node.insertBefore()"}],"pageTitle":"Node.insertBefore() - Web API 接口参考 | MDN","noIndexing":false}}