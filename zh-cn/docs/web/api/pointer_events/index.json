{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Pointer events 指针事件","mdn_url":"/zh-CN/docs/Web/API/Pointer_events","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Pointer_events\">Pointer events</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>指南</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Pointer_events/Using_Pointer_Events\">Using Pointer Events</a></li><li><a href=\"/zh-CN/docs/Web/API/Pointer_events/Multi-touch_interaction\">Multi-touch interaction</a></li><li><a href=\"/zh-CN/docs/Web/API/Pointer_events/Pinch_zoom_gestures\">Pinch zoom gestures</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>接口</summary><ol><li><a href=\"/zh-CN/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Navigator/maxTouchPoints\"><code>Navigator.maxTouchPoints</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Element/setPointerCapture\"><code>Element.setPointerCapture()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element/releasePointerCapture\"><code>Element.releasePointerCapture()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a href=\"/zh-CN/docs/Web/API/HTMLElement/gotpointercapture_event\"><code>HTMLElement</code>: <code>gotpointercapture</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLElement/lostpointercapture_event\"><code>HTMLElement</code>: <code>lostpointercapture</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLElement/pointercancel_event\"><code>HTMLElement</code>: <code>pointercancel</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLElement/pointerdown_event\"><code>HTMLElement</code>: <code>pointerdown</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLElement/pointerenter_event\"><code>HTMLElement</code>: <code>pointerenter</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLElement/pointerleave_event\"><code>HTMLElement</code>: <code>pointerleave</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLElement/pointermove_event\"><code>HTMLElement</code>: <code>pointermove</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLElement/pointerout_event\"><code>HTMLElement</code>: <code>pointerout</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLElement/pointerover_event\"><code>HTMLElement</code>: <code>pointerover</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLElement/pointerup_event\"><code>HTMLElement</code>: <code>pointerup</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>目前绝大多数的 Web 内容都假设用户的指针定点设备为鼠标。然而，近年来的新兴设备支持更多不同方式的指针定点输入，如各类触控笔和触摸屏幕等。这就有必要扩展现存的定点设备事件模型，以有效追踪各类*<a href=\"#term_pointer_event\">指针事件</a>*。</p>\n<p>指针事件 - Pointer events 是一类可以为定点设备所触发的 DOM 事件。它们被用来创建一个可以有效掌握各类输入设备（鼠标、触控笔和单点或多点的手指触摸）的统一的 DOM 事件模型。所谓 <em><a href=\"#term_pointer\">指针</a></em> 是指一个可以明确指向屏幕上某一组坐标的硬件设备。建立这样一个单独的事件模型可以有效的简化 Web 站点与应用所需的工作，同时也便于提供更加一致与良好的用户体验，无需关心不同用户和场景在输入硬件上的差异。另外，对于某些需要处理特定设备的场景，指针事件也定义了一个 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PointerEvent/pointerType\"><code>pointerType</code> <small>(en-US)</small></a> 属性用以查看触发事件的设备类型。</p>\n<p>这些事件需要能够处理 <a href=\"/zh-CN/docs/Web/API/MouseEvent\" title=\"mouse events\"><code>mouse events</code></a> 之类较为通用的指针输入（<code>mousedown/pointerdown</code>, <code>mousemove/pointermove</code>, 等）。 因此，指针事件的类型，很大程度上类似于当前的鼠标事件类型。</p>\n<p>此外，一个指针事件，也同时包含了鼠标事件中所常见的属性（client coordinates, target element, button states，等）以及适用于其他输入设备的新属性：pressure, contact geometry, tilt，等等。实际上，<a href=\"/zh-CN/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a> 接口继承了所有 <a href=\"/zh-CN/docs/Web/API/MouseEvent\" title=\"MouseEvent\"><code>MouseEvent</code></a> 中的属性，以保障原有为鼠标事件所开发的内容能更加有效的迁移到指针事件。</p>"}},{"type":"prose","value":{"id":"相关名词","title":"相关名词","isH3":false,"content":"<dl>\n  <dt id=\"active_buttons_state\">active buttons state</dt>\n  <dd>\n    <p>The condition when a <em><a href=\"/zh-CN/docs/Web/API/Pointer_events#term_pointer\" aria-current=\"page\">pointer</a></em> has a non-zero value for the <code>buttons</code> property. For example, in the case of a pen, when the pen has physical contact with the digitizer, or at least one button is depressed while hovering.</p>\n  </dd>\n  <dt id=\"活跃指针_-_active_pointer\">活跃指针 - active pointer</dt>\n  <dd>\n    <p>任意*<a href=\"#term_pointer\">指针</a>输入设备都可以产生事件。一个可以产生后继事件的指针可以被认为是一个活跃指针。例如，一个触摸笔处于压下状态时可以认为是活跃的，因为它接下来的抬起或移动都会产生额外的后继事件。*</p>\n  </dd>\n  <dt id=\"数位设备_-_digitizer\">数位设备 - digitizer</dt>\n  <dd>\n    <p>一个可以检测其表面接触行为的传感设备。通常来说，其所用的传感设备是一个可以感知由某些输入设备（如触控笔、压感笔、手指等）所提供的输入信息的可触摸屏幕。</p>\n  </dd>\n  <dt id=\"命中检测_-_hit_test\">命中检测 - hit test</dt>\n  <dd>\n    <p>浏览器用以检测某一指针事件的目标元素的过程。通常来说，这一过程是通过比照出现在文档或屏幕媒介上的指针位置与视觉布局来实现的。</p>\n  </dd>\n  <dt id=\"指针_-_pointer\">指针 - pointer</dt>\n  <dd>\n    <p>某个呈现形式并不确定的硬件，该硬件可以指向一个（或一组）屏幕上特定坐标。典型的指针输入设备有鼠标、触控笔、手指触控点等。</p>\n  </dd>\n  <dt id=\"指针捕捉_-_pointer_capture\">指针捕捉 - pointer capture</dt>\n  <dd>\n    <p>指针捕捉能够允许某些事件的产生。这些事件在指针将要重新指向一些并非通过命中检测而给定元素时触发。</p>\n  </dd>\n  <dt id=\"指针事件_-_pointer_event\">指针事件 - pointer event</dt>\n  <dd>\n    <p>一个被*<a href=\"#term_pointer\">指针</a>所*触发 DOM 事件。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"相关接口","title":"相关接口","isH3":false,"content":"<p>首要的接口为 <a href=\"/zh-CN/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a> 接口，该接口由一个构造函数<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PointerEvent/PointerEvent\"><code>constructor</code> <small>(en-US)</small></a> 加上一些事件类型以及相应全局事件的处理方法构成。</p>\n<p>标准中还包括一些对于 <a href=\"/zh-CN/docs/Web/API/Element\"><code>Element</code></a> 及 <a href=\"/zh-CN/docs/Web/API/Navigator\"><code>Navigator</code></a> 接口的扩展。接下来的每个部分包含了对于各个接口与属性的简单说明。</p>"}},{"type":"prose","value":{"id":"pointerevent_接口","title":"PointerEvent 接口","isH3":true,"content":"<p><a href=\"/zh-CN/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a> 接口扩展了 <a href=\"/zh-CN/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a> 接口，并含有以下属性（这些属性的可写属性全部为<span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span>）。</p>\n<ul>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PointerEvent/pointerId\"><code>pointerId</code> <small>(en-US)</small></a> - 对于某个由指针引起的事件的唯一标识。</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PointerEvent/width\"><code>width</code> <small>(en-US)</small></a> - 以 CSS 像素计数的宽度属性，取决于指针的接触面的几何构成。</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PointerEvent/height\"><code>height</code> <small>(en-US)</small></a> - 以 CSS 像素计数的高度属性，取决于指针的接触面的几何构成。</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PointerEvent/pressure\"><code>pressure</code> <small>(en-US)</small></a> - 规范化后的指针输入的压力值，取值范围为 0 到 1，0 代表硬件可检测到的压力最小值，1 代表最大值。</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PointerEvent/tangentialPressure\"><code>tangentialPressure</code> <small>(en-US)</small></a> The normalized tangential pressure of the pointer input (also known as barrel pressure or cylinder stress) in the range <code>-1</code> to <code>1</code>, where <code>0</code> is the neutral position of the control.</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PointerEvent/tiltX\"><code>tiltX</code> <small>(en-US)</small></a> - the plane angle (in degrees, in the range of -90 to 90) between the Y-Z plane and the plane containing both the transducer (e.g. pen stylus) axis and the Y axis.</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PointerEvent/tiltY\"><code>tiltY</code> <small>(en-US)</small></a> - the plane angle (in degrees, in the range of -90 to 90) between the X-Z plane and the plane containing both the transducer (e.g. pen stylus) axis and the X axis.</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PointerEvent/twist\"><code>twist</code> <small>(en-US)</small></a> The clockwise rotation of the pointer (e.g. pen stylus) around its major axis in degrees, with a value in the range <code>0</code> to <code>359</code>.</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PointerEvent/pointerType\"><code>pointerType</code> <small>(en-US)</small></a> - 表明引发该事件的设备类型（鼠标/笔/触摸等）。</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PointerEvent/isPrimary\"><code>isPrimary</code> <small>(en-US)</small></a> - 表示该指针是否为该类型指针中的首选指针。</li>\n</ul>"}},{"type":"prose","value":{"id":"事件类型与全局事件处理","title":"事件类型与全局事件处理","isH3":true,"content":"<p>指针事件有始终不同的事件类型，其中其中在鼠标事件中有相对应的语义话表示 (<code>down, up, move, over, out, enter, leave</code>)。以下是每个事件类型及所对应的<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Global Event Handler</code></a>的基本介绍。</p>\n<table>\n  <thead>\n    <tr>\n      <th>Event</th>\n      <th>On Event Handler</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code><a href=\"/zh-CN/docs/Web/Reference/Events/pointerover\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">pointerover</a></code></td>\n      <td><a href=\"/zh-CN/docs/Web/API/Element/pointerover_event\" title=\"onpointerover\"><code>onpointerover</code></a></td>\n      <td>当定点设备进入某个元素的<a href=\"#term_hit_test\">命中检测</a> 范围时触发。</td>\n    </tr>\n    <tr>\n      <td><code><a href=\"/zh-CN/docs/Web/Reference/Events/pointerenter\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">pointerenter</a></code></td>\n      <td><a href=\"/zh-CN/docs/Web/API/Element/pointerenter_event\" title=\"onpointerenter\"><code>onpointerenter</code></a></td>\n      <td>当定点设备进入某个元素或其子元素的<a href=\"#term_hit_test\">命中检测</a>范围时，或做为某一类不支悬停（hover）状态的设备所触发的 poinerdown 事件的后续事件时所触发。(详情可见 pointerdown 事件类型).</td>\n    </tr>\n    <tr>\n      <td><code><a href=\"/zh-CN/docs/Web/Reference/Events/pointerdown\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">pointerdown</a></code></td>\n      <td><a href=\"/zh-CN/docs/Web/API/Element/pointerdown_event\" title=\"onpointerdown\"><code>onpointerdown</code></a></td>\n      <td>当某指针得以激活时触发。</td>\n    </tr>\n    <tr>\n      <td><code><a href=\"/zh-CN/docs/Web/Reference/Events/pointermove\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">pointermove</a></code></td>\n      <td><a href=\"/zh-CN/docs/Web/API/Element/pointermove_event\" title=\"onpointermove\"><code>onpointermove</code></a></td>\n      <td>当某指针改变其坐标时触发。</td>\n    </tr>\n    <tr>\n      <td><code><a href=\"/zh-CN/docs/Web/Reference/Events/pointerup\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">pointerup</a></code></td>\n      <td><a href=\"/zh-CN/docs/Web/API/Element/pointerup_event\" title=\"onpointerup\"><code>onpointerup</code></a></td>\n      <td>当某指针不再活跃时触发。</td>\n    </tr>\n    <tr>\n      <td><code><a href=\"/zh-CN/docs/Web/Reference/Events/pointercancel\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">pointercancel</a></code></td>\n      <td><a href=\"/zh-CN/docs/Web/API/Element/pointercancel_event\" title=\"onpointercancel\"><code>onpointercancel</code></a></td>\n      <td>当浏览器认为某指针不会再生成新的后续事件时触发（例如某设备不再活跃）</td>\n    </tr>\n    <tr>\n      <td><code><a href=\"/zh-CN/docs/Web/Reference/Events/pointerout\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">pointerout</a></code></td>\n      <td><a href=\"/zh-CN/docs/Web/API/Element/pointerout_event\" title=\"onpointerout\"><code>onpointerout</code></a></td>\n      <td>可能由若干原因触发该事件，包括：定位设备移出了某<a href=\"term_hit_test\">命中检测</a>的边界；不支持悬浮状态的设备发生 pointerup 事件（见 pointerup 事件）； 作为 pointercancel event 事件的后续事件（见 pointercancel 事件）；当数位板检测到数位笔离开了悬浮区域时。</td>\n    </tr>\n    <tr>\n      <td><code><a href=\"/zh-CN/docs/Web/Reference/Events/pointerleave\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">pointerleave</a></code></td>\n      <td><a href=\"/zh-CN/docs/Web/API/Element/pointerleave_event\" title=\"onpointerleave\"><code>onpointerleave</code></a></td>\n      <td>当定点设备移出某元素的<a href=\"term_hit_test\">命中检测</a>边界时触发。对于笔形设备来说，当数位板检测到笔移出了悬浮范围时触发。</td>\n    </tr>\n    <tr>\n      <td><code><a href=\"/zh-CN/docs/Web/Reference/Events/gotpointercapture\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">gotpointercapture</a></code></td>\n      <td><a href=\"/zh-CN/docs/Web/API/Element/gotpointercapture_event\" title=\"ongotpointercapture\"><code>ongotpointercapture</code></a></td>\n      <td>当某元素接受到一个指针捕捉时触发。</td>\n    </tr>\n    <tr>\n      <td><code><a href=\"/zh-CN/docs/Web/Reference/Events/lostpointercapture\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">lostpointercapture</a></code></td>\n      <td><a href=\"/zh-CN/docs/Web/API/Element/lostpointercapture_event\" title=\"onlostpointercapture\"><code>onlostpointercapture</code></a></td>\n      <td>当针对某个指针的指针捕捉得到释放时触发。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"element_接口扩展","title":"Element 接口扩展","isH3":true,"content":"<p>对于<a href=\"/zh-CN/docs/Web/API/Element\"><code>Element</code></a>接口有以下一些扩展：</p>\n<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Element/setPointerCapture\" title=\"setPointerCapture()\"><code>setPointerCapture()</code></a> - 该方法将为进一步的指针事件设置一个特定的目标元素。</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Element/releasePointerCapture\"><code>releasePointerCapture()</code> <small>(en-US)</small></a> - 该方法将释放（并停止）之前对于某一特定的指针事件的指针捕捉。</li>\n</ul>"}},{"type":"prose","value":{"id":"navigator_对象扩展","title":"Navigator 对象扩展","isH3":true,"content":"<p>属性 <a href=\"/zh-CN/docs/Web/API/Navigator/maxTouchPoints\"><code>Navigator.maxTouchPoints</code></a> 被设计用来指明在同一时间点所支持的最大的触摸点数量。</p>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":"<p>该部分包含了一些指针事件接口的一些基本使用案例。</p>"}},{"type":"prose","value":{"id":"注册一个事件处理器","title":"注册一个事件处理器","isH3":true,"content":"<p>该例子为一个特定元素的每一个事件类型注册了相应的处理器。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">function</span> <span class=\"token function\">over_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">enter_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">down_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">move_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">up_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">cancel_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">out_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">leave_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">gotcapture_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">lostcapture_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> el<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Register pointer event handlers</span>\n      el<span class=\"token punctuation\">.</span>onpointerover <span class=\"token operator\">=</span> over_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointerenter <span class=\"token operator\">=</span> enter_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointerdown <span class=\"token operator\">=</span> down_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointermove <span class=\"token operator\">=</span> move_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointerup <span class=\"token operator\">=</span> up_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointercancel <span class=\"token operator\">=</span> cancel_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointerout <span class=\"token operator\">=</span> out_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointerleave <span class=\"token operator\">=</span> leave_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>gotpointercapture <span class=\"token operator\">=</span> gotcapture_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>lostpointercapture <span class=\"token operator\">=</span> lostcapture_handler<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> Touch me ... <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"事件属性","title":"事件属性","isH3":true,"content":"<p>这一例子展示了如何访问一个触摸事件的所有事件属性。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_id</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Process this event based on the event's identifier</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_mouse</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Process the mouse pointer event</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_pen</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Process the pen pointer event</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_touch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Process the touch pointer event</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_tilt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tiltX<span class=\"token punctuation\">,</span> tiltY</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Tilt data handler</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_pressure</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pressure</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Pressure handler</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_non_primary</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Pressure handler</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">down_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Calculate the touch point's contact area</span>\n      <span class=\"token keyword\">var</span> area <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> ev<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Compare cached id with this event's id and process accordingly</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> ev<span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">)</span> <span class=\"token function\">process_id</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Call the appropriate pointer type handler</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>pointerType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"mouse\"</span><span class=\"token operator\">:</span>\n          <span class=\"token function\">process_mouse</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"pen\"</span><span class=\"token operator\">:</span>\n          <span class=\"token function\">process_pen</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"touch\"</span><span class=\"token operator\">:</span>\n          <span class=\"token function\">process_touch</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerType \"</span> <span class=\"token operator\">+</span> ev<span class=\"token punctuation\">.</span>pointerType <span class=\"token operator\">+</span> <span class=\"token string\">\" is Not suported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// Call the tilt handler</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>tiltX <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> ev<span class=\"token punctuation\">.</span>tiltY <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">process_tilt</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>tiltX<span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">.</span>tiltY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Call the pressure handler</span>\n      <span class=\"token function\">process_pressure</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>pressure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// If this event is not primary, call the non primary handler</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ev<span class=\"token punctuation\">.</span>isPrimary<span class=\"token punctuation\">)</span> <span class=\"token function\">process_non_primary</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> el<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Register pointerdown handler</span>\n      el<span class=\"token punctuation\">.</span>onpointerdown <span class=\"token operator\">=</span> down_handler<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> Touch me ... <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"确定首选指针","title":"确定首选指针","isH3":false,"content":"<p>在很多场景中，可能存在多个指针（比如某设备同时拥有触摸屏和鼠标）或者一个指针设备支持多个接触点（例如支持多点触控的触摸屏）。应用开发时，可以使用<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PointerEvent/isPrimary\"><code>isPrimary</code> <small>(en-US)</small></a>属性来识别每类指针的一组指针输入中的主要指针。如果应用仅希望对首选指针提供支持，则可以忽略其他的指针事件。</p>\n<p>对于鼠标来说，只有一个指针输入，所以这一输入将一直是首选指针。对于触摸输入来说，当用户在触摸屏幕，且没有其他活跃指针时，会被认做首选指针。对于压感笔输入来说，当用户的笔触开始接触屏幕或平面，且当时没有其他的活跃笔触在接触屏幕时，该输入将被认作首选指针。</p>"}},{"type":"prose","value":{"id":"确定按钮状态","title":"确定按钮状态","isH3":false,"content":"<p>对于某些指针设备来说，比如鼠标或者压感笔，设备上可能有一个或多个按钮可以同时或依次序按动。比如在某个按钮释放后立刻按下其他按钮。为了确定这些按钮的按压状态，指针事件使用<a href=\"/zh-CN/docs/Web/API/MouseEvent/button\" title=\"button\"><code>button</code></a>与 <a href=\"/zh-CN/docs/Web/API/MouseEvent/buttons\" title=\"buttons\"><code>buttons</code></a>等<a href=\"/zh-CN/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a>接口中的事件（<a href=\"/zh-CN/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a>继承于此）表明相应的状态。下表提供了各类设备的按钮状态与 button 和 buttons 属性的属性值对应关系。</p>\n<table>\n  <thead>\n    <tr>\n      <th>设备按钮状态</th>\n      <th>button</th>\n      <th>buttons</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>自上次事件后，按键、触摸或笔的接触状态没有改变</td>\n      <td>-1</td>\n      <td>—</td>\n    </tr>\n    <tr>\n      <td>鼠标移动且无按钮被按压</td>\n      <td>—</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <td>鼠标左键、触摸接触、压感笔接触（无额外按钮被按压）</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <td>鼠标中键</td>\n      <td>1</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <td>鼠标右键、压感笔笔杆按钮被按压</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <td>鼠标 X1（前进）</td>\n      <td>3</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <td>鼠标 X2（后退）</td>\n      <td>4</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <td>压感笔橡皮擦按钮被按压</td>\n      <td>5</td>\n      <td>32</td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> The <code>button</code> property indicates a change in the state of the button. However, as in the case of touch, when multiple events occur with one event, all of them have the same value.</p>\n</div>"}},{"type":"prose","value":{"id":"指针捕捉","title":"指针捕捉","isH3":false,"content":"<p>指针捕捉允许将某一指针事件，重新指向到一个特定元素，而非经由针对其位置进行<a href=\"#term_hit_test\">命中检测</a>所确定的目标元素。指针捕捉可以用来保证某一元素持续接收到指针事件，即使指针设备的接触点已经离开了元素本身（比如滚动时）。</p>\n<p>以下例子展示了向某一元素设置指针捕捉的过程：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">function</span> <span class=\"token function\">downHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> el<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//Element 'target' will receive/capture further events</span>\n    el<span class=\"token punctuation\">.</span><span class=\"token function\">setPointerCapture</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> el<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    el<span class=\"token punctuation\">.</span>onpointerdown <span class=\"token operator\">=</span> downHandler<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> Touch me ... <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>以下例子展示了当<code><a href=\"/zh-CN/docs/Web/Reference/Events/pointercancel\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">pointercancel</a></code> 事件发生时，一个指针捕捉被释放对的过程。该例子中，浏览器在<code><a href=\"/zh-CN/docs/Web/Reference/Events/pointerup\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">pointerup</a></code>或<code><a href=\"/zh-CN/docs/Web/Reference/Events/pointercancel\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">pointercancel</a></code>事件发生时，会自动执行这一释放。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">function</span> <span class=\"token function\">downHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> el<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Element \"target\" will receive/capture further events</span>\n      el<span class=\"token punctuation\">.</span><span class=\"token function\">setPointerCapture</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">cancelHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> el<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Release the pointer capture</span>\n      el<span class=\"token punctuation\">.</span><span class=\"token function\">releasePointerCapture</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> el<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Register pointerdown and pointercancel handlers</span>\n      el<span class=\"token punctuation\">.</span>onpointerdown <span class=\"token operator\">=</span> downHandler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointercancel <span class=\"token operator\">=</span> cancelHandler<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> Touch me ... <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"touch-action_css_属性","title":"touch-action CSS 属性","isH3":false,"content":"<p>CSS 属性<a href=\"/zh-CN/docs/Web/CSS/touch-action\"><code>touch-action</code></a>被用来指明浏览器是否应当对某一区域的触摸事件应用其默认行为（例如放大或旋转等）。这一属性可以被用在所有元素上，除了：不可替换的行内元素（inline elements）、表格行（table rows）、行组（row groups）、表格列（table columns）、列组（column groups）。</p>\n<p>属性值<code>auto</code>意味着浏览器可以自由应用其默认的触摸行为（对于特定区域），属性值<code>none</code>则会禁止某一区域的浏览器默认触摸行为。 属性值<code>pan-x</code>和<code>pan-y</code>表示由某区域开始的触摸操作仅分别产生水平的或垂直的滚动。属性值<code>manipulation</code>表示希望浏览器认为某元素上的触摸行为仅用于滚动或放大。</p>\n<p>在下面的示例中，浏览器对于<code>div</code>元素的默认触摸响应行为将被禁止。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">touch-action</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Can't touch this ... <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>在下面的示例中，某些<code>button</code>元素的默认触摸响应行为将被禁止。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">button#tiny</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">touch-action</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>在下面的示例中，当<code>target</code> 元素被触摸时，仅允许响应其在水平方向上的滚动。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">#target</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">touch-action</span><span class=\"token punctuation\">:</span> pan-x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"与鼠标事件的兼容性","title":"与鼠标事件的兼容性","isH3":false,"content":"<p>尽管指针事件接口允许应用程序去为各种指针输入设备创建更佳的用户体验，但事实上，目前的大多数 web 内容仍然是仅为支持鼠标输入而设计的。因此，即使一个浏览器支持了指针事件，它也仍然需要在这些仅支持鼠标设置网页在不做任何修改的情况下继续对其提供支持。理想情况下，通用的指针模型将使得应用不再需要专门为鼠标输入设计相应。然而，因为浏览器仍必须处理鼠标事件，所以可能仍留存一些需要加以处理的兼容性问题。这一部分包含了一些对于开发者可能有用的关于鼠标事件和指针事件的异同点。</p>\n<p>出于对基于鼠标的内容的兼容性考虑，浏览器会将通用的指针事件映射成相应的鼠标事件。 这一事件映射被乘坐兼容性鼠标事件。开发者可以通过取消 pointerdown 事件相应来阻止某一特定的兼容性鼠标事件的产生，但需要注意以下情况：</p>\n<ul>\n  <li>鼠标事件仅在指针失效（when the pointer is down）的情况下可以被阻止。</li>\n  <li>悬浮的指针（比如没有按键按下时的鼠标指针）的事件不能被阻止。</li>\n  <li>某些鼠标事件，如：mouseover，mouseout，mouseenter，和 mouseleave 等事件，永远不能够被阻止。</li>\n</ul>"}},{"type":"prose","value":{"id":"最佳实践","title":"最佳实践","isH3":false,"content":"<p>这里有一些在使用指针事件时候可以参考的最佳实践：</p>\n<ul>\n  <li>尽量减少在事件处理器中要必须完成的工作量。</li>\n  <li>为尽量精确的元素绑定相应的事件响应器（而不是在整个 document 节点或更高层的 dom 元素上）。</li>\n  <li>目标元素（节点）应该有足够的尺寸覆盖最大情况下的接触面（手指触摸的情况尤其典型）。如果目标区域过小，触摸将会引起临近元素的其他意料外的触摸事件。</li>\n</ul>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/pointerevents/#pointerevent-interface","title":"Pointer Events"}],"query":"api.PointerEvent"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.PointerEvent","dataURL":"/zh-CN/docs/Web/API/Pointer_events/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>在 <a href=\"https://w3c.github.io/pointerevents/\" class=\"external\" rel=\" noopener\">Pointer Events</a> 规范中，<a href=\"/zh-CN/docs/Web/CSS/touch-action\"><code>css touch-action</code></a> 定义了一些新的值，但目前支持这些新值的浏览器实现很有限。</p>"}},{"type":"prose","value":{"id":"演示和示例","title":"演示和示例","isH3":false,"content":"<ul>\n  <li><a href=\"http://patrickhlauke.github.io/touch/\" class=\"external\" rel=\" noopener\">Touch/pointer tests and demos (by Patrick H. Lauke)</a></li>\n</ul>"}},{"type":"prose","value":{"id":"社区资源","title":"社区资源","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/w3c/pointerevents\" class=\"external\" rel=\" noopener\">Pointer Events Working Group</a></li>\n  <li><a href=\"https://lists.w3.org/Archives/Public/public-pointer-events/\" class=\"external\" rel=\" noopener\">Mail list</a></li>\n  <li><a href=\"irc://irc.w3.org:6667/\">W3C #pointerevents IRC channel</a></li>\n</ul>"}},{"type":"prose","value":{"id":"相关主题与资源","title":"相关主题与资源","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.w3.org/TR/touch-events/\" class=\"external\" rel=\" noopener\">Touch Events Standard</a></li>\n</ul>"}}],"toc":[{"text":"相关名词","id":"相关名词"},{"text":"相关接口","id":"相关接口"},{"text":"例子","id":"例子"},{"text":"确定首选指针","id":"确定首选指针"},{"text":"确定按钮状态","id":"确定按钮状态"},{"text":"指针捕捉","id":"指针捕捉"},{"text":"touch-action CSS 属性","id":"touch-action_css_属性"},{"text":"与鼠标事件的兼容性","id":"与鼠标事件的兼容性"},{"text":"最佳实践","id":"最佳实践"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"演示和示例","id":"演示和示例"},{"text":"社区资源","id":"社区资源"},{"text":"相关主题与资源","id":"相关主题与资源"}],"summary":"目前绝大多数的 Web 内容都假设用户的指针定点设备为鼠标。然而，近年来的新兴设备支持更多不同方式的指针定点输入，如各类触控笔和触摸屏幕等。这就有必要扩展现存的定点设备事件模型，以有效追踪各类*指针事件*。","popularity":0.0007,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Pointer events","locale":"en-US","native":"English (US)"},{"title":"Événements de pointeur","locale":"fr","native":"Français"},{"title":"ポインターイベント","locale":"ja","native":"日本語"},{"title":"События указателя","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/pointer_events","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/pointer_events/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Pointer_events","title":"Pointer events 指针事件"}],"pageTitle":"Pointer events 指针事件 - Web API 接口参考 | MDN","noIndexing":false}}