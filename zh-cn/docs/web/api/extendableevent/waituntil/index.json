{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ExtendableEvent.waitUntil()","mdn_url":"/zh-CN/docs/Web/API/ExtendableEvent/waitUntil","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ExtendableEvent/ExtendableEvent\"><code>ExtendableEvent()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><em><code>waitUntil()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>ExtendableEvent.waitUntil()</code></strong> 方法告诉事件分发器该事件仍在进行。这个方法也可以用于检测进行的任务是否成功。在服务工作线程中，这个方法告诉浏览器事件一直进行，直至 promise 解决，浏览器不应该在事件中的异步操作完成之前终止服务工作线程。</p>\n<p>服务工作线程（<a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\">service workers</a>）中的 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/install_event\"><code>install</code> <small>(en-US)</small></a> 事件使用 <code>waitUntil()</code> 来将服务工作线程保持在 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorkerRegistration/installing\"><code>installing</code> <small>(en-US)</small></a> 阶段。如果传入 <code>waitUntil()</code> 的 promise 被拒绝，则将此次安装视为失败，丢弃这个服务工作线程。这主要用于确保在服务工作线程安装以前，所有依赖的核心缓存都已经成功载入。</p>\n<p>服务工作线程（<a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\">service workers</a>）中的 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/activate_event\"><code>activate</code> <small>(en-US)</small></a> 事件使用 <code>waitUntil()</code> 来延迟函数事件，如 <code>fetch</code> 和 <code>push</code>，直至传入 <code>waitUntil()</code> 的 promise 被解决。这让服务工作线程有时间更新数据库架构（database schema）和删除过时缓存（<a href=\"/zh-CN/docs/Web/API/Cache\" title=\"caches\"><code>caches</code></a>），让其他事件能在一个完成更新的状态下进行。</p>\n<p><code>waitUntil()</code> 方法最初必须在事件回调里调用，在此之后，方法可以被调用多次，直至所有传入的 promise 被解决。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 上述段落描述的行为已经在 Firefox 43 中被修复 (参见 <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1180274\" class=\"external\" rel=\" noopener\">bug&nbsp;1180274</a>.)</p>\n</div>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<pre class=\"notranslate\">extendableEvent.waitUntil(promise);\n</pre>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<p>一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>.</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>在服务工作线程的 <code>install</code> 事件中使用 <code>waitUntil()</code>。</p>\n<pre class=\"notranslate\">addEventListener('install', event =&gt; {\n  const preCache = async () =&gt; {\n    const cache = await caches.open('static-v1');\n    return cache.addAll([\n      '/',\n      '/about/',\n      '/static/styles.css'\n    ]);\n  };\n  event.waitUntil(preCache());\n});\n</pre>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#dom-extendableevent-waituntil","title":"Service Workers 1"}],"query":"api.ExtendableEvent.waitUntil"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.ExtendableEvent.waitUntil","dataURL":"/zh-CN/docs/Web/API/ExtendableEvent/waitUntil/bcd.json"}},{"type":"prose","value":{"id":"另参见","title":"另参见","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using Service Workers (en-US)</a></li>\n  <li><a href=\"https://github.com/mdn/sw-test\" class=\"external\" rel=\" noopener\">Service workers basic code example</a></li>\n  <li><a href=\"https://jakearchibald.github.io/isserviceworkerready/\" class=\"external\" rel=\" noopener\">Is ServiceWorker ready?</a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Web_Workers_API/Using_web_workers\">Using web workers</a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"另参见","id":"另参见"}],"summary":"ExtendableEvent.waitUntil() 方法告诉事件分发器该事件仍在进行。这个方法也可以用于检测进行的任务是否成功。在服务工作线程中，这个方法告诉浏览器事件一直进行，直至 promise 解决，浏览器不应该在事件中的异步操作完成之前终止服务工作线程。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"ExtendableEvent.waitUntil()","locale":"en-US","native":"English (US)"},{"title":"ExtendableEvent.waitUntil()","locale":"ja","native":"日本語"},{"title":"ExtendableEvent.waitUntil()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/extendableevent/waituntil","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/extendableevent/waituntil/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/ExtendableEvent","title":"ExtendableEvent"},{"uri":"/zh-CN/docs/Web/API/ExtendableEvent/waitUntil","title":"ExtendableEvent.waitUntil()"}],"pageTitle":"ExtendableEvent.waitUntil() - Web API 接口参考 | MDN","noIndexing":false}}