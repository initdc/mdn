{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ExtendableEvent","mdn_url":"/zh-CN/docs/Web/API/ExtendableEvent","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ExtendableEvent/ExtendableEvent\"><code>ExtendableEvent()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/ExtendableEvent/waitUntil\"><code>waitUntil()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>作为 service worker 生命周期的一部分，**<code>ExtendableEvent</code>**接口延长了在全局范围上<code><a href=\"/zh-CN/docs/Web/Reference/Events/install\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">install</a></code>和<code><a href=\"/zh-CN/docs/Web/Reference/Events/activate\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">activate</a></code>事件的生命周期。这样可以确保在升级数据库架构并删除过时的 caches 之前，不会调度任何函数事件（如<a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a>）。如果在<code>ExtendableEvent</code>处理程序之外调用<a href=\"/zh-CN/docs/Web/API/ExtendableEvent/waitUntil\" title=\"waitUntil()\"><code>waitUntil()</code></a>，浏览器应该抛出一个<code>InvalidStateError</code>；还要注意，多个调用将堆积起来，结果 promises 将添加到<a href=\"https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#dfn-extend-lifetime-promises\" class=\"external\" rel=\" noopener\">extend lifetime promises</a>.<p></p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 上述段落中描述的行为在 firefox 43 中得到了修复（参见 <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1180274\" class=\"external\" rel=\" noopener\">bug&nbsp;1180274</a> ）。</p>\n</div>\n<p>此接口继承自<a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a>接口。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 只有当全局范围是 <a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> 时，此接口才可用。当它是一个 <a href=\"/zh-CN/docs/Web/API/Window\"><code>Window</code></a> 或其他类型 worker 的作用域时，它不可用。</p>\n</div>"}},{"type":"prose","value":{"id":"构造函数","title":"构造函数","isH3":false,"content":"<dl>\n  <dt id=\"extendableevent_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ExtendableEvent/ExtendableEvent\"><code>ExtendableEvent()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>创建新的<code>ExtendableEvent</code>对象。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"特性","title":"特性","isH3":false,"content":"<p>不实现任何特定属性，但从其父级事件继承属，<em><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a></em>。</p>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<p><em>从他的父辈继承，<a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a>。</em></p>\n<dl>\n  <dt id=\"extendableevent.waituntil\"><a href=\"/zh-CN/docs/Web/API/ExtendableEvent/waitUntil\" title=\"ExtendableEvent.waitUntil()\"><code>ExtendableEvent.waitUntil()</code></a></dt>\n  <dd>\n    <p>延长事件的生存期。它将在 service worker 的 <a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/install_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">install (en-US)</a> 和 <a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/activate_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">activate (en-US)</a> 事件中被调用。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"实例","title":"实例","isH3":false,"content":"<p>代码片段来自<a href=\"https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js\" class=\"external\" rel=\" noopener\">service worker prefetch sample</a> (查看 <a href=\"https://googlechrome.github.io/samples/service-worker/prefetch/\" class=\"external\" rel=\" noopener\">prefetch example live</a>.)。代码在<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>ServiceWorkerGlobalScope.oninstall</code></a>中调用<a href=\"/zh-CN/docs/Web/API/ExtendableEvent/waitUntil\"><code>ExtendableEvent.waitUntil()</code></a>，延迟将<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorkerRegistration/installing\"><code>ServiceWorkerRegistration.installing</code> <small>(en-US)</small></a> Worker 视为已安装，直到传递的 promise resolve(在所有资源都已被提取和缓存的情况，或者发生任何异常时的问题.)</p>\n<p>代码段还显示了对 service worker 使用的缓存进行版本控制的最佳实践。虽然在这个例子中只有一个缓存，但是相同的方法可以用于多个缓存。它将缓存的速记标识符映射到特定的、版本化的缓存名称。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>备注：</strong> 在 chrome 中，日志记录语句通过 chrome://service worker internals 访问的相关服务工作者的“inspect”接口可见。</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token constant\">CACHE_VERSION</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">CURRENT_CACHES</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">prefetch</span><span class=\"token operator\">:</span> <span class=\"token string\">'prefetch-cache-v'</span> <span class=\"token operator\">+</span> <span class=\"token constant\">CACHE_VERSION</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nself<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'install'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> urlsToPrefetch <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'./static/pre_fetched.txt'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'./static/pre_fetched.html'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://www.chromium.org/_/rsrc/1302286216006/config/customLogo.gif'</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Handling install event. Resources to pre-fetch:'</span><span class=\"token punctuation\">,</span> urlsToPrefetch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span>\n    caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CURRENT_CACHES</span><span class=\"token punctuation\">[</span><span class=\"token string\">'prefetch'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      cache<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span>urlsToPrefetch<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">urlToPrefetch</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span>urlToPrefetch<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'no-cors'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'All resources have been fetched and cached.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Pre-fetching failed:'</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>备注：</strong> 在获取资源时，如果有可能资源是由不支持 <a href=\"http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\" class=\"external\" rel=\" noopener\">CORS</a> 的服务器提供的，那么使用 <code>{mode: 'no-cors'}</code> 非常重要。在本例中， <a href=\"https://www.chromium.org\" class=\"external\" rel=\" noopener\">www.chromium.org</a> 不支持 CORS。</p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#extendableevent-interface","title":"Service Workers 1"}],"query":"api.ExtendableEvent"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.ExtendableEvent","dataURL":"/zh-CN/docs/Web/API/ExtendableEvent/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using Service Workers (en-US)</a></li>\n  <li><a href=\"https://github.com/mdn/sw-test\" class=\"external\" rel=\" noopener\">Service workers basic code example</a></li>\n  <li><a href=\"https://jakearchibald.github.io/isserviceworkerready/\" class=\"external\" rel=\" noopener\">Is ServiceWorker ready?</a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Web_Workers_API/Using_web_workers\">Using web workers</a></li>\n</ul>"}}],"toc":[{"text":"构造函数","id":"构造函数"},{"text":"特性","id":"特性"},{"text":"方法","id":"方法"},{"text":"实例","id":"实例"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"此接口继承自Event接口。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"ExtendableEvent","locale":"en-US","native":"English (US)"},{"title":"ExtendableEvent","locale":"fr","native":"Français"},{"title":"ExtendableEvent","locale":"ja","native":"日本語"},{"title":"ExtendableEvent","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/extendableevent","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/extendableevent/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/ExtendableEvent","title":"ExtendableEvent"}],"pageTitle":"ExtendableEvent - Web API 接口参考 | MDN","noIndexing":false}}