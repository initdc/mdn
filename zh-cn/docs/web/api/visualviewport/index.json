{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"VisualViewport","mdn_url":"/zh-CN/docs/Web/API/VisualViewport","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Visual_Viewport_API\">Visual Viewport API <small>(en-US)</small></a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/VisualViewport\"><code>VisualViewport</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VisualViewport/height\"><code>height</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/VisualViewport/offsetleft\"><code>offsetleft</code></a></li><li><a href=\"/zh-CN/docs/Web/API/VisualViewport/offsetTop\"><code>offsetTop</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VisualViewport/pageLeft\"><code>pageLeft</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VisualViewport/pageTop\"><code>pageTop</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VisualViewport/scale\"><code>scale</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VisualViewport/width\"><code>width</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Visual Viewport 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Window/visualViewport\"><code>Window.visualViewport</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p><a href=\"/en-US/docs/Web/API/Visual_Viewport_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Visual Viewport API (en-US)</a> 提供了当前页面的视觉视口接口，即 <strong><code>VisualViewport</code></strong> 。对于每个页面容器来说（如 iframe），都存在有一个独立的 window 对象。每个页面容器的 window 对象都有一个独立的 <code>VisualViewport</code> 属性。</p>\n<p>你可以使用 <a href=\"/zh-CN/docs/Web/API/Window/visualViewport\"><code>Window.visualViewport</code></a> 获得对应 window 的视觉视口 API。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 与布局视口（layout viewport）不同的是：只有最上层的 window 才有视觉视口（visual viewport）这一概念。因此只有最上层 window 的 <code>VisualViewport</code> 属性才是有效的，其他层的视觉视口属性可看作是布局视口属性的别名。比如，对于一个 <a href=\"/zh-CN/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> ，其对应的视觉视口属性 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VisualViewport/width\"><code>VisualViewport.width</code> <small>(en-US)</small></a> 相当于对应的布局视口属性，如 <a href=\"/zh-CN/docs/Web/API/Element/clientWidth\" title=\"document.documentElement.clientWidth\"><code>document.documentElement.clientWidth</code></a>.</p>\n</div>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<p><em><code>VisualViewport</code></em> 从其父元素继承属性 <em><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></em>。</p>\n<dl>\n  <dt id=\"visualviewport.offsetleft\"><a href=\"/zh-CN/docs/Web/API/VisualViewport/offsetleft\"><code>VisualViewport.offsetLeft</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回视觉视口的左边框到布局视口的左边框的 CSS 像素距离。</p>\n  </dd>\n  <dt id=\"visualviewport.offsettop\"><a href=\"/zh-CN/docs/Web/API/VisualViewport/offsetTop\"><code>VisualViewport.offsetTop</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回视觉视口的上边框到布局视口的上边框的 CSS 像素距离。</p>\n  </dd>\n  <dt id=\"visualviewport.pageleft_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VisualViewport/pageLeft\"><code>VisualViewport.pageLeft</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回相对于初始的 viewport 属性的 X 轴坐标所对应的 CSS 像素数。</p>\n  </dd>\n  <dt id=\"visualviewport.pagetop_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VisualViewport/pageTop\"><code>VisualViewport.pageTop</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回相对于初始的 viewport 属性的 Y 轴坐标所对应的 CSS 像素数。</p>\n  </dd>\n  <dt id=\"visualviewport.width_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VisualViewport/width\"><code>VisualViewport.width</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回视觉视口的宽度所对应的 CSS 像素数。</p>\n  </dd>\n  <dt id=\"visualviewport.height_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VisualViewport/height\"><code>VisualViewport.height</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回视觉视口的高度所对应的 CSS 像素数。</p>\n  </dd>\n  <dt id=\"visualviewport.scale_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VisualViewport/scale\"><code>VisualViewport.scale</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回当前视觉视口所应用的缩放比例。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":false,"content":"<p>通过使用 <a href=\"/zh-CN/docs/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a> 或者将监听回调函数赋值给对应的 <code>oneventname</code> 属性，可以为对应的视口事件添加监听。</p>\n<dl>\n  <dt id=\"resize\"><a href=\"/en-US/docs/Web/API/VisualViewport/resize_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">resize (en-US)</a></dt>\n  <dd>\n    <p>\n      当视觉视口被改变时触发。\n      也可以为 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VisualViewport/resize_event\"><code>VisualViewport.onresize</code> <small>(en-US)</small></a> 属性赋值来添加监听。\n    </p>\n  </dd>\n  <dt id=\"scroll\"><a href=\"/zh-CN/docs/Web/API/VisualViewport/scroll_event\"><code>scroll</code></a></dt>\n  <dd>\n    <p>\n      当视觉视口滑动时触发。\n      也可以为 <a href=\"/zh-CN/docs/Web/API/VisualViewport/scroll_event\"><code>VisualViewport.onscroll</code></a> 属性赋值来添加监听。\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":""}},{"type":"prose","value":{"id":"缩放检测并隐藏元素","title":"缩放检测并隐藏元素","isH3":true,"content":"<p>这个例子取自 <a href=\"https://github.com/WICG/visual-viewport\" class=\"external\" rel=\" noopener\">Visual Viewport README</a>，展示了如何在用户缩放时隐藏某个盒子（或元素）。这对于增强一个页面在缩放时的用户体验有重要意义。同样，你也可以查看另一个 <a href=\"https://wicg.github.io/visual-viewport/examples/hide-on-zoom.html\" class=\"external\" rel=\" noopener\">例子</a> 。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> bottomBar <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bottombar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> viewport <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>visualViewport<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">resizeHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>viewport<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">&gt;</span> <span class=\"token number\">1.3</span><span class=\"token punctuation\">)</span>\n     bottomBar<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">else</span>\n     bottomBar<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"block\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nwindow<span class=\"token punctuation\">.</span>visualViewport<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span> resizeHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"模拟_position_属性：device-fixed","title":"模拟 position 属性：device-fixed","isH3":true,"content":"<p>这个例子同样取自 <a href=\"https://github.com/WICG/visual-viewport\" class=\"external\" rel=\" noopener\">Visual Viewport README</a> ，展示了如何使用视觉视口 API，从而模拟 <code>position: device-fixed</code> 的 CSS 属性。类似于 <code>position: fixed</code> ，这一属性可将被设置的元素固定在视觉视口特定位置。此外，你也可以查看另一个 <a href=\"https://wicg.github.io/visual-viewport/examples/fixed-to-viewport.html\" class=\"external\" rel=\" noopener\">例子</a> 。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> bottomBar <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bottombar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> viewport <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>visualViewport<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">viewportHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> layoutViewport <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'layoutViewport'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Since the bar is position: fixed we need to offset it by the visual</span>\n  <span class=\"token comment\">// viewport's offset from the layout viewport origin.</span>\n  <span class=\"token keyword\">var</span> offsetLeft <span class=\"token operator\">=</span> viewport<span class=\"token punctuation\">.</span>offsetLeft<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> offsetTop <span class=\"token operator\">=</span> viewport<span class=\"token punctuation\">.</span>height\n              <span class=\"token operator\">-</span> layoutViewport<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height\n              <span class=\"token operator\">+</span> viewport<span class=\"token punctuation\">.</span>offsetTop<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// You could also do this by setting style.left and style.top if you</span>\n  <span class=\"token comment\">// use width: 100% instead.</span>\n  bottomBar<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span> <span class=\"token string\">'translate('</span> <span class=\"token operator\">+</span>\n                              offsetLeft <span class=\"token operator\">+</span> <span class=\"token string\">'px,'</span> <span class=\"token operator\">+</span>\n                              offsetTop <span class=\"token operator\">+</span> <span class=\"token string\">'px) '</span> <span class=\"token operator\">+</span>\n                              <span class=\"token string\">'scale('</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span>viewport<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">+</span> <span class=\"token string\">')'</span>\n<span class=\"token punctuation\">}</span>\nwindow<span class=\"token punctuation\">.</span>visualViewport<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> viewportHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>visualViewport<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span> viewportHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 应小心使用上述方案，使用这种方式模拟的 <code>position: device-fixed</code> 可能会导致其他元素在滚动页面时出现闪烁。</p>\n</div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/visual-viewport/#the-visualviewport-interface","title":"Visual Viewport API"}],"query":"api.VisualViewport"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.VisualViewport","dataURL":"/zh-CN/docs/Web/API/VisualViewport/bcd.json"}},{"type":"prose","value":{"id":"参照","title":"参照","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/bokand/bokand.github.io/blob/master/web_viewports_explainer.md\" class=\"external\" rel=\" noopener\">Web 视口说明</a> — 解释了什么是浏览器视口和视觉视口和布局视口的区别。</li>\n</ul>"}}],"toc":[{"text":"属性","id":"属性"},{"text":"Events","id":"events"},{"text":"例子","id":"例子"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参照","id":"参照"}],"summary":"Visual Viewport API (en-US) 提供了当前页面的视觉视口接口，即 VisualViewport 。对于每个页面容器来说（如 iframe），都存在有一个独立的 window 对象。每个页面容器的 window 对象都有一个独立的 VisualViewport 属性。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"VisualViewport","locale":"en-US","native":"English (US)"}],"source":{"folder":"zh-cn/web/api/visualviewport","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/visualviewport/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/VisualViewport","title":"VisualViewport"}],"pageTitle":"VisualViewport - Web API 接口参考 | MDN","noIndexing":false}}