{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"AbortSignal","mdn_url":"/zh-CN/docs/Web/API/AbortSignal","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AbortSignal/aborted\"><code>aborted</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AbortSignal/reason\"><code>reason</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AbortSignal/abort\"><code>abort()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AbortSignal/throwIfAborted\"><code>throwIfAborted()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AbortSignal/timeout\"><code>timeout()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AbortSignal/abort_event\"><code>abort</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>DOM 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Range\"><code>Range</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>AbortSignal</code></strong> 接口表示一个信号对象（signal object），它允许你通过 <a href=\"/zh-CN/docs/Web/API/AbortController\"><code>AbortController</code></a> 对象与 DOM 请求（如 Fetch）进行通信并在需要时将其中止。</p>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<p><em>AbortSignal 接口还继承了其父接口 <a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a> 的属性。</em></p>\n<dl>\n  <dt id=\"abortsignal.aborted\"><a href=\"/zh-CN/docs/Web/API/AbortSignal/aborted\"><code>AbortSignal.aborted</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>一个 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a>，表示与之通信的请求是否被终止（<code>true</code>）或未终止（<code>false</code>）。</p>\n  </dd>\n  <dt id=\"abortsignal.reason\"><a href=\"/zh-CN/docs/Web/API/AbortSignal/reason\"><code>AbortSignal.reason</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>一旦信号被中止，提供一个使用 JavaScript 值表示的中止原因。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<p><em><strong><code>AbortSignal</code></strong> 接口继续它父接口 <a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a> 的方法。</em></p>\n<dl>\n  <dt id=\"abortsignal.throwifaborted\"><a href=\"/zh-CN/docs/Web/API/AbortSignal/throwIfAborted\"><code>AbortSignal.throwIfAborted()</code></a></dt>\n  <dd>\n    <p>如果信号已经被中止，则抛出信号中止的 <a href=\"/zh-CN/docs/Web/API/AbortSignal/reason\" title=\"reason\"><code>reason</code></a>；否则没有任何用处。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"静态方法","title":"静态方法","isH3":false,"content":"<dl>\n  <dt id=\"abortsignal.abort\"><a href=\"/zh-CN/docs/Web/API/AbortSignal/abort\"><code>AbortSignal.abort()</code></a></dt>\n  <dd>\n    <p>返回一个已经被设置为中止的 <strong><code>AbortSignal</code></strong> 实例。</p>\n  </dd>\n  <dt id=\"abortsignal.timeout\"><a href=\"/zh-CN/docs/Web/API/AbortSignal/timeout\"><code>AbortSignal.timeout()</code></a></dt>\n  <dd>\n    <p>返回一个在指定事件后将自动终止的 <strong><code>AbortSignal</code></strong> 实例。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"事件","title":"事件","isH3":true,"content":"<p>使用 <a href=\"/zh-CN/docs/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a> 或将事件监听器分配给该接口的 <code>oneventname</code> 属性。</p>\n<dl>\n  <dt id=\"abort\"><a href=\"/zh-CN/docs/Web/API/AbortSignal/abort_event\"><code>abort</code></a></dt>\n  <dd>\n    <p>当与 signal 通信 DOM 请求被中止时调用。也可以通过 <code>onabort</code> 属性调用。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":""}},{"type":"prose","value":{"id":"使用显式的信号终止_fetch_操作","title":"使用显式的信号终止 fetch 操作","isH3":true,"content":"<p>以下片段展示了我们如何使用 signal 去中止使用 <a href=\"/zh-CN/docs/Web/API/Fetch_API\">Fetch API</a> 下载视频。</p>\n<p>我们首先使用 <a href=\"/zh-CN/docs/Web/API/AbortController/AbortController\" title=\"AbortController()\"><code>AbortController()</code></a> 创建一个中止控制器，然后使用 <a href=\"/zh-CN/docs/Web/API/AbortController/signal\"><code>AbortController.signal</code></a> 属性获取与它关联的 <a href=\"/zh-CN/docs/Web/API/AbortSignal\" aria-current=\"page\"><code>AbortSignal</code></a> 对象的引用。</p>\n<p>当 <a href=\"/zh-CN/docs/Web/API/fetch\">fetch 请求</a>开始时，我们将 <code>AbortSignal</code> 作为一个选项传递进请求的 option 对象中（见下面的 <code>{signal}</code>）。这个将信号和控制器与 fetch 请求相关联，并且允许我们通过调用 <a href=\"/zh-CN/docs/Web/API/AbortController/abort\"><code>AbortController.abort()</code></a> 中止它。你可以看见当中止按钮（<code>abortBtn</code>）被点击时，第二个事件监听器触发，使 fetch 操作被中止。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AbortController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> signal <span class=\"token operator\">=</span> controller<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'video.mp4'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> downloadBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.download'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> abortBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.abort'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndownloadBtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> fetchVideo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nabortBtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  controller<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Download aborted'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fetchVideo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> signal <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Download complete'</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Download error: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>err<span class=\"token punctuation\">.</span>message<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 当调用 <code>abort()</code> 时，<code>fetch()</code> promise 会以“<code>AbortError</code>”<code>DOMException</code> 拒绝。</p>\n</div>\n<p>你可以<a href=\"https://github.com/mdn/dom-examples/tree/master/abort-api\" class=\"external\" rel=\" noopener\">在 github 上找到一个完整、可运行的示例</a>；你也可以参见<a href=\"https://mdn.github.io/dom-examples/abort-api/\" class=\"external\" rel=\" noopener\">在线演示</a>。</p>"}},{"type":"prose","value":{"id":"中止超时的读取操作","title":"中止超时的读取操作","isH3":true,"content":"<p>如果你需要中止一个超时的操作，你可以使用 <a href=\"/zh-CN/docs/Web/API/AbortSignal/timeout\"><code>AbortSignal.timeout()</code></a> 静态方法。该方法返回一个 <code>AbortSignal</code> 并在指定的毫秒时间后后自动超时。</p>\n<p>以下代码片段展示了如何成功地下载一个文件或者在五秒钟后处理一个超时的错误。注意，当出现超时时，<code>fetch()</code> promise 会以“<code>TimeoutError</code>”<code>DOMException</code> 拒绝。这允许代码区分超时（可能需要通知用户）和用户中止。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'video.mp4'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">signal</span><span class=\"token operator\">:</span> AbortSignal<span class=\"token punctuation\">.</span><span class=\"token function\">timeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// …</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"TimeoutError\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Timeout: It took more than 5 seconds to get the result!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"AbortError\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fetch aborted by user action (browser stop button, closing tab, etc.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"TypeError\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AbortSignal.timeout() method is not supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// A network error, or some other problem.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Error: type: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>err<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, message: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>err<span class=\"token punctuation\">.</span>message<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"超时或显式中止_fetch","title":"超时或显式中止 fetch","isH3":true,"content":"<p><code>fetch()</code> 不是为了组合多个信号而设计的，所以你不能因为调用了 <a href=\"/zh-CN/docs/Web/API/AbortController/abort\"><code>AbortController.abort()</code></a> 或者 <code>AbortSignal</code> 超时而\"直接\"中止下载（尽管在上面的例子中，超时信号中止由停止按钮等内置浏览器机制触发）。</p>\n<p>为了触发多个 signal，它们必须是菊花链式连接。以下代码片段展示了在处理程序中如何为独立的计时器调用 <a href=\"/zh-CN/docs/Web/API/AbortController/abort\"><code>AbortController.abort()</code></a>。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AbortController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> timeoutId <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> controller<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">signal</span><span class=\"token operator\">:</span> controller<span class=\"token punctuation\">.</span>signal <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"AbortError\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Notify the user of abort.</span>\n      <span class=\"token comment\">// Note this will never be a timeout error!</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// A network error, or some other problem.</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Type: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, Message: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>message<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timeoutId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 与使用 <a href=\"/zh-CN/docs/Web/API/AbortSignal/timeout\"><code>AbortSignal.timeout()</code></a> 不同，没有方法来判断最终中止是否由超时引起。</p>\n</div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#interface-AbortSignal","title":"DOM Standard"}],"query":"api.AbortSignal"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.AbortSignal","dataURL":"/zh-CN/docs/Web/API/AbortSignal/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Fetch_API\">Fetch API</a></li>\n  <li><a href=\"https://developers.google.com/web/updates/2017/09/abortable-fetch\" class=\"external\" rel=\" noopener\">Abortable Fetch</a> by Jake Archibald</li>\n</ul>"}}],"toc":[{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"静态方法","id":"静态方法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"AbortSignal 接口表示一个信号对象（signal object），它允许你通过 AbortController 对象与 DOM 请求（如 Fetch）进行通信并在需要时将其中止。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"AbortSignal","locale":"en-US","native":"English (US)"},{"title":"AbortSignal","locale":"fr","native":"Français"},{"title":"AbortSignal","locale":"ja","native":"日本語"},{"title":"AbortSignal","locale":"ko","native":"한국어"},{"title":"AbortSignal","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"AbortSignal","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/abortsignal","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/abortsignal/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/AbortSignal","title":"AbortSignal"}],"pageTitle":"AbortSignal - Web API 接口参考 | MDN","noIndexing":false}}