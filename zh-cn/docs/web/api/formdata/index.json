{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"FormData","mdn_url":"/zh-CN/docs/Web/API/FormData","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/FormData\"><code>FormData</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/FormData/FormData\"><code>FormData()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/FormData/append\"><code>append()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FormData/delete\"><code>delete()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FormData/entries\"><code>entries()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FormData/get\"><code>get()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FormData/getAll\"><code>getAll()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FormData/has\"><code>has()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FormData/keys\"><code>keys()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FormData/set\"><code>set()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FormData/values\"><code>values()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>XMLHttpRequest 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/ProgressEvent\"><code>ProgressEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a></li><li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequestEventTarget\"><code>XMLHttpRequestEventTarget</code></a></li><li><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>XMLHttpRequestUpload</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>FormData</code></strong> 接口提供了一种表示表单数据的键值对 <code>key/value</code> 的构造方式，并且可以轻松的将数据通过<a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/send\"><code>XMLHttpRequest.send()</code></a> 方法发送出去，本接口和此方法都相当简单直接。如果送出时的编码类型被设为 <code>\"multipart/form-data\"</code>，它会使用和表单一样的格式。</p>\n<p>如果你想构建一个简单的<code>GET</code>请求，并且通过<a href=\"/zh-CN/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>的形式带有查询参数，可以将它直接传递给<a href=\"/zh-CN/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>。</p>\n<p>实现了 <code>FormData</code> 接口的对象可以直接在<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Statements/for...of\"><code>for...of</code></a>结构中使用，而不需要调用<a href=\"/zh-CN/docs/Web/API/FormData/entries\" title=\"entries()\"><code>entries()</code></a> : <code>for (var p of myFormData)</code> 的作用和 <code>for (var p of myFormData.entries())</code> 是相同的。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 此特性可用于 <a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Workers</a>。</p>\n</div>"}},{"type":"prose","value":{"id":"构造函数","title":"构造函数","isH3":false,"content":"<dl>\n  <dt id=\"formdata\"><a href=\"/zh-CN/docs/Web/API/FormData/FormData\" title=\"FormData()\"><code>FormData()</code></a></dt>\n  <dd>\n    <p>创建一个新的 <code>FormData</code> 对象。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"formdata.append\"><a href=\"/zh-CN/docs/Web/API/FormData/append\"><code>FormData.append()</code></a></dt>\n  <dd>\n    <p>向 <code>FormData</code> 中添加新的属性值，<code>FormData</code> 对应的属性值存在也不会覆盖原值，而是新增一个值，如果属性不存在则新增一项属性值。</p>\n  </dd>\n  <dt id=\"formdata.delete\"><a href=\"/zh-CN/docs/Web/API/FormData/delete\"><code>FormData.delete()</code></a></dt>\n  <dd>\n    <p>从 FormData 对象里面删除一个键值对。</p>\n  </dd>\n  <dt id=\"formdata.entries\"><a href=\"/zh-CN/docs/Web/API/FormData/entries\"><code>FormData.entries()</code></a></dt>\n  <dd>\n    <p>返回一个包含所有键值对的<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>对象。</p>\n  </dd>\n  <dt id=\"formdata.get\"><a href=\"/zh-CN/docs/Web/API/FormData/get\"><code>FormData.get()</code></a></dt>\n  <dd>\n    <p><code>返回在 FormData</code> 对象中与给定键关联的第一个值。</p>\n  </dd>\n  <dt id=\"formdata.getall\"><a href=\"/zh-CN/docs/Web/API/FormData/getAll\"><code>FormData.getAll()</code></a></dt>\n  <dd>\n    <p>返回一个包含 <code>FormData</code> 对象中与给定键关联的所有值的数组。</p>\n  </dd>\n  <dt id=\"formdata.has\"><a href=\"/zh-CN/docs/Web/API/FormData/has\"><code>FormData.has()</code></a></dt>\n  <dd>\n    <p><code>返回一个布尔值表明 FormData</code> 对象是否包含某些键。</p>\n  </dd>\n  <dt id=\"formdata.keys\"><a href=\"/zh-CN/docs/Web/API/FormData/keys\"><code>FormData.keys()</code></a></dt>\n  <dd>\n    <p>返回一个包含所有键的<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>对象。</p>\n  </dd>\n  <dt id=\"formdata.set\"><a href=\"/zh-CN/docs/Web/API/FormData/set\"><code>FormData.set()</code></a></dt>\n  <dd>\n    <p>给 <code>FormData</code> 设置属性值，如果<code>FormData</code> 对应的属性值存在则覆盖原值，否则新增一项属性值。</p>\n  </dd>\n  <dt id=\"formdata.values\"><a href=\"/zh-CN/docs/Web/API/FormData/values\"><code>FormData.values()</code></a></dt>\n  <dd>\n    <p>返回一个包含所有值的<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>对象。</p>\n  </dd>\n</dl>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://xhr.spec.whatwg.org/#interface-formdata","title":"XMLHttpRequest Standard"}],"query":"api.FormData"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.FormData","dataURL":"/zh-CN/docs/Web/API/FormData/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\"><code>XMLHTTPRequest</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\">Using XMLHttpRequest</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/FormData/Using_FormData_Objects\">Using FormData objects</a></li>\n  <li><a href=\"/zh-CN/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a></li>\n</ul>"}}],"toc":[{"text":"构造函数","id":"构造函数"},{"text":"方法","id":"方法"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"FormData 接口提供了一种表示表单数据的键值对 key/value 的构造方式，并且可以轻松的将数据通过XMLHttpRequest.send() 方法发送出去，本接口和此方法都相当简单直接。如果送出时的编码类型被设为 \"multipart/form-data\"，它会使用和表单一样的格式。","popularity":0.0032,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"FormData","locale":"en-US","native":"English (US)"},{"title":"FormData","locale":"es","native":"Español"},{"title":"FormData","locale":"fr","native":"Français"},{"title":"FormData","locale":"ja","native":"日本語"},{"title":"FormData","locale":"ko","native":"한국어"},{"title":"FormData","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"FormData","locale":"ru","native":"Русский"},{"title":"FormData","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/formdata","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/formdata/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/FormData","title":"FormData"}],"pageTitle":"FormData - Web API 接口参考 | MDN","noIndexing":false}}