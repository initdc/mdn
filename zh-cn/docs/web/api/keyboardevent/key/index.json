{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"KeyboardEvent.key","mdn_url":"/zh-CN/docs/Web/API/KeyboardEvent/key","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/KeyboardEvent/KeyboardEvent\"><code>KeyboardEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/KeyboardEvent/altKey\"><code>altKey</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/KeyboardEvent/charCode\"><code>charCode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/KeyboardEvent/code\"><code>code</code></a></li><li><a href=\"/zh-CN/docs/Web/API/KeyboardEvent/ctrlKey\"><code>ctrlKey</code></a></li><li><a href=\"/zh-CN/docs/Web/API/KeyboardEvent/isComposing\"><code>isComposing</code></a></li><li><em><code>key</code></em></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/KeyboardEvent/keyCode\"><code>keyCode</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/keyIdentifier\"><code>keyIdentifier</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/KeyboardEvent/location\"><code>location</code></a></li><li><a href=\"/zh-CN/docs/Web/API/KeyboardEvent/metaKey\"><code>metaKey</code></a></li><li><a href=\"/zh-CN/docs/Web/API/KeyboardEvent/repeat\"><code>repeat</code></a></li><li><a href=\"/zh-CN/docs/Web/API/KeyboardEvent/shiftKey\"><code>shiftKey</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/getModifierState\"><code>getModifierState()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\"><code>initKeyboardEvent()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/KeyboardEvent/initKeyEvent\"><code>initKeyEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/UIEvent\"><code>UIEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>只读属性 <strong><code>KeyboardEvent.key</code></strong> 返回用户按下的物理按键的值。它还与 <code>shiftKey</code> 等调节性按键的状态和键盘的区域 / 和布局有关。它的值由以下因素决定：</p>\n<p>查看 <a href=\"/zh-CN/docs/Web/API/UI_Events/Keyboard_event_key_values\">所有键值列表</a></p>\n<ul>\n  <li>如果按下的键拥有可打印的内容，则返回一个非空的 Unicode 字符来代表这个键的可打印内容。</li>\n  <li>如果按下的键是一个控制键或特殊字符，则返回一个事先定义好的值，见<a href=\"/zh-CN/docs/Web/API/UI_Events/Keyboard_event_key_values\">预定义键值列表</a>。</li>\n  <li>如果 <code>KeyboardEvent</code> 显示按下的键是一个死键（dead key），则键值为 <code>\"Dead\"</code>。</li>\n  <li>有些特殊键盘的键（比如多媒体键盘上用来控制媒体播放的扩展按键）在 Windows 下会触发 <code>WM_APPCOMMAND</code> 事件，而不会产生按键代码。虽然没有按键代码，这些事件将映射到 DOM 键盘事件中，并将列入 Windows 的“虚拟按键码”列表中。</li>\n  <li>如果按键无法识别，则返回 <code>\"Unidentified\"</code>。</li>\n</ul>"}},{"type":"prose","value":{"id":"keyboardevent_次序","title":"KeyboardEvent 次序","isH3":false,"content":"<p><code>KeyboardEvent</code> 事件以一个预设的次序触发，理解这一点对于理解特定 <code>KeyboardEvent</code> 的 <code>key</code> 属性值大有帮助。对于一个给定的按键操作，<code>KeyboardEvent</code> 将假定 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\"><code>Event.preventDefault</code></a> 未调用并按下面次序触发：</p>\n<ol>\n  <li>首先触发 <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> 事件。如果按键长按且生成一个字符，则事件将以一个与平台实现方式相关的时间间隔持续发出，同时将只读属性 <a href=\"/zh-CN/docs/Web/API/KeyboardEvent/repeat\"><code>KeyboardEvent.repeat</code></a> 设定为 <code>true</code>。</li>\n  <li>如果按键生成的字符即将插入某个 <a href=\"/zh-CN/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a>、<a href=\"/zh-CN/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> 或其它某个 <a href=\"/zh-CN/docs/Web/API/HTMLElement/contentEditable\"><code>HTMLElement.contentEditable</code></a> 设为 true 的元素，则依次触发 <code><a href=\"/zh-CN/docs/Web/Reference/Events/beforeinput\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">beforeinput</a></code>、<code><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">input (en-US)</a></code>事件。注意某些实现中若支持 <code><a href=\"/en-US/docs/Web/API/Element/keypress_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keypress (en-US)</a></code> 事件则可能将其触发。当按键长按时重复触发。</li>\n  <li>当按键松开时触发 <code><a href=\"/en-US/docs/Web/API/Element/keyup_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keyup (en-US)</a></code> 事件。操作结束。</li>\n</ol>\n<p>在次序 1、3 中，<code>KeyboardEvent.key</code> 属性按照事先定义的规则设定为恰当的值。</p>"}},{"type":"prose","value":{"id":"keyboardevent_次序示例","title":"KeyboardEvent 次序示例","isH3":false,"content":"<p>考虑使用美国或英国键盘布局生成的点击 <code>shiftKey</code> 和一个未知的 <code>key 2</code> 时的事件次序。</p>\n<p>请检测以下两个测试用例：</p>\n<ol>\n  <li>按下并长按 <code>shift</code> 键，然后按下 <code>key 2</code> 并松开。下一步，松开 <code>shift</code> 键。</li>\n  <li>按下并长按 <code>shift</code> 键，然后按下并长按 <code>key 2</code>。然后松开 shift 键，最后松开 <code>key 2</code>。</li>\n</ol>"}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flex flex-left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test-target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-clear-console<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>清空控制台<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flex flex-right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>console-log<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"css","title":"CSS","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">-webkit-display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.flex</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.flex-left</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">flex-grow</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-webkit-flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-webkit-flex-grow</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.flex-right</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">flex-grow</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-webkit-flex</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-webkit-flex-grow</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#test-target</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">resize</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#console-log</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> textarea <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test-target'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nconsoleLog <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'console-log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nbtnClearConsole <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn-clear-console'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  p<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  consoleLog<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ntextarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keydown'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>repeat<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">第一个 keydown 事件。key 属性的值为\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span>\n    <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">keydown 事件重复。key 属性的值为\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ntextarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'beforeinput'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">beforeinput 事件。你准备输入\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>data<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ntextarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">input 事件。你刚刚输入了\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>data<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ntextarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keyup'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">keyup 事件。key 属性的值为\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbtnClearConsole<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> child <span class=\"token operator\">=</span> consoleLog<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   consoleLog<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   child <span class=\"token operator\">=</span> consoleLog<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"运行结果","title":"运行结果","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>zh-CN<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n    <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">-webkit-display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span> <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">.flex</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span> <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">.flex-left</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span> <span class=\"token property\">flex-grow</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span> <span class=\"token property\">-webkit-flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span> <span class=\"token property\">-webkit-flex-grow</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">.flex-right</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span> <span class=\"token property\">flex-grow</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span> <span class=\"token property\">-webkit-flex</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span> <span class=\"token property\">-webkit-flex-grow</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">#test-target</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span> <span class=\"token property\">resize</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">#console-log</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>KeyboardEvent.key<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flex flex-left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test-target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-clear-console<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>清空控制台<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flex flex-right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>console-log<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">let</span> textarea <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test-target'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    consoleLog <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'console-log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    btnClearConsole <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn-clear-console'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        consoleLog<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    textarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keydown'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>repeat<span class=\"token punctuation\">)</span>\n            <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">第一个 keydown 事件。key 属性的值为\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>\n            <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">keydown 事件重复。key 属性的值为\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    textarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'beforeinput'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">beforeinput 事件。你准备输入\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>data<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    textarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">input 事件。你刚刚输入了\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>data<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    textarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keyup'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">keyup 事件。key 属性的值为\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    btnClearConsole<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> child <span class=\"token operator\">=</span> consoleLog<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            consoleLog<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            child <span class=\"token operator\">=</span> consoleLog<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div><iframe class=\"hide-codepen-jsfiddle\" title=\"运行结果\" id=\"frame_key\" width=\"100%\" height=\"480\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-CN/docs/Web/API/KeyboardEvent/key/_sample_.key.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"用例_1","title":"用例 1","isH3":true,"content":"<p>当按下 shift 键时，首先触发 <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> 事件，然后将 <code>key</code> 属性的值设为 <code>\"Shift\"</code> 字符串。如果继续长按 shift 键，由于不会生成字符按键值，<code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> 事件不会继续重复触发。</p>\n<p>当按下 <code>key 2</code> 时，另一个 <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> 事件将会为这个新的按键动作触发，若使用的是美式键盘，它的 <code>key</code> 属性将被设为 <code>\"@\"</code> 字符，若为英式键盘，则会设为 <code>\"\"\"</code> 字符。这是因为 <code>key</code> 属性 <code>\"shift\"</code> 处于激活状态。由于生成了一个字符的按键值，<code><a href=\"/zh-CN/docs/Web/Reference/Events/beforeinput\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">beforeinput</a></code> 和 <code><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">input (en-US)</a></code> 事件随后触发。</p>\n<p>松开 <code>key 2</code> 时，<code><a href=\"/en-US/docs/Web/API/Element/keyup_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keyup (en-US)</a></code> 事件将触发，<code>key</code> 属性将会为不同键盘布局设定合适的字符值，比如 <code>\"@\"</code>、<code>\"\"\"</code>。</p>\n<p>最后在松开 shift 键时，另一个 <code><a href=\"/en-US/docs/Web/API/Element/keyup_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keyup (en-US)</a></code> 事件触发，<code>key</code> 值将保持 <code>\"Shift\"</code> 不变。</p>"}},{"type":"prose","value":{"id":"用例_2","title":"用例 2","isH3":true,"content":"<p>当按下 shift 键时，首先触发 <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> 事件，然后将 <code>key</code> 属性的值设为 <code>\"Shift\"</code> 字符串。如果继续长按 shift 键，由于不会生成字符按键值，<code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> 事件不会继续重复触发。</p>\n<p>当按下 <code>key 2</code> 时，另一个 <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> 事件将会为这个新的按键动作触发，若使用的是美式键盘，它的 <code>key</code> 属性将被设为 <code>\"@\"</code> 字符，若为英式键盘，则会设为 <code>\"\"\"</code> 字符。这是因上档键处于激活状态。由于生成了一个字符的按键值，<code><a href=\"/zh-CN/docs/Web/Reference/Events/beforeinput\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">beforeinput</a></code> 和 <code><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">input (en-US)</a></code> 事件随后触发。如果继续长按 <code>2</code> 键，则 <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> 事件将持续重复触发，同时将 <a href=\"/zh-CN/docs/Web/API/KeyboardEvent/repeat\"><code>KeyboardEvent.repeat</code></a> 属性设置为 <code>true</code>。<code><a href=\"/zh-CN/docs/Web/Reference/Events/beforeinput\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">beforeinput</a></code> 和 <code><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">input (en-US)</a></code> 事件也将持续重复触发。</p>\n<p>当松开 shift 键时，<code><a href=\"/en-US/docs/Web/API/Element/keyup_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keyup (en-US)</a></code> 事件随之触发，且 <code>key</code> 属性保留为 <code>\"Shift\"</code>。此时请注意为 <code>key 2</code> 长按触发的重复 <code>keydown</code> 事件的 <code>key</code> 值会变成 <code>\"2\"</code>，因为上档键不再处于激活状态。<code><a href=\"/zh-CN/docs/Web/Reference/Events/beforeinput\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">beforeinput</a></code> 与 <code><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">input (en-US)</a></code> 事件的 <a href=\"/zh-CN/docs/Web/API/InputEvent/data\"><code>InputEvent.data</code></a> 属性同理。</p>\n<p>最终 <code>key 2</code> 松开，<code><a href=\"/en-US/docs/Web/API/Element/keyup_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keyup (en-US)</a></code> 事件触发，但两种键盘布局的 <code>key</code> 属性均为 <code>\"2\"</code>。就是因为没有激活上档键。</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>这个示例使用 <a href=\"/zh-CN/docs/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener()</code></a> 监听 <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> 事件。当我们事件触发时，将检测按键的值是否为代码所关注，如果是，就进行某项操作。（可能是给飞船转向，或者是调整电子表格中选中单元格的位置。）</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"keydown\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>defaultPrevented<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果事件已经在进行中，则不做任何事。</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowUp\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// 按“↑”方向键时要做的事。</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowDown\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// 按“↓”方向键时要做的事。</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowLeft\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// 按“←”方向键时要做的事。</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowRight\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// 按“→”方向键时要做的事。</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Enter\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// 按“回车”键时要做的事。</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Escape\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// 按“ESC”键时要做的事。</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 什么都没按就退出吧。</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 取消默认动作，从而避免处理两次。</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/uievents/#dom-keyboardevent-key","title":"UI Events"}],"query":"api.KeyboardEvent.key"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.KeyboardEvent.key","dataURL":"/zh-CN/docs/Web/API/KeyboardEvent/key/bcd.json"}}],"toc":[{"text":"KeyboardEvent 次序","id":"keyboardevent_次序"},{"text":"KeyboardEvent 次序示例","id":"keyboardevent_次序示例"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"只读属性 KeyboardEvent.key 返回用户按下的物理按键的值。它还与 shiftKey 等调节性按键的状态和键盘的区域 / 和布局有关。它的值由以下因素决定：","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"KeyboardEvent.key","locale":"en-US","native":"English (US)"},{"title":"KeyboardEvent.key","locale":"fr","native":"Français"},{"title":"KeyboardEvent.key","locale":"ja","native":"日本語"},{"title":"KeyboardEvent.key","locale":"ko","native":"한국어"},{"title":"KeyboardEvent.key","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/keyboardevent/key","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/keyboardevent/key/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/KeyboardEvent","title":"KeyboardEvent"},{"uri":"/zh-CN/docs/Web/API/KeyboardEvent/key","title":"KeyboardEvent.key"}],"pageTitle":"KeyboardEvent.key - Web API 接口参考 | MDN","noIndexing":false}}