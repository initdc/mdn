{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Clients","mdn_url":"/zh-CN/docs/Web/API/Clients","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/Clients\"><code>Clients</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Clients/claim\"><code>claim()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Clients/get\"><code>get()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Clients/matchAll\"><code>matchAll()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Clients/openWindow\"><code>openWindow()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p><code>Clients</code> 接口提供对 <a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a> 对象的访问。通过在 <a href=\"/en-US/docs/Web/API/Service_Worker_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">service worker (en-US)</a> 中使用 <code><a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\" title=\"self\"><code>self</code></a>.clients</code> 访问它。</p>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"clients.get\"><a href=\"/zh-CN/docs/Web/API/Clients/get\"><code>Clients.get()</code></a></dt>\n  <dd>\n    <p>返回一个匹配给定 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Client/id\"><code>id</code> <small>(en-US)</small></a> 的 <a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a> 的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> .</p>\n  </dd>\n  <dt id=\"clients.matchall\"><a href=\"/zh-CN/docs/Web/API/Clients/matchAll\"><code>Clients.matchAll()</code></a></dt>\n  <dd>\n    <p>返回一个 <a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a> 对象数组的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> . options 参数允许您控制返回的 clients 类型。</p>\n  </dd>\n  <dt id=\"clients.openwindow\"><a href=\"/zh-CN/docs/Web/API/Clients/openWindow\"><code>Clients.openWindow()</code></a></dt>\n  <dd>\n    <p>打开给定 URL 的新浏览器窗口，并返回新 <a href=\"/zh-CN/docs/Web/API/WindowClient\"><code>WindowClient</code></a> a 的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> .</p>\n  </dd>\n  <dt id=\"clients.claim\"><a href=\"/zh-CN/docs/Web/API/Clients/claim\"><code>Clients.claim()</code></a></dt>\n  <dd>\n    <p>允许一个激活的 service worker 将自己设置为其<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorkerRegistration/scope\"><code>scope</code> <small>(en-US)</small></a> 内所有 clients 的 <a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer/controller\" title=\"controller\"><code>controller</code></a> .</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>下面示例显示一个已有的聊天窗口，或者当用户点击通知时创建新的窗口。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'notificationclick'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> allClients <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> clients<span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">includeUncontrolled</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> chatClient<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Let's see if we already have a chat window open:</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> client <span class=\"token keyword\">of</span> allClients<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">==</span> <span class=\"token string\">'/chat/'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Excellent, let's use it!</span>\n        client<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        chatClient <span class=\"token operator\">=</span> client<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// If we didn't find an existing chat window,</span>\n    <span class=\"token comment\">// open a new one:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>chatClient<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      chatClient <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> clients<span class=\"token punctuation\">.</span><span class=\"token function\">openWindow</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/chat/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Message the client:</span>\n    chatClient<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"New chat messages!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#clients-interface","title":"Service Workers 1"}],"query":"api.Clients"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Clients","dataURL":"/zh-CN/docs/Web/API/Clients/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using Service Workers (en-US)</a></li>\n  <li><a href=\"https://jakearchibald.github.io/isserviceworkerready/\" class=\"external\" rel=\" noopener\">Is ServiceWorker ready?</a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a></li>\n</ul>"}}],"toc":[{"text":"方法","id":"方法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"See also","id":"see_also"}],"summary":"Clients 接口提供对 Client 对象的访问。通过在 service worker (en-US) 中使用 self.clients 访问它。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Clients","locale":"en-US","native":"English (US)"},{"title":"Clients","locale":"fr","native":"Français"},{"title":"Clients","locale":"ja","native":"日本語"},{"title":"Clients","locale":"ko","native":"한국어"},{"title":"Clients","locale":"ru","native":"Русский"},{"title":"Clients","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/clients","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/clients/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Clients","title":"Clients"}],"pageTitle":"Clients - Web API 接口参考 | MDN","noIndexing":false}}