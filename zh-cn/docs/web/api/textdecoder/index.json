{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"TextDecoder","mdn_url":"/zh-CN/docs/Web/API/TextDecoder","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Encoding_API\">Encoding API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/TextDecoder/TextDecoder\"><code>TextDecoder()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/TextDecoder/encoding\"><code>encoding</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextDecoder/fatal\"><code>fatal</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextDecoder/ignoreBOM\"><code>ignoreBOM</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/TextDecoder/decode\"><code>decode()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Encoding API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/TextDecoderStream\"><code>TextDecoderStream</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextEncoderStream\"><code>TextEncoderStream</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>TextDecoder</code></strong> 接口表示一个文本解码器，一个解码器只支持一种特定文本编码，例如 <code>utf-8</code>、<code>iso-8859-2</code>、<code>koi8</code>、<code>cp1261</code>，<code>gbk</code> 等等。解码器将字节流作为输入，并提供代码点流作为输出。</p>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":""}},{"type":"prose","value":{"id":"用类型化数组表示文本","title":"用类型化数组表示文本","isH3":true,"content":"<p>本示例展示如何解码中文/日语字符\n  <img src=\"/en-US/docs/Web/API/TextDecoder/2019-05-21_191907.png\" alt=\"\" width=\"41\" height=\"32\" loading=\"lazy\">，用五个不同的数组类型表示： <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a>, <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\"><code>Int8Array</code></a>, <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\"><code>Uint16Array</code></a>, <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\"><code>Int16Array</code></a>, <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a>\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> utf8decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// default 'utf-8' or 'utf8'</span>\n\n<span class=\"token keyword\">let</span> u8arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">240</span><span class=\"token punctuation\">,</span> <span class=\"token number\">160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">174</span><span class=\"token punctuation\">,</span> <span class=\"token number\">183</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> i8arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">96</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">73</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> u16arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint16Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">41200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47022</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> i16arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int16Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">24336</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">18514</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> i32arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1213292304</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>utf8decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>u8arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>utf8decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>i8arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>utf8decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>u16arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>utf8decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>i16arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>utf8decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>i32arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"处理非_utf8_文本","title":"处理非 UTF8 文本","isH3":true,"content":"<p>在此示例中，我们对俄语文本“Привет，мир！”( \"Hello, world.\")进行解码。在我们的 <a href=\"/zh-CN/docs/Web/API/TextDecoder/TextDecoder\" title=\"TextDecoder()\"><code>TextDecoder()</code></a> 构造函数中，我们指定 Windows-1251 字符编码，适用于西里尔字母。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> win1251decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">'windows-1251'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> bytes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">207</span><span class=\"token punctuation\">,</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span> <span class=\"token number\">232</span><span class=\"token punctuation\">,</span> <span class=\"token number\">226</span><span class=\"token punctuation\">,</span> <span class=\"token number\">229</span><span class=\"token punctuation\">,</span> <span class=\"token number\">242</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">236</span><span class=\"token punctuation\">,</span> <span class=\"token number\">232</span><span class=\"token punctuation\">,</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>win1251decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Привет, мир!</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"构造函数","title":"构造函数","isH3":false,"content":"<dl>\n  <dt id=\"textdecoder\"><a href=\"/zh-CN/docs/Web/API/TextDecoder/TextDecoder\" title=\"TextDecoder()\"><code>TextDecoder()</code></a></dt>\n  <dd>\n    <p>返回一个新构造的 <code>TextDecoder</code>，它使用参数中指定的解码方法生成代码点流。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<p><em><code>TextDecoder</code> 接口不继承任何属性。</em></p>\n<dl>\n  <dt id=\"textdecoder.prototype.encoding\"><a href=\"/zh-CN/docs/Web/API/TextDecoder/encoding\"><code>TextDecoder.prototype.encoding</code></a><span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>所包含的解码器的名称，表示<code>TextDecoder</code>所使用的解码方法的字符串。</p>\n  </dd>\n  <dt id=\"textdecoder.prototype.fatal\"><a href=\"/zh-CN/docs/Web/API/TextDecoder/fatal\"><code>TextDecoder.prototype.fatal</code></a><span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>布尔值，<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>，是否显示致命错误。</p>\n  </dd>\n  <dt id=\"textdecoder.prototype.ignorebom\"><a href=\"/zh-CN/docs/Web/API/TextDecoder/ignoreBOM\"><code>TextDecoder.prototype.ignoreBOM</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>布尔值，<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>，是否忽略 BOM（byte order marker）标记。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<p><em><code>TextDecoder</code> 接口不继承任何方法</em>。</p>\n<dl>\n  <dt id=\"textdecoder.prototype.decode\"><a href=\"/zh-CN/docs/Web/API/TextDecoder/decode\"><code>TextDecoder.prototype.decode()</code></a></dt>\n  <dd>\n    <p>返回一个<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>，其中包含使用特定 <code>TextDecoder</code> 对象的方法解码的文本。</p>\n  </dd>\n</dl>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://encoding.spec.whatwg.org/#interface-textdecoder","title":"Encoding"}],"query":"api.TextDecoder"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.TextDecoder","dataURL":"/zh-CN/docs/Web/API/TextDecoder/bcd.json"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a> 接口描述了逆操作。</li>\n  <li><a href=\"/zh-CN/docs/Mozilla/Add-ons/Code_snippets/StringView\"><code>StringView</code></a> –基于类型数组的字符串的类似 C 的表示形式</li>\n  <li>一个<a href=\"https://code.google.com/p/stringencoding/\" class=\"external\" rel=\" noopener\">垫片</a>，允许在不支持它的浏览器使用这个接口。</li>\n  <li><a href=\"/zh-CN/docs/Components.utils.importGlobalProperties\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>Components.utils.importGlobalProperties</code></a></li>\n  <li><a href=\"https://nodejs.org/api/util.html#util_class_util_textdecoder\" class=\"external\" rel=\" noopener\">Node.js 支持从 v11.0.0 全局导出</a></li>\n</ul>"}}],"toc":[{"text":"例子","id":"例子"},{"text":"构造函数","id":"构造函数"},{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"相关链接","id":"相关链接"}],"summary":"TextDecoder 接口表示一个文本解码器，一个解码器只支持一种特定文本编码，例如 utf-8、iso-8859-2、koi8、cp1261，gbk 等等。解码器将字节流作为输入，并提供代码点流作为输出。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"TextDecoder","locale":"en-US","native":"English (US)"},{"title":"TextDecoder","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/textdecoder","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/textdecoder/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/TextDecoder","title":"TextDecoder"}],"pageTitle":"TextDecoder - Web API 接口参考 | MDN","noIndexing":false}}