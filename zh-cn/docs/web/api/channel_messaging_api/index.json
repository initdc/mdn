{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Channel Messaging API","mdn_url":"/zh-CN/docs/Web/API/Channel_Messaging_API","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Channel_Messaging_API\">Channel Messaging API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>指南</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Channel_Messaging_API/Using_channel_messaging\">Using channel messaging</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>接口</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MessageChannel\"><code>MessageChannel</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MessagePort\"><code>MessagePort</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>Channel Messaging API</strong> 允许两个不同的脚本运行在同一个文档的不同浏览器上下文（比如两个 iframe，或者文档主体和一个 iframe，使用 <a href=\"/zh-CN/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a> 的两个文档，或者两个 worker）来直接通讯，在每端使用一个端口（port）通过双向频道（channel）向彼此传递消息。</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 此特性在 <a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Worker</a> 中可用</p>\n</div>"}},{"type":"prose","value":{"id":"channel_通信的概念和用法","title":"Channel 通信的概念和用法","isH3":false,"content":"<p>使用 <a href=\"/zh-CN/docs/Web/API/MessageChannel/MessageChannel\" title=\"MessageChannel()\"><code>MessageChannel()</code></a> 构造函数来创建通讯信道。一旦创建，信道的两个端口即可通过 <a href=\"/zh-CN/docs/Web/API/MessageChannel/port1\"><code>MessageChannel.port1</code></a> 和 <a href=\"/zh-CN/docs/Web/API/MessageChannel/port2\"><code>MessageChannel.port2</code></a> 属性进行访问（都会返回 <a href=\"/zh-CN/docs/Web/API/MessagePort\"><code>MessagePort</code></a> 对象）。创建信道的应用程序使用 <code>port1</code>，在另一端的程序使用 <code>port2</code> —— 你向 <code>port2</code> 发送信息，然后携带 2 个参数（需要传递的消息，要传递所有权的对象，在这里是 port 自身）调用 <a href=\"/zh-CN/docs/Web/API/Window/postMessage\"><code>window.postMessage</code></a> 方法将端口信息传递到另一个浏览器上下文。</p>\n<p>当这些可传递的对象被传递后，他们就从之前所属的上下文中消失了。比如一个 port，一旦被发送，在原本的上下文中就再也不可用了。注意当前仅有 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> 和 <a href=\"/zh-CN/docs/Web/API/MessagePort\"><code>MessagePort</code></a> 对象可以被发送。</p>\n<p>另一个浏览器上下文可以使用 <a href=\"/zh-CN/docs/Web/API/MessagePort/message_event\"><code>MessagePort.onmessage</code></a> 监听信息，并使用事件的 <code>data</code> 属性获取消息内容。你可以通过 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessagePort/postMessage\"><code>MessagePort.postMessage</code> <small>(en-US)</small></a> 向原来的文档发送应答消息。</p>\n<p>当你想要停止通过信道发送消息时，你可以调用来关闭 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessagePort/close\"><code>MessagePort.close</code> <small>(en-US)</small></a> 端口。</p>\n<p>更多使用这个 API 的资料参见：<a href=\"/zh-CN/docs/Web/API/Channel_Messaging_API/Using_channel_messaging\">Using channel messaging</a> 。</p>"}},{"type":"prose","value":{"id":"channel_通信接口","title":"Channel 通信接口","isH3":false,"content":"<dl>\n  <dt id=\"messagechannel\"><a href=\"/zh-CN/docs/Web/API/MessageChannel\"><code>MessageChannel</code></a></dt>\n  <dd>\n    <p>创建一个新的发送消息的信道。</p>\n  </dd>\n  <dt id=\"messageport\"><a href=\"/zh-CN/docs/Web/API/MessagePort\"><code>MessagePort</code></a></dt>\n  <dd>\n    <p>控制消息信道的端口，允许从一个端口发送消息，并监听另一端消息的到来。</p>\n  </dd>\n  <dt id=\"portcollection\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>PortCollection</code></a></dt>\n  <dd>\n    <p><code>MessagePort</code> 数组，一种同时向多个端口广播消息的实验性解决方案。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":"<ul>\n  <li>我们在 Github 上发布了 <a href=\"https://github.com/mdn/dom-examples/tree/master/channel-messaging-basic\" class=\"external\" rel=\" noopener\">channel messaging basic demo</a>，在<a href=\"https://mdn.github.io/dom-examples/channel-messaging-basic/\" class=\"external\" rel=\" noopener\">这里</a>直接尝试。这个例子展示了一次页面和嵌入 <a href=\"/zh-CN/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> 间的真实而简易的消息传递。</li>\n  <li>你也可以参考 <a href=\"https://github.com/mdn/dom-examples/tree/master/channel-messaging-multimessage\" class=\"external\" rel=\" noopener\">多个消息 demo</a> (<a href=\"https://mdn.github.io/dom-examples/channel-messaging-multimessage/\" class=\"external\" rel=\" noopener\">在线演示</a>)。这个例子展示了稍微复杂些的设置，可以在主页面和 IFrame 之间传递多条消息。</li>\n</ul>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"query":"api.MessageChannel,api.MessagePort","specifications":[]}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"data":null,"query":"api.MessageChannel,api.MessagePort","browsers":null}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Channel_Messaging_API/Using_channel_messaging\">Using channel messaging</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Workers API</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Broadcast_Channel_API\">Broadcast Channel API</a></li>\n</ul>"}}],"toc":[{"text":"Channel 通信的概念和用法","id":"channel_通信的概念和用法"},{"text":"Channel 通信接口","id":"channel_通信接口"},{"text":"例子","id":"例子"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"Channel Messaging API 允许两个不同的脚本运行在同一个文档的不同浏览器上下文（比如两个 iframe，或者文档主体和一个 iframe，使用 SharedWorker 的两个文档，或者两个 worker）来直接通讯，在每端使用一个端口（port）通过双向频道（channel）向彼此传递消息。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Channel Messaging API","locale":"en-US","native":"English (US)"},{"title":"チャンネルメッセージング API","locale":"ja","native":"日本語"},{"title":"Channel Messaging API","locale":"ko","native":"한국어"},{"title":"Channel Messaging API","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/channel_messaging_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/channel_messaging_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Channel_Messaging_API","title":"Channel Messaging API"}],"pageTitle":"Channel Messaging API - Web API 接口参考 | MDN","noIndexing":false}}