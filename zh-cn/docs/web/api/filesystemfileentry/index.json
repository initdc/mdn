{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"FileSystemFileEntry","mdn_url":"/zh-CN/docs/Web/API/FileSystemFileEntry","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/FileSystemFileEntry/createWriter\"><code>createWriter()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/FileSystemFileEntry/file\"><code>file()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard warning\" id=\"sect1\"><p><strong>非标准:</strong> 该特性是非标准的，请尽量不要在生产环境中使用它！</p></div>\n<p><a href=\"/zh-CN/docs/DOM/File_API/File_System_API\">文件系统 API</a> 的 <strong><code>FileSystemFileEntry</code></strong> 接口表示文件系统中的文件。它提供了属性，描述文件的属性，以及 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/FileSystemFileEntry/file\"><code>file()</code> <small>(en-US)</small></a> 方法，它创建了可以用于读取文件的 <a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a> 对象。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 由于这是个非标准 API，它的规范当前并不在标准化过程中。重要的是要记住，并不是所有浏览器都实现了它，并且实现它的浏览器可能仅仅实现一小部分。点击 <a href=\"#browser_compatibility\">Browser compatibility</a> 来查看更多细节。</p>\n</div>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<p>从它的父接口 <a href=\"/zh-CN/docs/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> 继承属性，但是这个接口没有独特的属性。</p>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"file_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/FileSystemFileEntry/file\"><code>file()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>创建新的 <a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a> 对象，它可以用于读取文件。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"废弃的方法","title":"废弃的方法","isH3":true,"content":"<dl>\n  <dt id=\"createwriter_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/FileSystemFileEntry/createWriter\"><code>createWriter()</code> <small>(en-US)</small></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>创建新的 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>FileWriter</code></a> 对象，它允许写入由文件系统条目表示的对象。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"基本概念","title":"基本概念","isH3":false,"content":"<p>为了向文件写入内容，通过调用 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/FileSystemFileEntry/createWriter\"><code>createWriter()</code> <small>(en-US)</small></a> 创建 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>FileWriter</code></a> 对象。为了读取文件，通过调用 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/FileSystemFileEntry/file\"><code>file()</code> <small>(en-US)</small></a>，获取表示其内容的 <a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a> 对象。</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":true,"content":"<p>下面的代码创建了一个空文件，叫做 \"<code>log.txt\"</code> （如果不存在的话），并使用文本 \"Meow\" 来填充。在成功的回调中，设置了事件处理器，来处理 <code><a href=\"/en-US/docs/Web/API/Element/error_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">error (en-US)</a></code> <code>error</code> 和 <code><a href=\"/zh-CN/docs/Web/Reference/Events/writeend\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">writeend</a></code> 事件。通过创建 blob，向其追加文本，以及将 blob 传递给 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>FileWriter.write()</code></a>，文本数据写入了文件。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">onInitFs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  fs<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">getFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'log.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">create</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fileEntry</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// Create a FileWriter object for our FileSystemFileEntry (log.txt).</span>\n    fileEntry<span class=\"token punctuation\">.</span><span class=\"token function\">createWriter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fileWriter</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      fileWriter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onwriteend</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Write completed.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n      fileWriter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Write failed: '</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create a new Blob and write it to log.txt.</span>\n      <span class=\"token keyword\">var</span> bb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlobBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      bb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Meow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      fileWriter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>bb<span class=\"token punctuation\">.</span><span class=\"token function\">getBlob</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text/plain'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> errorHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> errorHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">requestFileSystem</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token constant\">TEMPORARY</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> onInitFs<span class=\"token punctuation\">,</span> errorHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/entries-api/#api-fileentry","title":"File and Directory Entries API"}],"query":"api.FileSystemFileEntry"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>这个 API 没有官方的 W3C 或者 WHATWG 规范。</p>"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.FileSystemFileEntry","dataURL":"/zh-CN/docs/Web/API/FileSystemFileEntry/bcd.json"}},{"type":"prose","value":{"id":"另见","title":"另见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/File_and_Directory_Entries_API\">文件和驱动器条目 API</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/File_and_Directory_Entries_API/Introduction\">文件系统 API 简介</a></li>\n</ul>"}}],"toc":[{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"基本概念","id":"基本概念"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"另见","id":"另见"}],"summary":"文件系统 API 的 FileSystemFileEntry 接口表示文件系统中的文件。它提供了属性，描述文件的属性，以及 file() (en-US) 方法，它创建了可以用于读取文件的 File 对象。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"FileSystemFileEntry","locale":"en-US","native":"English (US)"},{"title":"FileSystemFileEntry","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/filesystemfileentry","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/filesystemfileentry/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/FileSystemFileEntry","title":"FileSystemFileEntry"}],"pageTitle":"FileSystemFileEntry - Web API 接口参考 | MDN","noIndexing":false}}