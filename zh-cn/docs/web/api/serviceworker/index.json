{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ServiceWorker","mdn_url":"/zh-CN/docs/Web/API/ServiceWorker","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/ServiceWorker/scriptURL\"><code>scriptURL</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorker/state\"><code>state</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorker/error_event\"><code>error</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorker/statechange_event\"><code>statechange</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div> ServiceWorker API 的 <a href=\"/en-US/docs/Web/API/Service_Worker_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">ServiceWorker 接口 (en-US)</a> 提供一个对一个服务工作者的引用。多个浏览上下文（例如页面，工作者等）可以与相同的服务工作者相关联，每个都通过唯一的 ServiceWorker 对象。<p></p>\n<p>一个 ServiceWorker 对象在 <a href=\"/zh-CN/docs/Web/API/ServiceWorkerRegistration/active\"><code>ServiceWorkerRegistration.active</code></a> 属性和 <a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer/controller\"><code>ServiceWorkerContainer.controller</code></a> 属性中可用 — 这是一个激活并在控制页面的 service worker(service worker 成功注册，被控页面已经重新加载完毕.)</p>\n<p>ServiceWorker 接口被分配了一系列生命周期事件 --- 安装和激活 --- 以及功能型的事件，包括 fetch.一个 ServiceWorker 对象有一个与之关联的 <a href=\"/zh-CN/docs/Web/API/ServiceWorker/state\"><code>ServiceWorker.state</code></a>,指示着它的生命周期。</p>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<p><em>ServiceWorker 接口继承它父类<a href=\"/zh-CN/docs/Web/API/Worker\"><code>Worker</code></a>的属性。</em></p>\n<dl>\n  <dt id=\"serviceworker.scripturl\"><a href=\"/zh-CN/docs/Web/API/ServiceWorker/scriptURL\"><code>ServiceWorker.scriptURL</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回作为 <a href=\"/zh-CN/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> 一部分所定义的 ServiceWorker 序列化脚本 URL.这个 URL 必须和注册该 ServiceWorker 的文档处于同一域。</p>\n  </dd>\n  <dt id=\"serviceworker.state\"><a href=\"/zh-CN/docs/Web/API/ServiceWorker/state\"><code>ServiceWorker.state</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回 service worker 的状态。其值可能是如下之一:installing,installed,activating,activated 或者是 redundant.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"event_handlers","title":"Event handlers","isH3":true,"content":"<dl>\n  <dt id=\"serviceworker.onstatechange\"><a href=\"/zh-CN/docs/Web/API/ServiceWorker/statechange_event\"><code>ServiceWorker.onstatechange</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>一个一旦 <a href=\"/zh-CN/docs/Web/API/ServiceWorker/state\"><code>ServiceWorker.state</code></a> 发生改变时，即一个类型为 statechange 事件触发时就会被调用的 <a href=\"/zh-CN/docs/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> 属性。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<p><em>ServiceWorker 接口继承它父类 <a href=\"/zh-CN/docs/Web/API/Worker\"><code>Worker</code></a> 的方法 ,并带有一个 <a href=\"/zh-CN/docs/Web/API/Worker/terminate\"><code>Worker.terminate</code></a> 的异常 --- 它不应该从 service workers.ServiceWorker 中访问。</em></p>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":"<p>代码段来自<a href=\"https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/registration-events/index.html\" class=\"external\" rel=\" noopener\">service worker registration-events sample</a> (<a href=\"https://googlechrome.github.io/samples/service-worker/registration-events/\" class=\"external\" rel=\" noopener\">live demo</a>). 这段代码监听了<a href=\"/zh-CN/docs/Web/API/ServiceWorker/state\"><code>ServiceWorker.state</code></a> 的变化并且返回它的值。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'serviceWorker'</span> <span class=\"token keyword\">in</span> navigator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    navigator<span class=\"token punctuation\">.</span>serviceWorker<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'service-worker.js'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">scope</span><span class=\"token operator\">:</span> <span class=\"token string\">'./'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">registration</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> serviceWorker<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>registration<span class=\"token punctuation\">.</span>installing<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            serviceWorker <span class=\"token operator\">=</span> registration<span class=\"token punctuation\">.</span>installing<span class=\"token punctuation\">;</span>\n            document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#kind'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'installing'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>registration<span class=\"token punctuation\">.</span>waiting<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            serviceWorker <span class=\"token operator\">=</span> registration<span class=\"token punctuation\">.</span>waiting<span class=\"token punctuation\">;</span>\n            document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#kind'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'waiting'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>registration<span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            serviceWorker <span class=\"token operator\">=</span> registration<span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">;</span>\n            document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#kind'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serviceWorker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// logState(serviceWorker.state);</span>\n            serviceWorker<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'statechange'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// logState(e.target.state);</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Something went wrong during registration. The service-worker.js file</span>\n        <span class=\"token comment\">// might be unavailable or contain a syntax error.</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// The current browser doesn't support service workers.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#serviceworker-interface","title":"Service Workers 1"}],"query":"api.ServiceWorker"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.ServiceWorker","dataURL":"/zh-CN/docs/Web/API/ServiceWorker/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"https://serviceworke.rs\" class=\"external\" rel=\" noopener\">ServiceWorker Cookbook</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using Service Workers (en-US)</a></li>\n  <li><a href=\"https://github.com/mdn/sw-test\" class=\"external\" rel=\" noopener\">Service workers basic code example</a></li>\n  <li><a href=\"https://jakearchibald.github.io/isserviceworkerready/\" class=\"external\" rel=\" noopener\">Is ServiceWorker ready?</a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promises</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Web_Workers_API/Using_web_workers\">Using web workers</a></li>\n</ul>"}}],"toc":[{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"例子","id":"例子"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"一个 ServiceWorker 对象在 ServiceWorkerRegistration.active 属性和 ServiceWorkerContainer.controller 属性中可用 — 这是一个激活并在控制页面的 service worker(service worker 成功注册，被控页面已经重新加载完毕.)","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"ServiceWorker","locale":"en-US","native":"English (US)"},{"title":"ServiceWorker","locale":"fr","native":"Français"},{"title":"ServiceWorker","locale":"ja","native":"日本語"},{"title":"ServiceWorker","locale":"ko","native":"한국어"},{"title":"ServiceWorker","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/serviceworker","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/serviceworker/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/ServiceWorker","title":"ServiceWorker"}],"pageTitle":"ServiceWorker - Web API 接口参考 | MDN","noIndexing":false}}