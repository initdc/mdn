{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"InputEvent.data","mdn_url":"/zh-CN/docs/Web/API/InputEvent/data","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/InputEvent\"><code>InputEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/InputEvent/InputEvent\"><code>InputEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><em><code>data</code></em></li><li><a href=\"/zh-CN/docs/Web/API/InputEvent/dataTransfer\"><code>dataTransfer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/InputEvent/inputType\"><code>inputType</code></a></li><li><a href=\"/zh-CN/docs/Web/API/InputEvent/isComposing\"><code>isComposing</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InputEvent/getTargetRanges\"><code>getTargetRanges()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/UIEvent\"><code>UIEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 请注意，<strong><code>data</code></strong> 属性在使用键盘输入时会返回输入的字符内容，但在粘贴、拖动时可能会返回 <code>null</code>，这取决于浏览器。浏览器也可能把一些数据保存在 <a href=\"/zh-CN/docs/Web/API/InputEvent/dataTransfer\"><code>InputEvent.dataTransfer</code></a>，而不是该 <strong><code>data</code></strong> 属性中。</p>\n</div>\n<p><a href=\"/zh-CN/docs/Web/API/InputEvent\"><code>InputEvent</code></a> 接口中的只读属性 <strong><code>data</code></strong> 返回含有插入字符数据的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>。如果更改未插入文本（例如删除字符时），则其可能为空字符串。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<pre class=\"notranslate\">var string = inputEvent.data;\n</pre>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>。</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>在下面的简单示例中，我们在 <a href=\"/zh-CN/docs/Web/API/HTMLElement/input_event\">input</a> 事件上设置了一个事件监听器，以便在对 <a href=\"/zh-CN/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a> 元素的内容进行任何更改时（通过键入或粘贴），通过 <strong><code>InputEvent.data</code></strong> 属性检索添加的文本，并在 <code>&lt;input&gt;</code> 下面的段落中报告。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Some text to copy and paste.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>result<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> editable <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.result'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\neditable<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  result<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"Inputted text: \"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"示例\" id=\"frame_examples\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-CN/docs/Web/API/InputEvent/data/_sample_.examples.html\" loading=\"lazy\"></iframe>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/input-events/#dfn-data","title":"Input Events Level 2"}],"query":"api.InputEvent.data"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.InputEvent.data","dataURL":"/zh-CN/docs/Web/API/InputEvent/data/bcd.json"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"InputEvent 接口中的只读属性 data 返回含有插入字符数据的 DOMString。如果更改未插入文本（例如删除字符时），则其可能为空字符串。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"InputEvent.data","locale":"en-US","native":"English (US)"}],"source":{"folder":"zh-cn/web/api/inputevent/data","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/inputevent/data/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/InputEvent","title":"InputEvent"},{"uri":"/zh-CN/docs/Web/API/InputEvent/data","title":"InputEvent.data"}],"pageTitle":"InputEvent.data - Web API 接口参考 | MDN","noIndexing":false}}