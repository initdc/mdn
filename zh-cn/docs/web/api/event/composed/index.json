{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Event.composed","mdn_url":"/zh-CN/docs/Web/API/Event/composed","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Event/Event\"><code>Event()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Event/bubbles\"><code>bubbles</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/cancelable\"><code>cancelable</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Event/cancelBubble\"><code>cancelBubble</code></a></li><li><em><code>composed</code></em></li><li><a href=\"/zh-CN/docs/Web/API/Event/currentTarget\"><code>currentTarget</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/defaultPrevented\"><code>defaultPrevented</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/eventPhase\"><code>eventPhase</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Event/explicitOriginalTarget\"><code>explicitOriginalTarget</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/isTrusted\"><code>isTrusted</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Event/originalTarget\"><code>originalTarget</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Event/returnValue\"><code>returnValue</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Event/srcElement\"><code>srcElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/target\"><code>target</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/timeStamp\"><code>timeStamp</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Event/composedPath\"><code>composedPath()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Event/initEvent\"><code>initEvent()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/preventDefault\"><code>preventDefault()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/stopImmediatePropagation\"><code>stopImmediatePropagation()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/stopPropagation\"><code>stopPropagation()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a> 接口的只读属性 <strong><code>composed</code></strong> 返回一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> 值，用来指示该事件是否可以从 Shadow DOM 传递到一般的 DOM。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 此属性以前命名为<code>scoped</code>。</p>\n</div>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> composed <span class=\"token operator\">=</span> Event<span class=\"token punctuation\">.</span>composed<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"值","title":"值","isH3":true,"content":"<p>如果返回的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> 值为 <code>true</code>，表明当事件到达 shadow DOM 的根节点（也就是 shadow DOM 中事件开始传播的第一个节点）时，事件可以从 shadow DOM 传递到一般 DOM。当然，事件要具有可传播性，即该事件的 <a href=\"/zh-CN/docs/Web/API/Event/bubbles\" title=\"bubbles\"><code>bubbles</code></a> 属性必须为 <code>true</code>。你也可以通过调用 <a href=\"/zh-CN/docs/Web/API/Event/composedPath\" title=\"composedPath()\"><code>composedPath()</code></a> 来查看事件从 shadow DOM 传播到普通 DOM 的路径。</p>\n<p>如果属性值为 <code>false</code>，那么事件将不会跨越 shadow DOM 的边界传播。</p>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":"<p>在我们的组合组合路径示例（实时查看）中，我们定义了两个不重要的自定义元素 <code>&lt;open-shadow&gt;</code> 和 <code>&lt;closed-shadow&gt;</code>，它们都将获取其 <code>text</code> 属性的内容并将它们作为元素的文本内容插入到元素的 shadow DOM 中。两者之间的唯一区别是它们的阴影根附加了它们的模式分别设置为 open 和 closed。</p>\n<p>第一个定义如下所示：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>customElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'open-shadow'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> HTMLElement <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">let</span> pElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      pElem<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">let</span> shadowRoot <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>pElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>我们将他们插入我们的页面当中：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>open-shadow</span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>I have an open shadow root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>open-shadow</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>closed-shadow</span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>I have a closed shadow root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>closed-shadow</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>然后在 <code>html</code> 标签上监听 click 事件：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>composed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">composedPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>当我们点击 <code>&lt;open-shadow&gt;</code> 和 <code>&lt;closed-shadow&gt;</code> 元素时候我们会注意到：</p>\n<ol>\n  <li><code>composed</code> 属性返回 <code>true</code> 因为<code>click</code> 事件总是能总是能够跨越<code>Shadow DOM</code>的边界传播。</li>\n  <li>你应该会注意到，两个元素返回<code>composedPath</code>的值不同。</li>\n</ol>\n<p><code>&lt;open-shadow&gt;</code> 元素的组合路径是：</p>\n<pre class=\"notranslate\">Array [ p, ShadowRoot, open-shadow, body, html, HTMLDocument https://mdn.github.io/web-components-examples/composed-composed-path/, Window ]\n</pre>\n<p>而 <code>&lt;closed-shadow&gt;</code> 元素的组合路径是：</p>\n<pre class=\"notranslate\">Array [ closed-shadow, body, html, HTMLDocument https://mdn.github.io/web-components-examples/composed-composed-path/, Window ]\n</pre>\n<p>第二种情况下，监听器只会捕获到 <code>&lt;closed-shadow&gt;</code> 元素本身，而不会去继续捕捉该元素中的节点。</p>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#ref-for-dom-event-composed①","title":"DOM Standard"}],"query":"api.Event.composed"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Event.composed","dataURL":"/zh-CN/docs/Web/API/Event/composed/bcd.json"}}],"toc":[{"text":"语法","id":"语法"},{"text":"例子","id":"例子"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"Event 接口的只读属性 composed 返回一个 Boolean 值，用来指示该事件是否可以从 Shadow DOM 传递到一般的 DOM。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Event.composed","locale":"en-US","native":"English (US)"},{"title":"Event.composed","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/event/composed","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/event/composed/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Event","title":"Event"},{"uri":"/zh-CN/docs/Web/API/Event/composed","title":"Event.composed"}],"pageTitle":"Event.composed - Web API 接口参考 | MDN","noIndexing":false}}