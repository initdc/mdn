{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Comparison of Event Targets","mdn_url":"/zh-CN/docs/Web/API/Event/Comparison_of_Event_Targets","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Event/Event\"><code>Event()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Event/bubbles\"><code>bubbles</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/cancelable\"><code>cancelable</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Event/cancelBubble\"><code>cancelBubble</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/composed\"><code>composed</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/currentTarget\"><code>currentTarget</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/defaultPrevented\"><code>defaultPrevented</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/eventPhase\"><code>eventPhase</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Event/explicitOriginalTarget\"><code>explicitOriginalTarget</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/isTrusted\"><code>isTrusted</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Event/originalTarget\"><code>originalTarget</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Event/returnValue\"><code>returnValue</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Event/srcElement\"><code>srcElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/target\"><code>target</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/timeStamp\"><code>timeStamp</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Event/composedPath\"><code>composedPath()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Event/initEvent\"><code>initEvent()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/preventDefault\"><code>preventDefault()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/stopImmediatePropagation\"><code>stopImmediatePropagation()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Event/stopPropagation\"><code>stopPropagation()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":"event_targets","title":"Event targets","isH3":true,"content":"<p>It's easy to get confused about which target to examine when writing an event handler. This article should clarify the use of the target properties.</p>\n<p>There are 5 targets to consider:</p>\n<table>\n  <tbody>\n    <tr>\n      <th>Property</th>\n      <th>Defined in</th>\n      <th>Purpose</th>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/DOM/event.target\">event.target</a></td>\n      <td><a href=\"https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface\" class=\"external\" rel=\" noopener\">DOM Event Interface</a></td>\n      <td>\n        <p>\n          The DOM element on the lefthand side of the call that triggered this\n          event, eg:\n        </p>\n        <pre class=\"eval notranslate\"><em>element</em>.dispatchEvent(<em>event</em>)\n</pre>\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/DOM/event.currentTarget\">event.currentTarget</a></td>\n      <td><a href=\"https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface\" class=\"external\" rel=\" noopener\">DOM Event Interface</a></td>\n      <td>\n        The\n        <a href=\"https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget\" class=\"external\" rel=\" noopener\"><code>EventTarget</code></a>\n        whose\n        <a href=\"https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventListener\" class=\"external\" rel=\" noopener\"><code>EventListeners</code></a>\n        are currently being processed. As the event capturing and bubbling\n        occurs this value changes.\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/DOM/event.relatedTarget\">event.relatedTarget</a></td>\n      <td><a href=\"https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-MouseEvent\" class=\"external\" rel=\" noopener\">DOM MouseEvent Interface</a></td>\n      <td>Identifies a secondary target for the event.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/DOM/event.explicitOriginalTarget\">event.explicitOriginalTarget</a></td>\n      <td><a href=\"https://dxr.mozilla.org/mozilla-central/source/dom/webidl/Event.webidl\" class=\"external\" rel=\" noopener\">Event.webidl</a></td>\n      <td>\n        <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> If the event was retargeted for\n        some reason other than an anonymous boundary crossing, this will be set\n        to the target before the retargeting occurs. For example, mouse events\n        are retargeted to their parent node when they happen over text nodes\n        (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=185889\" class=\"external\" rel=\" noopener\">bug&nbsp;185889</a>), and in that case <code>.target</code> will\n        show the parent and <code>.explicitOriginalTarget</code> will show the\n        text node.<br>Unlike <code>.originalTarget</code>,\n        <code>.explicitOriginalTarget</code> will never contain anonymous\n        content.\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/DOM/event.originalTarget\">event.originalTarget</a></td>\n      <td><a href=\"https://dxr.mozilla.org/mozilla-central/source/dom/webidl/Event.webidl\" class=\"external\" rel=\" noopener\">Event.webidl</a></td>\n      <td>\n        <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> The original target of the event,\n        before any retargetings. See\n        <a href=\"/zh-CN/docs/XBL/XBL_1.0_Reference/Anonymous_Content#Event_Flow_and_Targeting\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Anonymous Content#Event_Flow_and_Targeting</a>\n        for details.\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"use_of_explicitoriginaltarget_and_originaltarget","title":"Use of <code>explicitOriginalTarget</code> and <code>originalTarget</code>","isH3":true,"content":"<p>TODO: Only available in a Mozilla-based browser? TODO: Only suitable for extension-developers?</p>","titleAsText":"Use of explicitOriginalTarget and originalTarget"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":true,"content":"<pre class=\"notranslate\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;title&gt;Comparison of Event Targets&lt;/title&gt;\n    &lt;style&gt;\n        table {\n            border-collapse: collapse;\n            height: 150px;\n            width: 100%;\n        }\n        td {\n            border: 1px solid #ccc;\n            font-weight: bold;\n            padding: 5px;\n            min-height: 30px;\n        }\n        .standard {\n            background-color: #99ff99;\n        }\n        .non-standard {\n            background-color: #902D37;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;table&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;td class=\"standard\"&gt;Original target dispatching the event &lt;small&gt;event.target&lt;/small&gt;&lt;/td&gt;\n            &lt;td class=\"standard\"&gt;Target who's event listener is being processed &lt;small&gt;event.currentTarget&lt;/small&gt;&lt;/td&gt;\n            &lt;td class=\"standard\"&gt;Identify other element (if any) involved in the event &lt;small&gt;event.relatedTarget&lt;/small&gt;&lt;/td&gt;\n            &lt;td class=\"non-standard\"&gt;If there was a retargetting of the event for some reason &lt;small&gt; event.explicitOriginalTarget&lt;/small&gt; contains the target before retargetting (never contains anonymous targets)&lt;/td&gt;\n            &lt;td class=\"non-standard\"&gt;If there was a retargetting of the event for some reason &lt;small&gt; event.originalTarget&lt;/small&gt; contains the target before retargetting (may contain anonymous targets)&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tr&gt;\n        &lt;td id=\"target\"&gt;&lt;/td&gt;\n        &lt;td id=\"currentTarget\"&gt;&lt;/td&gt;\n        &lt;td id=\"relatedTarget\"&gt;&lt;/td&gt;\n        &lt;td id=\"explicitOriginalTarget\"&gt;&lt;/td&gt;\n        &lt;td id=\"originalTarget\"&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n&lt;p&gt;Clicking on the text will show the difference between explicitOriginalTarget, originalTarget and target&lt;/p&gt;\n&lt;script&gt;\n    function handleClicks(e) {\n        document.getElementById('target').innerHTML = e.target;\n        document.getElementById('currentTarget').innerHTML = e.currentTarget;\n        document.getElementById('relatedTarget').innerHTML = e.relatedTarget;\n        document.getElementById('explicitOriginalTarget').innerHTML = e.explicitOriginalTarget;\n        document.getElementById('originalTarget').innerHTML = e.originalTarget;\n    }\n\n    function handleMouseover(e) {\n        document.getElementById('target').innerHTML = e.target;\n        document.getElementById('relatedTarget').innerHTML = e.relatedTarget;\n    }\n\n    document.addEventListener('click', handleClicks, false);\n    document.addEventListener('mouseover', handleMouseover, false);\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>"}},{"type":"prose","value":{"id":"use_of_target_and_relatedtarget","title":"Use of <code>target</code> and <code>relatedTarget</code>","isH3":true,"content":"<p>The <code>relatedTarget</code> property for the <code>mouseover</code> event holds the node that the mouse was previously over. For the <code>mouseout</code> event, it holds the node that the mouse moved to.</p>\n<table>\n  <thead>\n    <tr>\n      <th>Event type</th>\n      <th><a href=\"/zh-CN/docs/DOM/event.target\">event.target</a></th>\n      <th><a href=\"/zh-CN/docs/DOM/event.relatedTarget\">event.relatedTarget</a></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>mouseover</code></td>\n      <td>the EventTarget which the pointing device entered</td>\n      <td>the EventTarget which the pointing device exited</td>\n    </tr>\n    <tr>\n      <td><code>mouseout</code></td>\n      <td>the EventTarget which the pointing device exited</td>\n      <td>the EventTarget which the pointing device entered</td>\n    </tr>\n  </tbody>\n</table>\n<p>TODO: Also needs descriptions about <code>dragenter</code> and <code>dragexit</code> events.</p>\n<h4 id=\"example\">Example</h4>\n<pre class=\"notranslate\">&lt;hbox id=\"outer\"&gt;\n  &lt;hbox id=\"inner\"\n        onmouseover=\"dump('mouseover ' + event.relatedTarget.id + ' &gt; ' + event.target.id + '\\n');\"\n        onmouseout=\"dump('mouseout  ' + event.target.id + ' &gt; ' + event.relatedTarget.id + '\\n');\"\n        style=\"margin: 100px; border: 10px solid black; width: 100px; height: 100px;\" /&gt;\n&lt;/hbox&gt;\n</pre>","titleAsText":"Use of target and relatedTarget"}}],"toc":[],"summary":"It's easy to get confused about which target to examine when writing an event handler. This article should clarify the use of the target properties.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Comparison of Event Targets","locale":"en-US","native":"English (US)"},{"title":"Comparaison des cibles d'évènements","locale":"fr","native":"Français"},{"title":"イベントターゲットの比較","locale":"ja","native":"日本語"},{"title":"Comparativo entre Event Targets","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Сравнение разных Event Targets","locale":"ru","native":"Русский"},{"title":"Comparison of Event Targets","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/event/comparison_of_event_targets","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/event/comparison_of_event_targets/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Event","title":"Event"},{"uri":"/zh-CN/docs/Web/API/Event/Comparison_of_Event_Targets","title":"Comparison of Event Targets"}],"pageTitle":"Comparison of Event Targets - Web API 接口参考 | MDN","noIndexing":false}}