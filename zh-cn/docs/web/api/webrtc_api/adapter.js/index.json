{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Improving compatibility using WebRTC adapter.js","mdn_url":"/zh-CN/docs/Web/API/WebRTC_API/adapter.js","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n <ol>\n  <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API\"><strong>WebRTC API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>WebRTC Guides</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Architecture\">WebRTC Architecture</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/WebRTC_Basics\">WebRTC Basics</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Protocols\">WebRTC Protocols</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Connectivity\">Dealing with connectivity</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Overview\">Overview of WebRTC interfaces</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Session_lifetime\">Lifetime of a WebRTC Session</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Using_data_channels\">Using data channels</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>WebRTC Tutorials</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/adapter.js\">Interoperability with adapter.js</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Taking_still_photos\">Taking still photos from the camera</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Simple_RTCDataChannel_sample\">A simple data channel example</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs\">Building an internet-connected phone with Peer.js</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Interfaces</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/MediaStream\"><code>MediaStream</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/MediaStreamEvent\"><code>MediaStreamEvent</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/zh-CN/docs/MDN\">Documentation:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Contribute</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/MDN\">The MDN project</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>虽然 WebRTC <a href=\"https://www.w3.org/TR/webrtc/\" class=\"external\" rel=\" noopener\">规范</a>已经相对健全稳固了，但是并不是所有的浏览器都实现了它所有的功能。除此之外。有些浏览器需要在一些或者所有的 WebRTC API 上添加前缀才能正常使用。尽管你可以自己写代码解决这种问题，但是还有一个比较简单的方法。WebRTC 组织在 github 上提供了一个 <a href=\"https://github.com/webrtc/adapter/\" class=\"external\" rel=\" noopener\">WebRTC 适配器</a>（WebRTC adapter）来解决在不同浏览器上实现 WebRTC 的兼容性问题。这个适配器是一个 JavaScript 垫片，它可以让你根据 WebRTC 规范描述的那样去写代码，在所有支持 WebRTC 的浏览器中不用去写前缀或者其他兼容性解决方法。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 由于 WebRTC 和支持的浏览器中的 API 的功能和命名在不断变动，推荐使用这个适配器。</p>\n</div>\n<p>这个 adapter（适配器）是基于 BSD 开源协议的。</p>"}},{"type":"prose","value":{"id":"adapter.js_是干什么的","title":"adapter.js 是干什么的","isH3":false,"content":"<p>对于每个支持 WebRTC 的浏览器的各个版本，adapter.js 添加必要的 polyfills（填充），使用没有前缀的 API，以及使用一些修改让浏览器可以运行根据 WebRTC 规范写的代码。</p>\n<p>举个例子，在火狐浏览器版本号 38 之前，adapter 增加了<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnection.urls</code></a>属性；火狐浏览器并不原生的支持这个属性直到 38 版本，然而在谷歌浏览器中如果 API 不支持<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> 就添加支持。这只是一些例子；当然还有其他措施来实现这种统一 API。</p>\n<p>WebRTC adapter 现在支持火狐、谷歌、和 Edge 浏览器</p>"}},{"type":"prose","value":{"id":"使用_adapter.js","title":"使用 adapter.js","isH3":false,"content":"<p>要使用 adapter.js，你需要在使用 WebRTC APIs 的每个页面都引入 adapter.js ：</p>\n<ol>\n  <li>从 GitHub 上下载一个最新<a href=\"https://github.com/webrtc/adapter/tree/master/release\" class=\"external\" rel=\" noopener\">adapter.js</a>的副本。</li>\n  <li>在你的网站文件目录里添加这个文件（比如在放在 scripts 目录下）。</li>\n  <li>在你的项目里包含这个文件：&lt;script src=\"adapter.js\"&gt;&lt;/script&gt;</li>\n  <li>写代码，按照 WebRTC APIs 规范去写，知道你的代码应该在所有浏览器上工作。</li>\n  <li>注意，即使有一个像这样优秀的 adapter 并不意味着你不需要在不同的浏览器上测试代码（以及在同一个浏览器中的不同版本）。</li>\n</ol>"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/webrtc/adapter\" class=\"external\" rel=\" noopener\">The WebRTC adapter project on GitHub</a></li>\n</ul>"}}],"toc":[{"text":"adapter.js 是干什么的","id":"adapter.js_是干什么的"},{"text":"使用 adapter.js","id":"使用_adapter.js"},{"text":"相关链接","id":"相关链接"}],"summary":"虽然 WebRTC 规范已经相对健全稳固了，但是并不是所有的浏览器都实现了它所有的功能。除此之外。有些浏览器需要在一些或者所有的 WebRTC API 上添加前缀才能正常使用。尽管你可以自己写代码解决这种问题，但是还有一个比较简单的方法。WebRTC 组织在 github 上提供了一个 WebRTC 适配器（WebRTC adapter）来解决在不同浏览器上实现 WebRTC 的兼容性问题。这个适配器是一个 JavaScript 垫片，它可以让你根据 WebRTC 规范描述的那样去写代码，在所有支持 WebRTC 的浏览器中不用去写前缀或者其他兼容性解决方法。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Improving compatibility using WebRTC adapter.js","locale":"en-US","native":"English (US)"},{"title":"Improving compatibility using WebRTC adapter.js","locale":"ko","native":"한국어"},{"title":"Увеличиваем совместимость с WebRTC adapter.js","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/webrtc_api/adapter.js","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/webrtc_api/adapter.js/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/WebRTC_API","title":"WebRTC API"},{"uri":"/zh-CN/docs/Web/API/WebRTC_API/adapter.js","title":"Improving compatibility using WebRTC adapter.js"}],"pageTitle":"Improving compatibility using WebRTC adapter.js - Web API 接口参考 | MDN","noIndexing":false}}