{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"WebRTC 协议介绍","mdn_url":"/zh-CN/docs/Web/API/WebRTC_API/Protocols","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n <ol>\n  <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API\"><strong>WebRTC API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>WebRTC Guides</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Architecture\">WebRTC Architecture</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/WebRTC_Basics\">WebRTC Basics</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Protocols\">WebRTC Protocols</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Connectivity\">Dealing with connectivity</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Overview\">Overview of WebRTC interfaces</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Session_lifetime\">Lifetime of a WebRTC Session</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Using_data_channels\">Using data channels</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>WebRTC Tutorials</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/adapter.js\">Interoperability with adapter.js</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Taking_still_photos\">Taking still photos from the camera</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Simple_RTCDataChannel_sample\">A simple data channel example</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs\">Building an internet-connected phone with Peer.js</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Interfaces</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/MediaStream\"><code>MediaStream</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/MediaStreamEvent\"><code>MediaStreamEvent</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/zh-CN/docs/MDN\">Documentation:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Contribute</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/MDN\">The MDN project</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>本文介绍了基于 WebRTC API 构建的协议。</p>"}},{"type":"prose","value":{"id":"ice","title":"ICE","isH3":false,"content":"<p>交互式连接设施<a href=\"http://en.wikipedia.org/wiki/Interactive_Connectivity_Establishment\" class=\"external\" rel=\" noopener\">Interactive Connectivity Establishment (ICE)</a> 是一个允许你的浏览器和对端浏览器建立连接的协议框架。在实际的网络当中，有很多原因能导致简单的从 A 端到 B 端直连不能如愿完成。这需要绕过阻止建立连接的防火墙，给你的设备分配一个唯一可见的地址（通常情况下我们的大部分设备没有一个固定的公网地址），如果路由器不允许主机直连，还得通过一台服务器转发数据。ICE 通过使用以下几种技术完成上述工作。</p>"}},{"type":"prose","value":{"id":"stun","title":"STUN","isH3":false,"content":"<p>NAT 的会话穿越功能<a href=\"http://en.wikipedia.org/wiki/STUN\" class=\"external\" rel=\" noopener\">Session Traversal Utilities for <strong>NAT</strong> (STU<strong>N</strong>)</a> (缩略语的最后一个字母是 NAT 的首字母) 是一个允许位于 NAT 后的客户端找出自己的公网地址，判断出路由器阻止直连的限制方法的协议。</p>\n<p>客户端通过给公网的 STUN 服务器发送请求获得自己的公网地址信息，以及是否能够被（穿过路由器）访问。</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/WebRTC_API/Protocols/webrtc-stun.png\" alt=\"An interaction between two users of a WebRTC application involving a STUN server.\" width=\"259\" height=\"378\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"nat","title":"NAT","isH3":false,"content":"<p>网络地址转换协议<a href=\"http://en.wikipedia.org/wiki/NAT\" class=\"external\" rel=\" noopener\">Network Address Translation (NAT)</a> 用来给你的（私网）设备映射一个公网的 IP 地址的协议。一般情况下，路由器的 WAN 口有一个公网 IP，所有连接这个路由器 LAN 口的设备会分配一个私有网段的 IP 地址（例如 192.168.1.3）。私网设备的 IP 被映射成路由器的公网 IP 和唯一的端口，通过这种方式不需要为每一个私网设备分配不同的公网 IP，但是依然能被外网设备发现。</p>\n<p>一些路由器严格地限定了部分私网设备的对外连接。这种情况下，即使 STUN 服务器识别了该私网设备的公网 IP 和端口的映射，依然无法和这个私网设备建立连接。这种情况下就需要转向 TURN 协议。</p>"}},{"type":"prose","value":{"id":"turn","title":"TURN","isH3":false,"content":"<p>一些路由器使用一种“对称型 NAT”的 NAT 模型。这意味着路由器只接受和对端先前建立的连接（就是下一次请求建立新的连接映射）。</p>\n<p>NAT 的中继穿越方式<a href=\"http://en.wikipedia.org/wiki/TURN\" class=\"external\" rel=\" noopener\">Traversal Using Relays around NAT (TURN)</a> 通过 TURN 服务器中继所有数据的方式来绕过“对称型 NAT”。你需要在 TURN 服务器上创建一个连接，然后告诉所有对端设备发包到服务器上，TURN 服务器再把包转发给你。很显然这种方式是开销很大的，所以只有在没得选择的情况下采用。</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/WebRTC_API/Protocols/webrtc-turn.png\" alt=\"An interaction between two users of a WebRTC application involving STUN and TURN servers.\" width=\"295\" height=\"297\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"sdp","title":"SDP","isH3":false,"content":"<p>会话描述协议<a href=\"http://en.wikipedia.org/wiki/Session_Description_Protocol\" class=\"external\" rel=\" noopener\">Session Description Protocol (SDP)</a> 是一个描述多媒体连接内容的协议，例如分辨率，格式，编码，加密算法等。所以在数据传输时两端都能够理解彼此的数据。本质上，这些描述内容的元数据并不是媒体流本身。</p>\n<p>从技术上讲，SDP 并不是一个真正的协议，而是一种数据格式，用于描述在设备之间共享媒体的连接。</p>\n<p>记录 SDP 远远超出了本文档的范围。但是，这里有几件事值得注意。</p>"}},{"type":"prose","value":{"id":"结构体","title":"结构体","isH3":true,"content":"<p>SDP 由一行或多行 UTF-8 文本组成，每行以一个字符的类型开头，后跟等号（“ =”），然后是包含值或描述的结构化文本，其格式取决于类型。以给定字母开头的文本行通常称为“字母行”。例如，提供媒体描述的行的类型为“ m”，因此这些行称为“ m 行”。</p>"}},{"type":"prose","value":{"id":"获取更多信息","title":"获取更多信息","isH3":true,"content":"<p>要了解有关 SDP 的更多信息，请参见以下有用的资源：</p>\n<ul>\n  <li>规范: <a href=\"https://datatracker.ietf.org/doc/html/rfc4566\" class=\"external\" rel=\" noopener\">RFC 4566: SDP: Session Description Protocol</a></li>\n  <li><a href=\"https://www.iana.org/assignments/sip-parameters/sip-parameters.xhtml\" class=\"external\" rel=\" noopener\">IANA registry of SDP parameters</a></li>\n</ul>"}}],"toc":[{"text":"ICE","id":"ice"},{"text":"STUN","id":"stun"},{"text":"NAT","id":"nat"},{"text":"TURN","id":"turn"},{"text":"SDP","id":"sdp"}],"summary":"本文介绍了基于 WebRTC API 构建的协议。","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Introduction to WebRTC protocols","locale":"en-US","native":"English (US)"},{"title":"WebRTC protocols","locale":"es","native":"Español"},{"title":"WebRTC プロトコル入門","locale":"ja","native":"日本語"},{"title":"WebRTC 프로토콜 소개","locale":"ko","native":"한국어"},{"title":"Introdução aos protocolos WebRTC","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Введение в протоколы WebRTC","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/webrtc_api/protocols","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/webrtc_api/protocols/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/WebRTC_API","title":"WebRTC API"},{"uri":"/zh-CN/docs/Web/API/WebRTC_API/Protocols","title":"WebRTC 协议介绍"}],"pageTitle":"WebRTC 协议介绍 - Web API 接口参考 | MDN","noIndexing":false}}