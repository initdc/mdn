{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ShadowRoot","mdn_url":"/zh-CN/docs/Web/API/ShadowRoot","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/ShadowRoot\"><code>ShadowRoot</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ShadowRoot/activeElement\"><code>activeElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ShadowRoot/adoptedStyleSheets\"><code>adoptedStyleSheets</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ShadowRoot/delegatesFocus\"><code>delegatesFocus</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ShadowRoot/fullscreenElement\"><code>fullscreenElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ShadowRoot/host\"><code>host</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ShadowRoot/innerHTML\"><code>innerHTML</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ShadowRoot/mode\"><code>mode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ShadowRoot/pictureInPictureElement\"><code>pictureInPictureElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ShadowRoot/pointerLockElement\"><code>pointerLockElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ShadowRoot/styleSheets\"><code>styleSheets</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ShadowRoot/getAnimations\"><code>getAnimations()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Shadow DOM API 的 <strong><code>ShadowRoot</code></strong> 接口是一个 DOM 子树的根节点，它与文档的主 DOM 树分开渲染。</p>\n<p>你可以通过使用一个元素的 <a href=\"/zh-CN/docs/Web/API/Element/shadowRoot\"><code>Element.shadowRoot</code></a> 属性来检索它的参考，假设它是由 <a href=\"/zh-CN/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a> 创建的并使 <code>mode</code> 设置为 <code>open</code>.</p>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<dl>\n  <dt id=\"shadowroot.delegatesfocus\"><a href=\"/zh-CN/docs/Web/API/ShadowRoot/delegatesFocus\"><code>ShadowRoot.delegatesFocus</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>返回一个 boolean 值表明在 shadow 添加时 delegatesFocus 是否被设置 (see <a href=\"/zh-CN/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a>)</p>\n  </dd>\n  <dt id=\"shadowroot.host_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ShadowRoot/host\"><code>ShadowRoot.host</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p><code>ShadowRoot</code> 附加的宿主 DOM 元素。</p>\n  </dd>\n  <dt id=\"shadowroot.innerhtml\"><a href=\"/zh-CN/docs/Web/API/ShadowRoot/innerHTML\"><code>ShadowRoot.innerHTML</code></a></dt>\n  <dd>\n    <p><code>ShadowRoot</code> 内部的 DOM 树。</p>\n  </dd>\n  <dt id=\"shadowroot.mode\"><a href=\"/zh-CN/docs/Web/API/ShadowRoot/mode\"><code>ShadowRoot.mode</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p><code>ShadowRoot</code> 的模式——可以是 <code>open</code> 或者 <code>closed</code>。这定义了 shadow root 的内部实现是否可被 JavaScript 访问及修改 — 也就是说，该实现是否公开，例如，<a href=\"/zh-CN/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> 标签内部实现无法被 JavaScript 访问及修改。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"从_documentorshadowroot_中包含的属性","title":"从 DocumentOrShadowRoot 中包含的属性","isH3":true,"content":"<p><em><code>ShadowRoot</code> 接口包含了下列从<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>DocumentOrShadowRoot</code></a> mixin 中定义的属性。请注意它现在仅在 Chrome 浏览器中应用; 其它的浏览器仍在<a href=\"/zh-CN/docs/Web/API/Document\"><code>Document</code></a>接口实现。</em></p>\n<dl>\n  <dt id=\"documentorshadowroot.activeelement\"><a href=\"/zh-CN/docs/Web/API/Document/activeElement\"><code>DocumentOrShadowRoot.activeElement</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回含有获取焦点了的 shadow tree 的 <a href=\"/zh-CN/docs/Web/API/Element\"><code>Element</code></a></p>\n  </dd>\n  <dt id=\"documentorshadowroot.stylesheets\"><a href=\"/zh-CN/docs/Web/API/Document/styleSheets\"><code>DocumentOrShadowRoot.styleSheets</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回 <a href=\"/zh-CN/docs/Web/API/CSSStyleSheet\"><code>CSSStyleSheet</code></a> 的 <a href=\"/zh-CN/docs/Web/API/StyleSheetList\"><code>StyleSheetList</code></a> 对象，用于代表通过链接加载到文档中或内嵌的样式表。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<p><em><code>ShadowRoot</code> 接口包含了下列几个在 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>DocumentOrShadowRoot</code></a> mixin 中定义的方法。请注意它现在仅在 Chrome 浏览器中应用; 其它的浏览器仍在<a href=\"/zh-CN/docs/Web/API/Document\"><code>Document</code></a>接口实现。</em></p>\n<dl>\n  <dt id=\"documentorshadowroot.getselection\"><a href=\"/zh-CN/docs/Web/API/Document/getSelection\"><code>DocumentOrShadowRoot.getSelection()</code></a></dt>\n  <dd>\n    <p>返回一个 <a href=\"/zh-CN/docs/Web/API/Selection\"><code>Selection</code></a> 类来表明用户选择的文本选区或者光标所在的位置</p>\n  </dd>\n  <dt id=\"documentorshadowroot.elementfrompoint\"><a href=\"/zh-CN/docs/Web/API/Document/elementFromPoint\"><code>DocumentOrShadowRoot.elementFromPoint()</code></a></dt>\n  <dd>\n    <p>返回在指定坐标最上层的元素。</p>\n  </dd>\n  <dt id=\"documentorshadowroot.elementsfrompoint\"><a href=\"/zh-CN/docs/Web/API/Document/elementsFromPoint\"><code>DocumentOrShadowRoot.elementsFromPoint()</code></a></dt>\n  <dd>\n    <p>返回一个包含所有在指定位置上的元素的 Array</p>\n  </dd>\n  <dt id=\"documentorshadowroot.caretpositionfrompoint_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Document/caretPositionFromPoint\"><code>DocumentOrShadowRoot.caretPositionFromPoint()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>返回一个 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CaretPosition\"><code>CaretPosition</code> <small>(en-US)</small></a> 对象，包括包含了光标的 DOM 节点，以及光标在该节点中的字符偏移量</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":"<p>下面的这段代码是从我们的 <a href=\"https://github.com/mdn/web-components-examples/tree/master/life-cycle-callbacks\" class=\"external\" rel=\" noopener\">life-cycle-callbacks</a> 示例 (<a href=\"https://mdn.github.io/web-components-examples/life-cycle-callbacks\" class=\"external\" rel=\" noopener\">查看在线示例</a>) 中提取出来的，它创建了一个由元素的属性指定的大小相等的正方形。</p>\n<p>Inside the <code>&lt;custom-square&gt;</code> element's class definition we include some life cycle callbacks that make a call to an external function, <code>upateStyle()</code>, which actually applies the size and color to the element. You'll see that we are passing it <code>this</code> (the custom element itself) as a parameter.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">connectedCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Custom square element added to page.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">updateStyle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">attributeChangedCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> oldValue<span class=\"token punctuation\">,</span> newValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Custom square element attributes changed.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">updateStyle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>In the <code>updateStyle()</code> function itself, we get a reference to the shadow DOM using <a href=\"/zh-CN/docs/Web/API/Element/shadowRoot\"><code>Element.shadowRoot</code></a>. From here we use standard DOM traversal techniques to find the <a href=\"/zh-CN/docs/Web/HTML/Element/style\"><code>&lt;style&gt;</code></a> element inside the shadow DOM and then update the CSS found inside it:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">updateStyle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> shadow <span class=\"token operator\">=</span> elem<span class=\"token punctuation\">.</span>shadowRoot<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> childNodes <span class=\"token operator\">=</span> shadow<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> childNodes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>childNodes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nodeName <span class=\"token operator\">===</span> <span class=\"token string\">'STYLE'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      childNodes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span>\n        <span class=\"token string\">'div {'</span> <span class=\"token operator\">+</span>\n          <span class=\"token string\">'width: '</span> <span class=\"token operator\">+</span> elem<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'px;'</span> <span class=\"token operator\">+</span>\n          <span class=\"token string\">'height: '</span> <span class=\"token operator\">+</span> elem<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'px;'</span> <span class=\"token operator\">+</span>\n          <span class=\"token string\">'background-color: '</span> <span class=\"token operator\">+</span> elem<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">';'</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">'}'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#interface-shadowroot","title":"DOM Standard"}],"query":"api.ShadowRoot"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.ShadowRoot","dataURL":"/zh-CN/docs/Web/API/ShadowRoot/bcd.json"}}],"toc":[{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"例子","id":"例子"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"Shadow DOM API 的 ShadowRoot 接口是一个 DOM 子树的根节点，它与文档的主 DOM 树分开渲染。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"ShadowRoot","locale":"en-US","native":"English (US)"},{"title":"ShadowRoot","locale":"fr","native":"Français"},{"title":"ShadowRoot","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/shadowroot","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/shadowroot/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/ShadowRoot","title":"ShadowRoot"}],"pageTitle":"ShadowRoot - Web API 接口参考 | MDN","noIndexing":false}}