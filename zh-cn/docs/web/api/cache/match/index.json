{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Cache.match()","mdn_url":"/zh-CN/docs/Web/API/Cache/match","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Cache/add\"><code>add()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/addAll\"><code>addAll()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/delete\"><code>delete()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/keys\"><code>keys()</code></a></li><li><em><code>match()</code></em></li><li><a href=\"/zh-CN/docs/Web/API/Cache/matchAll\"><code>matchAll()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/put\"><code>put()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 接口的 <strong><code>match()</code></strong> 方法，返回一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> 解析为 (resolve to) 与 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 对象中的第一个匹配请求相关联的<a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a> 。如果没有找到匹配，<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> 解析为 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>cache<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>options<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//操作 response</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> 对象，该对象解析为第一个匹配请求的 <a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a> 对象，如果没有匹配到，则解析到 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> 。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> <code>Cache.match()</code> 基本上和 <a href=\"/zh-CN/docs/Web/API/Cache/matchAll\"><code>Cache.matchAll()</code></a> 一样，只不过 <code>Cache.match()</code> 只解析为 <code>response[0]</code> （第一个匹配的响应 (response) 对象）而不是 <code>response[]</code> （所有响应对象组成的数组）。</p>\n</div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"request\">request</dt>\n  <dd>\n    <p>在<a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a>对象中查找的<a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a>对象对应的 response。这个<a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a>可以是 object 或者是一个 URL.</p>\n  </dd>\n  <dt id=\"options\">options <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>一个为 <code>match</code> 操作设置选项的对象。有效的选项如下：</p>\n    <ul>\n      <li><code>ignoreSearch</code>: 一个 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a> 值用来设置是否忽略 url 中的 query 部分。例如，如果该参数设置为 <code>true</code> ，那么 <code>http://foo.com/?value=bar</code> 中的 <code>?value=bar</code> 部分就会在匹配中被忽略。该选项默认为 <code>false</code>。</li>\n      <li><code>ignoreMethod</code>: 一个 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a> 值，如果设置为 <code>true</code>在匹配时就不会验证 <a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a> 对象的<code>http</code> 方法 (通常只允许是 <code>GET</code> 或 <code>HEAD</code>。) 该参数默认值为 <code>false</code>。</li>\n      <li><code>ignoreVary</code>: 一个 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a> 值，该值如果为 <code>true</code> 则匹配时不进行 <code>VARY</code> 部分的匹配。例如，如果一个 URL 匹配，此时无论<a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a>对象是否包含<code>VARY</code>头部，都会认为是成功匹配。该参数默认为 <code>false</code>。</li>\n      <li><code>cacheName</code>: 一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> ，代表一个具体的要被搜索的缓存。注意该选项被 <code>Cache.match()</code> 方法忽略。</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":"<p>这个是个来自 <a href=\"https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/custom-offline-page/service-worker.js\" class=\"external\" rel=\" noopener\">custom offline page</a> 的例子 (<a href=\"https://googlechrome.github.io/samples/service-worker/custom-offline-page/index.html\" class=\"external\" rel=\" noopener\">live demo</a>)。</p>\n<p>下面的例子在请求失败时提供特定的数据。 <code>catch()</code> 在 <code>fetch()</code> 的调用抛出异常时触发。在 <code>catch()</code> 语句中， <code>match()</code>用来返回正确的响应。</p>\n<p>在这个例子中，我们决定只缓存通过 GET 取得的 HTML 文档。如果 <code>if()</code> 条件是 false，那么这个 fetch 处理器就不会处理这个请求。如果还有其他的 fetch 处理器被注册，它们将有机会调用 <code>event.respondWith()</code> 如果没有 fetch 处理器调用 <code>event.respondWith()</code> ，该请求就会像没有 service worker 介入一样由浏览器处理。如果 <code>fetch()</code> 返回了有效的 HTTP 响应，相应码是 4xx 或 5xx，那么<code>catch()</code> 就<strong>不会</strong>被调用。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>self<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 我们只想在用 GET 方法请求 HTML 文档时调用 event.respondWith()。</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">===</span> <span class=\"token string\">'GET'</span> <span class=\"token operator\">&amp;&amp;</span>\n      event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'accept'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text/html'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Handling fetch event for'</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Fetch failed; returning offline page instead.'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token constant\">OFFLINE_CACHE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token constant\">OFFLINE_URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#cache-match","title":"Service Workers 1"}],"query":"api.Cache.match"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Cache.match","dataURL":"/zh-CN/docs/Web/API/Cache/match/bcd.json"}},{"type":"prose","value":{"id":"参阅","title":"参阅","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using Service Workers (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/caches\"><code>WorkerGlobalScope.caches</code> <small>(en-US)</small></a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"例子","id":"例子"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参阅","id":"参阅"}],"summary":"Cache 接口的 match() 方法，返回一个 Promise 解析为 (resolve to) 与 Cache 对象中的第一个匹配请求相关联的Response 。如果没有找到匹配，Promise 解析为 undefined。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Cache.match()","locale":"en-US","native":"English (US)"},{"title":"Cache.match()","locale":"fr","native":"Français"},{"title":"Cache.match()","locale":"ja","native":"日本語"},{"title":"Cache.match()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/cache/match","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/cache/match/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Cache","title":"Cache"},{"uri":"/zh-CN/docs/Web/API/Cache/match","title":"Cache.match()"}],"pageTitle":"Cache.match() - Web API 接口参考 | MDN","noIndexing":false}}