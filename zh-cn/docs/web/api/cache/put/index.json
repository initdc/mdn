{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Cache.put()","mdn_url":"/zh-CN/docs/Web/API/Cache/put","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Cache/add\"><code>add()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/addAll\"><code>addAll()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/delete\"><code>delete()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/keys\"><code>keys()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/match\"><code>match()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/matchAll\"><code>matchAll()</code></a></li><li><em><code>put()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 接口的 <strong><code>put()</code></strong> 方法 允许将键/值对添加到当前的 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 对象中。</p>\n<p>通常，你只想 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>fetch()</code></a> 一个或多个请求，然后直接添加结果到 cache 中。这种情况下，最好使用 <a href=\"/zh-CN/docs/Web/API/Cache/add\" title=\"Cache.add()\"><code>Cache.add()</code></a>/<a href=\"/zh-CN/docs/Web/API/Cache/addAll\" title=\"Cache.addAll()\"><code>Cache.addAll()</code></a>，因为它们是一个或者多个这些操作的便捷方法。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bad response status'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> <code>put()</code> 将覆盖先前存储在匹配请求的 cache 中的任何键/值对。</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> <a href=\"/zh-CN/docs/Web/API/Cache/add\"><code>Cache.add</code></a>/<a href=\"/zh-CN/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code></a> 不会缓存 <code>Response.status</code> 值不在 200 范围内的响应，而 <a href=\"/zh-CN/docs/Web/API/Cache/put\" aria-current=\"page\"><code>Cache.put</code></a> 允许你存储任何请求/响应对。因此，<a href=\"/zh-CN/docs/Web/API/Cache/add\"><code>Cache.add</code></a>/<a href=\"/zh-CN/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code></a> 不能用于不透明的响应，而 <a href=\"/zh-CN/docs/Web/API/Cache/put\" aria-current=\"page\"><code>Cache.put</code></a> 可以。</p>\n</div>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>备注：</strong> 当响应主体完全写入磁盘时，初始 Cache 执行 (在 Blink 和 Gecko 中) resolve <a href=\"/zh-CN/docs/Web/API/Cache/add\"><code>Cache.add</code></a>、<a href=\"/zh-CN/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code></a> 和 <a href=\"/zh-CN/docs/Web/API/Cache/put\" aria-current=\"page\"><code>Cache.put</code></a> promise. 更新的规范版本中声明：即使响应主体仍在流式传输，一旦条目被记录到数据库中，浏览器就可以 resolve promise.</p>\n</div>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<pre class=\"notranslate\">cache.put(request, response).then(function() {\n  // request/response pair has been added to the cache\n});\n</pre>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"request\">request</dt>\n  <dd>\n    <p>The <a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a> you want to add to the cache.</p>\n  </dd>\n  <dt id=\"response\">response</dt>\n  <dd>\n    <p>The <a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a> you want to match up to the request.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>A <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with void.</p>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>备注：</strong> The promise will reject with a <code>TypeError</code> if the URL scheme is not <code>http</code> or <code>https</code>.</p>\n</div>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>This example is from the MDN <a href=\"https://github.com/mdn/sw-test/\" class=\"external\" rel=\" noopener\">sw-test example</a> (see <a href=\"https://mdn.github.io/sw-test/\" class=\"external\" rel=\" noopener\">sw-test running live</a>). Here we wait for a <a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a> to fire. We construct a custom response like so:</p>\n<ol>\n  <li>Check whether a match for the request is found in the <a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a> using <a href=\"/zh-CN/docs/Web/API/CacheStorage/match\" title=\"CacheStorage.match()\"><code>CacheStorage.match()</code></a>. If so, serve that.</li>\n  <li>If not, open the <code>v1</code> cache using <code>open()</code>, put the default network request in the cache using <a href=\"/zh-CN/docs/Web/API/Cache/put\" title=\"Cache.put()\" aria-current=\"page\"><code>Cache.put()</code></a> and return a clone of the default network request using <code>return response.clone()</code>. Clone is needed because <code>put()</code> consumes the response body.</li>\n  <li>If this fails (e.g., because the network is down), return a fallback response.</li>\n</ol>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> response<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> cachedResponse <span class=\"token operator\">=</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  response <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span>\n  caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/sw-test/gallery/myLittleVader.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#cache-put","title":"Service Workers 1"}],"query":"api.Cache.put"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Cache.put","dataURL":"/zh-CN/docs/Web/API/Cache/put/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using Service Workers (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/caches\"><code>WorkerGlobalScope.caches</code> <small>(en-US)</small></a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"See also","id":"see_also"}],"summary":"Cache 接口的 put() 方法 允许将键/值对添加到当前的 Cache 对象中。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Cache.put()","locale":"en-US","native":"English (US)"},{"title":"Cache.put()","locale":"fr","native":"Français"},{"title":"Cache.put()","locale":"ja","native":"日本語"},{"title":"Cache.put()","locale":"ko","native":"한국어"},{"title":"Cache.put()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/cache/put","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/cache/put/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Cache","title":"Cache"},{"uri":"/zh-CN/docs/Web/API/Cache/put","title":"Cache.put()"}],"pageTitle":"Cache.put() - Web API 接口参考 | MDN","noIndexing":false}}