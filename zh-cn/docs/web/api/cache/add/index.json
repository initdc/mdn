{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Cache.add()","mdn_url":"/zh-CN/docs/Web/API/Cache/add","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><em><code>add()</code></em></li><li><a href=\"/zh-CN/docs/Web/API/Cache/addAll\"><code>addAll()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/delete\"><code>delete()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/keys\"><code>keys()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/match\"><code>match()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/matchAll\"><code>matchAll()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Cache/put\"><code>put()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a>接口的 <strong><code>add()</code></strong> 方法接受一个 URL 作为参数，请求参数指定的 URL，并将返回的 response 对象添加到给定的 cache 中。 <code>add()</code> 方法在功能上等同于以下代码：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bad response status'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>对于更复杂的操作，您可以直接使用<a href=\"/zh-CN/docs/Web/API/Cache/put\" title=\"Cache.put()\"><code>Cache.put()</code></a>这个 API。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> <code>add()</code> 将会覆盖之前存储在 cache 中与 request 匹配的任何 key/value 对。</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 之前的 Cache (Blink 和 Gecko 内核版本) 在实现<a href=\"/zh-CN/docs/Web/API/Cache/add\" aria-current=\"page\"><code>Cache.add</code></a>, <a href=\"/zh-CN/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code></a>, 和 <a href=\"/zh-CN/docs/Web/API/Cache/put\"><code>Cache.put</code></a> 的策略是在 response 结果完全写入缓存后才会 resolve 当前的 promise。更新后的规范版本中一旦条目被记录到数据库就会 resolve 当前的 promise，即使当前 response 结果还在传输中。</p>\n</div>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>cache<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//request has been added to the cache</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"request\">request</dt>\n  <dd>\n    <p>要添加到 cache 的 request。它可以是一个 <a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a> 对象，也可以是 URL。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>void 返回值的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a></p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<table>\n  <thead>\n    <tr>\n      <th><strong>Exception</strong></th>\n      <th><strong>Happens when</strong></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>TypeError</code></td>\n      <td>URL 的协议不是 <code>http</code> 或 <code>https。</code>请求返回的 http 状态码不是 2xx (不是一个成功的响应) 。这种情况常常发生在请求不成功，或者是一个没有配置 CORS 的跨域请求（这种情况下返回的状态码永远是 0）。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>下面的代码块等待 <a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a> 事件触发，然后运行 <a href=\"/zh-CN/docs/Web/API/ExtendableEvent/waitUntil\" title=\"waitUntil\"><code>waitUntil</code></a> 来处理该应用程序的安装过程。包括调用 <a href=\"/zh-CN/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open</code></a> 来创建一个新的缓存，然后使用 <a href=\"/zh-CN/docs/Web/API/Cache/add\" aria-current=\"page\"><code>Cache.add</code></a> 来添加一个请求资源到该缓存。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'install'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span>\n    caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/sw-test/index.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#cache-add","title":"Service Workers 1"}],"query":"api.Cache.add"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Cache.add","dataURL":"/zh-CN/docs/Web/API/Cache/add/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using Service Workers (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/caches\"><code>WorkerGlobalScope.caches</code> <small>(en-US)</small></a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"Cache接口的 add() 方法接受一个 URL 作为参数，请求参数指定的 URL，并将返回的 response 对象添加到给定的 cache 中。 add() 方法在功能上等同于以下代码：","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Cache.add()","locale":"en-US","native":"English (US)"},{"title":"Cache.add()","locale":"fr","native":"Français"},{"title":"Cache.add()","locale":"ja","native":"日本語"},{"title":"Cache.add()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/cache/add","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/cache/add/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Cache","title":"Cache"},{"uri":"/zh-CN/docs/Web/API/Cache/add","title":"Cache.add()"}],"pageTitle":"Cache.add() - Web API 接口参考 | MDN","noIndexing":false}}