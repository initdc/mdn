{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"WritableStreamDefaultWriter.desiredSize","mdn_url":"/zh-CN/docs/Web/API/WritableStreamDefaultWriter/desiredSize","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Streams_API\">Streams API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/WritableStreamDefaultWriter/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/WritableStreamDefaultWriter/closed\"><code>closed</code></a></li><li><em><code>desiredSize</code></em></li><li><a href=\"/zh-CN/docs/Web/API/WritableStreamDefaultWriter/ready\"><code>ready</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/WritableStreamDefaultWriter/abort\"><code>abort()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/WritableStreamDefaultWriter/close\"><code>close()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/WritableStreamDefaultWriter/releaseLock\"><code>releaseLock()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/WritableStreamDefaultWriter/write\"><code>write()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Streams 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/ByteLengthQueuingStrategy\"><code>ByteLengthQueuingStrategy</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CountQueuingStrategy\"><code>CountQueuingStrategy</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Response/body\"><code>Response.body</code></a></li><li><a href=\"/zh-CN/docs/Web/API/WritableStream\"><code>WritableStream</code></a></li><li><a href=\"/zh-CN/docs/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code></a></li><li><a href=\"/zh-CN/docs/Web/API/fetch\"><code>fetch()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/zh-CN/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> 接口的只读属性 <strong><code>desiredSize</code></strong> 返回填充满流的内部队列需要的大小。</p>"}},{"type":"prose","value":{"id":"值","title":"值","isH3":false,"content":"<p>一个整数。请注意，在队列已满的情况下，则可能是负数。</p>\n<p>如果无法成功写入流（由于流发生错误或者中止入队），则该值为 <code>null</code>，如果流关闭，则该值为 0。</p>"}},{"type":"prose","value":{"id":"异常","title":"异常","isH3":true,"content":"<dl>\n  <dt id=\"typeerror\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>writer 的锁已被释放。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> writableStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WritableStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">chunk</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> queuingStrategy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">const</span> writer <span class=\"token operator\">=</span> writableStream<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n\n<span class=\"token comment\">// return stream's desired size</span>\n<span class=\"token keyword\">let</span> size <span class=\"token operator\">=</span> writer<span class=\"token punctuation\">.</span>desiredSize<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://streams.spec.whatwg.org/#ref-for-default-writer-desired-size⑥","title":"Streams Standard"}],"query":"api.WritableStreamDefaultWriter.desiredSize"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.WritableStreamDefaultWriter.desiredSize","dataURL":"/zh-CN/docs/Web/API/WritableStreamDefaultWriter/desiredSize/bcd.json"}}],"toc":[{"text":"值","id":"值"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"WritableStreamDefaultWriter 接口的只读属性 desiredSize 返回填充满流的内部队列需要的大小。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"WritableStreamDefaultWriter.desiredSize","locale":"en-US","native":"English (US)"},{"title":"WritableStreamDefaultWriter.desiredSize","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/writablestreamdefaultwriter/desiredsize","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/writablestreamdefaultwriter/desiredsize/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/WritableStreamDefaultWriter","title":"WritableStreamDefaultWriter"},{"uri":"/zh-CN/docs/Web/API/WritableStreamDefaultWriter/desiredSize","title":"WritableStreamDefaultWriter.desiredSize"}],"pageTitle":"WritableStreamDefaultWriter.desiredSize - Web API 接口参考 | MDN","noIndexing":false}}