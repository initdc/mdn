{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"MediaStreamAudioSourceNode.MediaStreamAudioSourceNode()","mdn_url":"/zh-CN/docs/Web/API/MediaStreamAudioSourceNode/MediaStreamAudioSourceNode","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><em><code>MediaStreamAudioSourceNode()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode/mediaStream\"><code>mediaStream</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Web Audio API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/zh-CN/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>**<code>MediaStreamAudioSourceNode()</code>**构造器创建一个新的 <a href=\"/zh-CN/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a>对象实例。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myAudioSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaStreamAudioSourceNode</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"context\"><em>context</em></dt>\n  <dd>\n    <p>一个用来使用 node 的音频环境<a href=\"/zh-CN/docs/Web/API/AudioContext\"><code>AudioContext</code></a>。</p>\n  </dd>\n  <dt id=\"options\"><em>options</em></dt>\n  <dd>\n    <p><code>MediaStreamAudioSourceOptions</code>，一个 map 对象，定义<code>MediaStreamAudioSourceNode</code>的属性：</p>\n    <ul>\n      <li><code>mediaStream</code>: 需要使用的音频流</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// define variables</span>\n<span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// getUserMedia block - grab stream 获取音频流</span>\n<span class=\"token comment\">// put it into a  把音频流放入 MediaStreamAudioSourceNode</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span>getUserMedia<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new getUserMedia supported.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token comment\">// constraints: audio and video for this app</span>\n      <span class=\"token punctuation\">{</span>\n         <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n         <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n       <span class=\"token comment\">// Create a MediaStreamAudioSourceNode</span>\n       <span class=\"token keyword\">var</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token literal-property property\">mediaStream</span> <span class=\"token operator\">:</span> stream\n       <span class=\"token punctuation\">}</span>\n\n       <span class=\"token keyword\">var</span> source <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaStreamAudioSourceNode</span><span class=\"token punctuation\">(</span>audioCtx<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        source<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>audioCtx<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The following gUM error occured: '</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new getUserMedia not supported on your browser!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-mediastreamaudiosourcenode-mediastreamaudiosourcenode","title":"Web Audio API"}],"query":"api.MediaStreamAudioSourceNode.MediaStreamAudioSourceNode"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.MediaStreamAudioSourceNode.MediaStreamAudioSourceNode","dataURL":"/zh-CN/docs/Web/API/MediaStreamAudioSourceNode/MediaStreamAudioSourceNode/bcd.json"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"**MediaStreamAudioSourceNode()**构造器创建一个新的 MediaStreamAudioSourceNode对象实例。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MediaStreamAudioSourceNode()","locale":"en-US","native":"English (US)"}],"source":{"folder":"zh-cn/web/api/mediastreamaudiosourcenode/mediastreamaudiosourcenode","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/mediastreamaudiosourcenode/mediastreamaudiosourcenode/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/MediaStreamAudioSourceNode","title":"MediaStreamAudioSourceNode"},{"uri":"/zh-CN/docs/Web/API/MediaStreamAudioSourceNode/MediaStreamAudioSourceNode","title":"MediaStreamAudioSourceNode.MediaStreamAudioSourceNode()"}],"pageTitle":"MediaStreamAudioSourceNode.MediaStreamAudioSourceNode() - Web API 接口参考 | MDN","noIndexing":false}}