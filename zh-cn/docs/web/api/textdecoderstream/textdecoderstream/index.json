{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"TextDecoderStream()","mdn_url":"/zh-CN/docs/Web/API/TextDecoderStream/TextDecoderStream","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Encoding_API\">Encoding API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/TextDecoderStream\"><code>TextDecoderStream</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><em><code>TextDecoderStream()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/TextDecoderStream/encoding\"><code>encoding</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextDecoderStream/fatal\"><code>fatal</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextDecoderStream/ignoreBOM\"><code>ignoreBOM</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextDecoderStream/readable\"><code>readable</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextDecoderStream/writable\"><code>writable</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Encoding API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextEncoderStream\"><code>TextEncoderStream</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>TextDecoderStream()</code></strong> 构造函数创建一个新的 <a href=\"/zh-CN/docs/Web/API/TextDecoderStream\"><code>TextDecoderStream</code></a> 对象，该对象用于将二进制编码的文本流转换为字符串。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoderStream</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoderStream</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"label\"><code>label</code></dt>\n  <dd>\n    <p>默认为 <code>utf-8</code> 的字符串。可以是<a href=\"/zh-CN/docs/Web/API/Encoding_API/Encodings\">任意有效的编码</a>。</p>\n  </dd>\n  <dt id=\"options\"><code>options</code> <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>一个具有属性的 <code>TextDecoderOptions</code> 对象：</p>\n    <dl>\n      <dt id=\"fatal\"><code>fatal</code></dt>\n      <dd>\n        <p>一个布尔值，表示错误的模式。如果是 true，则在 decoder 遇到错误时抛出一个 <a href=\"/zh-CN/docs/Web/API/DOMException\"><code>DOMException</code></a>。默认值是 <code>false</code>。</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>以下示例演示如何从一个 <a href=\"/zh-CN/docs/Web/API/fetch\"><code>fetch()</code></a> 中获取并解码二进制数据。如果没有传递任何 <code>label</code>，数据的解码类型为 UTF-8。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://example.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> stream <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">pipeThrough</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoderStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://encoding.spec.whatwg.org/#ref-for-dom-textdecoderstream①","title":"Encoding"}],"query":"api.TextDecoderStream.TextDecoderStream"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.TextDecoderStream.TextDecoderStream","dataURL":"/zh-CN/docs/Web/API/TextDecoderStream/TextDecoderStream/bcd.json"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"TextDecoderStream() 构造函数创建一个新的 TextDecoderStream 对象，该对象用于将二进制编码的文本流转换为字符串。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"TextDecoderStream()","locale":"en-US","native":"English (US)"}],"source":{"folder":"zh-cn/web/api/textdecoderstream/textdecoderstream","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/textdecoderstream/textdecoderstream/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/TextDecoderStream","title":"TextDecoderStream"},{"uri":"/zh-CN/docs/Web/API/TextDecoderStream/TextDecoderStream","title":"TextDecoderStream()"}],"pageTitle":"TextDecoderStream() - Web API 接口参考 | MDN","noIndexing":false}}