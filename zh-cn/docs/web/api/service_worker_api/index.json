{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Service Worker API","mdn_url":"/zh-CN/docs/Web/API/Service_Worker_API","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n <ol>\n  <li><a href=\"/zh-CN/docs/Web/API/Service_Worker_API\"><strong>Service Worker API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>Service Worker guides</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Web/API/Service_Worker_API/Using_Service_Workers\">Using Service Workers</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>Interfaces</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/Clients\"><code>Clients</code></a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li>\n          <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li>\n          <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li>\n          <li><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>PeriodicSyncRegistration</code></a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li>\n          <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li>\n          <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li>\n          <li><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>SyncRegistration</code></a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>Related APIs</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/Web/API/Channel_Messaging_API\">Channel Messaging API</a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/Notifications_API\">Notifications API</a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/Push_API\">Push API</a></li>\n          <li><a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Workers API</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/zh-CN/docs/MDN\">Documentation:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Contribute</summary>\n        <ol>\n          <li><a href=\"/zh-CN/docs/MDN\">The MDN project</a></li>\n        </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Service workers 本质上充当 Web 应用程序、浏览器与网络（可用时）之间的代理服务器。这个 API 旨在创建有效的离线体验，它会拦截网络请求并根据网络是否可用来采取适当的动作、更新来自服务器的的资源。它还提供入口以推送通知和访问后台同步 API。</p>"}},{"type":"prose","value":{"id":"service_worker_的概念和用法","title":"Service worker 的概念和用法","isH3":false,"content":"<p>Service worker 是一个注册在指定源和路径下的事件驱动<a href=\"/zh-CN/docs/Web/API/Worker\">worker</a>。它采用 JavaScript 控制关联的页面或者网站，拦截并修改访问和资源请求，细粒度地缓存资源。你可以完全控制应用在特定情形（最常见的情形是网络不可用）下的表现。</p>\n<p>Service worker 运行在 worker 上下文，因此它不能访问 DOM。相对于驱动应用的主 JavaScript 线程，它运行在其他线程中，所以不会造成阻塞。它设计为完全异步，同步 API（如<a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\">XHR</a>和<a href=\"/en-US/docs/Web/API/Web_Storage_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">localStorage (en-US)</a>）不能在 service worker 中使用。</p>\n<p>出于安全考量，Service workers 只能由 HTTPS 承载，毕竟修改网络请求的能力暴露给中间人攻击会非常危险。在 Firefox 浏览器的<a href=\"https://support.mozilla.org/zh-CN/kb/%E9%9A%90%E7%A7%81%E6%B5%8F%E8%A7%88\" class=\"external\" rel=\" noopener\">用户隐私模式</a>，Service Worker 不可用。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> Service workers 之所以优于以前同类尝试（如<a href=\"https://alistapart.com/article/application-cache-is-a-douchebag\" class=\"external\" rel=\" noopener\">AppCache</a>），是因为它们无法支持当操作出错时终止操作。Service workers 可以更细致地控制每一件事情。</p>\n</div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> Service workers 大量使用<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a>，因为通常它们会等待响应后继续，并根据响应返回一个成功或者失败的操作。Promise 非常适合这种场景。</p>\n</div>"}},{"type":"prose","value":{"id":"注册","title":"注册","isH3":true,"content":"<p>使用 <a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer/register\"><code>ServiceWorkerContainer.register()</code></a> 方法首次注册 service worker。如果注册成功，service worker 就会被下载到客户端并尝试安装或激活（见下文），这将作用于整个域内用户可访问的 URL，或者其特定子集。</p>"}},{"type":"prose","value":{"id":"下载、安装和激活","title":"下载、安装和激活","isH3":true,"content":"<p>此时，你的服务工作者 (service worker) 将遵守以下生命周期：</p>\n<ol>\n  <li>下载</li>\n  <li>安装</li>\n  <li>激活</li>\n</ol>\n<p>用户首次访问 service worker 控制的网站或页面时，service worker 会立刻被下载。</p>\n<p>之后，在以下情况将会触发更新：</p>\n<ul>\n  <li>一个前往作用域内页面的导航</li>\n  <li>在 service worker 上的一个事件被触发并且过去 24 小时没有被下载</li>\n</ul>\n<p>无论它与现有 service worker 不同（字节对比），还是第一次在页面或网站遇到 service worker，如果下载的文件是新的，安装就会尝试进行。</p>\n<p>如果这是首次启用 service worker，页面会首先尝试安装，安装成功后它会被激活。</p>\n<p>如果现有 service worker 已启用，新版本会在后台安装，但不会被激活，这个时序称为 worker in waiting。直到所有已加载的页面不再使用旧的 service worker 才会激活新的 service worker。只要页面不再依赖旧的 service worker，新的 service worker 会被激活（成为 active worker）。</p>\n<p>你可以监听<a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a>，事件触发时的标准行为是准备 service worker 用于使用，例如使用内建的 storage API 来创建缓存，并且放置应用离线时所需资源。</p>\n<p>还有一个 activate 事件，触发时可以清理旧缓存和旧的 service worker 关联的东西。</p>\n<p>Servcie worker 可以通过 <a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a> 事件去响应请求。通过使用 <a href=\"/zh-CN/docs/Web/API/FetchEvent/respondWith\"><code>FetchEvent.respondWith</code></a> 方法，你可以任意修改对于这些请求的响应。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 因为<code>oninstall</code>和<code>onactivate</code>完成前需要一些时间，service worker 标准提供一个<code>waitUntil</code>方法，当<code>oninstall</code>或者<code>onactivate</code>触发时被调用，接受一个 promise。在这个 promise 被成功 resolve 以前，功能性事件不会分发到 service worker。</p>\n</div>\n<p>构建一个基本用例的完整教程，请阅读 <a href=\"/zh-CN/docs/Web/API/Service_Worker_API/Using_Service_Workers\">使用 Service Workers</a>。</p>"}},{"type":"prose","value":{"id":"其他使用场景","title":"其他使用场景","isH3":false,"content":"<p>Service workers 也可以用来做这些事情：</p>\n<ul>\n  <li>后台数据同步</li>\n  <li>响应来自其它源的资源请求</li>\n  <li>集中接收计算成本高的数据更新，比如地理位置和陀螺仪信息，这样多个页面就可以利用同一组数据</li>\n  <li>在客户端进行 CoffeeScript，LESS，CJS/AMD 等模块编译和依赖管理（用于开发目的）</li>\n  <li>后台服务钩子</li>\n  <li>自定义模板用于特定 URL 模式</li>\n  <li>性能增强，比如预取用户可能需要的资源，比如相册中的后面数张图片</li>\n</ul>\n<p>未来 service workers 能够用来做更多使 web 平台接近原生应用的事。值得关注的是，其他标准也能并且将会使用 service worker，例如：</p>\n<ul>\n  <li><a href=\"https://github.com/slightlyoff/BackgroundSync\" class=\"external\" rel=\" noopener\">后台同步</a>：启动一个 service worker 即使没有用户访问特定站点，也可以更新缓存</li>\n  <li><a href=\"/zh-CN/docs/Web/API/Push_API\">响应推送</a>：启动一个 service worker 向用户发送一条信息通知新的内容可用</li>\n  <li>对时间或日期作出响应</li>\n  <li>进入地理围栏</li>\n</ul>"}},{"type":"prose","value":{"id":"接口","title":"接口","isH3":false,"content":"<dl>\n  <dt id=\"cache\"><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>表示用于<a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a>/<a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a>对象对的存储，作为<a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a>生命周期的一部分被缓存。</p>\n  </dd>\n  <dt id=\"cachestorage\"><a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>表示<a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a>对象的存储。提供一个所有命名缓存的主目录，<a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a>可以访问并维护名字字符串到<a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a>对象的映射。</p>\n  </dd>\n  <dt id=\"client\"><a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>表示 service worker client 的作用域。一个 service worker client 可以是浏览器上下文的一个文档，也可以是一个由活动 worker 控制的<a href=\"/zh-CN/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a>。</p>\n  </dd>\n  <dt id=\"clients\"><a href=\"/zh-CN/docs/Web/API/Clients\"><code>Clients</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>表示一个<a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a>对象容器，是访问当前源的活动 service worker clients 的主要途径。</p>\n  </dd>\n  <dt id=\"extendableevent\"><a href=\"/zh-CN/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>扩展被分发到<a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a>的<code>install 和 activate</code>事件时序，作为 service worker 生命周期的一部分。这会确保任何功能型事件（如<a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a>）不被分发到<a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a>，直到它更新了数据库架构、删除过期缓存项等等以后。</p>\n  </dd>\n  <dt id=\"extendablemessageevent_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ExtendableMessageEvent\"><code>ExtendableMessageEvent</code> <small>(en-US)</small></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>The event object of a <code><a href=\"/zh-CN/docs/Web/Reference/Events/message_(ServiceWorker)\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">message</a></code> event fired on a service worker (when a channel message is received on the <a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> from another context) — extends the lifetime of such events.</p>\n  </dd>\n  <dt id=\"fetchevent\"><a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>传递给<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>ServiceWorkerGlobalScope.onfetch</code></a>处理函数的参数，FetchEvent 代表一个在<a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a>的<a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a>中分发的请求动作。它包含关于请求和响应的结果信息，并且提供<a href=\"/zh-CN/docs/Web/API/FetchEvent/respondWith\" title=\"FetchEvent.respondWith()\"><code>FetchEvent.respondWith()</code></a>方法，这个方法允许我们提供任意的响应返回到控制页面。</p>\n  </dd>\n  <dt id=\"installevent\"><a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>传递给 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>oninstall</code></a> 处理函数的参数，<code>InstallEvent</code> 接口代表一个在 <a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> 的 <a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> 中分发的安装动作，作为 <a href=\"/zh-CN/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a> 的子事件，它保证诸如 <a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a> 的功能性事件在安装过程中不会被分发。</p>\n  </dd>\n  <dt id=\"navigationpreloadmanager_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NavigationPreloadManager\"><code>NavigationPreloadManager</code> <small>(en-US)</small></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Provides methods for managing the preloading of resources with a service worker.</p>\n  </dd>\n  <dt id=\"navigator.serviceworker\"><a href=\"/zh-CN/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></dt>\n  <dd>\n    <p>返回一个<a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a>对象，可以提供入口用于注册，删除，更新以及与在<a href=\"https://html.spec.whatwg.org/multipage/browsers.html#concept-document-window\" class=\"external\" rel=\" noopener\">相关 document</a>中<a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a>通信的对象。</p>\n  </dd>\n  <dt id=\"notificationevent\"><a href=\"/zh-CN/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>传递给<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>onnotificationclick</code></a>处理函数的参数，<code>NotificationEvent</code> 接口代表在<a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a>里<a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a>中分发的单击事件通知。</p>\n  </dd>\n  <dt id=\"serviceworker\"><a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>表示一个 service worker。多个浏览的上下文 (例如 pages、workers 等等) 都能通过相同的 <code>ServiceWorker</code> 对象相关联。</p>\n  </dd>\n  <dt id=\"serviceworkercontainer\"><a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>提供一个在网络生态中把 service worker 作为一个整体的对象，包括辅助注册，反注册以及更新服务工作者，并且访问 service worker 的状态以及他们的注册信息。</p>\n  </dd>\n  <dt id=\"serviceworkerglobalscope\"><a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></dt>\n  <dd>\n    <p>表示 service worker 的全局执行上下文。</p>\n  </dd>\n  <dt id=\"serviceworkermessageevent_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessageEvent\"><code>ServiceWorkerMessageEvent</code> <small>(en-US)</small></a><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>包含关于一个发送给以<code>navigator.serviceWorker</code>为目标的事件信息。<strong>Note that this interface is deprecated in modern browsers. Service worker messages will now use the <a href=\"/zh-CN/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a> interface, for consistency with other web messaging features.</strong></p>\n  </dd>\n  <dt id=\"serviceworkerregistration\"><a href=\"/zh-CN/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></dt>\n  <dd>\n    <p>表示 service worker 的注册。</p>\n  </dd>\n  <dt id=\"serviceworkerstate_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorker/state\"><code>ServiceWorkerState</code> <small>(en-US)</small></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Associated with its <a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a>'s state.</p>\n  </dd>\n  <dt id=\"syncevent_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>传递给同步函数的参数，SyncEvent 接口代表在 ServiceWorker 里<a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a>分发的同步动作。</p>\n  </dd>\n  <dt id=\"syncmanager_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>提供一个接口用于注册和返回<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>SyncRegistration</code></a>对象。</p>\n  </dd>\n  <dt id=\"windowclient\"><a href=\"/zh-CN/docs/Web/API/WindowClient\"><code>WindowClient</code></a><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>表示在浏览器上下文中记录的 service worker 客户端的作用域，被活动的工作者控制。是<a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a>对象的特殊类型，包含一些附加的方法和可用的属性。</p>\n  </dd>\n</dl>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/","title":"Service Workers 1"}],"query":"undefined"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"https://serviceworke.rs/\" class=\"external\" rel=\" noopener\">ServiceWorker Cookbook</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using Service Workers (en-US)</a></li>\n  <li><a href=\"https://github.com/mdn/sw-test\" class=\"external\" rel=\" noopener\">Service workers basic code example</a></li>\n  <li><a href=\"https://jakearchibald.github.io/isserviceworkerready/\" class=\"external\" rel=\" noopener\">Is ServiceWorker ready?</a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promises</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Web_Workers_API/Using_web_workers\">Using web workers</a></li>\n  <li><a href=\"https://www.fastly.com/blog/best-practices-for-using-the-vary-header\" class=\"external\" rel=\" noopener\">Best Practices for using the VARY header</a></li>\n</ul>"}}],"toc":[{"text":"Service worker 的概念和用法","id":"service_worker_的概念和用法"},{"text":"其他使用场景","id":"其他使用场景"},{"text":"接口","id":"接口"},{"text":"规范","id":"规范"},{"text":"参见","id":"参见"}],"summary":"Service workers 本质上充当 Web 应用程序、浏览器与网络（可用时）之间的代理服务器。这个 API 旨在创建有效的离线体验，它会拦截网络请求并根据网络是否可用来采取适当的动作、更新来自服务器的的资源。它还提供入口以推送通知和访问后台同步 API。","popularity":0.0017,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Service Worker API","locale":"en-US","native":"English (US)"},{"title":"Service Worker API","locale":"es","native":"Español"},{"title":"Service Worker API","locale":"fr","native":"Français"},{"title":"サービスワーカー API","locale":"ja","native":"日本語"},{"title":"Service Worker API","locale":"ko","native":"한국어"},{"title":"API do Service Worker","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Service Worker API","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/service_worker_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/service_worker_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Service_Worker_API","title":"Service Worker API"}],"pageTitle":"Service Worker API - Web API 接口参考 | MDN","noIndexing":false}}