{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Request","mdn_url":"/zh-CN/docs/Web/API/Request","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Request/Request\"><code>Request()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/body\"><code>body</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Request/bodyUsed\"><code>bodyUsed</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Request/cache\"><code>cache</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Request/credentials\"><code>credentials</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/destination\"><code>destination</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Request/headers\"><code>headers</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/integrity\"><code>integrity</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Request/method\"><code>method</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Request/mode\"><code>mode</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/priority\"><code>priority</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/redirect\"><code>redirect</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/referrer\"><code>referrer</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/referrerPolicy\"><code>referrerPolicy</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Request/url\"><code>url</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Request/arrayBuffer\"><code>arrayBuffer()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Request/blob\"><code>blob()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Request/clone\"><code>clone()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Request/formData\"><code>formData()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Request/json\"><code>json()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Request/text\"><code>text()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div><a href=\"/zh-CN/docs/Web/API/Fetch_API\">Fetch API</a> 的 **<code>Request</code>**接口？用来表示资源请求。<p></p>\n<p>你可以使用 <a href=\"/zh-CN/docs/Web/API/Request/Request\"><code>Request.Request()</code></a> ?构造函数创建一个 <code>Request</code> 对象，但是你可能会遇到一个 Request 对象作为其它 API 的操作被返回，比如一个 <code>service worker</code> 的<a href=\"/zh-CN/docs/Web/API/FetchEvent/request\"><code>FetchEvent.request</code></a>。</p>"}},{"type":"prose","value":{"id":"构造器","title":"构造器","isH3":false,"content":"<dl>\n  <dt id=\"request.request\"><a href=\"/zh-CN/docs/Web/API/Request/Request\"><code>Request.Request()</code></a></dt>\n  <dd>\n    <p>创建一个新的 <code>Request</code> 对象。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<dl>\n  <dt id=\"request.method\"><a href=\"/zh-CN/docs/Web/API/Request/method\"><code>Request.method</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含请求的方法 (<code>GET</code>, <code>POST</code>, 等.)</p>\n  </dd>\n  <dt id=\"request.url\"><a href=\"/zh-CN/docs/Web/API/Request/url\"><code>Request.url</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含这个请求的 URL。</p>\n  </dd>\n  <dt id=\"request.headers\"><a href=\"/zh-CN/docs/Web/API/Request/headers\"><code>Request.headers</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含请求相关的<a href=\"/zh-CN/docs/Web/API/Headers\"><code>Headers</code></a>对象。</p>\n  </dd>\n  <dt id=\"request.context_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/destination\"><code>Request.context</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>包含请求的上下文 (例如：<code>audio</code>, <code>image</code>, <code>iframe</code>, 等)</p>\n  </dd>\n  <dt id=\"request.referrer_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/referrer\"><code>Request.referrer</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>?包含请求的来源 (例如：<code>client</code>)。</p>\n  </dd>\n  <dt id=\"request.referrerpolicy_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/referrerPolicy\"><code>Request.referrerPolicy</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>?包含请求来源的策略 (例如：<code>no-referrer</code>)。</p>\n  </dd>\n  <dt id=\"request.mode\"><a href=\"/zh-CN/docs/Web/API/Request/mode\"><code>Request.mode</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含请求的模式 (例如： <code>cors</code>, <code>no-cors</code>, <code>same-origin</code>, <code>navigate</code>).</p>\n  </dd>\n  <dt id=\"request.credentials\"><a href=\"/zh-CN/docs/Web/API/Request/credentials\"><code>Request.credentials</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含请求的证书 (例如： <code>omit</code>, <code>same-origin</code>).</p>\n  </dd>\n  <dt id=\"request.redirect_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/redirect\"><code>Request.redirect</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含？如何处理重定向模式，它可能是一个<code>follow</code>，<code>error</code>或者<code>manual</code>。</p>\n  </dd>\n  <dt id=\"request.integrity_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/integrity\"><code>Request.integrity</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含请求的<a href=\"/zh-CN/docs/Web/Security/Subresource_Integrity\">子资源的完整性</a>值 (例如： <code>sha256-BpfBw7ivV8q2jLiT13fxDYAe2tJllusRSZ273h2nFSE=</code>).</p>\n  </dd>\n  <dt id=\"request.cache\"><a href=\"/zh-CN/docs/Web/API/Request/cache\"><code>Request.cache</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>包含请求的缓存模式 (例如： <code>default</code>, <code>reload</code>, <code>no-cache</code>).</p>\n  </dd>\n</dl>\n<p><code>Request</code>实现了<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Body</code></a>, 所以它还具有以下属性可用：</p>\n<dl>\n  <dt id=\"body.body_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/body\"><code>Body.body</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>一个简单 getter 用于曝光一个<a href=\"/zh-CN/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a>的主体内容。</p>\n  </dd>\n  <dt id=\"body.bodyused_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/bodyUsed\"><code>Body.bodyUsed</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>存储一个<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a>判断主体是否已经被用于一个响应中。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"request.clone\"><a href=\"/zh-CN/docs/Web/API/Request/clone\"><code>Request.clone()</code></a></dt>\n  <dd>\n    <p>创建当前 request 的副本。</p>\n  </dd>\n</dl>\n<p><code>Request</code>实现 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Body</code></a>, 因此它也有以下方法可用：</p>\n<dl>\n  <dt id=\"body.arraybuffer_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/arrayBuffer\"><code>Body.arrayBuffer()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>返回解决一个<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>表示的请求主体的 promise.</p>\n  </dd>\n  <dt id=\"body.blob_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/blob\"><code>Body.blob()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>返回解决一个<a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a>表示的请求主体的 promise.</p>\n  </dd>\n  <dt id=\"body.formdata_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/formData\"><code>Body.formData()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>返回解决一个<a href=\"/zh-CN/docs/Web/API/FormData\"><code>FormData</code></a>表示的请求主体的 promise.</p>\n  </dd>\n  <dt id=\"body.json_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/json\"><code>Body.json()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>返回解决一个<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>JSON</code></a>表示的请求主体的 promise.</p>\n  </dd>\n  <dt id=\"body.text_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/text\"><code>Body.text()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>返回解决一个<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>USVString</code></a>(文本) 表示的请求主体的 promise.</p>\n  </dd>\n</dl>\n<p>注意：这些 Body 功能只能运行一次; 随后的调用将通过空 strings/ ArrayBuffers 解析。</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>在下面的代码中，我们使用 Request ( ) 构造函数创建了一个新的 request 实例（用来请求同一目录下的图片）, 然后返回请求的一些属性。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost/flowers.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> myURL <span class=\"token operator\">=</span> myRequest<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">;</span> <span class=\"token comment\">// http://localhost/flowers.jpg</span>\n<span class=\"token keyword\">const</span> myMethod <span class=\"token operator\">=</span> myRequest<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">;</span> <span class=\"token comment\">// GET</span>\n<span class=\"token keyword\">const</span> myCred <span class=\"token operator\">=</span> myRequest<span class=\"token punctuation\">.</span>credentials<span class=\"token punctuation\">;</span> <span class=\"token comment\">// omit</span>\n</code></pre></div>\n<p>然后，通过将 Request 对象作为参数传递给<a href=\"/zh-CN/docs/Web/API/fetch\"></a><a href=\"/zh-CN/docs/Web/API/fetch\"><code>GlobalFetch.fetch()</code></a>调用来获取此请求，例如：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=&gt;</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">blob</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    myImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在下面的代码片段中，我们使用<code>Request()</code>构造函数创建了一个新的 request，其中包含一些初始数据和正文内容，用于需要主体有效载荷的 api 请求：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost/api'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token string\">'{\"foo\":\"bar\"}'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> myURL <span class=\"token operator\">=</span> myRequest<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">;</span> <span class=\"token comment\">// http://localhost/api</span>\n<span class=\"token keyword\">const</span> myMethod <span class=\"token operator\">=</span> myRequest<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">;</span> <span class=\"token comment\">// POST</span>\n<span class=\"token keyword\">const</span> myCred <span class=\"token operator\">=</span> myRequest<span class=\"token punctuation\">.</span>credentials<span class=\"token punctuation\">;</span> <span class=\"token comment\">// omit</span>\n<span class=\"token keyword\">const</span> bodyUsed <span class=\"token operator\">=</span> myRequest<span class=\"token punctuation\">.</span>bodyUsed<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>注意：body 类型只能是一个<a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a>,<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>BufferSource</code></a>, <a href=\"/zh-CN/docs/Web/API/FormData\"><code>FormData</code></a>, <a href=\"/zh-CN/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>, <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>USVString</code></a> 或者<a href=\"/zh-CN/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a>类型，因此增加一个 JSON 对象的有效载荷则需要字符串化该对象。</p>\n<p>例如，您可以通过将<code>Request</code>对象作为参数传递给<a href=\"/zh-CN/docs/Web/API/fetch\"><code>GlobalFetch.fetch()</code></a>调用来获取此 api 请求，并获得响应：</p>\n<pre class=\"notranslate\">fetch(myRequest)\n  .then(response =&gt; {\n    if (response.status === 200) {\n      return response.json();\n    } else {\n      throw new Error('Something went wrong on api server!');\n    }\n  })\n  .then(response =&gt; {\n    console.debug(response);\n    // ...\n  }).catch(error =&gt; {\n    console.error(error);\n  });\n</pre>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fetch.spec.whatwg.org/#request-class","title":"Fetch Standard"}],"query":"api.Request"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Request","dataURL":"/zh-CN/docs/Web/API/Request/bcd.json"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">ServiceWorker API (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/HTTP/CORS\">HTTP access control (CORS)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"构造器","id":"构造器"},{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"相关链接","id":"相关链接"}],"summary":"你可以使用 Request.Request() ?构造函数创建一个 Request 对象，但是你可能会遇到一个 Request 对象作为其它 API 的操作被返回，比如一个 service worker 的FetchEvent.request。","popularity":0.0009,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Request","locale":"en-US","native":"English (US)"},{"title":"Request","locale":"es","native":"Español"},{"title":"Request","locale":"fr","native":"Français"},{"title":"Request","locale":"ja","native":"日本語"},{"title":"Request","locale":"ko","native":"한국어"},{"title":"Request","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Request","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/request","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/request/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Request","title":"Request"}],"pageTitle":"Request - Web API 接口参考 | MDN","noIndexing":false}}