{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"滚轮事件","mdn_url":"/zh-CN/docs/Web/API/Element/wheel_event","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>当滚动鼠标滚轮或操作其它类似输入设备时会触发<strong>滚轮事件</strong>。滚轮事件替换了已被弃用的非标准<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>mousewheel</code></a>事件。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 请勿想当然依据滚轮方向（即该事件的各 delta 属性值）来推断文档内容的滚动方向，因标准未定义滚轮事件具体会引发什么样的行为，引发的行为实际上是各浏览器自行定义的。即便滚轮事件引发了文档内容的滚动行为，也不表示滚轮方向和文档内容的滚动方向一定相同。因而通过该滚轮事件获知文档内容滚动方向的方法并不可靠。要获取文档内容的滚动方向，可在文档内容滚动事件（<code><a href=\"/en-US/docs/Web/API/Document/scroll_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">scroll (en-US)</a></code>）中监视<a href=\"/zh-CN/docs/Web/API/Element/scrollLeft\" title=\"scrollLeft\"><code>scrollLeft</code></a>和<a href=\"/zh-CN/docs/Web/API/Element/scrollTop\" title=\"scrollTop\"><code>scrollTop</code></a>二值变化情况，即可推断出滚动方向了。</p>\n</div>"}},{"type":"prose","value":{"id":"概要","title":"概要","isH3":false,"content":"<dl>\n  <dt id=\"接口\">接口</dt>\n  <dd><a href=\"/zh-CN/docs/Web/API/WheelEvent\"><code>WheelEvent</code></a></dd>\n  <dt id=\"同步性\">同步性</dt>\n  <dd>\n    <p>异步</p>\n  </dd>\n  <dt id=\"事件冒泡\">事件冒泡</dt>\n  <dd>\n    <p>是</p>\n  </dd>\n  <dt id=\"可取消\">可取消</dt>\n  <dd>\n    <p>是</p>\n  </dd>\n  <dt id=\"目标元素\">目标元素</dt>\n  <dd>\n    <p>defaultView, Document, Element</p>\n  </dd>\n  <dt id=\"默认行为\">默认行为</dt>\n  <dd>\n    <p>滚动，历史记录切换，或者放大／缩小。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<p><em>滚轮事件实现了以下事件的属性： <a href=\"/zh-CN/docs/Web/API/WheelEvent\"><code>WheelEvent</code></a>, <a href=\"/zh-CN/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a>, <a href=\"/zh-CN/docs/Web/API/UIEvent\"><code>UIEvent</code></a> and <a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a>.</em></p>"}},{"type":"prose","value":{"id":"properties_of_wheelevent","title":"Properties of <code>WheelEvent</code>","isH3":true,"content":"<p><em>该接口继承了父接口 <a href=\"/zh-CN/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a>、<a href=\"/zh-CN/docs/Web/API/UIEvent\"><code>UIEvent</code></a> 和 <a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a> 的属性。</em></p><dl>\n  <dt id=\"wheelevent.deltax\"><a href=\"/zh-CN/docs/Web/API/WheelEvent/deltaX\"><code>WheelEvent.deltaX</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个 <code>double</code> 值，该值表示滚轮的横向滚动量。</p>\n  </dd>\n  <dt id=\"wheelevent.deltay\"><a href=\"/zh-CN/docs/Web/API/WheelEvent/deltaY\"><code>WheelEvent.deltaY</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个 <code>double</code> 值，该值表示滚轮的纵向滚动量。</p>\n  </dd>\n  <dt id=\"wheelevent.deltaz\"><a href=\"/zh-CN/docs/Web/API/WheelEvent/deltaZ\"><code>WheelEvent.deltaZ</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个 <code>double</code> 值，该值表示滚轮的 z 轴方向上的滚动量。</p>\n  </dd>\n  <dt id=\"wheelevent.deltamode\"><a href=\"/zh-CN/docs/Web/API/WheelEvent/deltaMode\"><code>WheelEvent.deltaMode</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个 <code>unsigned long</code> 值，该值表示上述各 <code>delta*</code> 的值的单位。允许的值如下：</p>\n    <table>\n      <thead>\n        <tr>\n          <th>常量</th>\n          <th>值</th>\n          <th>描述</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><code>WheelEvent.DOM_DELTA_PIXEL</code></td>\n          <td><code>0x00</code></td>\n          <td><code>delta*</code> 的单位为像素。</td>\n        </tr>\n        <tr>\n          <td><code>WheelEvent.DOM_DELTA_LINE</code></td>\n          <td><code>0x01</code></td>\n          <td><code>delta*</code> 单位为行。每一次点击鼠标都会滚动一行内容，行高的计算取决于浏览器。</td>\n        </tr>\n        <tr>\n          <td><code>WheelEvent.DOM_DELTA_PAGE</code></td>\n          <td><code>0x02</code></td>\n          <td><code>delta*</code> 单位为页。每一次点击鼠标都会滚动一页内容。</td>\n        </tr>\n      </tbody>\n    </table>\n  </dd>\n  <dt id=\"wheelevent.wheeldelta\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>WheelEvent.wheelDelta</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>返回一个整数（32 位），表示以像素为单位的距离。</p>\n  </dd>\n  <dt id=\"wheelevent.wheeldeltax\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>WheelEvent.wheelDeltaX</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>返回一个整数，表示水平滚动量。</p>\n  </dd>\n  <dt id=\"wheelevent.wheeldeltay\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>WheelEvent.wheelDeltaY</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>返回一个整数，表示垂直滚动量。</p>\n  </dd>\n</dl><div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> <a href=\"/zh-CN/docs/Web/API/Element/mousewheel_event\">元素：mousewheel 事件</a>有关于已弃用的属性（<code>wheelDelta</code>、<code>wheelDeltaX</code> 和 <code>wheelDeltaY</code>）的额外说明。</p>\n</div>","titleAsText":"Properties of WheelEvent"}},{"type":"prose","value":{"id":"properties_of_mouseevent","title":"Properties of <code>MouseEvent</code>","isH3":true,"content":"<p><em>这个接口也继承了<a href=\"/zh-CN/docs/Web/API/UIEvent\"><code>UIEvent</code></a> 和 <a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a>原型上的方法，</em></p><dl>\n  <dt id=\"mouseevent.altkey\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/altKey\"><code>MouseEvent.altKey</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>当鼠标事件触发的时，如果 <kbd>alt</kbd> 键被按下，返回 true;</p>\n  </dd>\n  <dt id=\"mouseevent.button\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/button\"><code>MouseEvent.button</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>当鼠标事件触发的时，如果鼠标按钮被按下（如果有的话），将会返回一个数值。</p>\n  </dd>\n  <dt id=\"mouseevent.buttons\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/buttons\"><code>MouseEvent.buttons</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>当鼠标事件触发的时，如果多个鼠标按钮被按下（如果有的话），将会返回一个或者多个代表鼠标按钮的数字。</p>\n  </dd>\n  <dt id=\"mouseevent.clientx\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/clientX\"><code>MouseEvent.clientX</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>鼠标指针在点击元素（DOM）中的 X 坐标。</p>\n  </dd>\n  <dt id=\"mouseevent.clienty\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/clientY\"><code>MouseEvent.clientY</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>鼠标指针在点击元素（DOM）中的 Y 坐标。</p>\n  </dd>\n  <dt id=\"mouseevent.ctrlkey\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/ctrlKey\"><code>MouseEvent.ctrlKey</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>当鼠标事件触发时，如果 <kbd>control</kbd> 键被按下，则返回 true；</p>\n  </dd>\n  <dt id=\"mouseevent.metakey\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/metaKey\"><code>MouseEvent.metaKey</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>当鼠标事件触发时，如果 <kbd>meta</kbd> 键被按下，则返回 true；</p>\n  </dd>\n  <dt id=\"mouseevent.movementx\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/movementX\"><code>MouseEvent.movementX</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>鼠标指针相对于最后<code><a href=\"/en-US/docs/Web/API/Element/mousemove_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">mousemove (en-US)</a></code>事件位置的 X 坐标。</p>\n  </dd>\n  <dt id=\"mouseevent.movementy\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/movementY\"><code>MouseEvent.movementY</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>鼠标指针相对于最后<code><a href=\"/en-US/docs/Web/API/Element/mousemove_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">mousemove (en-US)</a></code>事件位置的 Y 坐标。</p>\n  </dd>\n  <dt id=\"mouseevent.offsetx\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/offsetX\"><code>MouseEvent.offsetX</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>鼠标指针相对于目标节点内边位置的 X 坐标</p>\n  </dd>\n  <dt id=\"mouseevent.offsety\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/offsetY\"><code>MouseEvent.offsetY</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>鼠标指针相对于目标节点内边位置的 Y 坐标</p>\n  </dd>\n  <dt id=\"mouseevent.pagex\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/pageX\"><code>MouseEvent.pageX</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>鼠标指针相对于整个文档的 X 坐标；</p>\n  </dd>\n  <dt id=\"mouseevent.pagey\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/pageY\"><code>MouseEvent.pageY</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>鼠标指针相对于整个文档的 Y 坐标；</p>\n  </dd>\n  <dt id=\"mouseevent.region\"><a href=\"/zh-CN/docs/Web/API/MouseEvent\"><code>MouseEvent.region</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回被点击事件影响的点击区域的 id，如果没有区域被影响则返回 null。</p>\n  </dd>\n  <dt id=\"mouseevent.relatedtarget\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/relatedTarget\"><code>MouseEvent.relatedTarget</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>鼠标事件的次要目标（如果有的话）</p>\n  </dd>\n  <dt id=\"mouseevent.screenx\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/screenX\"><code>MouseEvent.screenX</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>鼠标指针相对于全局（屏幕）的 X 坐标；</p>\n  </dd>\n  <dt id=\"mouseevent.screeny\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/screenY\"><code>MouseEvent.screenY</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>鼠标指针相对于全局（屏幕）的 Y 坐标；</p>\n  </dd>\n  <dt id=\"mouseevent.shiftkey\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/shiftKey\"><code>MouseEvent.shiftKey</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>当鼠标事件触发时，如果 <kbd>shift</kbd> 键被按下，则返回 true；</p>\n  </dd>\n  <dt id=\"mouseevent.which\"><a href=\"/zh-CN/docs/Web/API/UIEvent/which\"><code>MouseEvent.which</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>当鼠标事件触发时，表示被按下的按钮。</p>\n  </dd>\n  <dt id=\"mouseevent.mozpressure\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>MouseEvent.mozPressure</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>点击事件发生时施加在触摸屏或者平板设备的压力量。这个数值在 0.0（最小压力）和 1.0（最大压力）之间。</p>\n  </dd>\n  <dt id=\"mouseevent.mozinputsource\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/mozInputSource\"><code>MouseEvent.mozInputSource</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>生成事件的类型（若干 <code>MOZ_SOURCE_*</code>常量如下列出）。可通过该属性获知鼠标事件是否由真实鼠标设备触发，亦或通过触摸事件触发（这可能影响处理坐标事件时的精确程度）。</p>\n  </dd>\n  <dt id=\"mouseevent.webkitforce_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MouseEvent/webkitForce\"><code>MouseEvent.webkitForce</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>点击时施加的压力量。</p>\n  </dd>\n  <dt id=\"mouseevent.x\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/x\"><code>MouseEvent.x</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/API/MouseEvent/clientX\"><code>MouseEvent.clientX</code></a>的别名。</p>\n  </dd>\n  <dt id=\"mouseevent.y\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/y\"><code>MouseEvent.y</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/API/MouseEvent/clientY\"><code>MouseEvent.clientY</code></a>的别名。</p>\n  </dd>\n</dl>","titleAsText":"Properties of MouseEvent"}},{"type":"prose","value":{"id":"properties_of_uievent","title":"Properties of <code>UIEvent</code>","isH3":true,"content":"<p><em>也继承了父代 <a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a> 的一些属性。</em></p><dl>\n  <dt id=\"uievent.cancelbubble_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Event/cancelBubble\"><code>UIEvent.cancelBubble</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>返回一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>，表示该事件的冒泡是否被取消。</p>\n  </dd>\n  <dt id=\"uievent.detail\"><a href=\"/zh-CN/docs/Web/API/UIEvent/detail\"><code>UIEvent.detail</code></a><span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>Returns a <code>long</code> with details about the event, depending on the event type.</p>\n  </dd>\n  <dt id=\"uievent.layerx_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MouseEvent/layerX\"><code>UIEvent.layerX</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回事件相对于当前层的水平坐标。</p>\n  </dd>\n  <dt id=\"uievent.layery_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MouseEvent/layerY\"><code>UIEvent.layerY</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回事件相对于当前层的垂直坐标。</p>\n  </dd>\n  <dt id=\"uievent.pagex\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/pageX\"><code>UIEvent.pageX</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回事件相对于整个文档的水平坐标。</p>\n  </dd>\n  <dt id=\"uievent.pagey\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/pageY\"><code>UIEvent.pageY</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回事件相对于整个文档的垂直坐标。</p>\n  </dd>\n  <dt id=\"uievent.sourcecapabilities_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/UIEvent/sourceCapabilities\"><code>UIEvent.sourceCapabilities</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回输入设备功能接口的一个实例，它提供有关负责生成 touch 事件的物理设备的信息。</p>\n  </dd>\n  <dt id=\"uievent.view\"><a href=\"/zh-CN/docs/Web/API/UIEvent/view\"><code>UIEvent.view</code></a><span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个包含了产生该事件的视图的 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>WindowProxy</code></a> 。</p>\n  </dd>\n  <dt id=\"uievent.which\"><a href=\"/zh-CN/docs/Web/API/UIEvent/which\"><code>UIEvent.which</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个对应（键盘）按下的数字类型的 <code>keyCode</code> ，或者一个字母数字键按下时的字符码 (<code>charCode</code>)。</p>\n  </dd>\n</dl>","titleAsText":"Properties of UIEvent"}},{"type":"prose","value":{"id":"properties_of_event","title":"Properties of <code>Event</code>","isH3":true,"content":"<dl>\n  <dt id=\"event.bubbles\"><a href=\"/zh-CN/docs/Web/API/Event/bubbles\"><code>Event.bubbles</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>一个布尔值，用来表示该事件是否会在 DOM 中冒泡。</p>\n  </dd>\n  <dt id=\"event.cancelbubble\"><a href=\"/zh-CN/docs/Web/API/Event/cancelBubble\"><code>Event.cancelBubble</code></a></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/API/Event/stopPropagation\"><code>Event.stopPropagation()</code></a> 的历史别名。在事件处理器函数返回之前，将此属性的值设置为 <code>true</code>，亦可阻止事件继续冒泡。</p>\n  </dd>\n  <dt id=\"event.cancelable\"><a href=\"/zh-CN/docs/Web/API/Event/cancelable\"><code>Event.cancelable</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>一个布尔值，表示事件是否可以取消。</p>\n  </dd>\n  <dt id=\"event.composed\"><a href=\"/zh-CN/docs/Web/API/Event/composed\"><code>Event.composed</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>一个布尔值，表示事件是否可以穿过 Shadow DOM 和常规 DOM 之间的隔阂进行冒泡。</p>\n  </dd>\n  <dt id=\"event.currenttarget\"><a href=\"/zh-CN/docs/Web/API/Event/currentTarget\"><code>Event.currentTarget</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>对事件当前注册的目标的引用。这是一个当前计划将事件发送到的对象。它是有可能在重定向的过程中被改变的。</p>\n  </dd>\n  <dt id=\"event.deeppath_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Event/composedPath\"><code>Event.deepPath</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>一个由事件流所经过的 DOM <a href=\"/zh-CN/docs/Web/API/Node\" title=\"节点\"><code>节点</code></a>组成的<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>数组</code></a>。</p>\n  </dd>\n  <dt id=\"event.defaultprevented\"><a href=\"/zh-CN/docs/Web/API/Event/defaultPrevented\"><code>Event.defaultPrevented</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>一个布尔值，表示 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\"><code>event.preventDefault()</code></a> 方法是否取消了事件的默认行为。</p>\n  </dd>\n  <dt id=\"event.eventphase\"><a href=\"/zh-CN/docs/Web/API/Event/eventPhase\"><code>Event.eventPhase</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>表示事件流正被处理到了哪个阶段。</p>\n  </dd>\n  <dt id=\"event.explicitoriginaltarget_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Event/explicitOriginalTarget\"><code>Event.explicitOriginalTarget</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>事件的明确（explicit）原始目标（Mozilla 专有属性）。</p>\n  </dd>\n  <dt id=\"event.originaltarget\"><a href=\"/zh-CN/docs/Web/API/Event/originalTarget\"><code>Event.originalTarget</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>重设目标前的事件原始目标（Mozilla 专有属性）。</p>\n  </dd>\n  <dt id=\"event.returnvalue\"><a href=\"/zh-CN/docs/Web/API/Event/returnValue\"><code>Event.returnValue</code></a></dt>\n  <dd>\n    <p>旧版 Internet Explorer 引入的一个非标准历史属性，为保证依赖此属性的网页正常运作，此属性最终被收入规范。可用 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\"><code>Event.preventDefault()</code></a> 与 <a href=\"/zh-CN/docs/Web/API/Event/defaultPrevented\"><code>Event.defaultPrevented</code></a> 代替，但由于已进入规范，也可以使用此属性。</p>\n  </dd>\n  <dt id=\"event.srcelement\"><a href=\"/zh-CN/docs/Web/API/Event/srcElement\"><code>Event.srcElement</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>旧版 Internet Explorer 对 <a href=\"/zh-CN/docs/Web/API/Event/target\"><code>Event.target</code></a> 的非标准别称。出于兼容原因，一些其他浏览器也支持此别称。</p>\n  </dd>\n  <dt id=\"event.target\"><a href=\"/zh-CN/docs/Web/API/Event/target\"><code>Event.target</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>对事件原始目标的引用，这里的原始目标指最初派发（dispatch）事件时指定的目标。</p>\n  </dd>\n  <dt id=\"event.timestamp\"><a href=\"/zh-CN/docs/Web/API/Event/timeStamp\"><code>Event.timeStamp</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>事件创建时的时间戳（精度为毫秒）。按照规范，这个时间戳是 Unix 纪元起经过的毫秒数，但实际上，在不同的浏览器中，对此时间戳的定义也有所不同。另外，规范正在将其修改为 <a href=\"/zh-CN/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a>。</p>\n  </dd>\n  <dt id=\"event.type\"><a href=\"/zh-CN/docs/Web/API/Event/type\"><code>Event.type</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>事件的类型，不区分大小写。</p>\n  </dd>\n  <dt id=\"event.istrusted\"><a href=\"/zh-CN/docs/Web/API/Event/isTrusted\"><code>Event.isTrusted</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>表示事件是由浏览器（例如用户点击）发起的，还是由脚本（使用事件创建方法，例如 <a href=\"/zh-CN/docs/Web/API/Event/initEvent\"><code>Event.initEvent</code></a>）发出的。</p>\n  </dd>\n</dl>","titleAsText":"Properties of Event"}},{"type":"prose","value":{"id":"废弃属性","title":"废弃属性","isH3":true,"content":"<dl>\n  <dt id=\"event.scoped_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Event/composed\"><code>Event.scoped</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>\n      已废弃，使用 <a href=\"/zh-CN/docs/Web/API/Event/composed\"><code>Event.composed</code></a> 代替此属性。\n      一个<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>布尔值</code></a>，表示给定的事件是否会穿过 Shadow DOM，进入到标准 DOM 中。\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<p><em>滚轮事件实现了以下事件的方法： <a href=\"/zh-CN/docs/Web/API/WheelEvent\"><code>WheelEvent</code></a>, <a href=\"/zh-CN/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a>, <a href=\"/zh-CN/docs/Web/API/UIEvent\"><code>UIEvent</code></a> and <a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a>.</em></p>"}},{"type":"prose","value":{"id":"methods_of_wheelevent","title":"Methods of <code>WheelEvent</code>","isH3":true,"content":"<p><em>该接口本身未定义方法，但继承了父接口 <a href=\"/zh-CN/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a>、<a href=\"/zh-CN/docs/Web/API/UIEvent\"><code>UIEvent</code></a>、<a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a> 的方法。</em></p>","titleAsText":"Methods of WheelEvent"}},{"type":"prose","value":{"id":"methods_of_mouseevent","title":"Methods of <code>MouseEvent</code>","isH3":true,"content":"<p><em>这个接口也继承了它的副方法<a href=\"/zh-CN/docs/Web/API/UIEvent\"><code>UIEvent</code></a> 和<a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a>.</em></p><dl>\n  <dt id=\"mouseevent.getmodifierstate\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/getModifierState\"><code>MouseEvent.getModifierState()</code></a></dt>\n  <dd>\n    <p>返回指定修饰键的当前状态。请参照<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/getModifierState\"><code>KeyboardEvent.getModifierState</code> <small>(en-US)</small></a>() 查看详情。</p>\n  </dd>\n  <dt id=\"mouseevent.initmouseevent\"><a href=\"/zh-CN/docs/Web/API/MouseEvent/initMouseEvent\"><code>MouseEvent.initMouseEvent()</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>初始化创建 MouseEvent 的值。如果这个事件已经被分派，这个方法将不会做任何事情。</p>\n  </dd>\n</dl>","titleAsText":"Methods of MouseEvent"}},{"type":"prose","value":{"id":"methods_of_uievent","title":"Methods of <code>UIEvent</code>","isH3":true,"content":"<p><em>也继承了父代 <a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a> 的一些方法。</em></p><dl>\n  <dt id=\"uievent.inituievent_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/UIEvent/initUIEvent\"><code>UIEvent.initUIEvent()</code> <small>(en-US)</small></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>初始化一个 <code>UIEvent</code> 对象。如果事件已经被分派，这个方法什么都不做。</p>\n  </dd>\n</dl>","titleAsText":"Methods of UIEvent"}},{"type":"prose","value":{"id":"methods_of_event","title":"Methods of <code>Event</code>","isH3":true,"content":"<dl>\n  <dt id=\"event.createevent_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Document/createEvent\"><code>Event.createEvent()</code> <small>(en-US)</small></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>创建一个新事件，如果使用此方法创建事件，则必须调用其自身的 <code>initEvent()</code> 方法，对其进行初始化。</p>\n  </dd>\n  <dt id=\"event.composedpath\"><a href=\"/zh-CN/docs/Web/API/Event/composedPath\"><code>Event.composedPath()</code></a></dt>\n  <dd>\n    <p>返回事件的路径（将在该对象上调用监听器）。如果阴影根节点 (shadow root) 创建时 <a href=\"/zh-CN/docs/Web/API/ShadowRoot/mode\"><code>ShadowRoot.mode</code></a> 值为 closed，那么路径不会包括该根节点下阴影树 (shadow tree) 的节点。</p>\n  </dd>\n  <dt id=\"event.initevent\"><a href=\"/zh-CN/docs/Web/API/Event/initEvent\"><code>event.initEvent</code></a><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>为通过 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Document/createEvent\"><code>Event.createEvent()</code> <small>(en-US)</small></a> 创建的事件初始化。该方法对已经被派发的事件无效。</p>\n  </dd>\n  <dt id=\"event.preventdefault\"><a href=\"/zh-CN/docs/Web/API/Event/preventDefault\"><code>event.preventDefault</code></a></dt>\n  <dd>\n    <p>取消事件（如果该事件可取消）。</p>\n  </dd>\n  <dt id=\"event.stopimmediatepropagation\"><a href=\"/zh-CN/docs/Web/API/Event/stopImmediatePropagation\"><code>event.stopImmediatePropagation</code></a></dt>\n  <dd>\n    <p>对这个特定的事件而言，没有其他监听器被调用。这个事件既不会添加到相同的元素上，也不会添加到以后将要遍历的元素上（例如在捕获阶段）。</p>\n  </dd>\n  <dt id=\"event.stoppropagation\"><a href=\"/zh-CN/docs/Web/API/Event/stopPropagation\"><code>event.stopPropagation</code></a></dt>\n  <dd>\n    <p>停止冒泡，阻止事件在 DOM 中继续冒泡。</p>\n  </dd>\n</dl>","titleAsText":"Methods of Event"}},{"type":"prose","value":{"id":"废弃方法","title":"废弃方法","isH3":true,"content":"<dl>\n  <dt id=\"event.getpreventdefault\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Event.getPreventDefault()</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>\n      非标准方法；使用 <a href=\"/zh-CN/docs/Web/API/Event/defaultPrevented\"><code>Event.defaultPrevented</code></a> 属性代替此方法。\n      返回 <a href=\"/zh-CN/docs/Web/API/Event/defaultPrevented\"><code>Event.defaultPrevented</code></a> 的值。\n    </p>\n  </dd>\n  <dt id=\"event.preventbubble\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>event.preventBubble</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>\n      已废弃；使用 <a href=\"/zh-CN/docs/Web/API/Event/stopPropagation\"><code>event.stopPropagation</code></a> 代替此方法。\n      阻止事件继续冒泡。\n    </p>\n  </dd>\n  <dt id=\"event.preventcapture\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>event.preventCapture</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>已废弃；使用 <a href=\"/zh-CN/docs/Web/API/Event/stopPropagation\"><code>event.stopPropagation</code></a> 代替此方法。</p>\n  </dd>\n</dl>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/uievents/#event-type-wheel","title":"UI Events"}],"query":"api.Element.wheel_event"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Element.wheel_event","dataURL":"/zh-CN/docs/Web/API/Element/wheel_event/bcd.json"}},{"type":"prose","value":{"id":"跨浏览器监听滚动事件","title":"跨浏览器监听滚动事件","isH3":true,"content":"<p><code>以下脚本创建了一个全局的 addWheelListener</code> 方法，它可以兼容各浏览器监听滚动事件，并且阻止默认行为。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// creates a global \"addWheelListener\" method</span>\n<span class=\"token comment\">// example: addWheelListener( elem, function( e ) { console.log( e.deltaY ); e.preventDefault(); } );</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">window<span class=\"token punctuation\">,</span>document</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> _addEventListener<span class=\"token punctuation\">,</span> onwheel<span class=\"token punctuation\">,</span> support<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// detect event model</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> window<span class=\"token punctuation\">.</span>addEventListener <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        _addEventListener <span class=\"token operator\">=</span> <span class=\"token string\">\"addEventListener\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        _addEventListener <span class=\"token operator\">=</span> <span class=\"token string\">\"attachEvent\"</span><span class=\"token punctuation\">;</span>\n        prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"on\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// detect available wheel event</span>\n    support <span class=\"token operator\">=</span> <span class=\"token string\">\"onwheel\"</span> <span class=\"token keyword\">in</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"wheel\"</span> <span class=\"token operator\">:</span> <span class=\"token comment\">// 各个厂商的高版本浏览器都支持\"wheel\"</span>\n              document<span class=\"token punctuation\">.</span>onmousewheel <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"mousewheel\"</span> <span class=\"token operator\">:</span> <span class=\"token comment\">// Webkit 和 IE 一定支持\"mousewheel\"</span>\n              <span class=\"token string\">\"DOMMouseScroll\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 低版本 firefox</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addWheelListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">elem<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">,</span> useCapture</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">_addWheelListener</span><span class=\"token punctuation\">(</span> elem<span class=\"token punctuation\">,</span> support<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">,</span> useCapture <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// handle MozMousePixelScroll in older Firefox</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> support <span class=\"token operator\">==</span> <span class=\"token string\">\"DOMMouseScroll\"</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">_addWheelListener</span><span class=\"token punctuation\">(</span> elem<span class=\"token punctuation\">,</span> <span class=\"token string\">\"MozMousePixelScroll\"</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">,</span> useCapture <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_addWheelListener</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">elem<span class=\"token punctuation\">,</span> eventName<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">,</span> useCapture</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        elem<span class=\"token punctuation\">[</span> _addEventListener <span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span> prefix <span class=\"token operator\">+</span> eventName<span class=\"token punctuation\">,</span> support <span class=\"token operator\">==</span> <span class=\"token string\">\"wheel\"</span> <span class=\"token operator\">?</span> <span class=\"token function-variable function\">callback</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">originalEvent</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">!</span>originalEvent <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> originalEvent <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>event <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// create a normalized event object</span>\n            <span class=\"token keyword\">var</span> event <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// keep a ref to the original event object</span>\n                <span class=\"token literal-property property\">originalEvent</span><span class=\"token operator\">:</span> originalEvent<span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> originalEvent<span class=\"token punctuation\">.</span>target <span class=\"token operator\">||</span> originalEvent<span class=\"token punctuation\">.</span>srcElement<span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"wheel\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">deltaMode</span><span class=\"token operator\">:</span> originalEvent<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> <span class=\"token string\">\"MozMousePixelScroll\"</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">deltaX</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">deltaZ</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function-variable function\">preventDefault</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    originalEvent<span class=\"token punctuation\">.</span>preventDefault <span class=\"token operator\">?</span>\n                        originalEvent<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span>\n                        originalEvent<span class=\"token punctuation\">.</span>returnValue <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// calculate deltaY (and deltaX) according to the event</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> support <span class=\"token operator\">==</span> <span class=\"token string\">\"mousewheel\"</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                event<span class=\"token punctuation\">.</span>deltaY <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">40</span> <span class=\"token operator\">*</span> originalEvent<span class=\"token punctuation\">.</span>wheelDelta<span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// Webkit also support wheelDeltaX</span>\n                originalEvent<span class=\"token punctuation\">.</span>wheelDeltaX <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> event<span class=\"token punctuation\">.</span>deltaX <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">40</span> <span class=\"token operator\">*</span> originalEvent<span class=\"token punctuation\">.</span>wheelDeltaX <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                event<span class=\"token punctuation\">.</span>deltaY <span class=\"token operator\">=</span> originalEvent<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// it's time to fire the callback</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span> event <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> useCapture <span class=\"token operator\">||</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"gecko_notes","title":"Gecko notes","isH3":false,"content":""}},{"type":"prose","value":{"id":"滚轮事件和其它的鼠标滚动事件","title":"滚轮事件和其它的鼠标滚动事件","isH3":true,"content":"<p>如果一个用户真实操作触发的滚轮事件没有被处理，这会触发一个 <code>DOMMouseScroll</code> 事件和一个 <code>MozMousePixelScroll</code> 事件以向下兼容。它们的属性值由滚轮事件 delta 值和最近的 ancestor clipped 元素计算出。(i.e., <a href=\"/zh-CN/docs/Web/CSS/overflow\"><code>overflow</code></a> 不可见). 如果滚轮事件或其它任意一个剩余事件被 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\"><code>event.preventDefault()</code></a>阻止，将什么都不会发生。</p>\n<p>以下为事件顺序：</p>\n<ol>\n  <li>滚轮事件处于默认事件组 (web 应用和浏览器插件都可以处理这个组的事件)</li>\n  <li>当连续滚轮事件 deltaY 的值累计大于 1 或小于－1 时，<code>竖直方向的 DOMMouseScroll</code> 事件既属于默认事件组也属于系统事件组</li>\n  <li>当最近的滚轮事件的 deltaY 值非零时，两个事件组都包含竖直方向的 MozMousePixelScroll 事件</li>\n  <li>当连续滚轮事件 deltaX 的值累计大于 1 或小于－1 时，两个事件组都包含水平<code>方向的 DOMMouseScroll</code> 事件</li>\n  <li>当最近的滚轮事件的 deltaX 值非零时，两个事件组都包含水平方向的 MozMousePixelScroll 事件</li>\n  <li>一个滚轮事件处于系统事件组 (只有浏览器插件可以处理这个组的事件)</li>\n</ol>\n<table>\n  <thead>\n    <tr>\n      <th><code>wheel</code> (default event group)</th>\n      <th><code>preventDefault()</code> called</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>DOMMouseScroll</code> (Vertical)</td>\n      <td>Not fired</td>\n      <td><code>preventDefault()</code> called</td>\n      <td></td>\n      <td></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>MozMousePixelScroll</code> (Vertical)</td>\n      <td>Not fired</td>\n      <td><code>defaultPrevented</code> is true</td>\n      <td><code>preventDefault()</code> called</td>\n      <td></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>DOMMouseScroll</code> (Horizontal)</td>\n      <td>Not fired</td>\n      <td>Not affected</td>\n      <td>Not affected</td>\n      <td><code>preventDefault()</code> called</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>MozMousePixelScroll</code> (Horizontal)</td>\n      <td>Not fired</td>\n      <td>Not affected</td>\n      <td>Not affected</td>\n      <td><code>defaultPrevented</code> is true</td>\n      <td><code>preventDefault()</code> called</td>\n    </tr>\n    <tr>\n      <td><code>wheel</code> (system event group)</td>\n      <td><code>defaultPrevented</code> is true</td>\n      <td><code>defaultPrevented</code> is true</td>\n      <td><code>defaultPrevented</code> is true</td>\n      <td><code>defaultPrevented</code> is true</td>\n      <td><code>defaultPrevented</code> is true</td>\n    </tr>\n  </tbody>\n</table>\n<p>如果一个浏览器插件需要知道剩余事件是否被 web 内容所处理，它可以使用第 6 个滚轮事件判断，详细内容请查阅系统事件组 <a href=\"/zh-CN/docs/XPCOM_Interface_Reference/nsIEventListenerService\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>nsIEventListenerService</code></a> 的文档。</p>\n<p>通过设置用户偏好可以修改 delta 值和默认行为 (<a href=\"https://wiki.mozilla.org/Gecko:Mouse_Wheel_Scrolling#Preferences_for_customizing_delta_values_and_default_action\" class=\"external\" rel=\" noopener\">details</a>)，因此开发者不应该期望在处理这个事件后发生特殊的行为。</p>"}},{"type":"prose","value":{"id":"delta_值","title":"delta 值","isH3":true,"content":"<p>delta 值并不代表默认情况下的实际滚动值，如果用户在滚动滚轮时按住其他键，可能会产生其他行为，比如在浏览记录中前进／回退，或者放大／缩小网页内容。此外，滚动过程中被滚动的元素不一定是目标元素，滚轮事件的目标元素是由事件触发时光标所在位置计算出的。That event may not only not be the one actually being scrolled，甚至都不可滚动。</p>"}},{"type":"prose","value":{"id":"deltamode_值","title":"deltaMode 值","isH3":true,"content":"<p>在 Windows 下，以下三个原生事件造成了 DOM 滚轮事件。</p>\n<dl>\n  <dt id=\"wm_mousewheel_竖直方向的滚动事件\">WM_MOUSEWHEEL (竖直方向的滚动事件)</dt>\n  <dd>\n    <p><code>deltaMode</code> 值可以是 <code>DOM_DELTA_LINE</code> 或 <code>DOM_DELTA_PAGE。</code>它取决于 Windows 的用户设置 (默认设置为 <code>DOM_DELTA_LINE</code>)。</p>\n  </dd>\n  <dt id=\"wm_mousehwheel_水平方向的滚动事件\">WM_MOUSEHWHEEL (水平方向的滚动事件)</dt>\n  <dd>\n    <p><code>deltaMode</code> 值可以是 <code>DOM_DELTA_LINE</code> 或 <code>DOM_DELTA_PAGE</code>。然而 <code>Windows</code> 的滚轮速度设置界面和鼠标驱动工具都没有提供改为 page scroll 的选项。所以这个值通常为 <code>DOM_DELTA_LINE</code>.</p>\n  </dd>\n  <dt id=\"wm_gesture_only_when_caused_by_panning\">WM_GESTURE (Only when caused by panning)</dt>\n  <dd>\n    <p><code>deltaMode</code> 值总是 <code>DOM_DELTA_PIXEL</code>。但请注意大多数笔记本的触摸板都在模拟鼠标滚轮事件而不是调用这个事件，WM_GESTURE 事件通常被平板电脑使用。</p>\n  </dd>\n</dl>\n<p>在 Mac 下 deltaMode 值由设备决定。如果设备支持高分辨率像素级滚动，<code>deltaMode</code>值就是典型的 <code>DOM_DELTA_PIXEL</code>. 然而用户可以通过加前缀<code>\"mousewheel.enable_pixel_scrolling\"</code>将其改变为 <code>DOM_DELTA_LINE</code> 。如果设备不支持高分辨率滚动，那么 deltaModel 值将一直为 <code>DOM_DELTA_LINE</code>.</p>\n<p>在其它平台下，<code>deltaMode</code> 值总是 <code>DOM_DELTA_LINE</code>。</p>"}},{"type":"prose","value":{"id":"untrusted_events","title":"Untrusted events","isH3":true,"content":"<p>非用户真实操作触发的滚轮事件不会引发默认行为。</p>"}},{"type":"prose","value":{"id":"参考","title":"参考","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/WheelEvent\"><code>WheelEvent</code></a></li>\n  <li>Gecko's legacy events: <code>DOMMouseScroll</code> and <code>MozMousePixelScroll</code></li>\n  <li>Non-Gecko browsers' legacy event: <code>mousewheel</code></li>\n  <li>WebKit bug: <a href=\"https://bugs.webkit.org/show_bug.cgi?id=94081\" class=\"external\" rel=\" noopener\">https://bugs.webkit.org/show_bug.cgi?id=94081</a></li>\n</ul>"}}],"toc":[{"text":"概要","id":"概要"},{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"Gecko notes","id":"gecko_notes"},{"text":"参考","id":"参考"}],"summary":"当滚动鼠标滚轮或操作其它类似输入设备时会触发滚轮事件。滚轮事件替换了已被弃用的非标准mousewheel事件。","popularity":0.0009,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Element: wheel event","locale":"en-US","native":"English (US)"},{"title":"Element: wheel event","locale":"es","native":"Español"},{"title":"Element.onwheel","locale":"fr","native":"Français"},{"title":"Element: wheel イベント","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/element/wheel_event","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/element/wheel_event/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Element","title":"Element"},{"uri":"/zh-CN/docs/Web/API/Element/wheel_event","title":"滚轮事件"}],"pageTitle":"滚轮事件 - Web API 接口参考 | MDN","noIndexing":false}}