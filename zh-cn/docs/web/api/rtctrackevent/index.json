{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"RTCTrackEvent","mdn_url":"/zh-CN/docs/Web/API/RTCTrackEvent","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/RTCTrackEvent/RTCTrackEvent\"><code>RTCTrackEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent/receiver\"><code>receiver</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent/streams\"><code>streams</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent/track\"><code>track</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent/transceiver\"><code>transceiver</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>WebRTC 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <a href=\"/zh-CN/docs/Web/API/WebRTC_API\">WebRTC API</a> interface <strong><code>RTCTrackEvent</code></strong> represents the <code><a href=\"/zh-CN/docs/Web/Reference/Events/track\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">track</a></code> event, which is sent when a new <a href=\"/zh-CN/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> is added to an <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code> <small>(en-US)</small></a> which is part of the <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. The target is the <code>RTCPeerConnection</code> object to which the track is being added.</p>\n<p>This event is sent by the WebRTC layer to the web site or application, so you will not typically need to instantiate an <code>RTCTrackEvent</code> yourself.</p>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"rtctrackevent\"><a href=\"/zh-CN/docs/Web/API/RTCTrackEvent/RTCTrackEvent\" title=\"RTCTrackEvent()\"><code>RTCTrackEvent()</code></a></dt>\n  <dd>\n    <p>Creates and returns a new <code>RTCTrackEvent</code> object, initialized with properties taken from the specified <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent/RTCTrackEvent\"><code>RTCTrackEventInit</code> <small>(en-US)</small></a> dictionary. You will probably not need to create new track events yourself, since they're typically created by the WebRTC infrastructure and sent to the connection's <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/track_event\" title=\"ontrack\"><code>ontrack</code></a> event handler.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p><em>Since <code>RTCTrackEvent</code> is based on <a href=\"/zh-CN/docs/Web/API/Event\"><code>Event</code></a>, its properties are also available.</em></p>\n<dl>\n  <dt id=\"receiver_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent/receiver\"><code>receiver</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>The <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code> <small>(en-US)</small></a> used by the track that's been added to the <code>RTCPeerConnection</code>.</p>\n  </dd>\n  <dt id=\"streams_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent/streams\"><code>streams</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span> <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>An array of <a href=\"/zh-CN/docs/Web/API/MediaStream\"><code>MediaStream</code></a> objects, each representing one of the media streams to which the added <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent/track\"><code>track</code> <small>(en-US)</small></a> belongs. By default, the array is empty, indicating a streamless track.</p>\n  </dd>\n  <dt id=\"track_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent/track\"><code>track</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>The <a href=\"/zh-CN/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> which has been added to the connection.</p>\n  </dd>\n  <dt id=\"transceiver_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent/transceiver\"><code>transceiver</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>The <a href=\"/zh-CN/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> being used by the new track.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"track_event_types","title":"Track event types","isH3":false,"content":"<p>There is only one type of track event.</p>"}},{"type":"prose","value":{"id":"track","title":"<code>track</code>","isH3":true,"content":"<p>The <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/track_event\" title=\"track\"><code>track</code></a> event is sent to the <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> when a new track has been added to the connection. By the time the <code>track</code> event is delivered to the <code>RTCPeerConnection</code>'s <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/track_event\" title=\"ontrack\"><code>ontrack</code></a> handler, the new media has completed its negotiation for a specific <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code> <small>(en-US)</small></a> (which is specified by the event's <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent/receiver\"><code>receiver</code> <small>(en-US)</small></a> property).</p>\n<p>In addition, the <a href=\"/zh-CN/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> specified by the receiver's <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpReceiver/track\"><code>track</code> <small>(en-US)</small></a> is the same one specified by the event's <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent/track\"><code>track</code> <small>(en-US)</small></a>, and the track has been added to any associated remote <a href=\"/zh-CN/docs/Web/API/MediaStream\"><code>MediaStream</code></a> objects.</p>\n<p>You can add a <code>track</code> event listener to be notified when the new track is available so that you can, for example, attach its media to a <a href=\"/zh-CN/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element, using either <a href=\"/zh-CN/docs/Web/API/EventTarget/addEventListener\" title=\"RTCPeerConnection.addEventListener()\"><code>RTCPeerConnection.addEventListener()</code></a> or the <code>ontrack</code> event handler property.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> It may be helpful to keep in mind that you receive the <code>track</code> event when a new inbound track has been added to your connection, and you call <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addTrack\" title=\"addTrack()\"><code>addTrack()</code></a> to add a track to the far end of the connection, thereby triggering a <code>track</code> event on the remote peer.</p>\n</div>","titleAsText":"track"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>This simple example creates an event listener for the <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/track_event\" title=\"track\"><code>track</code></a> event which sets the <a href=\"/zh-CN/docs/Web/API/HTMLMediaElement/srcObject\" title=\"srcObject\"><code>srcObject</code></a> of the <a href=\"/zh-CN/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element with the ID <code>videobox</code> to the first stream in the list passed in the event's <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent/streams\"><code>streams</code> <small>(en-US)</small></a> array.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>peerConnection<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"track\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> videoElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"videobox\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  videoElement<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>streams<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-pc/#dom-rtctrackevent","title":"WebRTC 1.0: Real-Time Communication Between Browsers"}],"query":"api.RTCTrackEvent"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCTrackEvent","dataURL":"/zh-CN/docs/Web/API/RTCTrackEvent/bcd.json"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Properties","id":"properties"},{"text":"Track event types","id":"track_event_types"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The WebRTC API interface RTCTrackEvent represents the track event, which is sent when a new MediaStreamTrack is added to an RTCRtpReceiver (en-US) which is part of the RTCPeerConnection. The target is the RTCPeerConnection object to which the track is being added.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"RTCTrackEvent","locale":"en-US","native":"English (US)"}],"source":{"folder":"zh-cn/web/api/rtctrackevent","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/rtctrackevent/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/RTCTrackEvent","title":"RTCTrackEvent"}],"pageTitle":"RTCTrackEvent - Web API 接口参考 | MDN","noIndexing":false}}