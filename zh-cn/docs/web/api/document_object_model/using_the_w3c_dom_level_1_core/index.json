{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"使用 W3C DOM Level 1 核心","mdn_url":"/zh-CN/docs/Web/API/Document_Object_Model/Using_the_W3C_DOM_Level_1_Core","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>W3C 的 Dom Level 1 核心是一个用于修改文档内容树的强大的对象模型。它被所有主流浏览器支持着，包括火狐浏览器和微软 IE 浏览器。它是网页脚本编程的强大基础。</p>"}},{"type":"prose","value":{"id":"什么是内容树？","title":"什么是内容树？","isH3":false,"content":"<p>很多 HTML 作者认为 HTML 是平面的东西 -- 一堆文字被标签包围在中间。当然还有比这个更多的内容。任何 HTML 文档（或者说任何 SGML 文档或者 XML 文档) 是一个树状结构。比如，以下的文档和树状结构是相似的 (虽然不是完全一致 -- 更多信息请参考 <a href=\"/en-US/docs/Web/API/Document_Object_Model/Whitespace\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">whitespace in the DOM (en-US)</a>):</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>My Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>Header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Paragraph<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>\n  <img src=\"/@api/deki/files/415/=Using_the_W3C_DOM_Level_1_Core-doctree.jpg\" alt=\"image:Using_the_W3C_DOM_Level_1_Core-doctree.jpg\" loading=\"lazy\">\n</p>\n<p>当 Mozilla 解析文档的时候，它首先构建一个内容树然后用它来显示这个文档。</p>\n<p>用于描述树状结构的术语通常出现在 DOM Level 1 的核心中。我上面画的每一个方块都是这个树的一个节点。节点上面的线条表示父子关系：上面的父节点，而位于下方的是子节点。位于一个父节点下面的两个子节点是相邻的。类似地，我们可以指代祖先和后代。（不过，表亲们太乱了。）</p>"}},{"type":"prose","value":{"id":"dom_level_1_核心能让我们做什么？","title":"DOM Level 1 核心能让我们做什么？","isH3":false,"content":"<p>W3C 的 DOM Level 1 允许你随意改变内容树。其功能之强大足以从零构建出任何 HTML 文档。它允许作者在任何时候，都可以通过脚本来修改文档里的任何内容。这是网页制作者通过 JavaScript 动态改变 DOM 的最简单途径。在版本较旧的浏览器里，使用 JavaScript 都是通过访问全局对象 <code>document</code> 属性来得到文档。文档对象实现了 W3C 的 DOM Level 1 规定的<a href=\"https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#i-Document\" class=\"external\" rel=\" noopener\">文档接口</a>。</p>"}},{"type":"prose","value":{"id":"一个简单例子","title":"一个简单例子","isH3":false,"content":"<p>假设作者改变上面文档的头部内容，并且使用两段段落取代一段段落。实现代码如下：</p>"}},{"type":"prose","value":{"id":"html_content","title":"HTML Content","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Change this document.<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>Header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Paragraph<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript_content","title":"JavaScript Content","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  <span class=\"token keyword\">function</span> <span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// document.getElementsByTagName(\"H2\") returns a NodeList of the &lt;h2&gt;</span>\n    <span class=\"token comment\">// elements in the document, and the first is number 0:</span>\n\n    <span class=\"token keyword\">var</span> header <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"H2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">item</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// the firstChild of the header is a Text node:</span>\n    header<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> <span class=\"token string\">\"A dynamic document\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// now the header is \"A dynamic document\".</span>\n\n    <span class=\"token keyword\">var</span> para <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"P\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">item</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    para<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> <span class=\"token string\">\"This is the first paragraph.\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// create a new Text node for the second paragraph</span>\n    <span class=\"token keyword\">var</span> newText <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is the second paragraph.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// create a new Element to be the second paragraph</span>\n    <span class=\"token keyword\">var</span> newElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"P\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// put the text in the paragraph</span>\n    newElement<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>newText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// and put the paragraph on the end of the document by appending it to</span>\n    <span class=\"token comment\">// the BODY (which is the parent of para)</span>\n    para<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>newElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"JavaScript Content\" id=\"frame_a_simple_example\" width=\"800\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-CN/docs/Web/API/Document_Object_Model/Using_the_W3C_DOM_Level_1_Core/_sample_.a_simple_example.html\" loading=\"lazy\"></iframe>\n<p>可以看完整的<a href=\"/@api/deki/files/2866/=example.html\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">示例代码</a>。</p>"}},{"type":"prose","value":{"id":"想学习更多？","title":"想学习更多？","isH3":false,"content":"<p>现在您已经熟悉了 DOM 的基本概念，有一个文档解释了 <a href=\"/zh-CN/docs/Web/API/Document_Object_Model/Traversing_an_HTML_table_with_JavaScript_and_DOM_Interfaces\">DOM Level 1 的基本方法</a>的基本方法。这是本文的补充。</p>\n<p>也可以查看 W3C 的 <a href=\"https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html\" class=\"external\" rel=\" noopener\">DOM Level 1 核心规范文档</a>。尽管是正式的规范文档，但十分清晰易于理解。其对于网页制作者主要有用的内容是描述不同的 DOM 对象及其所有属性和方法。可以继续阅读我们其它关于<a href=\"/en-US/docs/Web/API/Document_Object_Model\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOM 的文档 (en-US)</a>。</p>\n<p><strong>Original Document Information</strong></p>\n<ul>\n  <li>Author(s): L. David Baron &lt;dbaron at dbaron dot org&gt;</li>\n  <li>Copyright Information: © 1998-2005 by individual mozilla.org contributors; content available under a <a href=\"https://www.mozilla.org/foundation/licensing/website-content.html\" class=\"external\" rel=\" noopener\">Creative Commons license</a></li>\n</ul>"}}],"toc":[{"text":"什么是内容树？","id":"什么是内容树？"},{"text":"DOM Level 1 核心能让我们做什么？","id":"dom_level_1_核心能让我们做什么？"},{"text":"一个简单例子","id":"一个简单例子"},{"text":"想学习更多？","id":"想学习更多？"}],"summary":"W3C 的 Dom Level 1 核心是一个用于修改文档内容树的强大的对象模型。它被所有主流浏览器支持着，包括火狐浏览器和微软 IE 浏览器。它是网页脚本编程的强大基础。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using the W3C DOM Level 1 Core","locale":"en-US","native":"English (US)"},{"title":"Using the W3C DOM Level 1 Core","locale":"es","native":"Español"},{"title":"Utilisation du DOM Level 1 Core du W3C","locale":"fr","native":"Français"},{"title":"W3C DOM Level 1 Core の使用","locale":"ja","native":"日本語"},{"title":"W3C DOM Level 1 Core 사용하기","locale":"ko","native":"한국어"}],"source":{"folder":"zh-cn/web/api/document_object_model/using_the_w3c_dom_level_1_core","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/document_object_model/using_the_w3c_dom_level_1_core/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Document_Object_Model","title":"文档对象模型 (DOM)"},{"uri":"/zh-CN/docs/Web/API/Document_Object_Model/Using_the_W3C_DOM_Level_1_Core","title":"使用 W3C DOM Level 1 核心"}],"pageTitle":"使用 W3C DOM Level 1 核心 - Web API 接口参考 | MDN","noIndexing":false}}