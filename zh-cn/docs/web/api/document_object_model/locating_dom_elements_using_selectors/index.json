{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"使用选择器定位 DOM 元素","mdn_url":"/zh-CN/docs/Web/API/Document_Object_Model/Locating_DOM_elements_using_selectors","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Selectors API 提供了通过与一组选择器匹配来快速轻松地从 DOM 检索 <a href=\"/zh-CN/docs/Web/API/element\"><code>Element</code></a>节点的方法。这比以前的技术要快得多，其中有必要使用 JavaScript 代码中的循环来定位您需要查找的特定项目。</p>"}},{"type":"prose","value":{"id":"nodeselector_接口","title":"NodeSelector 接口","isH3":false,"content":"<p>此规范向实现 <a href=\"/zh-CN/docs/Web/API/Document\"><code>Document</code></a>, <a href=\"/en-US/docs/Web/API/DocumentFragment\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DocumentFragment (en-US)</a>, 或 <code>Element</code> 接口的任何对象添加了两种新方法：</p>\n<dl>\n  <dt id=\"queryselector\"><code>querySelector</code></dt>\n  <dd>\n    <p>返回节点子树内与之相匹配的第一个 <a href=\"/zh-CN/docs/Web/API/element\"><code>Element</code></a> 节点。如果没有匹配的节点，则返回 null。</p>\n  </dd>\n  <dt id=\"queryselectorall\"><code>querySelectorAll</code></dt>\n  <dd>\n    <p>返回一个<a href=\"/zh-CN/docs/Web/API/NodeList\"><code>NodeList</code></a> 包含节点子树内所有与之相匹配的 Element 节点，如果没有相匹配的，则返回一个空节点列表。</p>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 由 <code>querySelectorAll()</code> 返回的节点列表不是动态实时的。这和其他 DOM 查询方法返回动态实时节点列表不一样。</p>\n</div>\n<p>这里有更多的例子和细节：<code>querySelector()</code> and <a href=\"/zh-CN/docs/Web/API/Element/querySelectorAll\"><code>querySelectorAll()</code></a> ，<a href=\"/zh-CN/docs/Code_snippets/QuerySelector\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Code snippets for querySelector</a>.</p>"}},{"type":"prose","value":{"id":"selectors","title":"Selectors","isH3":false,"content":"<p>选择器方法接受一个或多个逗号分隔的选择器来确定应该返回哪些元素。</p>\n<p>例如，要选择文档中所有 CSS 的类 (class) 是 warning 或者 note 的段落 (p) 元素，可以这样写：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> special <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"p.warning, p.note\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>也可以通过 ID 来查询，例如：</p>\n<pre class=\"notranslate\">var el = document.querySelector( \"#main, #basic, #exclamation\" );\n</pre>\n<p>执行上面的代码后，el 就包含了文档中元素的 ID 是 main，basic 或 exclamation 的所有元素中的第一个元素。</p>\n<p><code>querySelector()</code> and <code>querySelectorAll()</code> 里可以使用任何 CSS 选择器。</p>"}},{"type":"prose","value":{"id":"另请参阅","title":"另请参阅","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.w3.org/TR/selectors-api/\" class=\"external\" rel=\" noopener\">Selectors API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Element/querySelector\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">element.querySelector (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Element/querySelectorAll\"><code>element.querySelectorAll</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Document/querySelector\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">document.querySelector (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Document/querySelectorAll\"><code>document.querySelectorAll</code></a></li>\n  <li><a href=\"/zh-CN/docs/Code_snippets/QuerySelector\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Code snippets for querySelector</a></li>\n</ul>"}}],"toc":[{"text":"NodeSelector 接口","id":"nodeselector_接口"},{"text":"Selectors","id":"selectors"},{"text":"另请参阅","id":"另请参阅"}],"summary":"Selectors API 提供了通过与一组选择器匹配来快速轻松地从 DOM 检索 Element节点的方法。这比以前的技术要快得多，其中有必要使用 JavaScript 代码中的循环来定位您需要查找的特定项目。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Locating DOM elements using selectors","locale":"en-US","native":"English (US)"},{"title":"Localizando elementos DOM usando selectores","locale":"es","native":"Español"},{"title":"Localisation des éléments DOM avec les sélecteurs","locale":"fr","native":"Français"},{"title":"セレクターを使用した DOM 要素の特定","locale":"ja","native":"日本語"},{"title":"선택자로 DOM 요소 선택하기","locale":"ko","native":"한국어"},{"title":"Locating DOM elements using selectors","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/document_object_model/locating_dom_elements_using_selectors","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/document_object_model/locating_dom_elements_using_selectors/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Document_Object_Model","title":"文档对象模型 (DOM)"},{"uri":"/zh-CN/docs/Web/API/Document_Object_Model/Locating_DOM_elements_using_selectors","title":"使用选择器定位 DOM 元素"}],"pageTitle":"使用选择器定位 DOM 元素 - Web API 接口参考 | MDN","noIndexing":false}}