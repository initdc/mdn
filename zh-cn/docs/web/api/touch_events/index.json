{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"触摸事件","mdn_url":"/zh-CN/docs/Web/API/Touch_events","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Touch_events\">Touch events</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>指南</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Touch_events/Using_Touch_Events\">Using Touch Events</a></li><li><a href=\"/zh-CN/docs/Web/API/Touch_events/Multi-touch_interaction\">Multi-touch interaction</a></li><li><a href=\"/zh-CN/docs/Web/API/Pointer_events\">Pointer events</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>接口</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Touch\"><code>Touch</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TouchEvent\"><code>TouchEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TouchList\"><code>TouchList</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Element/touchcancel_event\"><code>Element</code>: <code>touchcancel</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element/touchend_event\"><code>Element</code>: <code>touchend</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element/touchmove_event\"><code>Element</code>: <code>touchmove</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element/touchstart_event\"><code>Element</code>: <code>touchstart</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>为了给基于触摸的用户界面提供高质量的支持，触摸事件提供了在触摸屏或触控板上解释手指（或触控笔）活动的能力。</p>\n<p>触摸事件接口是较为底层的 API，可为特定程序提供多点触控交互（比如双指手势）的支持。多点触控交互开始于一个手指（或触控笔）开始接触设备平面的时刻。随后其他手指也可触摸设备表面，并随意进行划动。当所有手指离开设备平面时，交互结束。整个交互期间，程序接收开始、移动、结束三个阶段的触摸事件。</p>\n<p>触摸事件与鼠标事件类似，不同的是触摸事件还提供同一表面不同位置的同步触摸。<a href=\"/zh-CN/docs/Web/API/TouchEvent\"><code>TouchEvent</code></a> 接口将当前所有活动的触摸点封装起来。<a href=\"/zh-CN/docs/Web/API/Touch\"><code>Touch</code></a> 接口表示单独一个触摸点，其中包含参考浏览器视角的相对坐标。</p>"}},{"type":"prose","value":{"id":"定义","title":"定义","isH3":false,"content":"<dl>\n  <dt id=\"表面（surface）\">表面（surface）</dt>\n  <dd>\n    <p>可感知触摸的平面，可以是屏幕或触控板。</p>\n  </dd>\n  <dt id=\"触摸点（touch_point）\">触摸点（touch point）</dt>\n  <dd>\n    <p>表面上的一个接触点.。有可能是手指 (或者胳膊肘、耳朵、鼻子都行。但一般是手指) 或者触摸笔。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"接口","title":"接口","isH3":false,"content":"<dl>\n  <dt id=\"touchevent\"><a href=\"/zh-CN/docs/Web/API/TouchEvent\"><code>TouchEvent</code></a></dt>\n  <dd>\n    <p>表示位于表面上的一个触摸点的某个状态发生改变时产生的事件。</p>\n  </dd>\n  <dt id=\"touch\"><a href=\"/zh-CN/docs/Web/API/Touch\"><code>Touch</code></a></dt>\n  <dd>\n    <p>表示用户与触摸表面间的一个单独的接触点。</p>\n  </dd>\n  <dt id=\"touchlist\"><a href=\"/zh-CN/docs/Web/API/TouchList\"><code>TouchList</code></a></dt>\n  <dd>\n    <p>表示一组 Touch，用于多点触控的情况。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>本示例通过对多个触控点进行同步跟踪，让用户通过多点触控的方式在 <a href=\"/zh-CN/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 元素上用两个（或以上）手指同时画图。本示例只在支持触摸事件的浏览器下生效。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 下文中用“手指”表示与平面的交互，当然触控笔等也是可行的。</p>\n</div>"}},{"type":"prose","value":{"id":"创建画布","title":"创建画布","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>600<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>600<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border</span><span class=\"token punctuation\">:</span>solid black 1px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n  你的浏览器不支持 canvas 元素。\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n日志：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #ccc<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"设置事件处理器","title":"设置事件处理器","isH3":true,"content":"<p>当页面加载时，下文的 <code>startup()</code> 函数由 <code>window.onload</code> 属性触发。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">startup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchstart\"</span><span class=\"token punctuation\">,</span> handleStart<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchend\"</span><span class=\"token punctuation\">,</span> handleEnd<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchmove\"</span><span class=\"token punctuation\">,</span> handleMove<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"初始化成功。\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>该函数为 <a href=\"/zh-CN/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 元素设置了所有相关的事件监听器，使事件在触发时能够得到处理。</p>\n<h4 id=\"跟踪新触摸\">跟踪新触摸</h4>\n<p>我们将跟踪当前存在的所有触摸点。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> ongoingTouches <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>当 <code><a href=\"/en-US/docs/Web/API/Element/touchstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchstart (en-US)</a></code> 事件触发时，平面上即出现一个新的触摸点，继而调用 <code>handleStart()</code> ：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleStart</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  evt<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"触摸开始。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> touches <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> touches<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始第 \"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\" 个触摸 ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ongoingTouches<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">copyTouch</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token function\">colorForTouch</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 在起点画一个圆。</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第 \"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\" 个触摸已开始。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><a href=\"/zh-CN/docs/Web/API/Event/preventDefault\"><code>event.preventDefault()</code></a> 阻止了浏览器继续处理触摸（和鼠标）事件。 然后我们取得上下文，从事件的 <a href=\"/zh-CN/docs/Web/API/TouchEvent/changedTouches\"><code>TouchEvent.changedTouches</code></a> 属性中获得已改变的触摸点列表。</p>\n<p>上述列表中所有的 <a href=\"/zh-CN/docs/Web/API/Touch\"><code>Touch</code></a> 对象即为当前所有活动的触摸点，把它们置于一个数组中，然后为每个触摸绘制起点。我们设置线条宽度为四像素，所以恰好会绘制一个半径为 4 像素的圆。</p>\n<h4 id=\"当触摸移动时绘制\">当触摸移动时绘制</h4>\n<p>在触摸平面上移动一根或者几根手指会触发 <code><a href=\"/en-US/docs/Web/API/Element/touchmove_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchmove (en-US)</a></code> 事件，从而将调用<code>handleMove()</code> 函数。本例中这个函数用于更新触摸点信息，并为每个触摸点从之前位置到当前位置之间绘制直线。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  evt<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> touches <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> touches<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token function\">colorForTouch</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> idx <span class=\"token operator\">=</span> <span class=\"token function\">ongoingTouchIndexById</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idx <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"继续第 \"</span> <span class=\"token operator\">+</span> idx <span class=\"token operator\">+</span> <span class=\"token string\">\"个触摸。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ctx.moveTo(\"</span> <span class=\"token operator\">+</span> ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY <span class=\"token operator\">+</span> <span class=\"token string\">\");\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ctx.lineTo(\"</span> <span class=\"token operator\">+</span> touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY <span class=\"token operator\">+</span> <span class=\"token string\">\");\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      ongoingTouches<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">copyTouch</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 切换触摸信息</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无法确定下一个触摸点。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>这个函数不仅对所有已改变的触摸点进行了遍历，还从缓存的触摸信息数组中得到了每个触摸点要绘制的新线段的起点。这是通过读取每个触摸点的 <a href=\"/zh-CN/docs/Web/API/Touch/identifier\"><code>Touch.identifier</code></a> 属性实现的。对每个触摸点而言，该属性是个唯一的整数，且手指接触表面的整个过程中，这个属性保持不变。</p>\n<p>这样我们就可以取得每个触摸点之前位置的坐标，并且使用恰当的上下文方法绘制片段，从而将新旧两个位置连接起来。</p>\n<p>当片段绘制完毕后，我们调用 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.splice()</code></a> 将 <code>ongoingTouches</code> 数组中触摸点之前的信息替换为当前信息。</p>\n<h4 id=\"触摸结束处理\">触摸结束处理</h4>\n<p>用户的手指从表面抬起时将触发 <code><a href=\"/en-US/docs/Web/API/Element/touchend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchend (en-US)</a></code> 事件。我们通过调用下面的 <code>handleEnd()</code> 函数来处理此类事件。 这个函数的工作就是为每个结束的触摸点绘制最后一个片段，然后将触摸点从 <code>ongoingTouches</code> 数组中移除。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleEnd</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  evt<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"触摸结束。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   touches <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> touches<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token function\">colorForTouch</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> idx <span class=\"token operator\">=</span> <span class=\"token function\">ongoingTouchIndexById</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idx <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 在终点画一个正方形</span>\n      ongoingTouches<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 用完后移除</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无法确定要结束哪个触摸点。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>这个函数与上一个很相像，唯一的实质性区别就是在调用 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.splice()</code></a> 时， 我们把用过的触摸实体从 <code>ongoingTouches</code> 数组中直接移除了，不再添加更新信息。对这个触摸点的跟踪随之终止。</p>\n<h4 id=\"触摸取消处理\">触摸取消处理</h4>\n<p>如果用户的手指不小心滑入浏览器界面，或者触摸需要取消时，会触发 <code><a href=\"/en-US/docs/Web/API/Element/touchcancel_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchcancel (en-US)</a></code> 事件。从而会调用下面的 <code>handleCancel()</code> 函数：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleCancel</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  evt<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"触摸取消。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> touches <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> touches<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> idx <span class=\"token operator\">=</span> <span class=\"token function\">ongoingTouchIndexById</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ongoingTouches<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 用完后移除</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>这里的想法是立刻结束触摸，所以我们直接从 <code>ongoingTouches</code> 数组中将其移除，而不去绘制最后的片段。</p>"}},{"type":"prose","value":{"id":"便捷函数","title":"便捷函数","isH3":true,"content":"<p>本例中使用了几个便捷函数，有必要简单了解一下，对理解其它代码很有帮助。</p>\n<h4 id=\"为每个触摸点选择一个颜色\">为每个触摸点选择一个颜色</h4>\n<p>为了区分每个触摸点绘制的内容，我们引入 <code>colorForTouch()</code> 函数，根据每个触摸点所独有的标记设定一个颜色。 这个标记在这里可能是一个无意义的数字，但我们至少可以利用它“对于每个触摸点的值都不同”这一特性。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">colorForTouch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">touch</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> r <span class=\"token operator\">=</span> touch<span class=\"token punctuation\">.</span>identifier <span class=\"token operator\">%</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> g <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">.</span>identifier <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">.</span>identifier <span class=\"token operator\">/</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n  r <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 转换为十六进制字符串</span>\n  g <span class=\"token operator\">=</span> g<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 转换为十六进制字符串</span>\n  b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 转换为十六进制字符串</span>\n  <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"#\"</span> <span class=\"token operator\">+</span> r <span class=\"token operator\">+</span> g <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"identifier \"</span> <span class=\"token operator\">+</span> touch<span class=\"token punctuation\">.</span>identifier <span class=\"token operator\">+</span> <span class=\"token string\">\" 触摸的颜色为：\"</span> <span class=\"token operator\">+</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>这个函数返回一个表示颜色的字符串，可以在调用 <a href=\"/zh-CN/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 的函数时使用。比如，若 <a href=\"/zh-CN/docs/Web/API/Touch/identifier\"><code>Touch.identifier</code></a> 的值为 10，则返回的字符串为 \"#aaa\"。</p>\n<div class=\"notecard warning\" id=\"sect2\">\n  <p><strong>警告：</strong> 这里的 <code>colorForTouch()</code> 不是一个好主意。<code>Touch.identifier</code> 是一个实验性属性，存在兼容性问题，不同浏览器之间实现方法不同，因此会得到不同的结果。</p>\n</div>\n<h4 id=\"拷贝触摸对象\">拷贝触摸对象</h4>\n<p>有些浏览器（比如 mobile Safari）会在不同事件之间复用触摸点对象，因此只复制所需的部分，要优于引用整个对象。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">copyTouch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">touch</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">identifier</span><span class=\"token operator\">:</span> touch<span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">pageX</span><span class=\"token operator\">:</span> touch<span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">pageY</span><span class=\"token operator\">:</span> touch<span class=\"token punctuation\">.</span>pageY\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"查找触摸点\">查找触摸点</h4>\n<p><code>ongoingTouchIndexById()</code> 函数通过遍历 <code>ongoingTouches</code> 数组来寻找与给定标记相匹配的触摸点，返回该触摸点在数组中的下标。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">ongoingTouchIndexById</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">idToFind</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> ongoingTouches<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> ongoingTouches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> idToFind<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 未找到</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"显示后台操作记录\">显示后台操作记录</h4>\n<pre class=\"notranslate\">function log(msg) {\n  const p = document.getElementById('log');\n  p.innerHTML = msg + \"\\n\" + p.innerHTML;\n}\n</pre>\n<p>如果你的浏览器支持触摸，就可以 <a href=\"https://roy-tian.github.io/mdn-examples/javascript/touch-paint/\" class=\"external\" rel=\" noopener\">在线试用</a>。</p>\n<p><a href=\"http://jsfiddle.net/Darbicus/z3Xdx/10/\" class=\"external\" rel=\" noopener\">jsFiddle 上的示例</a></p>"}},{"type":"prose","value":{"id":"附加信息","title":"附加信息","isH3":false,"content":"<p>本节提供了在 web 应用中处理触摸事件的其它信息。</p>"}},{"type":"prose","value":{"id":"处理点击","title":"处理点击","isH3":true,"content":"<p>由于在 <code><a href=\"/en-US/docs/Web/API/Element/touchstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchstart (en-US)</a></code>（或系列 <code><a href=\"/en-US/docs/Web/API/Element/touchmove_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchmove (en-US)</a></code> 事件里的首个）中调用 <code>preventDefault()</code> 也会阻止相应的鼠标事件的触发，因此一般情况下我们在<code><a href=\"/en-US/docs/Web/API/Element/touchmove_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchmove (en-US)</a></code> 而不是 <code><a href=\"/en-US/docs/Web/API/Element/touchstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchstart (en-US)</a></code> 中调用它，这样，鼠标事件仍可正常触发，链接等部件也可继续工作。有些框架采取了一个替代方案，使用触摸事件代替鼠标事件来达到相同目的。 (下面的示例过于简单，可能产生奇怪的行为。这里仅仅作为一个引导。)</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">onTouch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  evt<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>touches<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> <span class=\"token string\">\"touchend\"</span> <span class=\"token operator\">&amp;&amp;</span> evt<span class=\"token punctuation\">.</span>touches<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> newEvt <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MouseEvents\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> type <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> touch <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"touchstart\"</span><span class=\"token operator\">:</span>\n      type <span class=\"token operator\">=</span> <span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">;</span>\n      touch <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"touchmove\"</span><span class=\"token operator\">:</span>\n      type <span class=\"token operator\">=</span> <span class=\"token string\">\"mousemove\"</span><span class=\"token punctuation\">;</span>\n      touch <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"touchend\"</span><span class=\"token operator\">:</span>\n      type <span class=\"token operator\">=</span> <span class=\"token string\">\"mouseup\"</span><span class=\"token punctuation\">;</span>\n      touch <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  newEvt<span class=\"token punctuation\">.</span><span class=\"token function\">initMouseEvent</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>originalTarget<span class=\"token punctuation\">.</span>ownerDocument<span class=\"token punctuation\">.</span>defaultView<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    touch<span class=\"token punctuation\">.</span>screenX<span class=\"token punctuation\">,</span> touch<span class=\"token punctuation\">.</span>screenY<span class=\"token punctuation\">,</span> touch<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> touch<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">,</span>\n    evt<span class=\"token punctuation\">.</span>ctrlKey<span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>altKey<span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>shiftKey<span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>metaKey<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  evt<span class=\"token punctuation\">.</span>originalTarget<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>newEvt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"只在第二次触摸时调用_preventdefault","title":"只在第二次触摸时调用 preventDefault()","isH3":true,"content":"<p>为了阻止页面产生类似 pinchZoom 的行为，可以通过“在系列触摸点的第二个调用 <code>preventDefault()</code>”技术来实现。但是该技术的行为并没有在触摸事件的标准中做出完整定义，并且在不同浏览器中会产生不同行为（比如，iOS 将阻止缩放，但允许二指平移；Android 允许缩放但阻止平移；Opera 和 Firefox 目前会阻止所有缩放和平移操作）。目前，对于此类情况最好依靠 <code>meta viewport</code> 来阻止缩放，而不要依赖于上述行为。</p>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/touch-events/#touch-interface","title":"Touch Events"}],"query":"api.Touch"}},{"type":"prose","value":{"id":"浏览器兼容性","title":"浏览器兼容性","isH3":false,"content":""}},{"type":"browser_compatibility","value":{"title":"Touch","id":"touch_2","isH3":true,"query":"api.Touch","dataURL":"/zh-CN/docs/Web/API/Touch_events/bcd.json"}},{"type":"prose","value":{"id":"firefox，触摸事件以及多进程（e10s）","title":"Firefox，触摸事件以及多进程（e10s）","isH3":true,"content":"<p>在 Firefox 中，触摸事件随 e10s（electrolysis 即 <a href=\"/zh-CN/docs/Mozilla/Firefox/Multiprocess_Firefox\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">多进程 Firefox</a>）的禁用而禁用。e10s 在 Firefox 中默认为可用，但可以在某些特定情形下关闭它，比如在安装一些要求禁用 e10s 的工具或扩展时。这意味着即使在支持触屏的桌面或便携设备上，触摸事件也可能失效。</p>\n<p>你可以使用 <code>about:support</code> 查看“应用程序概要”部分中“多进程窗口”一栏来确定 e10s 是否启用。1/1 表示启用，0/1 表示禁用。</p>\n<p>如果你想强制性的开启 e10s（来显式重新启用触摸事件支持），你需要使用 about:config 创建一个布尔类型的设置 <code>browser.tabs.remote.force-enable</code>，将它设置为 <code>true</code>，重启浏览器，e10s 将始终启用而不受其他设置的影响。</p>"}}],"toc":[{"text":"定义","id":"定义"},{"text":"接口","id":"接口"},{"text":"示例","id":"示例"},{"text":"附加信息","id":"附加信息"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"为了给基于触摸的用户界面提供高质量的支持，触摸事件提供了在触摸屏或触控板上解释手指（或触控笔）活动的能力。","popularity":0.0008,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Touch events","locale":"en-US","native":"English (US)"},{"title":"Eventos de toque","locale":"es","native":"Español"},{"title":"Évènements tactiles","locale":"fr","native":"Français"},{"title":"タッチイベント","locale":"ja","native":"日本語"},{"title":"Touch events","locale":"ko","native":"한국어"},{"title":"Eventos do Toque","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"События касаний (тач-события)","locale":"ru","native":"Русский"},{"title":"觸控事件","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/touch_events","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/touch_events/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Touch_events","title":"触摸事件"}],"pageTitle":"触摸事件 - Web API 接口参考 | MDN","noIndexing":false}}