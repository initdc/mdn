{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"使用触摸事件","mdn_url":"/zh-CN/docs/Web/API/Touch_events/Using_Touch_Events","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Touch_events\">Touch events</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>指南</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Touch_events/Using_Touch_Events\">Using Touch Events</a></li><li><a href=\"/zh-CN/docs/Web/API/Touch_events/Multi-touch_interaction\">Multi-touch interaction</a></li><li><a href=\"/zh-CN/docs/Web/API/Pointer_events\">Pointer events</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>接口</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Touch\"><code>Touch</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TouchEvent\"><code>TouchEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TouchList\"><code>TouchList</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Element/touchcancel_event\"><code>Element</code>: <code>touchcancel</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element/touchend_event\"><code>Element</code>: <code>touchend</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element/touchmove_event\"><code>Element</code>: <code>touchmove</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element/touchstart_event\"><code>Element</code>: <code>touchstart</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>今天，大多数 Web 内容是为键盘和鼠标输入而设计的。然而，具有触摸屏（特别是便携式设备）的设备是主流的，Web 应用程序可以使用 <a href=\"/zh-CN/docs/Web/API/Touch_events\" title=\"Touch Events\"><code>Touch Events</code></a> 直接处理基于触摸的输入，或者应用程序可以使用可解释的鼠标事件以处理应用程序的输入。使用鼠标事件的缺点是它们不支持并发用户输入，而触摸事件支持多个同时输入（可能在触摸面上的不同位置），从而增强用户体验。</p>\n<p>触摸事件界面支持应用程序特定的单触摸和多点触控交互，例如双指手势。当手指（或触控笔）首先触摸接触面时，多点触摸交互开始。其他手指随后可以触摸该表面并且可选地移动穿过该触摸表面。当手指从表面移除时，相互作用结束。在此交互期间，应用程序在开始，移动和结束阶段接收触摸事件。应用程序可以将其自己的语义应用于触摸输入。</p>"}},{"type":"prose","value":{"id":"interfaces","title":"Interfaces","isH3":false,"content":"<p>触摸事件有三个接口 (<a href=\"/zh-CN/docs/Web/API/Touch\"><code>Touch</code></a>, <a href=\"/zh-CN/docs/Web/API/TouchEvent\"><code>TouchEvent</code></a> 和 <a href=\"/zh-CN/docs/Web/API/TouchList\"><code>TouchList</code></a>) 和以下事件类型：</p>\n<ul>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/touchstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchstart (en-US)</a></code> - 当触摸点放置在触摸面上时触发。</li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/touchmove_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchmove (en-US)</a></code> - 当触摸点沿触摸表面移动时触发。</li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/touchend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchend (en-US)</a></code> - 当触摸点从触摸表面移除时触发。</li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/touchcancel_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchcancel (en-US)</a></code> - 当触摸点以实现特定的方式中断（例如，创建的触摸点太多）时触发。</li>\n</ul>\n<p><a href=\"/zh-CN/docs/Web/API/Touch\"><code>Touch</code></a> 接口表示触敏设备上的单个接触点。接触点通常被称为触摸点或仅仅是触摸点。触摸通常由触摸屏，笔或触控板上的手指或触控笔产生。触摸点的属性包括唯一标识符，触摸点的目标元素以及触摸点相对于视口，页面和屏幕的位置的 X 和 Y 坐标。</p>\n<p><a href=\"/zh-CN/docs/Web/API/TouchList\"><code>TouchList</code></a> 接口表示触摸表面上的触点的列表。因此，如果用户用一根手指触摸触控表面，则该列表将包含一个触点，并且如果用户用三个手指触摸该表面，则列表长度将为三个。</p>\n<p><a href=\"/zh-CN/docs/Web/API/TouchEvent\"><code>TouchEvent</code></a> 接口表示当触控屏上触点的状态发生改变时会发送的事件。当与触控屏开始接触时状态开始改变，移动触摸点且手指在触控屏上，释放触点然后退出触摸事件。这个接口的属性包括几个修饰键的状态（例如 <kbd>shift</kbd>键）和下面的触摸列表：</p>\n<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/TouchEvent/touches\" title=\"touches\"><code>touches</code></a> - 屏幕上当前所有触摸点的列表。</li>\n  <li><a href=\"/zh-CN/docs/Web/API/TouchEvent/targetTouches\" title=\"targetTouches\"><code>targetTouches</code></a> - 目标 DOM 元素上的触摸点列表。</li>\n  <li><a href=\"/zh-CN/docs/Web/API/TouchEvent/changedTouches\" title=\"changedTouches\"><code>changedTouches</code></a> - 依赖于关联的触摸事件类型的触摸点列表：\n    <ul>\n      <li>对于 <code><a href=\"/en-US/docs/Web/API/Element/touchstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchstart (en-US)</a></code> 事件，它是当前事件变为活动的触摸点的列表。</li>\n      <li>对于 <code><a href=\"/en-US/docs/Web/API/Element/touchmove_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchmove (en-US)</a></code> 事件，它是自上次事件以来更改的触摸点列表。</li>\n      <li>对于 <code><a href=\"/en-US/docs/Web/API/Element/touchend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchend (en-US)</a></code> 事件，它是从表面移除的触摸点的列表（即，与手指不再接触表面的触摸点集合）。</li>\n    </ul>\n  </li>\n</ul>\n<p>这些接口一起定义了相对较低级别的功能，但它们支持多种基于触摸的交互，包括熟悉的多点触控手势，如多指手指滑动，旋转，捏和缩放。</p>"}},{"type":"prose","value":{"id":"from_interfaces_to_gestures","title":"From interfaces to gestures","isH3":false,"content":"<p>在定义手势的语义时，应用程序可能会考虑不同的因素。例如，当触摸结束时，触摸点从其起始位置行进到其位置的距离。另一个潜在因素是时间;例如，触摸开始和触摸结束之间经过的时间，或者用于创建双击手势的两个同时敲击之间的时间间隔。滑动的方向性（例如从左到右，从左到右等）是另一个要考虑的因素。</p>\n<p>应用程序使用的触摸列表取决于应用程序手势的语义。例如，如果应用程序在一个元素上支持单一触摸（点击），则它将使用 <code><a href=\"/en-US/docs/Web/API/Element/touchstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchstart (en-US)</a></code> 中的 <a href=\"/zh-CN/docs/Web/API/TouchEvent/targetTouches\" title=\"targetTouches\"><code>targetTouches</code></a> 列表事件处理程序以特定应用程序处理触摸点。如果应用程序支持任意两个触摸点的双指滑动，它将使用 <code><a href=\"/en-US/docs/Web/API/Element/touchmove_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchmove (en-US)</a></code> 事件处理程序中的 <a href=\"/zh-CN/docs/Web/API/TouchEvent/changedTouches\" title=\"changedTouches\"><code>changedTouches</code></a> 列表确定两个触摸点是否已移动，然后以应用程序特定的方式实现该手势的语义。</p>\n<p>当只有一个活动的触摸点时，浏览器通常会分派仿真的鼠标和点击事件。涉及两个或多个活动触摸点的多点触控交互通常只会产生触摸事件。为了防止模拟的鼠标事件被发送，请在触摸事件处理程序中使用 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> 方法。有关鼠标和触摸事件之间的交互的详细信息，请参阅 <a href=\"/zh-CN/docs/Web/API/Pointer_events\" title=\"Supporting both TouchEvent and MouseEvent\"><code>Supporting both TouchEvent and MouseEvent</code></a>。</p>"}},{"type":"prose","value":{"id":"basic_steps","title":"Basic steps","isH3":false,"content":"<p>本节包含使用上述接口的基本用法。有关更详细的示例，请参阅 <a href=\"/zh-CN/docs/Web/API/Touch_events\" title=\"Touch Events Overview\"><code>Touch Events Overview</code></a> 。</p>\n<p>对每一个触摸事件类型注册一个事件处理器。</p>\n<pre class=\"notranslate\">// Register touch event handlers\nsomeElement.addEventListener('touchstart', process_touchstart, false);\nsomeElement.addEventListener('touchmove', process_touchmove, false);\nsomeElement.addEventListener('touchcancel', process_touchcancel, false);\nsomeElement.addEventListener('touchend', process_touchend, false);\n</pre>\n<p>在事件处理程序中处理事件，实现应用程序的手势语义。</p>\n<pre class=\"notranslate\">// touchstart handler\nfunction process_touchstart(ev) {\n  // Use the event's data to call out to the appropriate gesture handlers\n  switch (ev.touches.length) {\n    case 1: handle_one_touch(ev); break;\n    case 2: handle_two_touches(ev); break;\n    case 3: handle_three_touches(ev); break;\n    default: gesture_not_supported(ev); break;\n  }\n}\n</pre>\n<p>访问触摸点的属性。</p>\n<pre class=\"notranslate\">// Create touchstart handler\nsomeElement.addEventListener('touchstart', function(ev) {\n  // Iterate through the touch points that were activiated\n  // for this element and process each event 'target'\n  for (var i=0; i &lt; ev.targetTouches.length; i++) {\n    process_target(ev.targetTouches[i].target);\n  }\n}, false);\n</pre>\n<p>阻止游览器产生模拟鼠标事件。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// touchmove handler</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">process_touchmove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Set call preventDefault()</span>\n  ev<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"best_practices","title":"Best practices","isH3":false,"content":"<p>以下是使用触摸事件时要考虑的最佳做法：</p>\n<ul>\n  <li>最大限度地减少在触摸处理程序中完成的工作量。</li>\n  <li>将触摸事件处理程序添加到特定目标元素（而不是整个文档或文档树中较高的节点）。</li>\n  <li>在 <code><a href=\"/en-US/docs/Web/API/Element/touchstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchstart (en-US)</a></code> 中添加 <code><a href=\"/en-US/docs/Web/API/Element/touchend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchend (en-US)</a></code>， <code><a href=\"/en-US/docs/Web/API/Element/touchcancel_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchcancel (en-US)</a></code> 和 <code><a href=\"/en-US/docs/Web/API/Element/touchmove_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchmove (en-US)</a></code> 事件处理程序。</li>\n  <li>目标元素应足够大以适应手指触摸。如果目标区域太小，触摸它可能会导致相邻元素发射其他事件。</li>\n</ul>"}},{"type":"prose","value":{"id":"implementation_and_deployment_status","title":"Implementation and deployment status","isH3":false,"content":"<p><a href=\"/zh-CN/docs/Web/API/Touch_events/Web/API/Touch_events#Browser_compatibility\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">touch events browser compatibility data</a> 表明移动浏览器中的触摸事件支持相对较好，尽管其他实现正在进行中，桌面浏览器支持滞后。</p>\n<p>关于触摸点的 <a href=\"/zh-CN/docs/Web/API/Touch_events/Web/API/Touch#Touch_area\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">touch area</a> 的一些新功能 - 用户和触摸表面之间的接触面积正在被标准化。新功能包括最接近触摸点与触摸面的接触区域的椭圆的 X 和 Y 半径。接触点的旋转角度 - 应用于所描述的椭圆以与接触面积对准的旋转角度的数量也被标准化，以及触摸点上对屏幕的力量。</p>"}},{"type":"prose","value":{"id":"what_about_pointer_events","title":"What about Pointer Events?","isH3":false,"content":"<p>The introduction of new input mechanisms results in increased application complexity to handle various input events, such as key events, mouse events, pen/stylus events, and touch events. To help address this problem, the <a href=\"https://www.w3.org/TR/pointerevents/\" class=\"external\" rel=\" noopener\">Pointer Events standard</a> <em>defines events and related interfaces for handling hardware agnostic pointer input from devices including a mouse, pen, touchscreen, etc.</em>. That is, the abstract <em>pointer</em> creates a unified input model that can represent a contact point for a finger, pen/stylus or mouse.</p>\n<p>The pointer event model can simplify an application's input processing since a pointer represents input from any input device. Additionally, the pointer event types are very similar to mouse event types (for example, <code>pointerdown</code> <code>pointerup</code>) thus code to handle pointer events closely matches mouse handling code.</p>\n<p>The implementation status of pointer events in browsers is <a href=\"http://caniuse.com/#search=pointer\" class=\"external\" rel=\" noopener\">relatively low</a> with IE11 and Edge having complete implementations. Firefox's implementation has been withdrawn because of <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1166347\" class=\"external\" rel=\" noopener\">bug&nbsp;1166347</a>.</p>"}},{"type":"prose","value":{"id":"examples_and_demos","title":"Examples and demos","isH3":false,"content":"<p>The following documents describe how to use touch events and include example code:</p>\n<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Touch_events\" title=\"Touch Events Overview\"><code>Touch Events Overview</code></a></li>\n  <li><a href=\"https://developers.google.com/web/fundamentals/design-and-ui/input/touch/touch-events\" class=\"external\" rel=\" noopener\">Implement Custom Gestures</a></li>\n  <li><a href=\"http://www.javascriptkit.com/javatutors/touchevents.shtml\" class=\"external\" rel=\" noopener\">Introduction to Touch events in JavaScript</a></li>\n  <li><a href=\"https://www.codicode.com/art/easy_way_to_add_touch_support_to_your_website.aspx\" class=\"external\" rel=\" noopener\">Add touch screen support to your website (The easy way)</a></li>\n</ul>\n<p>Touch event demonstrations:</p>\n<ul>\n  <li><a href=\"https://rbyers.github.io/paint.html\" class=\"external\" rel=\" noopener\">Paint Program (by Rick Byers)</a></li>\n  <li><a href=\"http://patrickhlauke.github.io/touch/\" class=\"external\" rel=\" noopener\">Touch/pointer tests and demos (by Patrick H. Lauke)</a></li>\n</ul>"}},{"type":"prose","value":{"id":"community","title":"Community","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/w3c/touch-events\" class=\"external\" rel=\" noopener\">Touch Events Community Group</a></li>\n  <li><a href=\"https://lists.w3.org/Archives/Public/public-touchevents/\" class=\"external\" rel=\" noopener\">Mail list</a></li>\n  <li><a href=\"irc://irc.w3.org:6667/\">W3C #touchevents IRC channel</a></li>\n</ul>"}},{"type":"prose","value":{"id":"related_topics_and_resources","title":"Related topics and resources","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.w3.org/TR/pointerevents/\" class=\"external\" rel=\" noopener\">Pointer Events Standard</a></li>\n</ul>"}}],"toc":[{"text":"Interfaces","id":"interfaces"},{"text":"From interfaces to gestures","id":"from_interfaces_to_gestures"},{"text":"Basic steps","id":"basic_steps"},{"text":"Best practices","id":"best_practices"},{"text":"Implementation and deployment status","id":"implementation_and_deployment_status"},{"text":"What about Pointer Events?","id":"what_about_pointer_events"},{"text":"Examples and demos","id":"examples_and_demos"},{"text":"Community","id":"community"},{"text":"Related topics and resources","id":"related_topics_and_resources"}],"summary":"今天，大多数 Web 内容是为键盘和鼠标输入而设计的。然而，具有触摸屏（特别是便携式设备）的设备是主流的，Web 应用程序可以使用 Touch Events 直接处理基于触摸的输入，或者应用程序可以使用可解释的鼠标事件以处理应用程序的输入。使用鼠标事件的缺点是它们不支持并发用户输入，而触摸事件支持多个同时输入（可能在触摸面上的不同位置），从而增强用户体验。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using Touch Events","locale":"en-US","native":"English (US)"},{"title":"Использование событий касания","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/touch_events/using_touch_events","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/touch_events/using_touch_events/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Touch_events","title":"触摸事件"},{"uri":"/zh-CN/docs/Web/API/Touch_events/Using_Touch_Events","title":"使用触摸事件"}],"pageTitle":"使用触摸事件 - Web API 接口参考 | MDN","noIndexing":false}}