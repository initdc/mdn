{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"AudioContext.createDelay()","mdn_url":"/zh-CN/docs/Web/API/BaseAudioContext/createDelay","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/audioWorklet\"><code>audioWorklet</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/currentTime\"><code>currentTime</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/destination\"><code>destination</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/listener\"><code>listener</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/sampleRate\"><code>sampleRate</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/state\"><code>state</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/createAnalyser\"><code>createAnalyser()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/createBiquadFilter\"><code>createBiquadFilter()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/createBuffer\"><code>createBuffer()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/createBufferSource\"><code>createBufferSource()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/createChannelMerger\"><code>createChannelMerger()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/createChannelSplitter\"><code>createChannelSplitter()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/createConstantSource\"><code>createConstantSource()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/createConvolver\"><code>createConvolver()</code></a></li><li><em><code>createDelay()</code></em></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createDynamicsCompressor\"><code>createDynamicsCompressor()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createGain\"><code>createGain()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createIIRFilter\"><code>createIIRFilter()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/createOscillator\"><code>createOscillator()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createPanner\"><code>createPanner()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/createPeriodicWave\"><code>createPeriodicWave()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/createScriptProcessor\"><code>createScriptProcessor()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createStereoPanner\"><code>createStereoPanner()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/createWaveShaper\"><code>createWaveShaper()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext/decodeAudioData\"><code>decodeAudioData()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Web Audio API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/zh-CN/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>createDelay()</code> 是 <a href=\"/zh-CN/docs/Web/API/AudioContext\"><code>AudioContext</code></a> 的一个方法，作用是将输入音频信号延迟一定时间。（比如可以实现 对着话筒说句话，然后几秒后 这句话从音响里播放出来）</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> synthDelay <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createDelay</span><span class=\"token punctuation\">(</span>maxDelayTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"maxdelaytime\"><em>maxDelayTime</em></dt>\n  <dd>\n    <p>设置最大允许延迟的时间，以“秒”为单位</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回","title":"返回","isH3":true,"content":"<p>A <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code> <small>(en-US)</small></a>. The default <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DelayNode/delayTime\"><code>DelayNode.delayTime</code> <small>(en-US)</small></a> if no parameter is passed to <code>createDelay()</code> is 0 seconds.</p>\n<p>以上是原文，大意是返回延时时间，没有设置时默认是 0</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>首先是中文版的简洁的示例，这个例子中话筒里接收到的声音会延迟 3 秒从音响中播放。</p>\n<pre class=\"notranslate\">window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.msAudioContext;\n\ntry {//音频相关api\n    var audioContext = new window.AudioContext();\n    var synthDelay = audioContext.createDelay(5.0);\n} catch (e) {\n    alert(\"你浏览器不支持\");\n}\n\n\nvar error = function (error) {alert(\"有错误\"); };\n\n//以下是获取麦克风\nif (navigator.getUserMedia) { //标准api\n navigator.getUserMedia({ \"audio\": true },\n function (stream) {\n micto(stream);    //具体工作\n                   }, error);\n}else if(navigator.webkitGetUserMedia) {   //webkit api\n navigator.webkitGetUserMedia({audio:true, video:  false },\n function (stream) {\n  micto(stream); //具体工作\n                   }, error);\n }else if (navigator.mozGetUserMedia) {  //火狐 api\n navigator.mozGetUserMedia({ \"audio\": true },\n function (stream) {\n  micto(stream);//具体工作\n                   }, error);\n }else if (navigator.msGetUserMedia) { //ie api\n navigator.msGetUserMedia({ \"audio\": true },\n function (stream) {\n  micto(stream);//具体工作\n                   }, error);\n } else {\n   alert(\"您的浏览器版不支持这个api\");\n}\n\n\n\n\n\n var micto = function(stream) {\n\n  synthDelay.delayTime.value = 3.0;   //延迟3秒\n\n  var source = audioContext.createMediaStreamSource(stream);\n\n  source.connect(synthDelay);\n\n  synthDelay.connect(audioContext.destination);\n\n      }\n\n</pre>\n<p>以下是英文版示例</p>\n<p>We have created a simple example that allows you to play three different samples on a constant loop — see <a href=\"http://chrisdavidmills.github.io/create-delay/\" class=\"external\" rel=\" noopener\">create-delay</a> (you can also <a href=\"https://github.com/chrisdavidmills/create-delay\" class=\"external\" rel=\" noopener\">view the source code</a>). If you just press the play buttons, the loops will start immediately; if you slide the sliders up to the right, then press the play buttons, a delay will be introduced, so the looping sounds don't start playing for a short amount of time.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> AudioContext <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> synthDelay <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createDelay</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">var</span> synthSource<span class=\"token punctuation\">;</span>\n\nplaySynth<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  synthSource <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createBufferSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  synthSource<span class=\"token punctuation\">.</span>buffer <span class=\"token operator\">=</span> buffers<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  synthSource<span class=\"token punctuation\">.</span>loop <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  synthSource<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  synthSource<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>synthDelay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  synthDelay<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'disabled'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'disabled'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nstopSynth<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  synthSource<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span>synthDelay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  synthDelay<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  synthSource<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  playSynth<span class=\"token punctuation\">.</span><span class=\"token function\">removeAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'disabled'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">var</span> delay1<span class=\"token punctuation\">;</span>\nrangeSynth<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oninput</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\ndelay1 <span class=\"token operator\">=</span> rangeSynth<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\nsynthDelay<span class=\"token punctuation\">.</span>delayTime<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> delay1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-createdelay","title":"Web Audio API"}],"query":"api.BaseAudioContext.createDelay"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.BaseAudioContext.createDelay","dataURL":"/zh-CN/docs/Web/API/BaseAudioContext/createDelay/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using the Web Audio API (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"createDelay() 是 AudioContext 的一个方法，作用是将输入音频信号延迟一定时间。（比如可以实现 对着话筒说句话，然后几秒后 这句话从音响里播放出来）","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"BaseAudioContext.createDelay()","locale":"en-US","native":"English (US)"},{"title":"BaseAudioContext.createDelay()","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/baseaudiocontext/createdelay","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/baseaudiocontext/createdelay/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/BaseAudioContext","title":"BaseAudioContext"},{"uri":"/zh-CN/docs/Web/API/BaseAudioContext/createDelay","title":"AudioContext.createDelay()"}],"pageTitle":"AudioContext.createDelay() - Web API 接口参考 | MDN","noIndexing":false}}