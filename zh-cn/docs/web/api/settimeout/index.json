{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"window.setTimeout","mdn_url":"/zh-CN/docs/Web/API/setTimeout","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/HTML_DOM_API\">HTML DOM API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/setTimeout\"><code>SetTimeout</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>HTML DOM 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/BeforeUnloadEvent\"><code>BeforeUnloadEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DOMStringMap\"><code>DOMStringMap</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ErrorEvent\"><code>ErrorEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLAnchorElement\"><code>HTMLAnchorElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLAreaElement\"><code>HTMLAreaElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLAudioElement\"><code>HTMLAudioElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLBRElement\"><code>HTMLBRElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLBaseElement\"><code>HTMLBaseElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLBodyElement\"><code>HTMLBodyElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLButtonElement\"><code>HTMLButtonElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLContentElement\"><code>HTMLContentElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLDListElement\"><code>HTMLDListElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLDataElement\"><code>HTMLDataElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLDataListElement\"><code>HTMLDataListElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLDialogElement\"><code>HTMLDialogElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLDivElement\"><code>HTMLDivElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLDocument\"><code>HTMLDocument</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLEmbedElement\"><code>HTMLEmbedElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLFieldSetElement\"><code>HTMLFieldSetElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLFormControlsCollection\"><code>HTMLFormControlsCollection</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLFrameSetElement\"><code>HTMLFrameSetElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLHRElement\"><code>HTMLHRElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLHeadElement\"><code>HTMLHeadElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLHeadingElement\"><code>HTMLHeadingElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLHtmlElement\"><code>HTMLHtmlElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLIFrameElement\"><code>HTMLIFrameElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLInputElement\"><code>HTMLInputElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLKeygenElement\"><code>HTMLKeygenElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLLIElement\"><code>HTMLLIElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLLabelElement\"><code>HTMLLabelElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLLegendElement\"><code>HTMLLegendElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLLinkElement\"><code>HTMLLinkElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLMapElement\"><code>HTMLMapElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLMetaElement\"><code>HTMLMetaElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLMeterElement\"><code>HTMLMeterElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLModElement\"><code>HTMLModElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLOListElement\"><code>HTMLOListElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLOptGroupElement\"><code>HTMLOptGroupElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLOptionElement\"><code>HTMLOptionElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLOptionsCollection\"><code>HTMLOptionsCollection</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLOutputElement\"><code>HTMLOutputElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLParagraphElement\"><code>HTMLParagraphElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLPictureElement\"><code>HTMLPictureElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLPreElement\"><code>HTMLPreElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLProgressElement\"><code>HTMLProgressElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLQuoteElement\"><code>HTMLQuoteElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLScriptElement\"><code>HTMLScriptElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLSelectElement\"><code>HTMLSelectElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLShadowElement\"><code>HTMLShadowElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLSourceElement\"><code>HTMLSourceElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLSpanElement\"><code>HTMLSpanElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLStyleElement\"><code>HTMLStyleElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLTableCaptionElement\"><code>HTMLTableCaptionElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLTableCellElement\"><code>HTMLTableCellElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLTableColElement\"><code>HTMLTableColElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLTableElement\"><code>HTMLTableElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLTableRowElement\"><code>HTMLTableRowElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLTableSectionElement\"><code>HTMLTableSectionElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLTemplateElement\"><code>HTMLTemplateElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLTextAreaElement\"><code>HTMLTextAreaElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLTimeElement\"><code>HTMLTimeElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLTitleElement\"><code>HTMLTitleElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLTrackElement\"><code>HTMLTrackElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLUListElement\"><code>HTMLUListElement</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLUnknownElement\"><code>HTMLUnknownElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HashChangeEvent\"><code>HashChangeEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/History\"><code>History</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ImageData\"><code>ImageData</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Location\"><code>Location</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MessageChannel\"><code>MessageChannel</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MessagePort\"><code>MessagePort</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator\"><code>Navigator</code></a></li><li><a href=\"/zh-CN/docs/Web/API/PageTransitionEvent\"><code>PageTransitionEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Plugin\"><code>Plugin</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PluginArray\"><code>PluginArray</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PopStateEvent\"><code>PopStateEvent</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/PromiseRejectionEvent\"><code>PromiseRejectionEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RadioNodeList\"><code>RadioNodeList</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ValidityState\"><code>ValidityState</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Window\"><code>Window</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>WindowOrWorkerGlobalScope</code> 混合的 **<code>setTimeout()</code>**方法设置一个定时器，该定时器在定时器到期后执行一个函数或指定的一段代码。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<pre class=\"notranslate\">var timeoutID = scope.setTimeout(function[, delay, arg1, arg2, ...]);\nvar timeoutID = scope.setTimeout(function[, delay]);\nvar timeoutID = scope.setTimeout(code[, delay]);\n</pre>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"function\"><code>function</code></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>function</code></a> 是你想要在到期时间 (<code>delay</code>毫秒) 之后执行的<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function\">函数</a>。</p>\n  </dd>\n  <dt id=\"code\"><code>code</code></dt>\n  <dd>\n    <p>这是一个可选语法，你可以使用字符串而不是<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>function</code></a> ，在<code>delay</code>毫秒之后编译和执行字符串 (使用该语法是<strong>不推荐的，</strong> 原因和使用 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/eval\"><code>eval()</code></a>一样，有安全风险)。</p>\n  </dd>\n  <dt id=\"delay\"><code>delay</code> <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>延迟的毫秒数 (一秒等于 1000 毫秒)，函数的调用会在该延迟之后发生。如果省略该参数，delay 取默认值 0，意味着“马上”执行，或者尽快执行。不管是哪种情况，实际的延迟时间可能会比期待的 (delay 毫秒数) 值长，原因请查看<a href=\"#%E5%AE%9E%E9%99%85%E5%BB%B6%E6%97%B6%E6%AF%94%E8%AE%BE%E5%AE%9A%E5%80%BC%E6%9B%B4%E4%B9%85%E7%9A%84%E5%8E%9F%E5%9B%A0%EF%BC%9A%E6%9C%80%E5%B0%8F%E5%BB%B6%E8%BF%9F%E6%97%B6%E9%97%B4\">实际延时比设定值更久的原因：最小延迟时间</a>。</p>\n  </dd>\n  <dt id=\"arg1_..._argn\"><code>arg1, ..., argN</code> <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>附加参数，一旦定时器到期，它们会作为参数传递给<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>function</code></a></p>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 需要注意的是，IE9 及更早的 IE 浏览器不支持向回调函数传递额外参数 (第一种语法)。如果你想要在 IE 中达到同样的功能，你必须使用一种兼容代码 (查看 <a href=\"#%E5%85%BC%E5%AE%B9%E6%97%A7%E7%8E%AF%E5%A2%83%EF%BC%88polyfill%EF%BC%89\">兼容旧环境（polyfill）</a> 一段).</p>\n</div>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>返回值<code>timeoutID</code>是一个正整数，表示定时器的编号。这个值可以传递给<a href=\"/zh-CN/docs/Web/API/clearTimeout\"><code>clearTimeout()</code></a>来取消该定时器。</p>\n<p>需要注意的是 <code>setTimeout()</code> 和 <a href=\"/zh-CN/docs/Web/API/setInterval\"><code>setInterval()</code></a> 共用一个编号池，技术上，<code>clearTimeout()</code> 和 <a href=\"/zh-CN/docs/Web/API/clearInterval\"><code>clearInterval()</code></a> 可以互换。但是，为了避免混淆，不要混用取消定时函数。</p>\n<p>在同一个对象上（一个 window 或者 worker），<code>setTimeout()</code>或者<code>setInterval()</code>在后续的调用不会重用同一个定时器编号。但是不同的对象使用独立的编号池。</p>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":"<p>下文的例子在网页中设置了两个简单的按钮，以触发 <code>setTimeout()</code> 和 <code>clearTimeout()</code> 方法：按下第一个按钮会设置一个定时器，定时器在 2s 后显示一个警告对话框，并将此次 setTimeout 的定时器 ID 保存起来，按下第二个按钮可以取消定时器。</p>"}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Live Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">delayedAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Show an alert box after two seconds<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">clearAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Cancel alert before it happens<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> timeoutID<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">delayedAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  timeoutID <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>slowAlert<span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">slowAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'That was really slow!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">clearAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timeoutID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"结果展示","title":"结果展示","isH3":true,"content":"<iframe class=\"sample-code-frame\" title=\"例子 sample\" id=\"frame_例子\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-CN/docs/Web/API/setTimeout/_sample_.%E4%BE%8B%E5%AD%90.html\" loading=\"lazy\"></iframe>\n<p>也可参考 <a href=\"/en-US/docs/Web/API/clearTimeout#example\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">clearTimeout() (en-US)</a> 示例。</p>"}},{"type":"prose","value":{"id":"兼容旧环境（polyfill）","title":"兼容旧环境（polyfill）","isH3":false,"content":"<p>如果你需要向你的回调函数内传递一个或多个参数，而且还需要兼容那些不支持传递额外参数 (不管使用<code>setTimeout()</code> 或者 <code>setInterval()</code>) 的浏览器时 (比如，IE9 及更早的版本), 你可以引入下面的兼容代码来支持向定时器函数传参。将以下代码添加到你代码的最上面：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/*\\\n|*|\n|*|  Polyfill which enables the passage of arbitrary arguments to the\n|*|  callback functions of JavaScript timers (HTML5 standard syntax).\n|*|\n|*|  https://developer.mozilla.org/en-US/docs/DOM/window.setInterval\n|*|\n|*|  Syntax:\n|*|  var timeoutID = window.setTimeout(func, delay[, param1, param2, ...]);\n|*|  var timeoutID = window.setTimeout(code, delay);\n|*|  var intervalID = window.setInterval(func, delay[, param1, param2, ...]);\n|*|  var intervalID = window.setInterval(code, delay);\n|*|\n\\*/</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">===</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// feature test is passed, no need for polyfill</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> __nativeST__ <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>setTimeout<span class=\"token punctuation\">;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setTimeout</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>vCallback<span class=\"token punctuation\">,</span> nDelay <span class=\"token comment\">/*, argumentToPass1, argumentToPass2, etc. */</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> aArgs <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">__nativeST__</span><span class=\"token punctuation\">(</span>vCallback <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Function</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">vCallback</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> aArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> vCallback<span class=\"token punctuation\">,</span> nDelay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> interval <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">===</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// feature test is passed, no need for polyfill</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> __nativeSI__ <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>setInterval<span class=\"token punctuation\">;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setInterval</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>vCallback<span class=\"token punctuation\">,</span> nDelay <span class=\"token comment\">/*, argumentToPass1, argumentToPass2, etc. */</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> aArgs <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">__nativeSI__</span><span class=\"token punctuation\">(</span>vCallback <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Function</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">vCallback</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> aArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> vCallback<span class=\"token punctuation\">,</span> nDelay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"针对_ie_的解决方法","title":"针对 IE 的解决方法","isH3":true,"content":"<p>如果你需要单独的针对 IE9 及之前浏览器的 hack 写法，你可以使用 JavaScript 条件注释：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/*@cc_on\n  // conditional IE &lt; 9 only fix\n  @if (@_jscript_version &lt;= 9)\n  (function(f){\n     window.setTimeout = f(window.setTimeout);\n     window.setInterval = f(window.setInterval);\n  })(function(f){return function(c,t){var a=[].slice.call(arguments,2);return f(function(){c instanceof Function?c.apply(this,a):eval(c)},t)}});\n  @end\n@*/</span>\n</code></pre></div>\n<p>或者使用更加清晰的 IE HTML 条件注释：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token comment\">&lt;!--[if lte IE 9]&gt;&lt;script&gt;\n(function(f){\nwindow.setTimeout=f(window.setTimeout);\nwindow.setInterval=f(window.setInterval);\n})(function(f){return function(c,t){\nvar a=[].slice.call(arguments,2);return f(function(){c instanceof Function?c.apply(this,a):eval(c)},t)}\n});\n&lt;/script&gt;&lt;![endif]--&gt;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"变通方法","title":"变通方法","isH3":true,"content":"<p>另一种方法是使用匿名函数包裹你的回调函数，这种方式要消耗更多资源：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> intervalID <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>上面那个例子也可以用<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">箭头函数</a>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> intervalID <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>此外，也可使用 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\">function's bind</a>：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"关于this的问题","title":"关于\"<code>this</code>\"的问题","isH3":false,"content":"<p>当你向 <code>setTimeout()</code> (或者其他函数) 传递一个函数时，该函数中的<code>this</code>指向跟你的期望可能不同，这个问题在 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Operators/this#method_binding\">JavaScript reference</a> 中进行了详细解释。</p>","titleAsText":"关于\"this\"的问题"}},{"type":"prose","value":{"id":"解释","title":"解释","isH3":true,"content":"<p>由<code>setTimeout()</code>调用的代码运行在与所在函数完全分离的执行环境上。这会导致，这些代码中包含的 <code>this</code> 关键字在非严格模式会指向 <code>window</code> (或全局) 对象，严格模式下为 undefined，这和所期望的<code>this</code>的值是不一样的。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 即使是在严格模式下，<code>setTimeout()</code>的回调函数里面的<code>this</code>仍然默认指向<code>window</code>对象，并不是<code>undefined</code>。</p>\n</div>\n<p>查看下面的例子：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"zero\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"two\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">myMethod</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sProperty</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>sProperty<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"zero,one,two\"</span>\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"one\"</span>\n</code></pre></div>\n<p>上面这段代码正常工作，用<code>myArray</code>调用，在函数内，<code>this[sProperty]</code>等于 <code>myArray[sProperty]</code>。然后，下面这个例子：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"[object Window]\" after 1 second</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"undefined\" after 1.5 seconds</span>\n</code></pre></div>\n<p><code>myArray.myMethod</code>函数传递给 <code>setTimeout</code>，到了定时时间，<code>this</code>没有指向，默认指向<code>window</code>对象。并且没有方法把 <code>thisArg</code> 传递给<code>setTimeout</code>，正如 Array 方法的<code>forEach</code>，<code>reduce</code>等。下面的例子表示使用<code>call</code>方法设置<code>this</code>也没用。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error: \"NS_ERROR_XPC_BAD_OP_ON_WN_PROTO: Illegal operation on WrappedNative prototype object\"</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// same error</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"可能的解决方案","title":"可能的解决方案","isH3":true,"content":"<p>一个通用的方法是用包装函数来设置<code>this</code>：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>myArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"zero,one,two\" after 2 seconds</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>myArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"one\" after 2.5 seconds</span>\n</code></pre></div>\n<p>箭头函数也可以：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>myArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"zero,one,two\" after 2 seconds</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>myArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"one\" after 2.5 seconds</span>\n</code></pre></div>\n<p>另一个解决<code>this</code>问题的方法是使用两个非原生的 <code>setTimeout()</code> 和 <code>setInterval()</code> 全局函数代替原生的。该非原生的函数通过使用<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call</code></a> 方法激活了正确的作用域。下面的代码显示了应该如何替换：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Enable the passage of the 'this' object through the JavaScript timers</span>\n\n<span class=\"token keyword\">var</span> __nativeST__ <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>setTimeout<span class=\"token punctuation\">,</span> __nativeSI__ <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>setInterval<span class=\"token punctuation\">;</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setTimeout</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>vCallback<span class=\"token punctuation\">,</span> nDelay <span class=\"token comment\">/*, argumentToPass1, argumentToPass2, etc. */</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> oThis <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> aArgs <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">__nativeST__</span><span class=\"token punctuation\">(</span>vCallback <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Function</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">vCallback</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>oThis<span class=\"token punctuation\">,</span> aArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> vCallback<span class=\"token punctuation\">,</span> nDelay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setInterval</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>vCallback<span class=\"token punctuation\">,</span> nDelay <span class=\"token comment\">/*, argumentToPass1, argumentToPass2, etc. */</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> oThis <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> aArgs <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">__nativeSI__</span><span class=\"token punctuation\">(</span>vCallback <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Function</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">vCallback</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>oThis<span class=\"token punctuation\">,</span> aArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> vCallback<span class=\"token punctuation\">,</span> nDelay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 这两个替换也让 IE 支持了符合 HTML5 标准的定时器函数。所以也能作为一个 polyfills。查看 <a href=\"#callback_arguments\">Callback arguments</a> 一段。</p>\n</div>\n<p>新特性检测：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"zero\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"two\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">myMethod</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sProperty</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>sProperty<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>alert<span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// the standard use of setTimeout and setInterval is preserved, but...</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"zero,one,two\" after 2 seconds</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"two\" after 2,5 seconds</span>\n</code></pre></div>\n<p>针对这个问题并没有原生的解决方案。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>备注：</strong> JavaScript 1.8.5 引入了 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a> 方法，该方法允许显式地指定函数调用时 this 所指向的值。该方法可以帮助你解决 this 指向不确定的问题。</p>\n</div>\n<p>使用<code>bind()</code>的例子：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'zero'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nmyBoundMethod <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sProperty</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>sProperty<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">myBoundMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"zero,one,two\" because 'this' is bound to myArray in the function</span>\n<span class=\"token function\">myBoundMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"one\"</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myBoundMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// still prints \"zero,one,two\" after 1 second because of the binding</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myBoundMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"one\" after 1.5 seconds</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"备注","title":"备注","isH3":false,"content":"<p>你可以使用 <a href=\"/zh-CN/docs/Web/API/clearTimeout\"><code>clearTimeout()</code></a>来取消定时器。</p>\n<p>如果你希望你的代码被重复的调用 (比如每 N 毫秒一次),考虑使用<a href=\"/zh-CN/docs/Web/API/setInterval\"><code>setInterval()</code></a>。</p>"}},{"type":"prose","value":{"id":"传递字符串字面量","title":"传递字符串字面量","isH3":true,"content":"<p>向<code>setTimeout()</code>传递一个字符串而不是函数会遭受到与使用<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#don.27t_use_eval.21\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">eval (en-US)</a>一样的风险。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 推荐</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 不推荐</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert(\\\"Hello World!\\\");\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>字符串会在全局作用域内被解释执行，所以当<code>setTimeout()</code>函数执行完毕后，字符串中的变量不可用。</p>"}},{"type":"prose","value":{"id":"实际延时比设定值更久的原因：最小延迟时间","title":"实际延时比设定值更久的原因：最小延迟时间","isH3":true,"content":"<p>有很多因素会导致 setTimeout 的回调函数执行比设定的预期值更久，本节将讨论最常见的原因。</p>\n<h4 id=\"最小延时_4ms\">最小延时 &gt;=4ms</h4>\n<p>在浏览器中，<code>setTimeout()</code>/<a href=\"/zh-CN/docs/Web/API/setInterval\"><code>setInterval()</code></a> 的每调用一次定时器的最小间隔是 4ms，这通常是由于函数嵌套导致（嵌套层级达到一定深度），或者是由于已经执行的 setInterval 的回调函数阻塞导致的。例如：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在 Chrome 和 Firefox 中，定时器的第 5 次调用被阻塞了；在 Safari 是在第 6 次；Edge 是在第 3 次。Gecko 从这个版本 <a href=\"/en-US/docs/Mozilla/Firefox/Releases/56\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">version 56 (en-US)</a>开始对 <code>setInterval()</code> 开始采用这样的机制（<code>setTimeout()</code>已经实现，具体请参考以下内容)。</p>\n<p>一直以来，不同浏览器中出现这种最小延迟的情况有所不同（例如 Firefox）- 从其他地方调用了 setInterval()，或者在嵌套函数调用 setTimeout() 时（嵌套级别达到特定深度时），都会出现超时延迟。</p>\n<p>如果想在浏览器中实现 0ms 延时的定时器，你可以参考<a href=\"https://dbaron.org/log/20100309-faster-timeouts\" class=\"external\" rel=\" noopener\">这里</a>所说的 <a href=\"/zh-CN/docs/Web/API/Window/postMessage\"><code>window.postMessage()</code></a></p>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>备注：</strong> 最小延时， <code>DOM_MIN_TIMEOUT_VALUE</code>, 是 4ms (但在 Firefox 中通常是是存储在 <code>dom.min_timeout_value</code> 这个变量中), <code>DOM_CLAMP_TIMEOUT_NESTING_LEVEL</code> 的第 5 层。</p>\n</div>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>备注：</strong> 4 ms 是在 <a href=\"https://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#timers\" class=\"external\" rel=\" noopener\">HTML5 spec</a> 中精确的，并且在 2010 年及以后的跨浏览器中保持了一致，这个数值比 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)规定的嵌套函数的最小延时 10ms 更为精确。</p>\n</div>\n<h4 id=\"未被激活的_tabs_的定时最小延迟1000ms\">未被激活的 tabs 的定时最小延迟&gt;=1000ms</h4>\n<p>为了优化后台 tab 的加载损耗（以及降低耗电量），在未被激活的 tab 中定时器的最小延时限制为 1S(1000ms)。</p>\n<p>Firefox 从 version 5 (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=633421\" class=\"external\" rel=\" noopener\">bug&nbsp;633421</a>开始采取这种机制，1000ms 的间隔值可以通过 <code>dom.min_background_timeout_value</code> 改变。Chrome 从 version 11 (<a href=\"https://crbug.com/66078\" class=\"external\" rel=\" noopener\">crbug.com/66078</a>) 开始采用。</p>\n<p>Android 版的 Firefox 对未被激活的后台 tabs 的使用了 15min 的最小延迟间隔时间，并且这些 tabs 也能完全不被加载。</p>\n<div class=\"notecard note\" id=\"sect7\">\n  <p><strong>备注：</strong> 当 Web Audio API <a href=\"/zh-CN/docs/Web/API/AudioContext\"><code>AudioContext</code></a> 正在被用来播放音频的时候，Firefox 50 不会再限制后台 tabs 的加载。后续的 Firefox 51 版本修正了这个问题，即使在没有音频播放的情况下，也不再限制后台 tabs 的加载。这个解决了一些软件应用在后台 tabs 中播放基于文本的音频 ( note-based) 时，无法去同步音频和画面的问题。</p>\n</div>\n<h4 id=\"追踪型脚本的最小延时限制\">追踪型脚本的最小延时限制</h4>\n<p>从 Firefox 55 版本开始，追踪型脚本（例如 谷歌分析，或者其他的一些被 Firefox 的 <a href=\"https://wiki.mozilla.org/Security/Tracking_protection#Lists\" class=\"external\" rel=\" noopener\">TP lists</a> 识别为追踪型脚本的 外链 URL 脚本）是重点限制加载的对象。在当前正在使用的页面中，这个节流限制的延时依然是 4ms。但是在后台 tabs 中，这个最小延时限制是 10000ms（10s）,这个限制会在文档第一次加载后的 30s 后生效。</p>\n<p>控制这些行为的属性包含以下这些：</p>\n<ul>\n  <li><code>dom.min_tracking_timeout_value</code>: 4</li>\n  <li><code>dom.min_tracking_background_timeout_value</code>: 10000</li>\n  <li><code>dom.timeout.tracking_throttling_delay</code>: 30000</li>\n</ul>\n<h4 id=\"超时延迟\">超时延迟</h4>\n<p>除了\"最小延时\"之外，定时器仍然有可能因为当前页面（或者操作系统/浏览器本身）被其他任务占用导致延时。需要被强调是，直到调用 <code>setTimeout()</code>的主线程执行完其他任务之后，回调函数和代码段才能被执行。例如：</p>\n<pre class=\"notranslate\">function foo() {\n  console.log('foo has been called');\n}\nsetTimeout(foo, 0);\nconsole.log('After setTimeout');\n</pre>\n<p>会在控制台输出：</p>\n<pre class=\"notranslate\">After setTimeout\nfoo has been called\n</pre>\n<p>出现这个结果的原因是，尽管<code>setTimeout</code> 以 0ms 的延迟来调用函数，但这个任务已经被放入了队列中并且等待下一次执行；并不是立即执行；队列中的等待函数被调用之前，当前代码必须全部运行完毕，因此这里运行结果并非预想的那样。</p>"}},{"type":"prose","value":{"id":"webextension_background_pages_和定时器","title":"WebExtension Background pages 和定时器","isH3":true,"content":"<p>在 <a href=\"/zh-CN/docs/Mozilla/Add-ons/WebExtensions\">WebExtension</a> 中 background pages，timers 工作不正常。这主要因为 background pages 实际上，并不是一次性全部加载：如果浏览器没有使用它，就不加载，如果需要就恢复。这对于 WebExtension 是透明的，但是有些事件 (包括 JS 的 timers) 不会在不加载/恢复循环中执行，所以 WebExtension 中建议使用 alarms。更详细的细节在<a href=\"https://developer.chrome.com/extensions/background_migration\" class=\"external\" rel=\" noopener\">合并到事件驱动后台脚本</a>。</p>\n<p>在本文写作的时候，只有 Chrome 展示了如上的特性 — Firefox 没有未加载/恢复循环的行为，所以 timers 仍然可以工作。但是，仍然建议不要在 WebExtension 中使用 timers:</p>\n<ol>\n  <li>兼容 Chorme。</li>\n  <li>未来行为的改变会引起问题。</li>\n</ol>"}},{"type":"prose","value":{"id":"最大延时值","title":"最大延时值","isH3":true,"content":"<p>包括 IE、Chrome、Safari、Firefox 在内的浏览器其内部以 32 位带符号整数存储延时。这就会导致如果一个延时 (delay) 大于 2147483647 毫秒 (大约 24.8 天) 时就会溢出，导致定时器将会被立即执行。</p>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout-dev","title":"HTML Standard"}],"query":"api.setTimeout"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.setTimeout","dataURL":"/zh-CN/docs/Web/API/setTimeout/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/JavaScript/Timers\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">JavaScript timers</a></li>\n  <li><a href=\"/zh-CN/docs/Mozilla/JavaScript_code_modules/Timer.jsm\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Timer.jsm</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/clearTimeout\"><code>clearTimeout</code></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/setInterval\"><code>WindowTimers.setInterval</code> <small>(en-US)</small></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Window/requestAnimationFrame\"><code>window.requestAnimationFrame</code></a></li>\n  <li><a href=\"/zh-CN/docs/JavaScript/Timers/Daemons\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><em>Daemons</em> management</a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"例子","id":"例子"},{"text":"兼容旧环境（polyfill）","id":"兼容旧环境（polyfill）"},{"text":"关于\"<code>this</code>\"的问题","id":"关于this的问题"},{"text":"备注","id":"备注"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"WindowOrWorkerGlobalScope 混合的 **setTimeout()**方法设置一个定时器，该定时器在定时器到期后执行一个函数或指定的一段代码。","popularity":0.003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"setTimeout()","locale":"en-US","native":"English (US)"},{"title":"WindowOrWorkerGlobalScope.setTimeout","locale":"es","native":"Español"},{"title":"setTimeout()","locale":"fr","native":"Français"},{"title":"setTimeout()","locale":"ja","native":"日本語"},{"title":"setTimeout()","locale":"ko","native":"한국어"},{"title":"WindowTimers.setTimeout()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/settimeout","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/settimeout/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/setTimeout","title":"window.setTimeout"}],"pageTitle":"window.setTimeout - Web API 接口参考 | MDN","noIndexing":false}}