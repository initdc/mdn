{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Using the Web Animations API","mdn_url":"/zh-CN/docs/Web/API/Web_Animations_API/Using_the_Web_Animations_API","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Web_Animations_API\">Web Animations API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>指南</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Web_Animations_API/Using_the_Web_Animations_API\">Using the Web Animations API</a></li><li><a href=\"/zh-CN/docs/Web/API/Web_Animations_API/Web_Animations_API_Concepts\">Web Animations API Concepts</a></li><li><a href=\"/zh-CN/docs/Web/API/Web_Animations_API/Keyframe_Formats\">Keyframe Formats</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>接口</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Animation\"><code>Animation</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AnimationEffect\"><code>AnimationEffect</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AnimationEvent\"><code>AnimationEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AnimationTimeline\"><code>AnimationTimeline</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AnimationPlaybackEvent\"><code>AnimationPlaybackEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DocumentTimeline\"><code>DocumentTimeline</code></a></li><li><a href=\"/zh-CN/docs/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Document/timeline\"><code>Document.timeline</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Document/getAnimations\"><code>Document.getAnimations()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element/animate\"><code>Element.animate()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>web 动画 API 可以让我们用 JavaScript 写动画并且控制动画。本文将通过有趣的 demo 和教学，以有趣的方式开启您对这片爱丽丝仙境的探索。</p>"}},{"type":"prose","value":{"id":"认识_web_动画_api","title":"认识 Web 动画 API","isH3":false,"content":"<p><a href=\"/zh-CN/docs/Web/API/Web_Animations_API\">Web 动画 API</a>将浏览器动画引擎向开发者打开，并由 JavaScript 进行操作。这些 API 被设计成 <a href=\"/zh-CN/docs/Web/CSS/CSS_Animations\">CSS Animations</a> and <a href=\"/zh-CN/docs/Web/CSS/CSS_Transitions\">CSS Transitions</a>的接口，未来会对这些 API 做补充以丰富更多的功能。它是对网络上动画化的支持最有效的方式之一，让浏览器进行自己的内部，不需要 hacks，或者强迫，或者<a href=\"/zh-CN/docs/Web/API/Window/requestAnimationFrame\"><code>Window.requestAnimationFrame()</code></a>。</p>\n<p>通过 Web 动画 API，我们可以将交互式动画从样式表移动到 JavaScript，将表现与行为分开。 我们不再需要依赖 DOM 重的技术，如将 CSS 属性和范围类写入元素来控制播放方向。 与纯粹的声明式 CSS 不同，JavaScript 还允许我们动态地将属性值设置为持续时间。 对于构建自定义动画库和创建交互式动画，Web 动画 API 可能是完成工作的完美工具。 让我们看看它能做什么！</p>"}},{"type":"prose","value":{"id":"浏览器兼容情况","title":"浏览器兼容情况","isH3":false,"content":"<p>默认情况下，Firefox 48+ 和 Chrome 36+ 中提供了本文中讨论的基本 Web 动画 API 功能。 Webkit 和 Edge 已经将 API 移动到各自的待办事项列表中，但是直到我们看到所有浏览器都有完整的支持，所以有一个便于维护的 polyfill（ <a href=\"https://github.com/web-animations/web-animations-js\" class=\"external\" rel=\" noopener\">handy maintained polyfill</a>）可以测试功能支持，并在必要时添加它。</p>"}},{"type":"prose","value":{"id":"用_web_动画_api_写_css_动画","title":"用 web 动画 API 写 css 动画","isH3":false,"content":"<p>学习 Web 动画 API 的更为熟悉的方法之一是从大多数网络开发人员开始使用以前的 CSS 动画。 CSS 动画有一个熟悉的语法，很好地分解为演示目的。</p>"}},{"type":"prose","value":{"id":"the_css_version","title":"The CSS version","isH3":true,"content":"<p>这是一个用 CSS 写的滚动动画，显示爱丽丝落下通向仙境的兔子洞 (see the full <a href=\"https://codepen.io/rachelnabors/pen/QyOqqW\" class=\"external\" rel=\" noopener\">code on Codepen</a>):</p>\n<p><a href=\"https://codepen.io/rachelnabors/pen/rxpmJL\" class=\"external\" rel=\" noopener\"><img src=\"/en-US/docs/Web/API/Web_Animations_API/Using_the_Web_Animations_API/tumbling-alice_optimized.gif\" alt=\"Alice Tumbling down the rabbit's hole.\" width=\"700\" height=\"374\" loading=\"lazy\"></a></p>\n<p>请注意背景的移动，爱丽丝的旋转，以及她的颜色偏移变化。 本教程我们将仅仅关注爱丽丝。 这是控制爱丽丝动画的简化的 CSS：</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">#alice</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> aliceTumbling infinite 3s linear<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> aliceTumbling</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #000<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span> <span class=\"token function\">translate3D</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">,</span> -50%<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">30%</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #431236<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #000<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>360deg<span class=\"token punctuation\">)</span> <span class=\"token function\">translate3D</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">,</span> -50%<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>这样可以以恒定的（线性 linear）速率在 3 秒内改变爱丽丝的颜色和变换的旋转，并无限循环。 在 <a href=\"/zh-CN/docs/Web/CSS/@keyframes\">@keyframes</a> 块中，我们可以看到每个循环（约 0.9 秒）的 30％，Alice 的颜色从黑色变为深红色，然后在循环结束时再次返回。</p>"}},{"type":"prose","value":{"id":"moving_it_to_javascript","title":"Moving it to JavaScript","isH3":true,"content":"<p>现在让我们尝试使用 Web 动画 API 创建相同的动画。</p>\n<h4 id=\"representing_keyframes\">Representing keyframes</h4>\n<p>我们首先要做的是创建一个对应于我们的 CSS @keyframes 块的关键帧对象：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> aliceTumbling <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'rotate(0) translate3D(-50%, -50%, 0)'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#431236'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">offset</span><span class=\"token operator\">:</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'rotate(360deg) translate3D(-50%, -50%, 0)'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>这里我们使用一个包含多个对象的数组。 每个对象代表原始 CSS 中的一个键。 然而，与 CSS 不同，Web 动画 API 不需要明确地告知每个键出现的动画的百分比。 它将根据您给出的按键数量自动将动画划分为相等的部分。 这意味着具有三个键的关键帧对象将通过动画的每个循环的方式播放中间键，除非另有说明。</p>\n<p>当我们想要明确地设置一个键与其他键的偏移量时，我们可以直接在对象中指定一个偏移量，并与逗号分隔。 在上面的例子中，为了确保爱丽丝的颜色变化为 30％而不是 50％，我们给它的偏移量为 0.3。</p>\n<p>必须至少指定两个关键帧（表示动画序列的开始和结束状态）.如果您的关键帧列表只有一个条目，<a href=\"/zh-CN/docs/Web/API/Element/animate\"><code>Element.animate()</code></a> 将抛出不支持的异常报错。</p>\n<p>所以要回顾一下，除非你指定一个键上的偏移量，否则键的默认值是等间隔的。 方便吗？</p>\n<h4 id=\"表示时间属性\">表示时间属性</h4>\n<p>我们还需要创建一个定时属性的对象 (an <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyframeEffect/KeyframeEffect\"><code>AnimationEffectTimingProperties</code> <small>(en-US)</small></a> object) 对应于爱丽丝动画中的值：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> aliceTiming <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">iterations</span><span class=\"token operator\">:</span> <span class=\"token number\">Infinity</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>你会注意到这里有一些差异，如何在 CSS 中表示等价的值：</p>\n<ul>\n  <li>一个，持续时间是毫秒，而不是秒 - 3000 不是 3 秒.。像<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/setTimeout\"><code>WindowTimers.setTimeout()</code> <small>(en-US)</small></a> 和<a href=\"/zh-CN/docs/Web/API/Window/requestAnimationFrame\"><code>Window.requestAnimationFrame()</code></a>, Web 动画 API 只支持毫秒。</li>\n  <li>The other thing you’ll notice is that it’s <code>iterations</code>, not <code>iteration-count</code>.</li>\n</ul>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> CSS 动画中使用的属性值与 Web 动画中使用的属性值存在一些小的差异。比如，Web 动画中不能使用字符串“infinite”，而是使用 Javascript 的关键字 Infinity。 以及我们用 <code>easing</code> 来代替<code>timing-function</code>。我们不必在这列出<code>easing</code>的值，因为不像在 CSS 动画里，默认的\"<a href=\"/zh-CN/docs/Web/CSS/animation-timing-function\">animation-timing-function</a>\"是<code>ease</code>。页面动画 API 的默认 easing 是<code>linear</code>— 而这就是我们想要的。</p>\n</div>\n<h4 id=\"整合这些特性\">整合这些特性</h4>\n<p>是时候把这些特性结合到一起运用了 <a href=\"/zh-CN/docs/Web/API/Element/animate\"><code>Element.animate()</code></a> :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alice\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>\n  aliceTumbling<span class=\"token punctuation\">,</span>\n  aliceTiming\n<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>And boom: the animation starts playing (see the finished <a href=\"https://codepen.io/rachelnabors/pen/rxpmJL\" class=\"external\" rel=\" noopener\">version on Codepen</a>).</p>\n<p>可以在可以使用 CSS 动画化的任何 DOM 元素上调用 animate() 方法。 它可以用几种方式写成。 我们可以直接像这样传递他们的值，而不是为关键帧和时间属性制作对象：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alice\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'rotate(0) translate3D(-50%, -50%, 0)'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#431236'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">offset</span><span class=\"token operator\">:</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'rotate(360deg) translate3D(-50%, -50%, 0)'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">iterations</span><span class=\"token operator\">:</span> <span class=\"token number\">Infinity</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>更重要的是，如果我们只想指定动画的持续时间，而不是其迭代（默认动画迭代一次），我们可以单独传递毫秒：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alice\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'rotate(0) translate3D(-50%, -50%, 0)'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#431236'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">offset</span><span class=\"token operator\">:</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'rotate(360deg) translate3D(-50%, -50%, 0)'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"使用_play，pause，reverse_和_playbackrate_控制播放","title":"使用 play()，pause()，reverse() 和 playbackRate 控制播放","isH3":false,"content":"<p>虽然我们可以使用 Web 动画 API 编写 CSS 动画，其中 API 真正派上用场的是操纵动画的播放。 Web 动画 API 提供了一些控制播放的有用方法。 让我们来看看在 Growing / Shrinking Alice 游戏中暂停和播放动画（请查看 Codepen 的完整代码 <a href=\"https://codepen.io/rachelnabors/pen/PNYGZQ\" class=\"external\" rel=\" noopener\">full code on Codepen</a>）：</p>\n<p><a href=\"https://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010\" class=\"external\" rel=\" noopener\"><img src=\"/en-US/docs/Web/API/Web_Animations_API/Using_the_Web_Animations_API/growing-shrinking_article_optimized.gif\" alt=\"Playing the growing and shrinking game with Alice.\" width=\"700\" height=\"374\" loading=\"lazy\"></a></p>\n<p>在这个游戏中，爱丽丝有一个动画，使她从小到大，我们通过一个瓶子和一个蛋糕控制。 这两个都有自己的动画。</p>"}},{"type":"prose","value":{"id":"暂停和启动动画","title":"暂停和启动动画","isH3":true,"content":"<p>稍后我们会再讨论爱丽丝的动画，但现在我们来看看蛋糕的动画：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> nommingCake <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'eat-me_sprite'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>\n<span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'translateY(0)'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'translateY(-80%)'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">fill</span><span class=\"token operator\">:</span> <span class=\"token string\">'forwards'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">easing</span><span class=\"token operator\">:</span> <span class=\"token string\">'steps(4, end)'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> aliceChange<span class=\"token punctuation\">.</span>effect<span class=\"token punctuation\">.</span>timing<span class=\"token punctuation\">.</span>duration <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><a href=\"/zh-CN/docs/Web/API/Element/animate\"><code>Element.animate()</code></a> 方法会在调用后立即执行。 为了防止蛋糕在用户有机会点击之前进食自己， 我们调用 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Animation/pause\"><code>Animation.pause()</code> <small>(en-US)</small></a> ，如下：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>nommingCake<span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>我们可以运行 <a href=\"/zh-CN/docs/Web/API/Animation/play\"><code>Animation.play()</code></a> 方法：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>nommingCake<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>特别地，我们想将其链接到爱丽丝的动画，所以当蛋糕被吃掉时，她变得更大。 我们可以通过以下功能来实现：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">growAlice</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// Play Alice's animation.</span>\n  aliceChange<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Play the cake's animation.</span>\n  nommingCake<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>当用户握住鼠标或者在触摸屏上按住他们的手指在蛋糕上时，我们现在可以调用 growAlice 来使所有动画发挥作用：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>cake<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> growAlice<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncake<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchstart\"</span><span class=\"token punctuation\">,</span> growAlice<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"其他有用的方法","title":"其他有用的方法","isH3":true,"content":"<p>除了暂停和播放，我们可以使用以下动画方法：</p>\n<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Animation/finish\"><code>Animation.finish()</code></a> 动画结束。</li>\n  <li><a href=\"/zh-CN/docs/Web/API/Animation/cancel\"><code>Animation.cancel()</code></a> 终止动画。</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Animation/reverse\"><code>Animation.reverse()</code> <small>(en-US)</small></a> 设置动画播放速度</li>\n  <li>(<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Animation/playbackRate\"><code>Animation.playbackRate</code> <small>(en-US)</small></a>到负值，所以它向后运行。</li>\n</ul>\n<p>让我们先来看一下 playbackRate - 一个否定的播放速度将导致一个动画反向运行。 当爱丽丝从瓶中喝酒时，她越来越小。 这是因为瓶子将动画的播放速度从 1 更改为-1：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">shrinkAlice</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  aliceChange<span class=\"token punctuation\">.</span>playbackRate <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  aliceChange<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbottle<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> shrinkAlice<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbottle<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchstart\"</span><span class=\"token punctuation\">,</span> shrinkAlice<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在<a href=\"https://en.wikipedia.org/wiki/Through_the_Looking-Glass\" class=\"external\" rel=\" noopener\">Through the Looking-Glass</a>，爱丽丝旅行到一个世界，她必须跑步留在原地 - 运行两倍快速前进！ 在红女王比赛的例子中，爱丽丝和红女王正在跑步，留下来（查看 Codepen 上的全部代码<a href=\"https://codepen.io/rachelnabors/pen/PNGGaV\" class=\"external\" rel=\" noopener\">full code on Codepen</a>）：</p>\n<p><a href=\"https://codepen.io/rachelnabors/pen/PNGGaV\" class=\"external\" rel=\" noopener\"><img src=\"/en-US/docs/Web/API/Web_Animations_API/Using_the_Web_Animations_API/red-queen-race_optimized.gif\" alt=\"Alice and the Red Queen race to get to the next square in this game.\" width=\"640\" height=\"342\" loading=\"lazy\"></a></p>\n<p>因为小孩子很容易疲惫不堪，不像自动机棋子，爱丽丝不断减速。 我们已经通过在动画播放时设置了一个衰减代码：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// Make sure the playback rate never falls below .4</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>redQueen_alice<span class=\"token punctuation\">.</span>playbackRate <span class=\"token operator\">&gt;</span> <span class=\"token number\">.4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    redQueen_alice<span class=\"token punctuation\">.</span>playbackRate <span class=\"token operator\">*=</span> <span class=\"token number\">.9</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>但是通过点击或点击来敦促他们使他们通过乘以播放速度来加快速度：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">goFaster</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  redQueen_alice<span class=\"token punctuation\">.</span>playbackRate <span class=\"token operator\">*=</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> goFaster<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchstart\"</span><span class=\"token punctuation\">,</span> goFaster<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>背景元素还具有播放时间，当您点击或点击时，它们会受到影响。 当 Alice 和 Red Queen 跑两倍的时候会发生什么？ 当你让他们放慢时会发生什么？</p>"}},{"type":"prose","value":{"id":"获取动画信息","title":"获取动画信息","isH3":false,"content":"<p>想象其他方式我们可以使用 playbackRate，例如通过让他们减慢整个网站的动画来改善具有前庭障碍的用户的无障碍。 这不可能在 CSS 中重新计算每个 CSS 规则的持续时间，但是通过 Web 动画 API，我们可以使用即将到来的（在浏览器中不支持！）<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Document/getAnimations\"><code>document.getAnimations()</code> <small>(en-US)</small></a>方法 循环遍历页面上的每个动画，并将它们的播放速度减半：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">getAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">animation</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    animation<span class=\"token punctuation\">.</span>playbackRate <span class=\"token operator\">*=</span> <span class=\"token number\">.5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>使用 Web 动画 API，您需要更改的只是一个小的属性！</p>\n<p>另一件与 CSS 动画有关的难点就是创建依赖于其他动画提供的值。 例如，在“成长和收缩爱丽丝”游戏的例子中，您可能会注意到蛋糕的持续时间有些奇怪：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> aliceChange<span class=\"token punctuation\">.</span>effect<span class=\"token punctuation\">.</span>timing<span class=\"token punctuation\">.</span>duration <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n</code></pre></div>\n<p>要了解这里发生了什么，让我们来看看 Alice 的动画：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> aliceChange <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'alice'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'translate(-50%, -50%) scale(.5)'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'translate(-50%, -50%) scale(2)'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">8000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">easing</span><span class=\"token operator\">:</span> <span class=\"token string\">'ease-in-out'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">fill</span><span class=\"token operator\">:</span> <span class=\"token string\">'both'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>爱丽丝的动画让她的尺寸从一半到 8 秒的两倍。 然后我们暂停她：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>aliceChange<span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>如果我们在动画开始时已经把她暂停了，那么她的全部尺寸将从一半开始，就像她已经把整个瓶子都喝完了一样！ 我们想把动画的“播放头”放在中间，所以她已经中途了。 我们可以通过将她的 <a href=\"/zh-CN/docs/Web/API/Animation/currentTime\"><code>Animation.currentTime</code></a>设置为 4 秒，如下所示：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>aliceChange<span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">=</span> <span class=\"token number\">4000</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>但是在制作这个动画的时候，我们可能会改变爱丽丝的持续时间。 如果我们将动态时间设置为 timeTime，那么它不会更好吗？所以我们一次不必再做两个更新？ 我们实际上可以通过引用 aliceChange 的<a href=\"/zh-CN/docs/Web/API/Animation/effect\"><code>Animation.effect</code></a>属性来实现，该属性返回一个包含 Alice 上所有效果细节的对象：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>aliceChange<span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">=</span> aliceChange<span class=\"token punctuation\">.</span>effect<span class=\"token punctuation\">.</span>timing<span class=\"token punctuation\">.</span>duration <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>效果让我们访问动画的关键帧和时间对象 - aliceChange.effect.timing 指向 Alice 的时间对象（其类型为<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>AnimationEffectTimingReadOnly</code></a>）- 这包含她的<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>AnimationEffectTimingReadOnly.duration</code></a>。 我们可以将她的持续时间分成两半，以获得她动画时间轴的中点，使她成为正常的高度。 现在，我们可以在任何一个方向扭转和播放动画，使她变小或变大！</p>\n<p>当设置蛋糕和瓶子的持续时间时，我们可以做同样的事情：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> drinking <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'liquid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>\n<span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token string\">'100%'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token string\">'0'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">fill</span><span class=\"token operator\">:</span> <span class=\"token string\">'forwards'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> aliceChange<span class=\"token punctuation\">.</span>effect<span class=\"token punctuation\">.</span>timing<span class=\"token punctuation\">.</span>duration <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndrinking<span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>现在，所有三个动画只有一个持续时间，我们可以从一个地方容易地改变。</p>\n<p>我们还可以使用 Web 动画 API 来确定动画当前的时间。 当你用尽蛋糕吃或者清空瓶子时，游戏就结束了。 哪个角色扮演者取决于爱丽丝在她的动画中有多远，无论她是否变得太大，不能进入小门太小，无法达到打开门的钥匙。 我们可以弄清楚她是否在动画的大端或小端，让她的动画当前时间 (<a href=\"/zh-CN/docs/Web/API/Animation/currentTime\"><code>currentTime</code></a>) 被她的 activeDuration 分成：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">endGame</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// get Alice's timeline's playhead location</span>\n  <span class=\"token keyword\">var</span> alicePlayhead <span class=\"token operator\">=</span> aliceChange<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> aliceTimeline <span class=\"token operator\">=</span> aliceChange<span class=\"token punctuation\">.</span>effect<span class=\"token punctuation\">.</span>activeDuration<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// stops Alice's and other animations</span>\n  <span class=\"token function\">stopPlayingAlice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// depending on which third it falls into</span>\n  <span class=\"token keyword\">var</span> aliceHeight <span class=\"token operator\">=</span> alicePlayhead<span class=\"token operator\">/</span>aliceTimeline<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aliceHeight <span class=\"token operator\">&lt;=</span> <span class=\"token number\">.333</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Alice got smaller!</span>\n    <span class=\"token operator\">...</span>\n\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aliceHeight <span class=\"token operator\">&gt;=</span> <span class=\"token number\">.666</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Alice got bigger!</span>\n    <span class=\"token operator\">...</span>\n\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Alice didn't change significantly</span>\n    <span class=\"token operator\">...</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> <code>getAnimations()</code> and <code>effect</code> are not fully supported as of this writing, but the polyfill does support them today.</p>\n</div>"}},{"type":"prose","value":{"id":"callbacks_and_promises","title":"Callbacks and promises","isH3":false,"content":"<p>CSS 动画和转换有自己的事件侦听器，这些也可以通过 Web 动画 API：</p>\n<ul>\n  <li><a href=\"/en-US/docs/Web/API/Animation/finish_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">onfinish (en-US)</a> is the event handler for the <code>finish</code> event and can be triggered manually with <a href=\"/zh-CN/docs/Web/API/Animation/finish\"><code>finish()</code></a>.</li>\n  <li><a href=\"/zh-CN/docs/Web/API/Animation/cancel_event\"><code>oncancel</code></a> is the event handler for the <code>cancel</code> event and can be triggers with <a href=\"/zh-CN/docs/Web/API/Animation/cancel\"><code>cancel()</code></a>.</li>\n</ul>\n<p>在这里，我们为蛋糕，瓶子和爱丽丝设置回调来触发 endGame 功能：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// When the cake or runs out...</span>\nnommingCake<span class=\"token punctuation\">.</span>onfinish <span class=\"token operator\">=</span> endGame<span class=\"token punctuation\">;</span>\ndrinking<span class=\"token punctuation\">.</span>onfinish <span class=\"token operator\">=</span> endGame<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...or Alice reaches the end of her animation</span>\naliceChange<span class=\"token punctuation\">.</span>onfinish <span class=\"token operator\">=</span> endGame<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Prefer promises? The Web Animations API also specifies two promises: <a href=\"/en-US/docs/Web/API/Animation/finish_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">onfinish (en-US)</a> and <a href=\"/zh-CN/docs/Web/API/Animation/cancel_event\"><code>oncancel</code></a>.</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> These promises are not fully supported as of this writing.</p>\n</div>"}},{"type":"prose","value":{"id":"结论","title":"结论","isH3":false,"content":"<p>这些是 Web 动画 API 的基本功能，其中大部分功能已在最新版本的 Firefox 和 Chrome 中得到支持。 到目前为止，您应该准备好在浏览器中“跳下兔子洞”，动画制作动画实验！ 如果您正在使用 API 并要共享，请尝试使用#WAAPI 主题标签。 我们将会观看并且将编写更多的教程来涵盖更多的功能，支持传播！</p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The <a href=\"https://codepen.io/collection/bpEza/\" class=\"external\" rel=\" noopener\">full suite of Alice in Wonderland demos</a> on CodePen for you to play with, fork, and share</li>\n  <li><a href=\"https://hacks.mozilla.org/2016/08/animating-like-you-just-dont-care-with-element-animate/\" class=\"external\" rel=\" noopener\">Animating like you just don’t care with Element.animate</a> — a great article to read that explains more on the background of the Web Animations API, and why it is more performant than other web animation methods</li>\n  <li><a href=\"https://github.com/web-animations/web-animations-js\" class=\"external\" rel=\" noopener\">web-animations-js</a> — the Web Animations API polyfill</li>\n</ul>"}}],"toc":[{"text":"认识 Web 动画 API","id":"认识_web_动画_api"},{"text":"浏览器兼容情况","id":"浏览器兼容情况"},{"text":"用 web 动画 API 写 css 动画","id":"用_web_动画_api_写_css_动画"},{"text":"使用 play()，pause()，reverse() 和 playbackRate 控制播放","id":"使用_play，pause，reverse_和_playbackrate_控制播放"},{"text":"获取动画信息","id":"获取动画信息"},{"text":"Callbacks and promises","id":"callbacks_and_promises"},{"text":"结论","id":"结论"},{"text":"See also","id":"see_also"}],"summary":"web 动画 API 可以让我们用 JavaScript 写动画并且控制动画。本文将通过有趣的 demo 和教学，以有趣的方式开启您对这片爱丽丝仙境的探索。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using the Web Animations API","locale":"en-US","native":"English (US)"},{"title":"Web Animations API を利用する","locale":"ja","native":"日本語"},{"title":"Usando a Web Animations API","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Using the Web Animations API","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/web_animations_api/using_the_web_animations_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/web_animations_api/using_the_web_animations_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Web_Animations_API","title":"Web Animations API"},{"uri":"/zh-CN/docs/Web/API/Web_Animations_API/Using_the_Web_Animations_API","title":"Using the Web Animations API"}],"pageTitle":"Using the Web Animations API - Web API 接口参考 | MDN","noIndexing":false}}