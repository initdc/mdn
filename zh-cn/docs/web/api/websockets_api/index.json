{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"WebSockets","mdn_url":"/zh-CN/docs/Web/API/WebSockets_API","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Websockets_API\">Websockets API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>指南</summary><ol><li><a href=\"/zh-CN/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications\">Writing WebSocket client applications</a></li><li><a href=\"/zh-CN/docs/Web/API/WebSockets_API/Writing_WebSocket_servers\">Writing WebSocket servers</a></li><li><a href=\"/zh-CN/docs/Web/API/WebSockets_API/Writing_WebSocket_server\">Writing a WebSocket server in C#</a></li><li><a href=\"/zh-CN/docs/Web/API/WebSockets_API/Writing_a_WebSocket_server_in_Java\">Writing a WebSocket server in Java</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>接口</summary><ol><li><a href=\"/zh-CN/docs/Web/API/WebSocket\"><code>WebSocket</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CloseEvent\"><code>CloseEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>WebSockets</strong> 是一种先进的技术。它可以在用户的浏览器和服务器之间打开交互式通信会话。使用此 API，您可以向服务器发送消息并接收事件驱动的响应，而无需通过轮询服务器的方式以获得响应。</p>"}},{"type":"prose","value":{"id":"接口","title":"接口","isH3":false,"content":"<dl>\n  <dt id=\"websocket\"><a href=\"/zh-CN/docs/Web/API/WebSocket\"><code>WebSocket</code></a></dt>\n  <dd>\n    <p>用于连接 WebSocket 服务器的主要接口，之后可以在这个连接上发送 和接受数据。</p>\n  </dd>\n  <dt id=\"closeevent\"><a href=\"/zh-CN/docs/Web/API/CloseEvent\"><code>CloseEvent</code></a></dt>\n  <dd>\n    <p>连接关闭时 WebSocket 对象发送的事件。</p>\n  </dd>\n  <dt id=\"messageevent\"><a href=\"/zh-CN/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></dt>\n  <dd>\n    <p>当从服务器获取到消息的时候 WebSocket 对象触发的事件。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"工具","title":"工具","isH3":false,"content":"<ul>\n  <li><a href=\"https://hacks.mozilla.org/2017/06/introducing-humblenet-a-cross-platform-networking-library-that-works-in-the-browser/\" class=\"external\" rel=\" noopener\">HumbleNet</a>: 一个在浏览器中工作的跨平台网络库。它由一个围绕 websocket 和 WebRTC 的 C 包装器组成，抽象了跨浏览器的差异，方便了为游戏和其它应用程序创建多用户网络功能。</li>\n  <li><a href=\"https://github.com/uWebSockets/uWebSockets\" class=\"external\" rel=\" noopener\">µWebSockets</a>:由 <a href=\"https://isocpp.org/\" class=\"external\" rel=\" noopener\">C++11</a> 和 <a href=\"https://nodejs.org/\" class=\"external\" rel=\" noopener\">Node.js</a> 实现的高度可扩展的 WebSocket 服务器和客户端.。</li>\n  <li><a href=\"https://github.com/ClusterWS/ClusterWS\" class=\"external\" rel=\" noopener\">ClusterWS</a>: 轻量级、快速和强大的框架，用于在 <a href=\"https://nodejs.org/\" class=\"external\" rel=\" noopener\">Node.js</a> 中构建可伸缩的 WebSocket 应用程序。</li>\n  <li><a href=\"https://socket.io\" class=\"external\" rel=\" noopener\">Socket.IO</a>: 一个基于长轮询/WebSocket 的 <a href=\"https://nodejs.org\" class=\"external\" rel=\" noopener\">Node.js</a> 第三方传输协议。</li>\n  <li><a href=\"https://socketcluster.io/\" class=\"external\" rel=\" noopener\">SocketCluster</a>: 一个用于<a href=\"https://nodejs.org\" class=\"external\" rel=\" noopener\">Node.js</a>的 pub/sub 专注于可伸缩 WebSocket 框架。</li>\n  <li><a href=\"https://github.com/Worlize/WebSocket-Node\" class=\"external\" rel=\" noopener\">WebSocket-Node</a>: 一个用 <a href=\"https://nodejs.org/\" class=\"external\" rel=\" noopener\">Node.js</a>实现 WebSocket 服务器 API。</li>\n  <li><a href=\"https://www.totaljs.com/\" class=\"external\" rel=\" noopener\">Total.js</a>:一个用<a href=\"http://www.nodejs.org/\" class=\"external\" rel=\" noopener\">Node.js</a> 实现的的 Web 应用程序框架（例如:WebSocket 聊天）。</li>\n  <li><a href=\"https://www.npmjs.com/package/faye-websocket\" class=\"external\" rel=\" noopener\">Faye</a>: 一个 <a href=\"https://nodejs.org/\" class=\"external\" rel=\" noopener\">Node.js</a> 的 <a href=\"/zh-CN/docs/Web/API/WebSockets_API\" aria-current=\"page\">WebSocket</a>（双向连接）和 <a href=\"/zh-CN/docs/Web/API/EventSource\">EventSource</a>（单向连接）的服务器和客户端。</li>\n  <li><a href=\"https://dotnet.microsoft.com/zh-cn/apps/aspnet/signalr\" class=\"external\" rel=\" noopener\">SignalR</a>: SignalR 在可用时将隐藏使用 WebSockets，在不可用时将优雅地使用其他技术和技术，而应用程序代码保持不变。</li>\n  <li><a href=\"https://caddyserver.com/docs/websocket\" class=\"external\" rel=\" noopener\">Caddy</a>: 能够将任意命令（stdin/stdout）代理为 websocket 的 web 服务器。</li>\n  <li><a href=\"https://github.com/websockets/ws\" class=\"external\" rel=\" noopener\">ws</a>: 一个流行的 WebSocket 客户端和服务器 <a href=\"https://nodejs.org/\" class=\"external\" rel=\" noopener\">Node.js</a>库。</li>\n  <li><a href=\"https://github.com/bigstepinc/jsonrpc-bidirectional\" class=\"external\" rel=\" noopener\">jsonrpc-bidirectional</a>: 易于使用异步 RPC 库，通过单个 WebSocket 或 RTCDataChannel (WebRTC) 连接支持双向调用。TCP / SCTP /等。客户端和服务器可以各自承载自己的 JSONRPC 和服务器端点。</li>\n  <li><a href=\"https://github.com/elpheria/rpc-websockets\" class=\"external\" rel=\" noopener\">rpc-websockets</a>: JSON-RPC 2.0 在 websocket 上实现 Node.js 和 JavaScript。</li>\n</ul>"}},{"type":"prose","value":{"id":"相关话题","title":"相关话题","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/Guide/AJAX\">AJAX</a></li>\n  <li><a href=\"/zh-CN/docs/Web/JavaScript\">JavaScript</a></li>\n</ul>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/web-sockets.html#the-websocket-interface","title":"HTML Standard"}],"query":"api.WebSocket"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.WebSocket","dataURL":"/zh-CN/docs/Web/API/WebSockets_API/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"https://tools.ietf.org/html/rfc6455\" class=\"external\" rel=\" noopener\">RFC 6455 — The WebSocket Protocol</a></li>\n  <li><a href=\"https://www.w3.org/TR/websockets/\" class=\"external\" rel=\" noopener\">WebSocket API Specification</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Server-sent_events\">Server-Sent Events</a></li>\n</ul>"}}],"toc":[{"text":"接口","id":"接口"},{"text":"工具","id":"工具"},{"text":"相关话题","id":"相关话题"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"WebSockets 是一种先进的技术。它可以在用户的浏览器和服务器之间打开交互式通信会话。使用此 API，您可以向服务器发送消息并接收事件驱动的响应，而无需通过轮询服务器的方式以获得响应。","popularity":0.0014,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"The WebSocket API (WebSockets)","locale":"en-US","native":"English (US)"},{"title":"WebSockets","locale":"es","native":"Español"},{"title":"WebSockets","locale":"fr","native":"Français"},{"title":"WebSocket API (WebSockets)","locale":"ja","native":"日本語"},{"title":"웹 소켓","locale":"ko","native":"한국어"},{"title":"WebSockets","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"WebSockets","locale":"ru","native":"Русский"},{"title":"WebSockets","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/websockets_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/websockets_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/WebSockets_API","title":"WebSockets"}],"pageTitle":"WebSockets - Web API 接口参考 | MDN","noIndexing":false}}