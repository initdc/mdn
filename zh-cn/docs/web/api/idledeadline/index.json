{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"IdleDeadline","mdn_url":"/zh-CN/docs/Web/API/IdleDeadline","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Background_Tasks_API\">Background Tasks API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/IdleDeadline\"><code>IdleDeadline</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IdleDeadline/didTimeout\"><code>didTimeout</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/IdleDeadline/timeRemaining\"><code>timeRemaining()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Background Tasks 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Window/cancelIdleCallback\"><code>Window.cancelIdleCallback()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Window/requestIdleCallback\"><code>Window.requestIdleCallback()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>IdleDeadline</code> interface 在 <a href=\"/zh-CN/docs/Web/API/Window/requestIdleCallback\"><code>Window.requestIdleCallback()</code></a>被调用的时候做为一个<code>IdleDeadline</code> interface 类型的参数传递给 requestIdleCallback 方法的回调函数。它提供了一个方法，可以让你判断用户代理 (浏览器) 还剩余多少闲置时间可以用来执行耗时任务<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>timeRemaining()</code></a>,<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IdleDeadline/didTimeout\"><code>didTimeout</code> <small>(en-US)</small></a>, didTimeout 属性用来判断当前的回调函数是否被执行因为回调函数存在过期时间 (requestIdleCallback 的第二个参数用来指定执行超时时间，即回调函数在规定的时间内是否被执行，如果没有执行 didTimeout 属性将为 ture，如果任务是急需完成的此时应该忽略剩余时间逻辑上强制执行回调函数)。</p>\n<p>学习更多的 request callbacks 工作原理请参考<a href=\"/zh-CN/docs/Web/API/Background_Tasks_API\">Collaborative Scheduling of Background Tasks</a>.</p>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"idledeadline.didtimeout_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IdleDeadline/didTimeout\"><code>IdleDeadline.didTimeout</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>一个 Boolean 类型当它的值为 true 的时候说明 callback 正在被执行 (并且上一次执行回调函数执行的时候由于时间超时回调函数得不到执行)，因为在执行 requestIdleCallback 回调的时候指定了超时时间并且时间已经超时。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"idledeadline.timeremaining\"><a href=\"/zh-CN/docs/Web/API/IdleDeadline/timeRemaining\"><code>IdleDeadline.timeRemaining()</code></a></dt>\n  <dd>\n    <p>返回一个时间<a href=\"/zh-CN/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a>, 并且是浮点类型的数值，它用来表示当前闲置周期的预估剩余毫秒数。如果 idle period 已经结束，则它的值是 0。你的回调函数 (传给 requestIdleCallback 的函数) 可以重复的访问这个属性用来判断当前线程的闲置时间是否可以在结束前执行更多的任务。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>实例<a href=\"/zh-CN/docs/Web/API/Background_Tasks_API#example\">complete example</a> （在 <a href=\"/zh-CN/docs/Web/API/Background_Tasks_API\">Cooperative Scheduling of Background Tasks API</a>.文章内）</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/requestidlecallback/#the-idledeadline-interface","title":"Cooperative Scheduling of Background Tasks"}],"query":"api.IdleDeadline"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.IdleDeadline","dataURL":"/zh-CN/docs/Web/API/IdleDeadline/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Background_Tasks_API\">Cooperative Scheduling of Background Tasks API</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Window/requestIdleCallback\"><code>Window.requestIdleCallback()</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Window/cancelIdleCallback\"><code>Window.cancelIdleCallback()</code></a></li>\n</ul>"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"IdleDeadline interface 在 Window.requestIdleCallback()被调用的时候做为一个IdleDeadline interface 类型的参数传递给 requestIdleCallback 方法的回调函数。它提供了一个方法，可以让你判断用户代理 (浏览器) 还剩余多少闲置时间可以用来执行耗时任务timeRemaining(),didTimeout (en-US), didTimeout 属性用来判断当前的回调函数是否被执行因为回调函数存在过期时间 (requestIdleCallback 的第二个参数用来指定执行超时时间，即回调函数在规定的时间内是否被执行，如果没有执行 didTimeout 属性将为 ture，如果任务是急需完成的此时应该忽略剩余时间逻辑上强制执行回调函数)。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"IdleDeadline","locale":"en-US","native":"English (US)"},{"title":"IdleDeadline","locale":"ko","native":"한국어"}],"source":{"folder":"zh-cn/web/api/idledeadline","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/idledeadline/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/IdleDeadline","title":"IdleDeadline"}],"pageTitle":"IdleDeadline - Web API 接口参考 | MDN","noIndexing":false}}