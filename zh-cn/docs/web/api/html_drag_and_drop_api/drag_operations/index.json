{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"拖拽操作","mdn_url":"/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API\">HTML Drag and Drop API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>指南</summary><ol><li><a href=\"/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop\">File drag and drop</a></li><li><a href=\"/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations\">Drag operations</a></li><li><a href=\"/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API/Multiple_items\">Dragging and Dropping Multiple Items</a></li><li><a href=\"/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types\">Recommended Drag Types</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>接口</summary><ol><li><a href=\"/zh-CN/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DragEvent\"><code>DragEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Document/drag_event\"><code>Document</code>: <code>drag</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Document/dragend_event\"><code>Document</code>: <code>dragend</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Document/dragenter_event\"><code>Document</code>: <code>dragenter</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Document/dragleave_event\"><code>Document</code>: <code>dragleave</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Document/dragover_event\"><code>Document</code>: <code>dragover</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Document/dragstart_event\"><code>Document</code>: <code>dragstart</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Document/drop_event\"><code>Document</code>: <code>drop</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>本文描述了拖放操作中发生的步骤。</p>\n<p>本文档中描述的拖动操作使用 <a href=\"/zh-CN/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> 接口。本文档不使用 <a href=\"/zh-CN/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> 接口和 <a href=\"/zh-CN/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a> 接口。</p>"}},{"type":"prose","value":{"id":"可拖拽（draggable）属性","title":"可拖拽（<code>draggable</code>）属性","isH3":false,"content":"<p>在一个网页中，有几种特定情况会使用默认拖拽行为，其中包括拖拽选中文本、拖拽图像和拖拽链接。当一个图像或链接被拖拽时，图像或链接的 URL 被设定为拖拽数据。对于其他元素，只当它们是被选中的一部分时，才会触发默认拖拽行为。如果想看看拖拽实际的样子，可以选中网页的一部分，然后按住鼠标，拖动选中的目标。选中的部分根据系统的不同会有不同的渲染效果，并在拖拽时跟随着鼠标指针。然而，这只是默认拖拽行为的效果，此时没有监听程序调整拖拽数据。</p>\n<p>在 HTML 中，除了图像、链接和选择的文本默认的可拖拽行为之外，其他元素在默认情况下是不可拖拽的。</p>\n<p>要使其他的 HTML 元素可拖拽，必须做三件事：</p>\n<ul>\n  <li>将想要拖拽的元素的 <code><a href=\"/zh-CN/docs/Web/HTML/Global_attributes#attr-draggable\"><code>draggable</code></a></code> 属性设置成 <code><a href=\"/zh-CN/docs/Web/HTML/Global_attributes#attr-draggable\"><code>draggable</code></a>=\"true\"</code>。</li>\n  <li>为 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code></code> 事件添加一个监听程序。</li>\n  <li>在上一步定义的监听程序中 <a href=\"/zh-CN/docs/Web/API/DataTransfer/setData\" title=\"设置拖拽数据\"><code>设置拖拽数据</code></a>。</li>\n</ul>\n<p>下面的例子允许拖拽一个段落的内容：</p>\n<pre class=\"notranslate\">&lt;p draggable=\"true\" ondragstart=\"event.dataTransfer.setData('text/plain', 'This text may be dragged')\"&gt;\n  This text &lt;strong&gt;may&lt;/strong&gt; be dragged.\n&lt;/p&gt;\n</pre>\n<p>属性 <code><a href=\"/zh-CN/docs/Web/HTML/Global_attributes#attr-draggable\"><code>draggable</code></a></code> 设置为 <code>\"true\"</code>，所以这个元素变成可拖拽的。如果该属性被省略或被设置为 <code>\"false\"</code>，则该元素将不可拖拽，此时拖拽只会选中文本。</p>\n<p><code><a href=\"/zh-CN/docs/Web/HTML/Global_attributes#attr-draggable\"><code>draggable</code></a></code> 属性可在任意元素上设置，包括图像和链接。然而，对于后两者，该属性的默认值是 <code>true</code>，所以你只会在禁用这二者的拖拽时使用到 <code><a href=\"/zh-CN/docs/Web/HTML/Global_attributes#attr-draggable\"><code>draggable</code></a></code> 属性，将其设置为 <code>false</code>。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 当一个元素被设置成可拖拽时， 元素中的文本和其他子元素不能再以正常的方式（通过鼠标点击和拖拽）被选中。用户必须按住 <kbd>alt</kbd> 键，再用鼠标选择文本，或者使用键盘选择。</p>\n</div>","titleAsText":"可拖拽（draggable）属性"}},{"type":"prose","value":{"id":"开始拖拽操作","title":"开始拖拽操作","isH3":false,"content":"<p>这个例子使用 <code><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\"><code>ondragstart</code> <small>(en-US)</small></a></code> 属性为 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code> 事件添加监听程序。</p>\n<pre class=\"notranslate\">&lt;p draggable=\"true\" ondragstart=\"event.dataTransfer.setData('text/plain', 'This text may be dragged')\"&gt;\n  This text &lt;strong&gt;may&lt;/strong&gt; be dragged.\n&lt;/p&gt;\n</pre>\n<p>当用户开始拖拽时，会触发 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code> 事件。</p>\n<p>在这个例子中，<code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code> 事件监听程序被添加到可拖拽元素本身；然而，你可以监听一个祖先元素，因为就像大多数其他事件一样，拖拽事件会冒泡。</p>\n<p>在 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code> 事件中，你可以指定拖拽数据、反馈图像和拖拽效果，所有这些都将在下面描述。不过，我们只需要设置拖拽数据，因为在大多数情况下默认的图像和拖拽效果都是适用的。</p>"}},{"type":"prose","value":{"id":"拖拽数据","title":"拖拽数据","isH3":false,"content":"<p>所有 <a href=\"/zh-CN/docs/Web/API/DragEvent\" title=\"拖拽事件\"><code>拖拽事件</code></a> 都有一个名为 <a href=\"/zh-CN/docs/Web/API/DragEvent/dataTransfer\" title=\"dataTransfer\"><code>dataTransfer</code></a> 的属性，它持有拖拽数据（<code>dataTransfer</code> 是一个 <a href=\"/zh-CN/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> 对象）。</p>\n<p>当拖拽发生时，数据必须与被拖拽的项目相关联。例如，当在文本框中拖拽选定的文本时，与拖拽数据项相关联的数据就是文本本身。类似地，当在 Web 页面上拖拽链接时，拖拽数据项就是链接的 URL 。</p>\n<p><a href=\"/zh-CN/docs/Web/API/DataTransfer\" title=\"拖拽数据\"><code>拖拽数据</code></a> 包含两个信息，数据的类型（或格式）和数据值。格式是一个类型字符串（例如文本数据的格式是 <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#text\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">text/plain (en-US)</a>），值是一个文本字符串。拖拽开始时，你提供数据类型和数据值。在拖拽过程中，在 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code></code> 和 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code></code> 事件监听程序中，你使用拖拽数据的类型来检查是否允许放置（drop）。例如，接受链接的放置目标将检查链接类型 <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#link\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">text/uri-list (en-US)</a>。在放置事件中，监听程序将取回拖拽数据，并将其插入到放置位置。</p>\n<p><a href=\"/zh-CN/docs/Web/API/DataTransfer\" title=\"拖拽数据\"><code>拖拽数据</code></a> 的 <a href=\"/zh-CN/docs/Web/API/DataTransfer/types\" title=\"类型\"><code>类型</code></a> 属性返回一个类似 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 的 MIME-type 的列表，如 <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#text\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">text/plain (en-US)</a> 或 <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#image\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">image/jpeg (en-US)</a>。你还可以创建自己的类型。最常用的类型列在文章 <a href=\"/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types\">推荐拖拽类型</a> 中。</p>\n<p>一次拖拽可能包括几个不同类型的数据项。这使得数据可以更具体的类型提供，通常是自定义类型，但若放置目标不支持这些具体类型，则会提供回退（fallback）数据。通常情况下，最不具体的类型是 <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#text\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">text/plain (en-US)</a> 类型的普通文本数据，即一些简单的文本表示。</p>\n<p>要在 <a href=\"/zh-CN/docs/Web/API/DragEvent/dataTransfer\" title=\"dataTransfer\"><code>dataTransfer</code></a> 中设置拖拽数据项，使用 <a href=\"/zh-CN/docs/Web/API/DataTransfer/setData\" title=\"setData()\"><code>setData()</code></a> 方法。这个方法接收两个参数，即数据类型和数据值。例如：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Text to drag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在这个例子中，数据值是 “Text to drag”，数据类型是 <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#text\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">text/plain (en-US)</a> 格式。</p>\n<p>你可以提供多种格式的数据。要做到这一点，可以用不同的格式多次调用 <a href=\"/zh-CN/docs/Web/API/DataTransfer/setData\" title=\"setData()\"><code>setData()</code></a> 方法。你应该传入尽量具体的格式。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> dt <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"application/x.bookmark\"</span><span class=\"token punctuation\">,</span> bookmarkString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/uri-list\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http://www.mozilla.org\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http://www.mozilla.org\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在这里，数据被添加到三种不同的类型中。第一个类型 <code>application/x-bookmark</code> 是一种自定义类型。其他应用程序不会支持这个类型，但你可以在同一站点或同以应用程序之间使用自定义类型。</p>\n<p>通过提供其他类型的数据，我们还可使用不那么具体的形式支持拖拽到其他应用程序。<code>application/x.bookmark</code> 类型可以提供更多的数据，以便在应用程序中使用，而另两个类型则只包含一个 URL 或文本版本。</p>\n<p>注意，在本例中，<a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#link\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">text/uri-list (en-US)</a> 和 <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#text\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">text/plain (en-US)</a> 包含相同的数据。这通常是正确的，但不一定要这么做。</p>\n<p>如果你试图以相同的格式添加两次数据，那么新的数据将替换旧的数据。你可以使用 <a href=\"/zh-CN/docs/Web/API/DataTransfer/clearData\" title=\"clearData()\"><code>clearData()</code></a> 方法清除这些数据，该方法接收一个参数，即要删除的数据类型。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">clearData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/uri-list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><a href=\"/zh-CN/docs/Web/API/DataTransfer/clearData\" title=\"clearData()\"><code>clearData()</code></a> 方法的 <code>type</code> 参数是可选的。如果没有声明 <code>type</code>，则所有类型的数据都会被删除。如果拖拽不包含拖拽数据项，或者所有的数据项都被清除，那么就不会出现拖拽行为。</p>"}},{"type":"prose","value":{"id":"设置拖拽反馈图像","title":"设置拖拽反馈图像","isH3":false,"content":"<p>当拖拽发生时，会生成拖拽目标的一个半透明图像（触发\"<code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code>\" 事件的元素），并在拖拽过程中跟踪鼠标指针。这个图像是自动创建的，所以你不需要自己创建它。但是，你可以使用 <a href=\"/zh-CN/docs/Web/API/DataTransfer/setDragImage\" title=\"setDragImage()\"><code>setDragImage()</code></a> 方法来自定义拖拽反馈图像。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">setDragImage</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> xOffset<span class=\"token punctuation\">,</span> yOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>这三个参数都是必要的。第一个是图像的引用。这个引用通常是一个 <code>&lt;img&gt;</code> 元素，但也可以是 <code>&lt;canvas&gt;</code> 或任何其他元素。生成的反馈图像就是该图像在屏幕上的样子，以图像原始的大小绘制。<a href=\"/zh-CN/docs/Web/API/DataTransfer/setDragImage\" title=\"setDragImage()\"><code>setDragImage()</code></a> 方法的第二、三个参数是图像位置相对于鼠标指针位置的偏移量。</p>\n<p>也可以使用不在文档中的图像和画布。这种技术在使用 canvas 元素绘制自定义的拖拽反馈图像时非常有用，如下面的例子：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">dragWithCustomImage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElementNS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://www.w3.org/1999/xhtml\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> dt <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">;</span>\n  dt<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text/plain'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Data to Drag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  dt<span class=\"token punctuation\">.</span><span class=\"token function\">setDragImage</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>在这个例子中，我们做了一个是画布的拖拽图像。当画布宽 50 像素，高 50 像素时，我们使用一半的偏移量（25 和 25），这样鼠标指针即为图像中心。</p>"}},{"type":"prose","value":{"id":"拖拽效果","title":"拖拽效果","isH3":false,"content":"<p>拖拽过程中可能会执行一些操作。 <code>copy</code> 操作用来指示被拖拽的数据将从当前位置复制到放置位置。 <code>move</code> 操作指示被拖拽的数据会被移动，<code>link</code> 操作表示在源和放置位置之间将会创建某种形式的关系或连接。</p>\n<p>你可以在 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code></code> 事件监听程序中设置 <a href=\"/zh-CN/docs/Web/API/DataTransfer/effectAllowed\" title=\"effectAllowed\"><code>effectAllowed</code></a> 属性以指定允许拖拽源头执行三种操作中的哪几种。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span>effectAllowed <span class=\"token operator\">=</span> <span class=\"token string\">\"copy\"</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在这个例子中，只允许复制操作。</p>\n<p>你可以不同的方式组合这些值：</p>\n<dl>\n  <dt id=\"none\"><code>none</code></dt>\n  <dd>\n    <p>不允许操作</p>\n  </dd>\n  <dt id=\"copy\"><code>copy</code></dt>\n  <dd>\n    <p>只复制</p>\n  </dd>\n  <dt id=\"move\"><code>move</code></dt>\n  <dd>\n    <p>只移动</p>\n  </dd>\n  <dt id=\"link\"><code>link</code></dt>\n  <dd>\n    <p>只链接</p>\n  </dd>\n  <dt id=\"copymove\"><code>copyMove</code></dt>\n  <dd>\n    <p>复制或移动</p>\n  </dd>\n  <dt id=\"copylink\"><code>copyLink</code></dt>\n  <dd>\n    <p>复制或链接</p>\n  </dd>\n  <dt id=\"linkmove\"><code>linkMove</code></dt>\n  <dd>\n    <p>链接或移动</p>\n  </dd>\n  <dt id=\"all\"><code>all</code></dt>\n  <dd>\n    <p>复制、移动或链接</p>\n  </dd>\n</dl>\n<p>注意，这些值必须像上面列出的那样使用。例如，将 <a href=\"/zh-CN/docs/Web/API/DataTransfer/effectAllowed\" title=\"effectAllowed\"><code>effectAllowed</code></a> 属性设置为<code>copyMove</code> 允许复制或移动操作，但阻止用户执行链接操作。属性默认允许以上所有的操作（all），所以你不需要调整这个属性，除非你想要排除某个特定操作。</p>\n<p>在拖拽操作期间，<code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code></code> 或 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code></code> 事件的监听程序可以检查 <a href=\"/zh-CN/docs/Web/API/DataTransfer/effectAllowed\" title=\"effectAllowed\"><code>effectAllowed</code></a> 属性，以查看哪些操作是允许的。相关的 <a href=\"/zh-CN/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> 属性应该在其中的一个事件中设置，来指定应该执行哪一个单项操作。<a href=\"/zh-CN/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> 是 <code>none</code>, <code>copy</code>, <code>move</code>, 或 <code>link</code>。这个属性不使用上述的组合值。</p>\n<p>在 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code></code> 和 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code></code> 事件中，<a href=\"/zh-CN/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> 属性被初始化为用户请求的效果。用户可以通过按下修饰键来修改为所需的效果。尽管使用什么修饰键取决于不同的平台，但典型情况下，<kbd>Shift</kbd> 和 <kbd>Ctrl</kbd> 键用于在复制、移动和链接之间切换。鼠标指针会改变样式以指示需要的操作；例如，对于\"复制\"操作，光标可能会在旁边出现加号。</p>\n<p>你可以在 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code></code> 或 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code></code> 事件期间修改 <a href=\"/zh-CN/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> 属性，例如将某个放置目标设置为只支持某些操作。你可以修改 <a href=\"/zh-CN/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> 属性来覆盖用户指定的效果，并强制修改为一个特定的放置操作。 注意，这个效果必须是 <a href=\"/zh-CN/docs/Web/API/DataTransfer/effectAllowed\" title=\"effectAllowed\"><code>effectAllowed</code></a> 属性中的一个。否则，它将被设置为允许的替代值。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span>dropEffect <span class=\"token operator\">=</span> <span class=\"token string\">\"copy\"</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在这个例子中，放置效果是复制。</p>\n<p>你可以使用 <code>none</code> 表示在这个位置不允许任何放置，尽管在这种情况下，最好不要取消事件。</p>\n<p>在 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">drop (en-US)</a></code></code> 和 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragend (en-US)</a></code></code> 事件中，你可以检查 <a href=\"/zh-CN/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> 属性，以确定最终选择了哪种效果。如果所选的效果是 \"move\"，那么应该在 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragend (en-US)</a></code></code> 事件中从拖拽源头删除拖拽数据。</p>"}},{"type":"prose","value":{"id":"指定放置目标","title":"指定放置目标","isH3":false,"content":"<p><code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code></code> 或 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code></code> 事件的监听程序用于表示有效的放置目标，也就是被拖拽项目可能放置的地方。网页或应用程序的大多数区域都不是放置数据的有效位置。因此，这些事件的默认处理是不允许放置。</p>\n<p>如果你想要允许放置，你必须取消 <code>dragenter</code> 和 <code>dragover</code> 事件来阻止默认的处理。你可以在属性定义的事件监听程序返回 <code>false</code>，或者调用事件的 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> 方法来实现这一点。在一个独立脚本中的定义的函数里，可能后者更可行。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ondragover</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>return false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ondragover</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>event.preventDefault()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>在 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code></code> 和 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code></code> 事件中调用 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> 方法将表明在该位置允许放置 。但是，你通常希望只在某些情况下调用 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> 方法（如只当拖拽的是链接时）。</p>\n<p>要做到这一点，调用一个函数以检查条件，并且只在满足条件时取消事件。如果条件未满足，则不取消事件，此时用户释放鼠标按钮不会执行放置。</p>\n<p>最常见的是根据数据传输中拖拽数据的类型来接受或拒绝放置——例如，允许放置图像或链接，或者都允许。你可以检查<a href=\"/zh-CN/docs/Web/API/DragEvent/dataTransfer\" title=\"dataTransfer\"><code>dataTransfer</code></a> 属性的<a href=\"/zh-CN/docs/Web/API/DataTransfer/types\" title=\"types\"><code>types</code></a> 属性来查看哪些类型允许放置。<a href=\"/zh-CN/docs/Web/API/DataTransfer/types\" title=\"types\"><code>types</code></a> 属性返回一个字符串类型的数组，这些字符串类型是在拖拽开始时添加的，顺序是从最重要到最不重要。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> list<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">doDragOver</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> isLink <span class=\"token operator\">=</span> <span class=\"token function\">contains</span><span class=\"token punctuation\">(</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/uri-list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isLink<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>在本例中，我们使用 <code>includes</code> 方法来检查 <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#link\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">text/uri-list (en-US)</a> 是否出现在类型列表中。如果出现了，我们将取消这个事件以允许放置。如果拖拽数据不包含链接，则不取消事件，此位置也不允许放置。</p>\n<p>如果你希望更具体地限制操作类型，你可能还需要设置 <a href=\"/zh-CN/docs/Web/API/DataTransfer/effectAllowed\" title=\"effectAllowed\"><code>effectAllowed</code></a> 或 <a href=\"/zh-CN/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> 属性，或者两者都设置。当然，如果你不取消这个事件，改变这两个属性不会有任何效果。</p>"}},{"type":"prose","value":{"id":"放置反馈","title":"放置反馈","isH3":false,"content":"<p>有几种方法可以向用户表明哪个位置允许放置。鼠标指针将根据 <a href=\"/zh-CN/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> 属性的值做必要的更新。鼠标指针具体的外观取决于用户平台，典型的如加号图标会出现在 '<code>copy</code>' 中，而不允许放置时，会出现禁止放置的图标。在许多情况下，鼠标指针反馈就足够了。</p>\n<p>但是，你还可以根据需要更新用户界面，如添加一个插入标记或使用高亮显示。对于简单的高亮显示，你可以在放置目标上使用 <code>-moz-drag-over</code> CSS 伪类。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.droparea:-moz-drag-over</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>在这个例子中，当带有 <code>droparea</code> 类的元素是一个有效的放置目标时，即在该元素的 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code></code> 事件中调用 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> 方法时，元素会出现一个 1 像素的黑色轮廓。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 要使这个伪类生效，你必须在 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code></code> 事件中调用 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> 方法，因为这个伪类状态不会检查 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code></code> 事件（译者注：即在 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code></code> 事件中调用 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> 方法也不会使伪类生效，尽管这个伪类叫做“-moz-drag-over”）。</p>\n</div>\n<p>对于更复杂的视觉效果，你可以在 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code></code> 事件中执行其他操作。例如在放置位置插入一个元素，这样的元素可以表示一个插入标记，或表示被拖拽的元素移动到了新位置。为此你可以在 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code></code> 事件中创建一个新元素，然后将其插入到文档中。</p>\n<p><code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code></code> 事件在鼠标指向的元素上触发。自然，你可能需要将插入标记移动到事件发生的位置附近。你可以使用事件的 <a href=\"/zh-CN/docs/Web/API/MouseEvent/clientX\" title=\"clientX\"><code>clientX</code></a> 和 <a href=\"/zh-CN/docs/Web/API/MouseEvent/clientY\" title=\"clientY\"><code>clientY</code></a> 属性，还有其他鼠标事件的属性来确定鼠标的位置。</p>\n<p>最后，<code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragleave_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragleave (en-US)</a></code></code> 事件会在拖拽离开元素时在该元素上触发。这是移除插入标记或高亮的好时机。你不需要取消这个事件（译者注：即不需要使用 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> ）。使用 <code>-moz-drag-over</code> 伪类设置的高亮或其他视觉效果会被自动移除。即使拖拽被取消了，<code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragleave_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragleave (en-US)</a></code></code> 事件也会照常触发，所以你可以确保在这个事件中对任何插入标记的清除操作都一定可以完成。</p>"}},{"type":"prose","value":{"id":"执行放置","title":"执行放置","isH3":false,"content":"<p>当用户放开鼠标，拖放操作就会结束。</p>\n<p>如果在有效的放置目标元素（即取消了 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code></code> 或 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code></code> 的元素）上放开鼠标，放置会成功实现，<code><code><a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">drop (en-US)</a></code></code> 事件在目标元素上被触发。否则，拖拽会被取消，不会触发 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">drop (en-US)</a></code></code> 事件。</p>\n<p>在 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">drop (en-US)</a></code></code> 事件中，你应该取回放置的数据并将其插入到放置的位置。你可以使用 <a href=\"/zh-CN/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> 属性来确定需要哪种拖拽操作。</p>\n<p>在所有拖拽操作相关的事件中，事件的 <code><a href=\"/zh-CN/docs/Web/API/DragEvent/dataTransfer\" title=\"dataTransfer\"><code>dataTransfer</code></a></code> 属性会一直保存着拖拽数据。可使用 <a href=\"/zh-CN/docs/Web/API/DataTransfer/getData\" title=\"getData()\"><code>getData()</code></a> 方法来取回数据。</p>\n<pre class=\"notranslate\">function onDrop(event) {\n  const data = event.dataTransfer.getData(\"text/plain\");\n  event.target.textContent = data;\n  event.preventDefault();\n}\n</pre>\n<p><a href=\"/zh-CN/docs/Web/API/DataTransfer/getData\" title=\"getData()\"><code>getData()</code></a> 方法接收一个参数，取回数据的类型。这个方法会返回拖拽操作开始时调用 <a href=\"/zh-CN/docs/Web/API/DataTransfer/setData\" title=\"setData()\"><code>setData()</code></a> 方法设置的字符串值。如果不存在传入类型的数据，则会返回空字符串。自然，你应该知道哪种类型的数据可用，因为之前你应该已经在 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code></code> 事件中检查过数据类型了。</p>\n<p>在上面的例子中，我们一取回数据就把它作为文本内容插入到目标中。实际效果就是拖拽文本被插入到放置位置，假设放置目标是文本区域，例如 <code>p</code> 或 <code>div</code> 元素。</p>\n<p>在一个网页中，如果你想接收一个放置，不想让浏览器的默认处理程序处理放置数据，你应该调用事件的 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> 方法。例如，当拖拽一个链接到网页时，Firefox 会打开这个链接。而你可以通过取消事件来阻止这样的行为。</p>\n<p>你可以取回其他类型的数据。如果数据是一个链接，其类型应为 <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#link\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">text/uri-list (en-US)</a>。你可以将链接插入到内容中。</p>\n<pre class=\"notranslate\">function doDrop(event) {\n  const lines = event.dataTransfer.getData(\"text/uri-list\").split(\"\\n\");\n  lines.filter(line =&gt; !line.startsWith(\"#\"))\n    .forEach(line =&gt; {\n      const link = document.createElement(\"a\");\n      link.href = line;\n      link.textContent = line;\n      event.target.appendChild(link);\n    })\n  event.preventDefault();\n}\n</pre>\n<p>这个例子使用拖拽数据插入链接。顾名思义，<a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#link\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">text/uri-list (en-US)</a> 类型可包含一个 URL 列表，每行一个 URL。在上述代码中，我们使用 <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">split (en-US)</a> 方法将字符串按行分割，然后迭代列表的每一行，将每一个链接都插入到文档中。注意到我们跳过了井号（#）开头的链接，因为那些只是注释。</p>\n<p>在简单的情况中，你可以使用一个特别的类型 <code>URL</code> 来取回列表中第一个有效的 URL。例如：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> link <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"URL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>这样就不需要检查注释或者迭代每一行了。但这样就只能取回列表中的第一个 URL。</p>\n<p><code>URL</code> 类型是一个特别的类型，只作为简写类型，不在 <a href=\"/zh-CN/docs/Web/API/DataTransfer/types\" title=\"types\"><code>types</code></a> 属性规定的类型列表中出来。</p>\n<p>有时你可能支持不同的格式，而你希望取回数据的格式是支持格式中最具体的一种。在这个例子中，放置目标支持三种格式。</p>\n<p>下面的例子返回格式支持最佳的数据：</p>\n<pre class=\"notranslate\">function doDrop(event) {\n  const supportedTypes = [\"application/x-moz-file\", \"text/uri-list\", \"text/plain\"];\n  const types = event.dataTransfer.types.filter(type =&gt; supportedTypes.includes(type));\n  if (types.length) {\n    const data = event.dataTransfer.getData(types[0]);\n  }\n  event.preventDefault();\n}\n</pre>"}},{"type":"prose","value":{"id":"完成拖拽","title":"完成拖拽","isH3":false,"content":"<p>一旦拖拽完成，<code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragend (en-US)</a></code></code> 事件会在拖拽源头（即触发 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code></code> 的元素）上发生。无论拖拽是成功还是被取消，这个事件都会被触发。然而，你可以使用 <a href=\"/zh-CN/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> 属性来决定执行什么放置操作。</p>\n<p>如果在<code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragend (en-US)</a></code></code> 事件中，<a href=\"/zh-CN/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> 属性值为 <code>none</code>，则拖拽会被取消。否则，这个属性会规定需要执行什么操作。源头元素可使用这个信息以在拖拽操作完成后从原来的位置移除被拖拽的项目。<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DataTransfer/mozUserCancelled\"><code>mozUserCancelled</code> <small>(en-US)</small></a> 属性会在用户取消拖拽（按下 Esc 键）时设置为 true，在拖拽因为其他原因如无效放置目标等被取消时，或拖拽成功时，则设置为 false。</p>\n<p>放置可发生在同一窗口或另一个应用程序中。两种情况都会触发 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragend (en-US)</a></code></code> 事件。事件的 <a href=\"/zh-CN/docs/Web/API/MouseEvent/screenX\" title=\"screenX\"><code>screenX</code></a> 和 <a href=\"/zh-CN/docs/Web/API/MouseEvent/screenY\" title=\"screenY\"><code>screenY</code></a> 属性会被设置为放置发生时鼠标在屏幕上的坐标。</p>\n<p><code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragend (en-US)</a></code></code> 事件结束后，整个拖放操作就完成了。</p>\n<p>[1] 在 Gecko 内核中，如果源头节点在拖拽过程中（如放置或 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code> 中）被移动或移除了，则不会触发 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragend (en-US)</a></code> 事件。参见 <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=460801\" class=\"external\" rel=\" noopener\">bug 460801</a>。</p>"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/docs/Web/API/HTML_Drag_and_Drop_API\">HTML Drag and Drop API (Overview)</a></li>\n  <li><a href=\"/docs/Web/Guide/HTML/Dragging_and_Dropping_Multiple_Items\">Dragging and Dropping Multiple Items</a></li>\n  <li><a href=\"/docs/Web/Guide/HTML/Recommended_Drag_Types\">Recommended Drag Types</a></li>\n  <li><a href=\"https://html.spec.whatwg.org/multipage/interaction.html#dnd\" class=\"external\" rel=\" noopener\">HTML5 Living Standard: Drag and Drop</a></li>\n</ul>"}}],"toc":[{"text":"可拖拽（<code>draggable</code>）属性","id":"可拖拽（draggable）属性"},{"text":"开始拖拽操作","id":"开始拖拽操作"},{"text":"拖拽数据","id":"拖拽数据"},{"text":"设置拖拽反馈图像","id":"设置拖拽反馈图像"},{"text":"拖拽效果","id":"拖拽效果"},{"text":"指定放置目标","id":"指定放置目标"},{"text":"放置反馈","id":"放置反馈"},{"text":"执行放置","id":"执行放置"},{"text":"完成拖拽","id":"完成拖拽"},{"text":"参见","id":"参见"}],"summary":"本文描述了拖放操作中发生的步骤。","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Drag operations","locale":"en-US","native":"English (US)"},{"title":"Opérations de glissement","locale":"fr","native":"Français"},{"title":"ドラッグ操作","locale":"ja","native":"日本語"},{"title":"Drag Operations","locale":"ko","native":"한국어"},{"title":"Drag Operations","locale":"ru","native":"Русский"},{"title":"拖曳操作","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/html_drag_and_drop_api/drag_operations","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/html_drag_and_drop_api/drag_operations/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API","title":"HTML 拖放 API"},{"uri":"/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations","title":"拖拽操作"}],"pageTitle":"拖拽操作 - Web API 接口参考 | MDN","noIndexing":false}}