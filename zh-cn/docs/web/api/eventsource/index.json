{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"EventSource","mdn_url":"/zh-CN/docs/Web/API/EventSource","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/WebSockets_API\">Websockets API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/EventSource\"><code>EventSource</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventSource/EventSource\"><code>EventSource()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventSource/readyState\"><code>readyState</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventSource/url\"><code>url</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventSource/withCredentials\"><code>withCredentials</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventSource/close\"><code>close()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventSource/error_event\"><code>error</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventSource/message_event\"><code>message</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/EventSource/open_event\"><code>open</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Websockets API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/CloseEvent\"><code>CloseEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/WebSocket\"><code>WebSocket</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>EventSource</code></strong> 是服务器推送的一个网络事件接口。一个 EventSource 实例会对 HTTP 服务开启一个持久化的连接，以<code>text/event-stream</code> 格式发送事件，会一直保持开启直到被要求关闭。</p>\n<p>一旦连接开启，来自服务端传入的消息会以事件的形式分发至你代码中。如果接收消息中有一个事件字段，触发的事件与事件字段的值相同。如果没有事件字段存在，则将触发通用事件。</p>\n<p>与 <a href=\"/zh-CN/docs/Web/API/WebSockets_API\">WebSockets</a>,不同的是，服务端推送是单向的。数据信息被单向从服务端到客户端分发。当不需要以消息形式将数据从客户端发送到服务器时，这使它们成为绝佳的选择。例如，对于处理社交媒体状态更新，新闻提要或将数据传递到客户端存储机制（如 IndexedDB 或 Web 存储）之类的，EventSource 无疑是一个有效方案。</p>"}},{"type":"prose","value":{"id":"构造函数","title":"构造函数","isH3":false,"content":"<dl>\n  <dt id=\"eventsource\"><a href=\"/zh-CN/docs/Web/API/EventSource/EventSource\" title=\"EventSource()\"><code>EventSource()</code></a></dt>\n  <dd>\n    <p>以指定的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>USVString</code></a> 创建一个新的 <code>EventSource</code>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<p><em>此接口从其父接口 <a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a> 继承属性。</em></p>\n<dl>\n  <dt id=\"eventsource.onerror\"><a href=\"/zh-CN/docs/Web/API/EventSource/error_event\"><code>EventSource.onerror</code></a></dt>\n  <dd>\n    <p>是一个 <code><a href=\"/zh-CN/docs/Web/Reference/Events/Event_handlers\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">event handler</a></code>，当发生错误时被调用，并且在此对象上派发 <code><a href=\"/en-US/docs/Web/API/Element/error_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">error (en-US)</a></code> 事件。</p>\n  </dd>\n  <dt id=\"eventsource.onmessage_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventSource/message_event\"><code>EventSource.onmessage</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>是一个 <code><a href=\"/zh-CN/docs/Web/Reference/Events/Event_handlers\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">event handler</a></code>，当收到一个 <code><a href=\"/zh-CN/docs/Web/Reference/Events/message\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">message</a></code> 事件，即消息来自源头时被调用。</p>\n  </dd>\n  <dt id=\"eventsource.onopen\"><a href=\"/zh-CN/docs/Web/API/EventSource/open_event\"><code>EventSource.onopen</code></a></dt>\n  <dd>\n    <p>是一个 <code><a href=\"/zh-CN/docs/Web/Reference/Events/Event_handlers\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">event handler</a></code>，当收到一个 <code><a href=\"/zh-CN/docs/Web/Reference/Events/ open \" title=\"This is a link to an unwritten page\" class=\"page-not-created\"> open </a></code> 事件，即连接刚打开时被调用。</p>\n  </dd>\n  <dt id=\"eventsource.readystate_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventSource/readyState\"><code>EventSource.readyState</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>一个 <code>unsigned short</code> 值，代表连接状态。可能值是 <code>CONNECTING</code> (<code>0</code>), <code>OPEN</code> (<code>1</code>), 或者 <code>CLOSED</code> (<code>2</code>)。</p>\n  </dd>\n  <dt id=\"eventsource.url_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventSource/url\"><code>EventSource.url</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>一个<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>，代表事件源的 URL。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"事件接收器","title":"事件接收器","isH3":true,"content":"<dl>\n  <dt id=\"eventsource.onerror_2\"><a href=\"/zh-CN/docs/Web/API/EventSource/error_event\"><code>EventSource.onerror</code></a></dt>\n  <dd>\n    <p>Is an <code><a href=\"/zh-CN/docs/Web/Reference/Events/Event_handlers\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">event handler</a></code> called when an error occurs and the <a href=\"/zh-CN/docs/Web/API/EventSource/error_event\" title=\"error\"><code>error</code></a> event is dispatched on an <code>EventSource</code> object.</p>\n  </dd>\n  <dt id=\"eventsource.onmessage_en-us_2\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventSource/message_event\"><code>EventSource.onmessage</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Is an <code><a href=\"/zh-CN/docs/Web/Reference/Events/Event_handlers\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">event handler</a></code> called when a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventSource/message_event\"><code>message</code> <small>(en-US)</small></a> event is received, that is when a message is coming from the source.</p>\n  </dd>\n  <dt id=\"eventsource.onopen_2\"><a href=\"/zh-CN/docs/Web/API/EventSource/open_event\"><code>EventSource.onopen</code></a></dt>\n  <dd>\n    <p>Is an <code><a href=\"/zh-CN/docs/Web/Reference/Events/Event_handlers\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">event handler</a></code> called when an <a href=\"/zh-CN/docs/Web/API/EventSource/open_event\" title=\"open\"><code>open</code></a> event is received, that is when the connection was just opened.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<p><em>此接口从其父接口 <a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a> 继承方法。</em></p>\n<dl>\n  <dt id=\"eventsource.close\"><a href=\"/zh-CN/docs/Web/API/EventSource/close\"><code>EventSource.close()</code></a></dt>\n  <dd>\n    <p>如果存在，则关闭连接，并且设置 <code>readyState</code> 属性为 <code>CLOSED</code>。如果连接已经被关闭，此方法不会再进行任何操作。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"事件","title":"事件","isH3":false,"content":"<dl>\n  <dt id=\"error\"><a href=\"/zh-CN/docs/Web/API/EventSource/error_event\" title=\"error\"><code>error</code></a></dt>\n  <dd>\n    <p>Fired when a connection to an event source failed to open.</p>\n  </dd>\n  <dt id=\"message_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventSource/message_event\"><code>message</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Fired when data is received from an event source.</p>\n  </dd>\n  <dt id=\"open\"><a href=\"/zh-CN/docs/Web/API/EventSource/open_event\" title=\"open\"><code>open</code></a></dt>\n  <dd>\n    <p>Fired when a connection to an event source has opened.</p>\n  </dd>\n</dl>\n<p>Additionally, the event source itself may send messages with an event field, which will create ad-hoc events keyed to that value.</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>In this basic example, an <code>EventSource</code> is created to receive unnamed events from the server; a page with the name <code>sse.php</code> is responsible for generating the events.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> evtSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EventSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sse.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> eventList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nevtSource<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> newElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  newElement<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"message: \"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n  eventList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>newElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Each received event causes our <code>EventSource</code> object's <code>onmessage</code> event handler to be run. It, in turn, creates a new <a href=\"/zh-CN/docs/Web/HTML/Element/li\"><code>&lt;li&gt;</code></a> element and writes the message's data into it, then appends the new element to the list element already in the document.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> You can find a full example on GitHub — see <a href=\"https://github.com/mdn/dom-examples/tree/master/server-sent-events\" class=\"external\" rel=\" noopener\">Simple SSE demo using PHP.</a></p>\n</div>\n<p>To listen to named events, you'll require a listener for each type of event sent.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  <span class=\"token keyword\">const</span> sse <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EventSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/v1/sse'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/* This will listen only for events\n   * similar to the following:\n   *\n   * event: notice\n   * data: useful data\n   * id: someid\n   *\n   */</span>\n  sse<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"notice\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">/* Similarly, this will listen for events\n   * with the field `event: update`\n   */</span>\n  sse<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">/* The event \"message\" is a special case, as it\n   * will capture events without an event field\n   * as well as events that have the specific type\n   * `event: message` It will not trigger on any\n   * other event type.\n   */</span>\n  sse<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/server-sent-events.html#the-eventsource-interface","title":"HTML Standard"}],"query":"api.EventSource"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.EventSource","dataURL":"/zh-CN/docs/Web/API/EventSource/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Server-sent_events\">Server-sent events</a></li>\n  <li><a href=\"/zh-CN/Server-sent_events/Using_server-sent_events\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">使用 Server-sent events</a></li>\n</ul>"}}],"toc":[{"text":"构造函数","id":"构造函数"},{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"事件","id":"事件"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"EventSource 是服务器推送的一个网络事件接口。一个 EventSource 实例会对 HTTP 服务开启一个持久化的连接，以text/event-stream 格式发送事件，会一直保持开启直到被要求关闭。","popularity":0.0008,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"EventSource","locale":"en-US","native":"English (US)"},{"title":"EventSource","locale":"es","native":"Español"},{"title":"EventSource","locale":"fr","native":"Français"},{"title":"EventSource","locale":"ja","native":"日本語"},{"title":"EventSource","locale":"ko","native":"한국어"},{"title":"EventSource","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"EventSource","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/eventsource","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/eventsource/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/EventSource","title":"EventSource"}],"pageTitle":"EventSource - Web API 接口参考 | MDN","noIndexing":false}}