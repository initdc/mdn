{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"RTCPeerConnection","mdn_url":"/zh-CN/docs/Web/API/RTCPeerConnection","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/RTCPeerConnection\"><code>RTCPeerConnection()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/canTrickleIceCandidates\"><code>canTrickleIceCandidates</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/connectionState\"><code>connectionState</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/currentLocalDescription\"><code>currentLocalDescription</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/currentRemoteDescription\"><code>currentRemoteDescription</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/iceConnectionState\"><code>iceConnectionState</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/iceGatheringState\"><code>iceGatheringState</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/localDescription\"><code>localDescription</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/peerIdentity\"><code>peerIdentity</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/pendingLocalDescription\"><code>pendingLocalDescription</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/pendingRemoteDescription\"><code>pendingRemoteDescription</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/remoteDescription\"><code>remoteDescription</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/sctp\"><code>sctp</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addIceCandidate\"><code>addIceCandidate()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/addStream\"><code>addStream()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addTrack\"><code>addTrack()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/addTransceiver\"><code>addTransceiver()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/close\"><code>close()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/createAnswer\"><code>createAnswer()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/createDataChannel\"><code>createDataChannel()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/createOffer\"><code>createOffer()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/generateCertificate\"><code>generateCertificate() static function</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getConfiguration\"><code>getConfiguration()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getIdentityAssertion\"><code>getIdentityAssertion()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/getReceivers\"><code>getReceivers()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getSenders\"><code>getSenders()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getStats\"><code>getStats()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getStreamById\"><code>getStreamById()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getTransceivers\"><code>getTransceivers()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/removeStream\"><code>removeStream()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/removeTrack\"><code>removeTrack()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/restartIce\"><code>restartIce()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/setConfiguration\"><code>setConfiguration()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/setIdentityProvider\"><code>setIdentityProvider()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription\"><code>setLocalDescription()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/setRemoteDescription\"><code>setRemoteDescription()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addstream_event\"><code>addstream</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/connectionstatechange_event\"><code>connectionstatechange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/datachannel_event\"><code>datachannel</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/icecandidate_event\"><code>icecandidate</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/icecandidateerror_event\"><code>icecandidateerror</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event\"><code>iceconnectionstatechange</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\"><code>icegatheringstatechange</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event\"><code>negotiationneeded</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/removestream_event\"><code>removestream</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingstatechange_event\"><code>signalingstatechange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/track_event\"><code>track</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p><strong><code>RTCPeerConnection</code></strong> 接口代表一个由本地计算机到远端的 WebRTC 连接。该接口提供了创建，保持，监控，关闭连接的方法的实现。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> <code>RTCPeerConnection</code> 和<a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> 是很多浏览器中使用的名称。强烈建议使用补充库，例如强大并且被广泛支持的<a href=\"https://github.com/webrtcHacks/adapter\" class=\"external\" rel=\" noopener\">Adapter.js</a>，以确保您网站或 Web 应用程序的兼容性。值得注意的是<a href=\"https://github.com/webrtcHacks/adapter\" class=\"external\" rel=\" noopener\">Adapter.js</a>不仅仅提供这些，它还做了一些其他补充以增强 WebRTC 在浏览器中的兼容性。参考：</p>\n  <pre class=\"notranslate\">var PeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\nvar SessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.webkitRTCSessionDescription;\nvar GET_USER_MEDIA = navigator.getUserMedia ? \"getUserMedia\" :\n                     navigator.mozGetUserMedia ? \"mozGetUserMedia\" :\n                     navigator.webkitGetUserMedia ? \"webkitGetUserMedia\" : \"getUserMedia\";\nvar v = document.createElement(\"video\");\nvar SRC_OBJECT = 'srcObject' in v ? \"srcObject\" :\n                 'mozSrcObject' in v ? \"mozSrcObject\" :\n                 'webkitSrcObject' in v ? \"webkitSrcObject\" : \"srcObject\";\n</pre>\n</div>\n<p>由于 RTCPeerConnection 实现了 <a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a> 接口，故其可以接收处理事件。</p>"}},{"type":"prose","value":{"id":"构造函数","title":"构造函数","isH3":true,"content":"<dl>\n  <dt id=\"rtcpeerconnection.rtcpeerconnection\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/RTCPeerConnection\"><code>RTCPeerConnection.RTCPeerConnection()</code></a></dt>\n  <dd>\n    <p>构造函数;创建一个新的 RTCPeerConnection 对象。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":true,"content":"<p><em>该接口的属性继承了其父接口，<a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"rtcpeerconnection.cantrickleicecandidates\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/canTrickleIceCandidates\"><code>RTCPeerConnection.canTrickleIceCandidates</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p><code>如果远端支持 UDP 打洞或支持通过中继服务器连接，则该属性值为 true。否则，为 false。该属性的值依赖于远端设置且仅在本地的</code> <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/setRemoteDescription\"><code>RTCPeerConnection.setRemoteDescription()</code></a>方法被调用时有效，如果该方法没被调用，则其值为 null.</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.connectionstate\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/connectionState\"><code>RTCPeerConnection.connectionState</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>只读 connectionState 属性通过返回由枚举 RTCPeerConnectionState 指定的字符串值之一来指示对等连接的当前状态。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.currentlocaldescription\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/currentLocalDescription\"><code>RTCPeerConnection.currentLocalDescription</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>只读属性 RTCPeerConnection.currentLocalDescription 返回一个描述连接本地端的 RTCSessionDescription 对象，因为自上次 RTCPeerConnection 完成协商并连接到远程对等体之后，它最近成功协商。 还包括可能已经由 ICE 代理生成的任何 ICE 候选者的列表，因为首先被描述的描述所表示的要约或答案。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.currentremotedescription_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/currentRemoteDescription\"><code>RTCPeerConnection.currentRemoteDescription</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>只读属性 RTCPeerConnection.currentRemoteDescription 返回一个 RTCSessionDescription 对象，描述连接的远程端，因为最近一次 RTCPeerConnection 完成协商并连接到远程对等体后最近成功协商。 还包括可能已经由 ICE 代理生成的任何 ICE 候选者的列表，因为首先被描述的描述所表示的要约或答案。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.defaulticeservers\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnection.defaultIceServers</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>只读属性 RTCPeerConnection.defaultIceServers 根据 RTCIceServer 字典返回一个对象数组，该字典指示如果在 RTCConfiguration 中没有提供给 RTCPeerConnection 的默认情况下，浏览器将使用 ICE 服务器。 然而，浏览器根本不需要提供任何默认的 ICE 服务器。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.iceconnectionstate\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/iceConnectionState\"><code>RTCPeerConnection.iceConnectionState</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>只读属性 RTCPeerConnection.iceConnectionState 返回与 RTCPeerConnection 关联的 ICE 代理的状态类型为 RTCIceConnectionState 的枚举。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.icegatheringstate\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/iceGatheringState\"><code>RTCPeerConnection.iceGatheringState</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>只读属性，返回一个 RTCIceGatheringState 类型的结构体，它描述了连接的 ICE 收集状态</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.idploginurl\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnection.idpLoginUrl</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>blah</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.localdescription_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/localDescription\"><code>RTCPeerConnection.localDescription</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>只读属性，返回一个 <a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> ，它描述了这条连接的本地端的会话控制（用户会话所需的属性以及配置信息）。如果本地的会话控制还没有被设置，它的值就会是 null。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.peeridentity\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/peerIdentity\"><code>RTCPeerConnection.peerIdentity</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>只读属性，返回一个 <code>RTCIdentityAssertion</code>，它由一组信息构成，包括一个域名（idp）以及一个名称（name），它们代表了这条连接的远端机器的身份识别信息。如果远端机器还没有被设置以及校验，这个属性会返回一个 <code>null</code> 值。一旦被设置，它不能被一般方法改变。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.pendinglocaldescription_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/pendingLocalDescription\"><code>RTCPeerConnection.pendingLocalDescription</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>blah</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.pendingremotedescription_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/pendingRemoteDescription\"><code>RTCPeerConnection.pendingRemoteDescription</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>blah</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.remotedescription\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/remoteDescription\"><code>RTCPeerConnection.remoteDescription</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>blah</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.sctp_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/sctp\"><code>RTCPeerConnection.sctp</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>blah</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.signalingstate_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingState\"><code>RTCPeerConnection.signalingState</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个 RTC 通信状态的结构体，这个结构体描述了本地连接的通信状态。这个 状态描述了一个定义连接配置的 SDP offer。它包含了下列信息，与<a href=\"/zh-CN/docs/Web/API/MediaStream\"><code>MediaStream</code></a> 类型本地相关的对象的描述，媒体流编码方式或 RTP 和 RTCP 协议的选项 ，以及被 ICE 服务器收集到的 candidates(连接候选者)。当<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingState\"><code>RTCPeerConnection.signalingState</code> <small>(en-US)</small></a>的值改变时，对象上的<code><a href=\"/zh-CN/docs/Web/Reference/Events/signalingstatechange\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">signalingstatechange</a></code>事件会被触发。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"基本用法","title":"基本用法","isH3":true,"content":"<p>一个基本的 RTCPeerConnection 使用需要协调本地机器以及远端机器的连接，它可以通过在两台机器间生成 Session Description 的数据交换协议来实现。呼叫方发送一个 offer(请求)，被呼叫方发出一个 answer（应答）来回答请求。双方 - 呼叫方以及被呼叫方，最开始的时候都要建立他们各自的 RTCPeerConnection 对象。</p>\n<pre class=\"notranslate\">var pc = new RTCPeerConnection();\npc.onaddstream = function(obj) {\n  var vid = document.createElement(\"video\");\n  document.appendChild(vid);\n  vid.srcObject = obj.stream;\n}\n\n// Helper functions\nfunction endCall() {\n  var videos = document.getElementsByTagName(\"video\");\n  for (var i = 0; i &lt; videos.length; i++) {\n    videos[i].pause();\n  }\n\n  pc.close();\n}\n\nfunction error(err) { endCall(); }\n</pre>\n<p>呼叫初始化</p>\n<p>如果你是呼叫方，你需要初始化一个连接</p>\n<pre class=\"notranslate\">// Get a list of friends from a server\n// User selects a friend to start a peer connection with\nnavigator.getUserMedia({video: true}, function(stream) {\n  pc.onaddstream({stream: stream});\n  // Adding a local stream won't trigger the onaddstream callback\n  pc.addStream(stream);\n\n  pc.createOffer(function(offer) {\n    pc.setLocalDescription(new RTCSessionDescription(offer), function() {\n      // send the offer to a server to be forwarded to the friend you're calling.\n    }, error);\n  }, error);\n})\n</pre>\n<p>呼叫回答</p>\n<p>在另一端，你的朋友会从服务器收到 offer 信息。</p>\n<pre class=\"notranslate\">var offer = getOfferFromFriend();\nnavigator.getUserMedia({video: true}, function(stream) {\n  pc.onaddstream({stream: stream});\n  pc.addStream(stream);\n\n  pc.setRemoteDescription(new RTCSessionDescription(offer), function() {\n    pc.createAnswer(function(answer) {\n      pc.setLocalDescription(new RTCSessionDescription(answer), function() {\n        // send the answer to a server to be forwarded back to the caller (you)\n      }, error);\n    }, error);\n  }, error);\n})\n</pre>\n<p>处理应答</p>\n<p>同时在呼叫发起方，你会收到这个应答（前面被呼叫方发出的 answer），你需要将它设置为你的远端连接。</p>\n<pre class=\"notranslate\">// pc was set up earlier when we made the original offer\nvar offer = getResponseFromFriend();\npc.setRemoteDescription(new RTCSessionDescription(offer), function() { }, error);\n</pre>"}},{"type":"prose","value":{"id":"属性_2","title":"属性","isH3":false,"content":"<p><em>这个接口从它的父元素中继承属性，<a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"rtcpeerconnection.iceconnectionstate_2\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/iceConnectionState\"><code>RTCPeerConnection.iceConnectionState</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个 RTCIceConnectionState 类型的结构体，这个结构体描述了连接的 ICE 连接状态。当这个状态的值改变时，这个对象会触发一个<code><a href=\"/zh-CN/docs/Web/Reference/Events/iceconnectionstatechange\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">iceconnectionstatechange</a></code> 事件。状态可能存在的值如下：</p>\n    <ul>\n      <li>\"new\": ICE 服务器正在收集地址或正在等待远端的 candidates(这两种情况可能同时存在)。</li>\n      <li><code>\"checking\"</code>: ICE 服务器找到了远端的 candidates（连接候选者）,这些 candidates 至少有一个，同时 ICE 服务器在检测这些 candidates，尽管它可能还没有找到连接。此刻，ICE 服务器可能仍在收集 candidates（连接候选者）。</li>\n      <li><code>\"connected\"</code>: ICE 服务器已经找到了一条可用的适合所有组件的连接，但它仍然在测试更多的远端 candidate 以提供更好的连接。同时，ICE 服务器可能仍在收集 candidates。</li>\n      <li><code>\"completed\"</code>: ICE 服务器已经找到了一条可用的连接，并不再测试远端 candidates。</li>\n      <li><code>\"failed\"</code>: ICE 服务器已经检测了所有的远端 candidates，但并没有找到可用的。对一些组件适用的连接可能已经被找到。</li>\n      <li><code>\"disconnected\"</code>: 至少一个组件的活跃度检查失败了，这可能是由糟糕的网络环境造成的一个短期状态，它可以被它自身所修复。</li>\n      <li><code>\"closed\"</code>: ICE 服务器已经关闭，并不再响应请求。</li>\n    </ul>\n  </dd>\n  <dt id=\"rtcpeerconnection.icegatheringstate_2\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/iceGatheringState\"><code>RTCPeerConnection.iceGatheringState</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个 iceGatheringState 类型的结构体，它描述了这条连接的 ICE 收集状态。该状态可能取以下的值：</p>\n    <ul>\n      <li><code>\"new\"</code>: 对象刚刚被创建，还没有网络化。</li>\n      <li><code>\"gathering\"</code>: ICE 引擎正在为连接收集 candidates(连接候选者)。</li>\n      <li><code>\"complete\"</code>: 引擎已经完成了 candidates 收集。但像添加一个新的接口或者一个新的 turn 服务器这些事件会导致状态回到\"gathering\"。</li>\n    </ul>\n  </dd>\n  <dt id=\"rtcpeerconnection.localdescription_en-us_2\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/localDescription\"><code>RTCPeerConnection.localDescription</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个 <a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> ，它描述了这条连接的本地端的会话控制（用户会话所需的属性以及配置信息）。如果本地的会话控制还没有被设置，它的值就会是 null。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.peeridentity_2\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/peerIdentity\"><code>RTCPeerConnection.peerIdentity</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个<code>RTCIdentityAssertion，它由一组信息构成，包括一个域名（idp）以及一个名称（name），它们代表了这条连接的远端机器的身份识别信息。如果远端机器还没有被设置以及校验，这个属性会返回一个 null 值。一旦被设置，它不能被一般方法改变</code>。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.remotedescription_2\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/remoteDescription\"><code>RTCPeerConnection.remoteDescription</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个 <a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> 它描述了这条连接的远端机器的会话控制，如果远端机器还未被设置，它的值会是 null。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.signalingstate_en-us_2\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingState\"><code>RTCPeerConnection.signalingState</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个 RTC 通信状态的结构体，这个结构体描述了本地连接的通信状态。这个 状态描述了一个定义连接配置的 SDP offer。它包含了下列信息，与<a href=\"/zh-CN/docs/Web/API/MediaStream\"><code>MediaStream</code></a> 类型本地相关的对象的描述，媒体流编码方式或 RTP 和 RTCP 协议的选项 ，以及被 ICE 服务器收集到的 candidates(连接候选者)。当<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingState\"><code>RTCPeerConnection.signalingState</code> <small>(en-US)</small></a>的值改变时，对象上的<code><a href=\"/zh-CN/docs/Web/Reference/Events/signalingstatechange\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">signalingstatechange</a></code>事件会被触发。 它可能取下列的值：</p>\n    <ul>\n      <li><code>\"stable\"</code>: 没有 SDP offer/answer 正在被交换，连接仍然处于初始化状态。</li>\n      <li><code>\"have-local-offer\"</code>: 这条连接的本地端机器已经本地应用了一个 SDP offer。</li>\n      <li><code>\"have-remote-offer\"</code>: 这条连接的远端机器已经本地应用了一个 SDP offer。</li>\n      <li><code>\"have-local-pranswer\"</code>: 一个来自远端的 SDP offer 已经被应用，同时一个 SDP pranswer 在本地被应用。</li>\n      <li><code>\"have-remote-pranswer\"</code>：一个本地的 SDP offer 被应用，同时一个 SDP pranswer 在远端被应用。</li>\n      <li><code>\"closed\"</code>: 连接被关闭。</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"事件处理器","title":"事件处理器","isH3":true,"content":"<dl>\n  <dt id=\"rtcpeerconnection.onaddstream\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addstream_event\"><code>RTCPeerConnection.onaddstream</code></a></dt>\n  <dd>\n    <p>是收到<code><a href=\"/zh-CN/docs/Web/Reference/Events/addstream\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">addstream</a></code> 事件时调用的事件处理器。 Such an event is 当<a href=\"/zh-CN/docs/Web/API/MediaStream\"><code>MediaStream</code></a> 被远端机器添加到这条连接时，该事件会被触发。 当调用<a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/setRemoteDescription\"><code>RTCPeerConnection.setRemoteDescription()</code></a>方法时，这个事件就会被立即触发，它不会等待 SDP 协商的结果。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.ondatachannel\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/datachannel_event\"><code>RTCPeerConnection.ondatachannel</code></a></dt>\n  <dd>\n    <p>是收到<code><a href=\"/zh-CN/docs/Web/Reference/Events/datachannel\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">datachannel</a></code> 事件时调用的事件处理器。 当一个 <a href=\"/zh-CN/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> 被添加到连接时，这个事件被触发。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.onicecandidate\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/icecandidate_event\"><code>RTCPeerConnection.onicecandidate</code></a></dt>\n  <dd>\n    <p>是收到 <code><a href=\"/zh-CN/docs/Web/Reference/Events/icecandidate\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">icecandidate</a></code> 事件时调用的事件处理器.。当一个 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCICECandidate</code> <small>(en-US)</small></a> 对象被添加时，这个事件被触发。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.oniceconnectionstatechange_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event\"><code>RTCPeerConnection.oniceconnectionstatechange</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>是收到<code><a href=\"/zh-CN/docs/Web/Reference/Events/iceconnectionstatechange\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">iceconnectionstatechange</a></code>事件时调用的事件处理器 。 当<a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/iceConnectionState\" title=\"iceConnectionState\"><code>iceConnectionState</code></a> 改变时，这个事件被触发。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.onidentityresult\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnection.onidentityresult</code></a></dt>\n  <dd>\n    <p>是收到 <code><a href=\"/zh-CN/docs/Web/Reference/Events/identityresult\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">identityresult</a></code>事件时调用的事件处理器。 当通过<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getIdentityAssertion\"><code>getIdentityAssertion()</code> <small>(en-US)</small></a>生成身份断言，或在生成一个 answer 或一个 offer 的过程中，这个事件被触发。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.onidpassertionerror\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnection.onidpassertionerror</code></a></dt>\n  <dd>\n    <p>是收到 <code><a href=\"/zh-CN/docs/Web/Reference/Events/idpassertionerror\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">idpassertionerror</a></code> 事件时调用的事件处理器。当生成一个身份断言时，如果关联的身份提供者（idP）遇到一个错误，这个事件就会被触发。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.onidpvalidationerror\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnection.onidpvalidationerror</code></a></dt>\n  <dd>\n    <p>是收到 <code><a href=\"/zh-CN/docs/Web/Reference/Events/idpvalidationerror\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">idpvalidationerror</a></code> 事件时调用的事件处理器。当检查 一个身份断言时，如果关联的身份提供者（idP）遇到一个错误，这个事件就会被触发。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.onnegotiationneeded_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event\"><code>RTCPeerConnection.onnegotiationneeded</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>是收到<code><a href=\"/zh-CN/docs/Web/Reference/Events/negotiationneeded\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">negotiationneeded</a></code> 事件时调用的事件处理器， 浏览器发送该事件以告知在将来某一时刻需要协商。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.onpeeridentity\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnection.onpeeridentity</code></a></dt>\n  <dd>\n    <p>是收到<code><a href=\"/zh-CN/docs/Web/Reference/Events/peeridentity\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">peeridentity</a></code> 事件时调用的事件处理器，当一条连接的 peer identify 被设置以及校验后，该事件被触发</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.onremovestream_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/removestream_event\"><code>RTCPeerConnection.onremovestream</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>是收到<code><a href=\"/zh-CN/docs/Web/Reference/Events/removestream\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">removestream</a></code> 事件时调用的事件处理器，当一条<a href=\"/zh-CN/docs/Web/API/MediaStream\"><code>MediaStream</code></a> 从连接上移除时，该事件被触发。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.onsignalingstatechange_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingstatechange_event\"><code>RTCPeerConnection.onsignalingstatechange</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>是收到<code><a href=\"/zh-CN/docs/Web/Reference/Events/signalingstatechange\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">signalingstatechange</a></code> 事件时调用的事件处理器，当<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code> <small>(en-US)</small></a>的值发生改变时，该事件被触发。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"rtcpeerconnection\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/RTCPeerConnection\" title=\"RTCPeerConnection()\"><code>RTCPeerConnection()</code></a></dt>\n  <dd>\n    <p>RTCPeerConnection 的初始化函数，通过 new RTCPeerConnection() 初始化一个 RTCPeerConnection 实例。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.createoffer\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/createOffer\"><code>RTCPeerConnection.createOffer()</code></a></dt>\n  <dd>\n    <p>生成一个 offer，它是一个带有特定的配置信息寻找远端匹配机器（peer）的请求。这个方法的前两个参数分别是方法调用成功以及失败的回调函数，可选的第三个参数是用户对视频流以及音频流的定制选项（一个对象）。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.createanswer_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/createAnswer\"><code>RTCPeerConnection.createAnswer()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>在协调一条连接中的两端 offer/answers 时，根据从远端发来的 offer 生成一个 answer。这个方法的前两个参数分别是方法调用成功以及失败时的回调函数，可选的第三个参数是生成的 answer 的可供选项。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.setlocaldescription_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription\"><code>RTCPeerConnection.setLocalDescription()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>改变与连接相关的本地描述。这个描述定义了连接的属性，例如：连接的编码方式。连接会受到它的改变的影响，而且连接必须能同时支持新的以及旧的描述。这个方法可以接收三个参数，一个<a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> 对象包含设置信息，还有两个回调函数，它们分别是方法调用成功以及失败的回调函数。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.setremotedescription\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/setRemoteDescription\"><code>RTCPeerConnection.setRemoteDescription()</code></a></dt>\n  <dd>\n    <p>改变与连接相关的远端描述。这个描述定义了连接的属性，例如：连接的编码方式。连接会受到它的改变的影响，而且连接必须能同时支持新的以及旧的描述。这个方法可以接收三个参数，一个<a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> 对象包含设置信息，还有两个回调函数，它们分别是方法调用成功以及失败的回调函数。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.updateice\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnection.updateIce()</code></a></dt>\n  <dd>\n    <p>更新 ICE 服务器时调用的方法。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.addicecandidate\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addIceCandidate\"><code>RTCPeerConnection.addIceCandidate()</code></a></dt>\n  <dd>\n    <p>添加 iceCandidate 时调用的方法。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.getconfiguration_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getConfiguration\"><code>RTCPeerConnection.getConfiguration()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>获取配置信息时调用的方法。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.getlocalstreams_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getSenders\"><code>RTCPeerConnection.getLocalStreams()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>返回连接的本地媒体流数组。这个数组可能是空数组。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.getremotestreams_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getReceivers\"><code>RTCPeerConnection.getRemoteStreams()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>返回连接的远端媒体流数组。这个数组可能是空数组。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.getstreambyid_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getStreamById\"><code>RTCPeerConnection.getStreamById()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>返回连接中与所给 id 匹配的媒体流 <a href=\"/zh-CN/docs/Web/API/MediaStream\"><code>MediaStream</code></a>，如果没有匹配项，返回 null。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.addstream_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/addStream\"><code>RTCPeerConnection.addStream()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>添加一个媒体流 <a href=\"/zh-CN/docs/Web/API/MediaStream\"><code>MediaStream</code></a>作为本地音频或视频源。如果本地端与远端协调已经发生了，那么需要一个新的媒体流，这样远端才可以使用它。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.removestream\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/removeStream\"><code>RTCPeerConnection.removeStream()</code></a></dt>\n  <dd>\n    <p>将一个作为本地音频或视频源的媒体流 <a href=\"/zh-CN/docs/Web/API/MediaStream\"><code>MediaStream</code></a>移除。如果本地端与远端协调已经发生了，那么需要一个新的媒体流，这样远端才可以停止使用它。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.close_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/close\"><code>RTCPeerConnection.close()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>关闭一个 RTCPeerConnection 实例所调用的方法。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.createdatachannel\"><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/createDataChannel\"><code>RTCPeerConnection.createDataChannel()</code></a></dt>\n  <dd>\n    <p>在一条连接上建立一个新的<a href=\"/zh-CN/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>（用于数据发送）。这个方法把一个数据对象作为参数，数据对象中包含必要的配置信息。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.createdtmfsender\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnection.createDTMFSender()</code></a></dt>\n  <dd>\n    <p>创建一个新的与特殊的<a href=\"/zh-CN/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>相关的<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code> <small>(en-US)</small></a>，可以在连接上发送<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/DTMF\">DTMF <small>(en-US)</small></a>手机信号。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.getstats_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getStats\"><code>RTCPeerConnection.getStats()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>生成一个新的<a href=\"/zh-CN/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a>，它包含连接相关的统计信息。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.setidentityprovider_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/setIdentityProvider\"><code>RTCPeerConnection.setIdentityProvider()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>根据所给的三个参数设置身份提供者（IdP)，这三个参数是它的名称，通信所使用的协议（可选），以及一个可选的用户名。只有当一个断言被需要时，这个 IdP 才会被使用。</p>\n  </dd>\n  <dt id=\"rtcpeerconnection.getidentityassertion_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getIdentityAssertion\"><code>RTCPeerConnection.getIdentityAssertion()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>初始化身份断言的收集，只有当<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code> <small>(en-US)</small></a>的值不为\"closed\"时，它才有效。它自动完成，在需求发生前调用它是最好的选择。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"构造函数_2","title":"构造函数","isH3":true,"content":"<pre class=\"notranslate\">new RTCPeerConnection(<a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/RTCPeerConnection\"><code>RTCConfiguration</code></a> configuration, optional <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>MediaConstraints</code></a> constraints);\n</pre>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> PeerConnection 需要传递一个 RTCConfiguration 对象作为参数，如果你没有传递参数的话，火狐浏览器会自动提供一个参数。</p>\n</div>"}},{"type":"prose","value":{"id":"方法_2","title":"方法","isH3":false,"content":""}},{"type":"prose","value":{"id":"createoffer","title":"createOffer","isH3":true,"content":"<p><code>void createOffer(<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCSessionDescriptionCallback</code></a> successCallback, <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnectionErrorCallback</code></a> failureCallback, optional <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>MediaConstraints</code></a> constraints);</code></p>\n<p>createOffer 方法会生成描述信息的一个 blob 对象，它会帮助连接到本地机器。当你已经找到一个远端的 PeerConnection 并且打算设置建立本地的 PeerConnection 时，你可以使用该方法。</p>\n<h4 id=\"举例\">举例</h4>\n<pre class=\"notranslate\">var pc = new PeerConnection();\npc.addStream(video);\npc.createOffer(function(desc){\n  pc.setLocalDescription(desc, function() {\n    // send the offer to a server that can negotiate with a remote client\n  });\n}\n</pre>\n<h4 id=\"参数\">参数</h4>\n<dl>\n  <dt id=\"successcallback（方法调用成功时的回调函数）\">successCallback（方法调用成功时的回调函数）</dt>\n  <dd>\n    <p>一个 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCSessionDescriptionCallback</code></a> 它会收到一个 <a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> 对象作为参数。</p>\n  </dd>\n  <dt id=\"errorcallback（方法调用失败时的回调函数）\">errorCallback（方法调用失败时的回调函数）</dt>\n  <dd>\n    <p>一个 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnectionErrorCallback</code></a> 它会收到一个 <a href=\"/zh-CN/docs/Web/API/DOMError\"><code>DOMError</code></a> 对象作为参数。</p>\n  </dd>\n  <dt id=\"optional_constraints可选的约束条件\">[optional] constraints(可选的约束条件)</dt>\n  <dd>\n    <p>一个可选的<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>MediaConstraints</code></a> 对象。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"createanswer","title":"createAnswer","isH3":true,"content":"<p><code>void createAnswer(<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCSessionDescriptionCallback</code></a> successCallback, <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnectionErrorCallback</code></a> failureCallback, optional <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>MediaConstraints</code></a> constraints)\")</code></p>\n<p>对从远方收到的 offer 进行回答。</p>\n<h4 id=\"举例_2\">举例</h4>\n<pre class=\"notranslate\">var pc = new PeerConnection();\npc.setRemoteDescription(new RTCSessionDescription(offer), function() {\n  pc.createAnswer(function(answer) {\n    pc.setLocalDescription(answer, function() {\n      // send the answer to the remote connection\n    })\n  })\n});\n</pre>\n<h4 id=\"参数_2\">参数</h4>\n<dl>\n  <dt id=\"successcallback（方法调用成功时的回调函数）_2\">successCallback（方法调用成功时的回调函数）</dt>\n  <dd>\n    <p>一个 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCSessionDescriptionCallback</code></a> 它会收到一个 <a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> 对象作为参数。</p>\n  </dd>\n  <dt id=\"errorcallback（方法调用失败时的回调函数）_2\">errorCallback（方法调用失败时的回调函数）</dt>\n  <dd>\n    <p>一个 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnectionErrorCallback</code></a> 它会收到一个<a href=\"/zh-CN/docs/Web/API/DOMError\"><code>DOMError</code></a> 对象作为参数。</p>\n  </dd>\n  <dt id=\"optional_constraints（可选的约束条件）\">[optional] constraints（可选的约束条件）</dt>\n  <dd>\n    <p>一个可选的<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>MediaConstraints</code></a> 对象。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"updateice","title":"updateIce()","isH3":true,"content":"<p>updateIce(optional <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/RTCPeerConnection\"><code>RTCConfiguration</code></a> configuration, optional <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>MediaConstraints</code></a> constraints)</p>\n<p>该方法会更新 ICE 代理收集本地 candidates 以及连接云端 candidates 的进程。如果强制约束条件\"IceTransports\"存在，那么它会控制 ICE 代理的工作方式。它可以用于限制接听者对 TURN candidates 的使用，这样可以避免在请求被应答前泄露位置信息。如果这个方法影响了已经建立的连接，那么它可能导致 ICE 代理状态的改变以及媒体状态的改变。</p>\n<h4 id=\"举例_3\">举例</h4>"}},{"type":"prose","value":{"id":"addicecandidate","title":"addIceCandidate()","isH3":true,"content":"<p>addIceCandidate (<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code> <small>(en-US)</small></a> candidate, <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Function</code></a> successCallback, <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnectionErrorCallback</code></a> failureCallback);</p>\n<p>除了被添加到远端描述之外，只要约束条件\"IceTransports\" 没有被设置为 null，连接检测结果会被发送给新的 candidates。如果这个方法影响了已经建立的连接，那么它可能导致 ICE 代理状态的改变以及媒体状态的改变。</p>\n<h4 id=\"举例_4\">举例</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>pc<span class=\"token punctuation\">.</span><span class=\"token function\">addIceCandidate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RTCIceCandidate</span><span class=\"token punctuation\">(</span>candidate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"createdatachannel","title":"createDataChannel","isH3":true,"content":"<p><code><a href=\"/zh-CN/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> createDataChannel (<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> label, optional <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCDataChannelInit</code></a> dataChannelDict);</code></p>\n<p>通过 peerconnection 建立一条数据信道，用于发送非视频音频信息。</p>\n<h4 id=\"例子\">例子</h4>\n<pre class=\"notranslate\">var pc = new PeerConnection();\nvar channel = pc.createDataChannel(\"Mydata\");\nchannel.onopen = function(event) {\n  channel.send('sending a message');\n}\nchannel.onmessage = function(event) { console.log(event.data); }\n</pre>"}},{"type":"prose","value":{"id":"引申阅读","title":"引申阅读","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/jesup/nightly-gupshup/blob/master/static/js/chat.js\" class=\"external\" rel=\" noopener\">https://github.com/jesup/nightly-gupshup/blob/master/static/js/chat.js</a></li>\n  <li><a href=\"https://www.html5rocks.com/en/tutorials/webrtc/basics/#toc-simple\" class=\"external\" rel=\" noopener\">http://www.html5rocks.com/en/tutorials/webrtc/basics/#toc-simple</a></li>\n  <li><a href=\"https://dev.w3.org/2011/webrtc/editor/webrtc.html\" class=\"external\" rel=\" noopener\">http://dev.w3.org/2011/webrtc/editor/webrtc.html</a></li>\n</ul>"}}],"toc":[{"text":"属性","id":"属性_2"},{"text":"方法","id":"方法"},{"text":"方法","id":"方法_2"},{"text":"引申阅读","id":"引申阅读"}],"summary":"RTCPeerConnection 接口代表一个由本地计算机到远端的 WebRTC 连接。该接口提供了创建，保持，监控，关闭连接的方法的实现。","popularity":0.0011,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"RTCPeerConnection","locale":"en-US","native":"English (US)"},{"title":"RTCPeerConnection","locale":"es","native":"Español"},{"title":"RTCPeerConnection","locale":"fr","native":"Français"},{"title":"RTCPeerConnection","locale":"ja","native":"日本語"},{"title":"RTCPeerConnection","locale":"ko","native":"한국어"},{"title":"RTCPeerConnection","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Интерфейс RTCPeerConnection","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/rtcpeerconnection","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/rtcpeerconnection/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/RTCPeerConnection","title":"RTCPeerConnection"}],"pageTitle":"RTCPeerConnection - Web API 接口参考 | MDN","noIndexing":false}}