{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"RTCPeerConnection.createOffer()","mdn_url":"/zh-CN/docs/Web/API/RTCPeerConnection/createOffer","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/RTCPeerConnection\"><code>RTCPeerConnection()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/canTrickleIceCandidates\"><code>canTrickleIceCandidates</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/connectionState\"><code>connectionState</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/currentLocalDescription\"><code>currentLocalDescription</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/currentRemoteDescription\"><code>currentRemoteDescription</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/iceConnectionState\"><code>iceConnectionState</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/iceGatheringState\"><code>iceGatheringState</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/localDescription\"><code>localDescription</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/peerIdentity\"><code>peerIdentity</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/pendingLocalDescription\"><code>pendingLocalDescription</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/pendingRemoteDescription\"><code>pendingRemoteDescription</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/remoteDescription\"><code>remoteDescription</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/sctp\"><code>sctp</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addIceCandidate\"><code>addIceCandidate()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/addStream\"><code>addStream()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addTrack\"><code>addTrack()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/addTransceiver\"><code>addTransceiver()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/close\"><code>close()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/createAnswer\"><code>createAnswer()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/createDataChannel\"><code>createDataChannel()</code></a></li><li><em><code>createOffer()</code></em></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/generateCertificate\"><code>generateCertificate() static function</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getConfiguration\"><code>getConfiguration()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getIdentityAssertion\"><code>getIdentityAssertion()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/getReceivers\"><code>getReceivers()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getSenders\"><code>getSenders()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getStats\"><code>getStats()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getStreamById\"><code>getStreamById()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getTransceivers\"><code>getTransceivers()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/removeStream\"><code>removeStream()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/removeTrack\"><code>removeTrack()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/restartIce\"><code>restartIce()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/setConfiguration\"><code>setConfiguration()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/setIdentityProvider\"><code>setIdentityProvider()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription\"><code>setLocalDescription()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/setRemoteDescription\"><code>setRemoteDescription()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addstream_event\"><code>addstream</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/connectionstatechange_event\"><code>connectionstatechange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/datachannel_event\"><code>datachannel</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/icecandidate_event\"><code>icecandidate</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/icecandidateerror_event\"><code>icecandidateerror</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event\"><code>iceconnectionstatechange</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\"><code>icegatheringstatechange</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event\"><code>negotiationneeded</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/removestream_event\"><code>removestream</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingstatechange_event\"><code>signalingstatechange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/track_event\"><code>track</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>WebRTC 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>接口的 createOffer() 方法启动创建一个<a href=\"/zh-CN/docs/Glossary/SDP\">SDP</a> offer，目的是启动一个新的 WebRTC 去连接远程端点。SDP offer 包含有关已附加到 WebRTC 会话，浏览器支持的编解码器和选项的所有<a href=\"/zh-CN/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>s 信息，以及<a href=\"/zh-CN/docs/Glossary/ICE\">ICE</a> 代理，目的是通过信令信道发送给潜在远程端点，以请求连接或更新现有连接的配置。返回值是一个<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code> <small>(en-US)</small></a>，创建 offer 后，将使用包含新创建的要约的<a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a>对象来解析该返回值。<p></p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<pre class=\"notranslate\">aPromise = myPeerConnection.createOffer([options]);\n\nmyPeerConnection.createOffer(successCallback, failureCallback, [options]) <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg>\n</pre>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"选项\">选项 <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p><a href=\"#rtcofferoptions_dictionary\"><code>RTCOfferOptions</code></a> 词典提供要约所要求的选项。</p>\n  </dd>\n</dl>\n<h4 id=\"rtcofferoptions_词典\">RTCOfferOptions 词典</h4>\n<p><code>RTCOfferOptions</code> 词典被用于自定义通过此方法创建 offer。</p>\n<dl>\n  <dt id=\"icerestart\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/createOffer\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">iceRestart (en-US)</a> <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>要在活动连接上重新启动 ICE，请将其设置为<code>true</code>。 这将导致返回的 offer 与已经存在的凭证不同。 如果您应用返回的 offer，则 ICE 将重新启动。 指定<code>false</code>以保留相同的凭据，因此不重新启动 ICE。 默认值为<code>false</code>。</p>\n  </dd>\n  <dt id=\"offertoreceiveaudio\"><code>offerToReceiveAudio</code> <span class=\"badge inline optional\">可选</span> (Legacy)</dt>\n  <dd>\n    <p>传统的布尔选项，用于控制是否向远程对等方提供尝试发送音频的机会。 如果该值为<code>false</code>，即使本地端将发送音频数据，也不会提供远程端点发送音频数据。 如果此值为<code>true</code>，即使本地端不会发送音频数据，也将向远程端点发送音频数据。 默认行为是仅在本地发送音频时才提供接收音频，否则不提供。</p>\n    <p>\n      为了在现代实现中模拟此行为，该成员的值为 false 将设置所有现有音频收发器的方向以排除接收（即，设置为“仅发送”或“无效”）。\n      在现代实现中，此成员的值为 true 的存在将确保至少有一个收发器集可以接收尚未停止的音频，如果没有，则将创建一个。\n    </p>\n    <div class=\"notecard note\" id=\"sect1\">\n      <p><strong>备注：</strong> 您不应该使用此旧版属性。取而代之，用 <a href=\"/zh-CN/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> 去控制是否接受传入的音频。</p>\n    </div>\n  </dd>\n  <dt id=\"offertoreceivevideo\"><code>offerToReceiveVideo</code> <span class=\"badge inline optional\">可选</span> (Legacy)</dt>\n  <dd>\n    <p>\n      传统的布尔选项，用于控制是否向远程对等方提供尝试发送视频的机会。 如果此值为<code>false</code>，即使本地端将发送视频数据，也不会提供远程端点发送视频数据。 如果此值为<code>true</code>，即使本地端将不发送视频数据，也将向远程端点发送视频数据。 默认行为是仅在本地端正在发送视频时才提供接收视频，否则不提供。\n      为了在现代实现中模拟这种行为，该成员的值为<code>false</code>将设置所有现有视频收发器的方向以排除接收（即设置为“仅发送”或“无效”）。\n      在现代实现中，该成员的值为 true 的存在将确保至少有一个收发器集可以接收尚未停止的视频，如果没有，则将创建一个。\n    </p>\n    <div class=\"notecard note\" id=\"sect2\">\n      <p><strong>备注：</strong> 您不应该使用此旧版属性。取而代之，用 <a href=\"/zh-CN/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> 去控制是否接受传入的视频。</p>\n    </div>\n  </dd>\n  <dt id=\"voiceactivitydetection\"><code>voiceActivityDetection</code> <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>一些编解码器和硬件能够通过监视是否出现“静音”（或相对较低的声音水平）来检测音频何时开始和结束。 通过仅在实际有广播内容时发送音频数据，从而减少了用于音频的网络带宽。 但是，在某些情况下，这是不需要的。 例如，在音乐或其他非语音传输的情况下，这可能会导致重要的低音量声音丢失。 而且，紧急呼叫在安静时切勿切断音频。 此选项默认为**<code>true</code>**（启用语音活动检测）。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"不推荐使用的参数","title":"不推荐使用的参数","isH3":true,"content":"<p>在较早的代码和文档中，您可能会看到此函数的基于回调的版本。 不推荐使用并强烈建议不要使用它。 您应该更新任何现有代码，以使用基于 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>的<code>createOffer()</code>版本。 下面介绍了这种形式的<code>createOffer()</code>的参数，以帮助更新现有代码。</p>\n<dl>\n  <dt id=\"successcallback\"><code>successCallback</code> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCSessionDescriptionCallback</code></a>将传递一个描述新创建的 offer 的<a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a>对象。</p>\n  </dd>\n  <dt id=\"errorcallback\"><code>errorCallback</code> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerConnectionErrorCallback</code></a>将会传递给一个<a href=\"/zh-CN/docs/Web/API/DOMException\"><code>DOMException</code></a>对象，该对象说明了创建 offer 的请求失败的原因。</p>\n  </dd>\n  <dt id=\"options\"><code>options</code> <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>可选的<a href=\"#rtcofferoptions_dictionary\"><code>RTCOfferOptions</code></a>词典，提供 offer 所要求的选项。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>的履行处理程序将接收符合<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCSessionDescriptionInit</code></a>字典的对象，该字典包含描述所生成 offer 的 SDP。 收到的 offer 应通过信令服务器传递到。</p>"}},{"type":"prose","value":{"id":"异常","title":"异常","isH3":true,"content":"<p>通过拒绝返回的承诺返回这些异常。 您的拒绝处理程序应检查收到的异常，以确定发生了哪些异常。</p>\n<dl>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code></dt>\n  <dd>\n    <p><code>RTCPeerConnection</code> 被关闭。</p>\n  </dd>\n  <dt id=\"notreadableerror\"><code>NotReadableError</code></dt>\n  <dd>\n    <p>没有提供用于保护连接的证书或一组证书，并且<code>createOffer()</code>无法创建新证书。 由于需要保护所有 WebRTC 连接，因此会导致错误。</p>\n  </dd>\n  <dt id=\"operationerror\"><code>OperationError</code></dt>\n  <dd>\n    <p>由于某些原因，检查系统状态以确定资源可用性以生成报价失败。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"举例","title":"举例","isH3":false,"content":"<p>在这里，我们看到了<code><a href=\"/zh-CN/docs/Web/Reference/Events/negotiationneeded\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">negotiationneeded</a></code>事件的处理程序，该处理程序创建了要约，并通过信令通道将其发送到远程系统。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 请记住，这是信令过程的一部分，传输层的实现细节完全由您决定。 在这种情况下，<a href=\"/en-US/docs/Web/API/WebSockets_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">WebSocket (en-US)</a>连接用于向其他端点发送带有值为“ video-offer”的类型字段的<a href=\"/zh-CN/docs/Glossary/JSON\">JSON</a>消息。 传递给<code>sendToServer()</code>函数的对象的内容，以及承诺履行处理程序中的所有其他内容，完全取决于您的设计。</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  myPeerConnection<span class=\"token punctuation\">.</span><span class=\"token function\">createOffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">offer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> myPeerConnection<span class=\"token punctuation\">.</span><span class=\"token function\">setLocalDescription</span><span class=\"token punctuation\">(</span>offer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">sendToServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> myUsername<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> targetUsername<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"video-offer\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">sdp</span><span class=\"token operator\">:</span> myPeerConnection<span class=\"token punctuation\">.</span>localDescription\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reason</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// An error occurred, so handle the failure to connect</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在此代码中，创建了 offer，一旦成功，就将<a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>的本地端配置为通过传递要约进行匹配（使用符合<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCSessionDescriptionInit</code></a>）放入<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription\"><code>setLocalDescription()</code> <small>(en-US)</small></a>。 完成后，要约将通过信令通道发送到远程系统。 在这种情况下，使用名为<code>sendToServer()</code>的自定义函数。 信令服务器的实现独立于 WebRTC 规范，因此只要主叫方和潜在接收方都使用相同的 offer，如何发送 offer 都无关紧要。</p>\n<p>用 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch\"><code>Promise.catch()</code></a> 来捕获和处理错误。</p>\n<p>请参阅 <a href=\"/zh-CN/docs/Web/API/WebRTC_API/Signaling_and_video_calling\">Signaling and video calling</a>，以获取此摘录的完整示例。 这将帮助您了解此处的信令代码如何工作。</p>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-createoffer","title":"WebRTC 1.0: Real-Time Communication Between Browsers"}],"query":"api.RTCPeerConnection.createOffer"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.RTCPeerConnection.createOffer","dataURL":"/zh-CN/docs/Web/API/RTCPeerConnection/createOffer/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"举例","id":"举例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"RTCOfferOptions 词典提供要约所要求的选项。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"RTCPeerConnection.createOffer()","locale":"en-US","native":"English (US)"}],"source":{"folder":"zh-cn/web/api/rtcpeerconnection/createoffer","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/rtcpeerconnection/createoffer/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/RTCPeerConnection","title":"RTCPeerConnection"},{"uri":"/zh-CN/docs/Web/API/RTCPeerConnection/createOffer","title":"RTCPeerConnection.createOffer()"}],"pageTitle":"RTCPeerConnection.createOffer() - Web API 接口参考 | MDN","noIndexing":false}}