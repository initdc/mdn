{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"RTCPeerConnection: icecandidate 事件","mdn_url":"/zh-CN/docs/Web/API/RTCPeerConnection/icecandidate_event","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/RTCPeerConnection\"><code>RTCPeerConnection()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/canTrickleIceCandidates\"><code>canTrickleIceCandidates</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/connectionState\"><code>connectionState</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/currentLocalDescription\"><code>currentLocalDescription</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/currentRemoteDescription\"><code>currentRemoteDescription</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/iceConnectionState\"><code>iceConnectionState</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/iceGatheringState\"><code>iceGatheringState</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/localDescription\"><code>localDescription</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/peerIdentity\"><code>peerIdentity</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/pendingLocalDescription\"><code>pendingLocalDescription</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/pendingRemoteDescription\"><code>pendingRemoteDescription</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/remoteDescription\"><code>remoteDescription</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/sctp\"><code>sctp</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addIceCandidate\"><code>addIceCandidate()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/addStream\"><code>addStream()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addTrack\"><code>addTrack()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/addTransceiver\"><code>addTransceiver()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/close\"><code>close()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/createAnswer\"><code>createAnswer()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/createDataChannel\"><code>createDataChannel()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/createOffer\"><code>createOffer()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/generateCertificate\"><code>generateCertificate() static function</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getConfiguration\"><code>getConfiguration()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getIdentityAssertion\"><code>getIdentityAssertion()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/getReceivers\"><code>getReceivers()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getSenders\"><code>getSenders()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getStats\"><code>getStats()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getStreamById\"><code>getStreamById()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getTransceivers\"><code>getTransceivers()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/removeStream\"><code>removeStream()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/removeTrack\"><code>removeTrack()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/restartIce\"><code>restartIce()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/setConfiguration\"><code>setConfiguration()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/setIdentityProvider\"><code>setIdentityProvider()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription\"><code>setLocalDescription()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/setRemoteDescription\"><code>setRemoteDescription()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addstream_event\"><code>addstream</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/connectionstatechange_event\"><code>connectionstatechange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/datachannel_event\"><code>datachannel</code></a></li><li><em><code>icecandidate</code></em></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/icecandidateerror_event\"><code>icecandidateerror</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event\"><code>iceconnectionstatechange</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\"><code>icegatheringstatechange</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event\"><code>negotiationneeded</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/removestream_event\"><code>removestream</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingstatechange_event\"><code>signalingstatechange</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/track_event\"><code>track</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>WebRTC 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>当 <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> 通过 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription\"><code>RTCPeerConnection.setLocalDescription()</code> <small>(en-US)</small></a> 方法更改本地描述之后，该 <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> 会抛出 <strong><code>icecandidate</code></strong> 事件。该事件的监听器需要将更改后的描述信息传送给远端 <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>，以更新远端的备选源。</p>"}},{"type":"prose","value":{"id":"使用指南","title":"使用指南","isH3":false,"content":"<p><code>icecandidate</code> 的类型为 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCPeerIceCandidateEvent</code></a>, 在以下三种情况下会触发该事件：</p>"}},{"type":"prose","value":{"id":"分享新的候选","title":"分享新的候选","isH3":true,"content":"<p>触发 <code>icecandidate</code> 事件的首要原因：当获得新的源之后，需要将该源的信息发送给远端信号服务器，并分发至其它端的 <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>。其它 <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> 通过 <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addIceCandidate\" title=\"addIceCandidate()\"><code>addIceCandidate()</code></a> 方法将新 <a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>candidate</code></a> 中携带的信息，将新的源描述信息添加进它的备选池中；</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>rtcPeerConnection<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onicecandidate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">sendCandidateToRemotePeer</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 在此次协商中，没有更多的候选了 */</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>远程的节点在接受到候选后，将通过调用 <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/addIceCandidate\" title=\"addIceCandidate()\"><code>addIceCandidate()</code></a> 的方式将候选加入候选池中，并传入通过信令服务器得到的 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent/candidate\"><code>candidate</code> <small>(en-US)</small></a> 字符串（作为参数）。</p>"}},{"type":"prose","value":{"id":"代表最后一轮候选结束","title":"代表最后一轮候选结束","isH3":true,"content":"<p>当一个 ICE 协商会话没有候选来提供给某个给定的 RTCIceTransport，就完成了一轮候选的收集。一个带有空字串（\"\"）的 icecandidate 事件出现，表明了这种情况。</p>\n<p>你应当像对待任何普通候选一般向远程节点传递这个候选，正如在上述“共享一个新的候选”里所描述的。这就确保了远程节点也能获得候选终结的通知。正如你在上一个小节的代码里所见，每个候选都被发送到别的节点，包括任何可能含有空候选字串的。只有那些事件的 candidate 属性为 null 的不通过信令连接传递。</p>\n<p>候选终结指示在 Trickle ICE draft 规范的 9.3 章有描述（注意，章节号码会根据标准的反复修正而发生改变）</p>"}},{"type":"prose","value":{"id":"代表_ice_收集完成","title":"代表 ICE 收集完成","isH3":true,"content":"<p>一旦所有的 ICE 传输完成收集候选并且 <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> 对象的 <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/iceGatheringState\" title=\"iceGatheringState\"><code>iceGatheringState</code></a> 的值变化成 <code>complete</code>，一个 <code>icecandidate</code> 事件携带着值为 <code>null</code> 的 <code>complete</code> 属性的被发送。</p>\n<p>这个信号的存在是为了向后兼容的目的，并且不需要向远程节点分发（这也就是为什么上面的代码片段检查了 event.candidate 是否为 null，优先于沿着候选发送）</p>\n<p>如果你需要执行任何特别的动作，当没有更多的期待的候选，你最好通过观察 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\"><code>icegatheringstatechange</code> <small>(en-US)</small></a> 事件来观察 ICE 收集状态。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>pc<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"icegatheringstatechange\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">ev</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">.</span>iceGatheringState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"new\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">/* gathering is either just starting or has been reset */</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"gathering\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">/* gathering has begun or is ongoing */</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"complete\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">/* gathering has ended */</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>如你在这个例子中看到的，icegatheringstatechange 事件让你知道 RTCPeerConnection 属性 iceGatheringState 被更新的时机。如果那个值现在是 complete，你就知道 ICE 收集刚刚结束。</p>\n<p>对表明一个 ICE 会话已经结束而言，相比观察一个单独的 ICE 消息，这是更为可靠的方法。</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":true,"content":"<p>这个例子建立一个简单的 icecandidate 事件处理器，通过信令服务器使用一个 sendMessenge() 来建立和发送一个回复给远程节点。</p>\n<p>首先，一个使用 addEventListener() 的例子：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>pc<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"icecandidate\"</span><span class=\"token punctuation\">,</span><span class=\"token parameter\">ev</span><span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span><span class=\"token string\">\"new-ice-candidate\"</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">candidate</span><span class=\"token operator\">:</span>event<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>你也可以直接设定 <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/icecandidate_event\" title=\"onicecandidate\" aria-current=\"page\"><code>onicecandidate</code></a> 事件处理器的属性：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>pc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onicecandidate</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">ev</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span><span class=\"token string\">\"new-ice-candidate\"</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">candidate</span><span class=\"token operator\">:</span>event<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"概述","title":"概述","isH3":false,"content":"<dl>\n  <dt id=\"接口\">接口</dt>\n  <dd><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code> <small>(en-US)</small></a></dd>\n  <dt id=\"事件冒泡\">事件冒泡</dt>\n  <dd>\n    <p>否</p>\n  </dd>\n  <dt id=\"能否取消默认\">能否取消默认</dt>\n  <dd>\n    <p>否</p>\n  </dd>\n  <dt id=\"事件目标\">事件目标</dt>\n  <dd><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></dd>\n  <dt id=\"默认行为\">默认行为</dt>\n  <dd>\n    <p>无</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<p><em>属性继承自<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code> <small>(en-US)</small></a>.</em></p>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<p><em>方法继承自 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code> <small>(en-US)</small></a>.</em></p>"}},{"type":"prose","value":{"id":"相关事件","title":"相关事件","isH3":false,"content":"<ul>\n  <li><em>无</em></li>\n</ul>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-pc/#event-icecandidate","title":"WebRTC 1.0: Real-Time Communication Between Browsers"}],"query":"api.RTCPeerConnection.icecandidate_event"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.RTCPeerConnection.icecandidate_event","dataURL":"/zh-CN/docs/Web/API/RTCPeerConnection/icecandidate_event/bcd.json"}},{"type":"prose","value":{"id":"参阅","title":"参阅","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">WebRTC (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"使用指南","id":"使用指南"},{"text":"概述","id":"概述"},{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"相关事件","id":"相关事件"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参阅","id":"参阅"}],"summary":"当 RTCPeerConnection 通过 RTCPeerConnection.setLocalDescription() (en-US) 方法更改本地描述之后，该 RTCPeerConnection 会抛出 icecandidate 事件。该事件的监听器需要将更改后的描述信息传送给远端 RTCPeerConnection，以更新远端的备选源。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"RTCPeerConnection: icecandidate event","locale":"en-US","native":"English (US)"},{"title":"RTCPeerConnection.onicecandidate","locale":"ko","native":"한국어"},{"title":"RTCPeerConnection: icecandidate event","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/rtcpeerconnection/icecandidate_event","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/rtcpeerconnection/icecandidate_event/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/RTCPeerConnection","title":"RTCPeerConnection"},{"uri":"/zh-CN/docs/Web/API/RTCPeerConnection/icecandidate_event","title":"RTCPeerConnection: icecandidate 事件"}],"pageTitle":"RTCPeerConnection: icecandidate 事件 - Web API 接口参考 | MDN","noIndexing":false}}