{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"MediaRecorder","mdn_url":"/zh-CN/docs/Web/API/MediaRecorder","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\">Media Recorder API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaRecorder/MediaRecorder\"><code>MediaRecorder()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaRecorder/audioBitsPerSecond\"><code>audioBitsPerSecond</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/mimeType\"><code>mimeType</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/warning_event\"><code>onwarning</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/state\"><code>state</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stream\"><code>stream</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/videoBitsPerSecond\"><code>videoBitsPerSecond</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaRecorder/isTypeSupported\"><code>isTypeSupported()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaRecorder/pause\"><code>pause()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/requestData\"><code>requestData()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/resume\"><code>resume()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/start\"><code>start()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stop\"><code>stop()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaRecorder/dataavailable_event\"><code>dataavailable</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/error_event\"><code>error</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/pause_event\"><code>pause</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/resume_event\"><code>resume</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/start_event\"><code>start</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stop_event\"><code>stop</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Media Recorder API 的相关页面</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BlobEvent\"><code>BlobEvent</code> <small>(en-US)</small></a></li><li><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>window.MediaRecorder</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>MediaRecorder</code></strong> 是 <a href=\"/zh-CN/docs/Web/API/MediaStream_Recording_API\">MediaStream Recording API</a> 提供的用来进行媒体轻松录制的接口，他需要通过调用 <a href=\"/zh-CN/docs/Web/API/MediaRecorder/MediaRecorder\" title=\"MediaRecorder()\"><code>MediaRecorder()</code></a> 构造方法进行实例化。</p>"}},{"type":"prose","value":{"id":"构造函数","title":"构造函数","isH3":false,"content":"<dl>\n  <dt id=\"mediarecorder.mediarecorder\"><a href=\"/zh-CN/docs/Web/API/MediaRecorder/MediaRecorder\"><code>MediaRecorder.MediaRecorder()</code></a></dt>\n  <dd>\n    <p>创建一个新的<code>MediaRecorder</code>对象，对指定的<a href=\"/zh-CN/docs/Web/API/MediaStream\"><code>MediaStream</code></a> 对象进行录制，支持的配置项包括设置容器的 MIME 类型 (例如<code>\"video/webm\"</code> 或者 <code>\"video/mp4\"</code>) 和音频及视频的码率或者二者同用一个码率</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"配置项","title":"配置项","isH3":false,"content":"<dl>\n  <dt id=\"mediarecorder.mimetype_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/mimeType\"><code>MediaRecorder.mimeType</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回 <code>MediaRecorder</code> 对象创建时选择器选择的录制容器的 MIME type</p>\n  </dd>\n  <dt id=\"mediarecorder.state_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/state\"><code>MediaRecorder.state</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回录制对象<code>MediaRecorder</code> 的当前状态 (闲置中，录制中或者暂停 ) (<code>inactive</code>, <code>recording</code>, or <code>paused</code>.)</p>\n  </dd>\n  <dt id=\"mediarecorder.stream_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stream\"><code>MediaRecorder.stream</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回录制器对象 <code>MediaRecorder</code> 创建时构造函数传入的 stream 对象</p>\n  </dd>\n  <dt id=\"mediarecorder.ignoremutedmedia\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>MediaRecorder.ignoreMutedMedia</code></a></dt>\n  <dd>\n    <p>用以指定 <code>MediaRecorder</code>是否录制无声的输入源。如果这个属性是 false. 录制器对象<code>MediaRecorder</code> 会录制无声的音频或者黑屏的视频，默认值是 false</p>\n  </dd>\n  <dt id=\"mediarecorder.videobitspersecond_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/videoBitsPerSecond\"><code>MediaRecorder.videoBitsPerSecond</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回视频采用的编码比率。它可能和构造函数的设置比率不同。(if it was provided).</p>\n  </dd>\n  <dt id=\"mediarecorder.audiobitspersecond\"><a href=\"/zh-CN/docs/Web/API/MediaRecorder/audioBitsPerSecond\"><code>MediaRecorder.audioBitsPerSecond</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回音频采用的编码比率，它可能和构造函数中设置的比率不同。(if it was provided).</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"mediarecorder.istypesupported_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/isTypeSupported\"><code>MediaRecorder.isTypeSupported()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>返回一个<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a> 值，来表示设置的 MIME type 是否被当前用户的设备支持。</p>\n  </dd>\n  <dt id=\"mediarecorder.pause\"><a href=\"/zh-CN/docs/Web/API/MediaRecorder/pause\"><code>MediaRecorder.pause()</code></a></dt>\n  <dd>\n    <p>暂停媒体录制</p>\n  </dd>\n  <dt id=\"mediarecorder.requestdata_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/requestData\"><code>MediaRecorder.requestData()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>请求一个从开始到当前接收到的，存储为<a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a>类型的录制内容。(或者是返回从上一次调用<code>requestData()</code> 方法之后到现在的内容). 调用这个方法后，录制将会继续进行，但是会创建一个新的<code>Blob</code>对象</p>\n  </dd>\n  <dt id=\"mediarecorder.resume_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/resume\"><code>MediaRecorder.resume()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>继续录制之前被暂停的录制动作。</p>\n  </dd>\n  <dt id=\"mediarecorder.start_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/start\"><code>MediaRecorder.start()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>开始录制媒体，这个方法调用时可以通过给<code>timeslice</code>参数设置一个毫秒值，如果设置这个毫秒值，那么录制的媒体会按照你设置的值进行分割成一个个单独的区块，而不是以默认的方式录制一个非常大的整块内容。</p>\n  </dd>\n  <dt id=\"mediarecorder.stop_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stop\"><code>MediaRecorder.stop()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>停止录制。同时触发<code><a href=\"/zh-CN/docs/Web/Reference/Events/dataavailable\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">dataavailable</a></code>事件，返回一个存储<code>Blob</code>内容的录制数据。之后不再记录</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"静态方法","title":"静态方法","isH3":false,"content":"<dl>\n  <dt id=\"mediarecorder.istypesupported\"><a href=\"/zh-CN/docs/Web/API/MediaRecorder/isTypeSupported\"><code>MediaRecorder.isTypeSupported()</code></a></dt>\n  <dd>\n    <p>静态方法，判断给定的 MIME 类型是否支持。返回<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a>类型的值。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"事件处理","title":"事件处理","isH3":false,"content":"<dl>\n  <dt id=\"mediarecorder.ondataavailable\"><a href=\"/zh-CN/docs/Web/API/MediaRecorder/dataavailable_event\"><code>MediaRecorder.ondataavailable</code></a></dt>\n  <dd>\n    <p>调用它用来处理 <code><a href=\"/zh-CN/docs/Web/Reference/Events/dataavailable\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">dataavailable</a></code> 事件，该事件可用于获取录制的媒体资源 (在事件的 <code>data</code> 属性中会提供一个可用的 <a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a> 对象.)</p>\n  </dd>\n  <dt id=\"mediarecorder.onerror_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/error_event\"><code>MediaRecorder.onerror</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>An <code><a href=\"/zh-CN/docs/Web/Reference/Events/Event_handlers\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">event handler</a></code> called to handle the <code><a href=\"/zh-CN/docs/Web/Reference/Events/recordingerror\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">recordingerror</a></code> event, including reporting errors that arise with media recording. These are fatal errors that stop recording.</p>\n  </dd>\n  <dt id=\"mediarecorder.onpause_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/pause_event\"><code>MediaRecorder.onpause</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>用来处理 <code><a href=\"/en-US/docs/Web/API/HTMLMediaElement/pause_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">pause (en-US)</a></code> 事件，该事件在媒体暂停录制时触发（<a href=\"/zh-CN/docs/Web/API/MediaRecorder/pause\"><code>MediaRecorder.pause()</code></a>）.</p>\n  </dd>\n  <dt id=\"mediarecorder.onresume_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/resume_event\"><code>MediaRecorder.onresume</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>用来处理 <code><a href=\"/zh-CN/docs/Web/Reference/Events/resume\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">resume</a></code> 事件，该事件在暂停后回复录制视频时触发（<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/resume\"><code>MediaRecorder.resume()</code> <small>(en-US)</small></a>）.</p>\n  </dd>\n  <dt id=\"mediarecorder.onstart_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/start_event\"><code>MediaRecorder.onstart</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>用来处理 <code><a href=\"/zh-CN/docs/Web/Reference/Events/start\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">start</a></code> 事件，该事件在媒体开始录制时触发（<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/start\"><code>MediaRecorder.start()</code> <small>(en-US)</small></a>）.</p>\n  </dd>\n  <dt id=\"mediarecorder.onstop_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stop_event\"><code>MediaRecorder.onstop</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>用来处理 <code><a href=\"/zh-CN/docs/Web/Reference/Events/stop\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">stop</a></code> 事件，该事件会在媒体录制结束时、媒体流（<a href=\"/zh-CN/docs/Web/API/MediaStream\"><code>MediaStream</code></a>）结束时、或者调用<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stop\"><code>MediaRecorder.stop()</code> <small>(en-US)</small></a> 方法后触发。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"事件","title":"事件","isH3":false,"content":"<p>Listen to these events using <code>addEventListener()</code> or by assigning an event listener to the <code>oneventname</code> property of this interface.</p>\n<dl>\n  <dt id=\"error\"><a href=\"/en-US/docs/Web/API/MediaRecorder/error_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">error (en-US)</a></dt>\n  <dd>\n    <p>\n      Fired when an error occurs: for example because recording wasn't allowed or was attempted using an unsupported codec.\n      Also available via the <a href=\"/en-US/docs/Web/API/MediaRecorder/error_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">onerror (en-US)</a> property.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":"<pre class=\"notranslate\">if (navigator.mediaDevices) {\n  console.log('getUserMedia supported.');\n\n  var constraints = { audio: true };\n  var chunks = [];\n\n  navigator.mediaDevices.getUserMedia(constraints)\n  .then(function(stream) {\n\n    var mediaRecorder = new MediaRecorder(stream);\n\n    visualize(stream);\n\n    record.onclick = function() {\n      mediaRecorder.start();\n      console.log(mediaRecorder.state);\n      console.log(\"recorder started\");\n      record.style.background = \"red\";\n      record.style.color = \"black\";\n    }\n\n    stop.onclick = function() {\n      mediaRecorder.stop();\n      console.log(mediaRecorder.state);\n      console.log(\"recorder stopped\");\n      record.style.background = \"\";\n      record.style.color = \"\";\n    }\n\n    mediaRecorder.onstop = function(e) {\n      console.log(\"data available after MediaRecorder.stop() called.\");\n\n      var clipName = prompt('Enter a name for your sound clip');\n\n      var clipContainer = document.createElement('article');\n      var clipLabel = document.createElement('p');\n      var audio = document.createElement('audio');\n      var deleteButton = document.createElement('button');\n\n      clipContainer.classList.add('clip');\n      audio.setAttribute('controls', '');\n      deleteButton.innerHTML = \"Delete\";\n      clipLabel.innerHTML = clipName;\n\n      clipContainer.appendChild(audio);\n      clipContainer.appendChild(clipLabel);\n      clipContainer.appendChild(deleteButton);\n      soundClips.appendChild(clipContainer);\n\n      audio.controls = true;\n      var blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n      chunks = [];\n      var audioURL = URL.createObjectURL(blob);\n      audio.src = audioURL;\n      console.log(\"recorder stopped\");\n\n      deleteButton.onclick = function(e) {\n        evtTgt = e.target;\n        evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode);\n      }\n    }\n\n    mediaRecorder.ondataavailable = function(e) {\n      chunks.push(e.data);\n    }\n  })\n  .catch(function(err) {\n    console.log('The following error occured: ' + err);\n  })\n}\n</pre>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> This code sample is inspired by the Web Dictaphone demo. Some lines have been omitted for brevity; <a href=\"https://github.com/mdn/web-dictaphone/\" class=\"external\" rel=\" noopener\">refer to the source</a> for the complete code.</p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/mediacapture-record/#mediarecorder-api","title":"MediaStream Recording"}],"query":"api.MediaRecorder"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaRecorder","dataURL":"/zh-CN/docs/Web/API/MediaRecorder/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using the MediaRecorder API (en-US)</a></li>\n  <li><a href=\"https://mdn.github.io/web-dictaphone/\" class=\"external\" rel=\" noopener\">Web Dictaphone</a>: MediaRecorder + getUserMedia + Web Audio API visualization demo, by <a href=\"https://twitter.com/chrisdavidmills\" class=\"external\" rel=\" noopener\">Chris Mills</a> (<a href=\"https://github.com/mdn/web-dictaphone/\" class=\"external\" rel=\" noopener\">source on Github</a>.)</li>\n  <li><a href=\"/en-US/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Recording a media element (en-US)</a></li>\n  <li><a href=\"https://simpl.info/mediarecorder/\" class=\"external\" rel=\" noopener\">simpl.info MediaStream Recording demo</a>, by <a href=\"https://twitter.com/sw12\" class=\"external\" rel=\" noopener\">Sam Dutton</a>.</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>navigator.mediaDevices.getUserMedia</code> <small>(en-US)</small></a></li>\n  <li><a href=\"https://www.fingerspell.org/\" class=\"external\" rel=\" noopener\">FingerSpell</a>: Sign Language Fingerspelling practice using MediaDevices and the MediaStream Recording API to create and download recordings, MediaRecorder API supported desktop browsers only (<a href=\"https://github.com/chrisjohndigital/CameraCaptureJS\" class=\"external\" rel=\" noopener\">source on GitHub</a>)</li>\n</ul>"}}],"toc":[{"text":"构造函数","id":"构造函数"},{"text":"配置项","id":"配置项"},{"text":"方法","id":"方法"},{"text":"静态方法","id":"静态方法"},{"text":"事件处理","id":"事件处理"},{"text":"事件","id":"事件"},{"text":"例子","id":"例子"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"MediaRecorder 是 MediaStream Recording API 提供的用来进行媒体轻松录制的接口，他需要通过调用 MediaRecorder() 构造方法进行实例化。","popularity":0.0008,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MediaRecorder","locale":"en-US","native":"English (US)"},{"title":"MediaRecorder","locale":"ja","native":"日本語"},{"title":"MediaRecorder","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/mediarecorder","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/mediarecorder/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/MediaRecorder","title":"MediaRecorder"}],"pageTitle":"MediaRecorder - Web API 接口参考 | MDN","noIndexing":false}}