{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"MediaSource.isTypeSupported()","mdn_url":"/zh-CN/docs/Web/API/MediaSource/isTypeSupported","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Media_Source_Extensions_API\">Media Source Extensions API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/MediaSource\"><code>MediaSource</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaSource/MediaSource\"><code>MediaSource()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaSource/activeSourceBuffers\"><code>activeSourceBuffers</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaSource/duration\"><code>duration</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaSource/readyState\"><code>readyState</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaSource/sourceBuffers\"><code>sourceBuffers</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaSource/addSourceBuffer\"><code>addSourceBuffer()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/clearLiveSeekableRange\"><code>clearLiveSeekableRange()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaSource/endOfStream\"><code>endOfStream()</code></a></li><li><em><code>isTypeSupported()</code></em></li><li><a href=\"/zh-CN/docs/Web/API/MediaSource/removeSourceBuffer\"><code>removeSourceBuffer()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\"><code>setLiveSeekableRange()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Media Source Extensions 的相关页面</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality\"><code>HTMLVideoElement.getVideoPlaybackQuality()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code></a></li><li><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>TextTrack.sourceBuffer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VideoTrack/sourceBuffer\"><code>VideoTrack.sourceBuffer</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>MediaSource.isTypeSupported()</code></strong> 静态方法返回一个布尔值，如果给定的 MIME 类型和（可选的）编解码器<em>可能</em>被当前的<a href=\"/zh-CN/docs/Glossary/User_agent\">用户代理</a>支持，则返回 <code>true</code>。</p>\n<p>也就是说，它可以成功地为该媒体类型创建一个 <a href=\"/zh-CN/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> 对象。如果返回值是 <code>false</code>，则用户代理确定它<em>不</em>支持指定的媒体格式。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">isTypeSupported</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"type\"><code>type</code></dt>\n  <dd>\n    <p>一个指定媒体 MIME 类型的字符串和（可选）包含一个使用逗号分隔的受支持的编解码器集合的<a href=\"/en-US/docs/Web/Media/Formats/codecs_parameter\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">编解码器参数 (en-US)</a>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>如果给定的媒体类型将<em>不能</em>播放，则返回 <code>false</code>。</p>\n<p>如果浏览器<em>或许</em>可以播放给定的媒体类型，则返回 <code>true</code>。这不能得到保证，所以你必须为你的代码做好可能无法正常播放媒体的准备。</p>\n<p>在确定是否可以使用媒体类型时，所有处理媒体文件的 Web API 都使用“否/可能/或许”方法（或者，在这种情况下，“否或可能”）。这是因为媒体文件是复杂的，它具有太多微妙变化的复杂结构，在你实际使用这个媒体内容之前将无法确定任何事情。</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>以下片段基于 Nick Desaulniers 编写的一个简单示例（<a href=\"https://nickdesaulniers.github.io/netfix/demo/bufferAll.html\" class=\"external\" rel=\" noopener\">查看完整的在线演示</a>，或者<a href=\"https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html\" class=\"external\" rel=\" noopener\">下载源代码</a>进行进一步研究）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> assetURL <span class=\"token operator\">=</span> <span class=\"token string\">'frag_bunny.mp4'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Need to be specific for Blink regarding codecs</span>\n<span class=\"token comment\">// ./mp4info frag_bunny.mp4 | grep Codec</span>\n<span class=\"token keyword\">const</span> mimeCodec <span class=\"token operator\">=</span> <span class=\"token string\">'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'MediaSource'</span> <span class=\"token keyword\">in</span> window <span class=\"token operator\">&amp;&amp;</span> MediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">isTypeSupported</span><span class=\"token punctuation\">(</span>mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> mediaSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaSource</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//console.log(mediaSource.readyState); // closed</span>\n  video<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>mediaSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sourceopen'</span><span class=\"token punctuation\">,</span> sourceOpen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unsupported MIME type or codec: '</span><span class=\"token punctuation\">,</span> mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sourceOpen</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//console.log(this.readyState); // open</span>\n  <span class=\"token keyword\">let</span> mediaSource <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> sourceBuffer <span class=\"token operator\">=</span> mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">addSourceBuffer</span><span class=\"token punctuation\">(</span>mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">fetchAB</span><span class=\"token punctuation\">(</span>assetURL<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">buf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    sourceBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateend'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">endOfStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      video<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//console.log(mediaSource.readyState); // ended</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sourceBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">appendBuffer</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/media-source/#dom-mediasource-istypesupported","title":"Media Source Extensions™"}],"query":"api.MediaSource.isTypeSupported"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.MediaSource.isTypeSupported","dataURL":"/zh-CN/docs/Web/API/MediaSource/isTypeSupported/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Media_Source_Extensions_API\">Media Source Extensions API</a></li>\n  <li><a href=\"/zh-CN/docs/Web/Media/Formats\">Guide to media types and formats on the web</a></li>\n  <li><a href=\"/en-US/docs/Web/Media/Formats/codecs_parameter\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">The \"codecs\" parameter in common media types (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code></a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"MediaSource.isTypeSupported() 静态方法返回一个布尔值，如果给定的 MIME 类型和（可选的）编解码器可能被当前的用户代理支持，则返回 true。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MediaSource.isTypeSupported()","locale":"en-US","native":"English (US)"},{"title":"MediaSource.isTypeSupported()","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/mediasource/istypesupported","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/mediasource/istypesupported/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/MediaSource","title":"MediaSource"},{"uri":"/zh-CN/docs/Web/API/MediaSource/isTypeSupported","title":"MediaSource.isTypeSupported()"}],"pageTitle":"MediaSource.isTypeSupported() - Web API 接口参考 | MDN","noIndexing":false}}