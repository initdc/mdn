{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"MediaSource.endOfStream()","mdn_url":"/zh-CN/docs/Web/API/MediaSource/endOfStream","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Media_Source_Extensions_API\">Media Source Extensions API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/MediaSource\"><code>MediaSource</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaSource/MediaSource\"><code>MediaSource()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaSource/activeSourceBuffers\"><code>activeSourceBuffers</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaSource/duration\"><code>duration</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaSource/readyState\"><code>readyState</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaSource/sourceBuffers\"><code>sourceBuffers</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaSource/addSourceBuffer\"><code>addSourceBuffer()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/clearLiveSeekableRange\"><code>clearLiveSeekableRange()</code> <small>(en-US)</small></a></li><li><em><code>endOfStream()</code></em></li><li><a href=\"/zh-CN/docs/Web/API/MediaSource/isTypeSupported\"><code>isTypeSupported()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaSource/removeSourceBuffer\"><code>removeSourceBuffer()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\"><code>setLiveSeekableRange()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Media Source Extensions 的相关页面</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality\"><code>HTMLVideoElement.getVideoPlaybackQuality()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code></a></li><li><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>TextTrack.sourceBuffer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VideoTrack/sourceBuffer\"><code>VideoTrack.sourceBuffer</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p><a href=\"/zh-CN/docs/Web/API/MediaSource\"><code>MediaSource</code></a> 接口的 <strong><code>endOfStream()</code></strong> 方法意味着流的结束。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">endOfStream</span><span class=\"token punctuation\">(</span>endOfStreamError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"endofstreamerror\">endOfStreamError <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>，表示当流结束之时需要抛出的异常名。可选的值为：</p>\n    <dl>\n      <dt id=\"network\"><code>network</code></dt>\n      <dd>\n        <p>中止播放并且发出发生网络错误的信号。这可用于创建一个与媒体流相关的自定义处理程序。例如，你可能有一个与其他网络请求分开的，单独处理媒体分块请求的函数。当你调用 <a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a>（以获取媒体分块）而触发 <code>onabort</code> 或 <code>onerror</code> 时，你可能需要调用 <code>endOfStream('network')</code>，在 UI 中展示描述性的错误，并且立即重试网络请求或者等到网络恢复（通过某种轮询）。</p>\n      </dd>\n      <dt id=\"decode\"><code>decode</code></dt>\n      <dd>\n        <p>中止播放并且发出发生解码错误的信号。这可用于指示当获取媒体数据时发生了解析错误；可能数据已损坏，或者是使用浏览器不知道如何解码的编解码器进行编码。</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>无（<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>）。</p>"}},{"type":"prose","value":{"id":"异常","title":"异常","isH3":true,"content":"<dl>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code> <a href=\"/zh-CN/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/API/MediaSource/readyState\"><code>MediaSource.readyState</code></a> 的状态不是 <code>open</code>，或者有一个或多个在 <a href=\"/zh-CN/docs/Web/API/MediaSource/sourceBuffers\"><code>MediaSource.sourceBuffers</code></a> 中的 <a href=\"/zh-CN/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> 对象被更新（例如它们的 <a href=\"/zh-CN/docs/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a> 属性是 <code>true</code>），则抛出该错误。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>以下片段基于 Nick Desaulniers 编写的一个简单示例（<a href=\"https://nickdesaulniers.github.io/netfix/demo/bufferAll.html\" class=\"external\" rel=\" noopener\">查看完整的在线演示</a>，或者<a href=\"https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html\" class=\"external\" rel=\" noopener\">下载源代码</a>进行进一步研究）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> assetURL <span class=\"token operator\">=</span> <span class=\"token string\">'frag_bunny.mp4'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Need to be specific for Blink regarding codecs</span>\n<span class=\"token comment\">// ./mp4info frag_bunny.mp4 | grep Codec</span>\n<span class=\"token keyword\">var</span> mimeCodec <span class=\"token operator\">=</span> <span class=\"token string\">'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'MediaSource'</span> <span class=\"token keyword\">in</span> window <span class=\"token operator\">&amp;&amp;</span> MediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">isTypeSupported</span><span class=\"token punctuation\">(</span>mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> mediaSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaSource</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//console.log(mediaSource.readyState); // closed</span>\n  video<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>mediaSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sourceopen'</span><span class=\"token punctuation\">,</span> sourceOpen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unsupported MIME type or codec: '</span><span class=\"token punctuation\">,</span> mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sourceOpen</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//console.log(this.readyState); // open</span>\n  <span class=\"token keyword\">var</span> mediaSource <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> sourceBuffer <span class=\"token operator\">=</span> mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">addSourceBuffer</span><span class=\"token punctuation\">(</span>mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">fetchAB</span><span class=\"token punctuation\">(</span>assetURL<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">buf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    sourceBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateend'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">endOfStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      video<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//console.log(mediaSource.readyState); // ended</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sourceBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">appendBuffer</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/media-source/#dom-mediasource-endofstream","title":"Media Source Extensions™"}],"query":"api.MediaSource.endOfStream"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.MediaSource.endOfStream","dataURL":"/zh-CN/docs/Web/API/MediaSource/endOfStream/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code></a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"MediaSource 接口的 endOfStream() 方法意味着流的结束。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MediaSource.endOfStream()","locale":"en-US","native":"English (US)"},{"title":"MediaSource.endOfStream()","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/mediasource/endofstream","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/mediasource/endofstream/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/MediaSource","title":"MediaSource"},{"uri":"/zh-CN/docs/Web/API/MediaSource/endOfStream","title":"MediaSource.endOfStream()"}],"pageTitle":"MediaSource.endOfStream() - Web API 接口参考 | MDN","noIndexing":false}}