{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Broadcast Channel API","mdn_url":"/zh-CN/docs/Web/API/Broadcast_Channel_API","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Broadcast_Channel_API\">Broadcast Channel API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>接口</summary><ol><li><a href=\"/zh-CN/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>Broadcast Channel API</strong> 可以实现同 <a href=\"/zh-CN/docs/Glossary/Origin\">源</a> 下浏览器不同窗口，Tab 页，frame 或者 iframe 下的 <a href=\"/zh-CN/docs/Glossary/Browsing_context\">浏览器上下文</a> (通常是同一个网站下不同的页面) 之间的简单通讯。</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 此特性在 <a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Worker</a> 中可用</p>\n</div>\n<p>广播频道会被命名和绑定到指定的源。</p>\n<p>通过创建一个监听某个频道下的 <a href=\"/zh-CN/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a> 对象，你可以接收发送给该频道的所有消息。一个有意思的点是，你不需要再维护需要通信的 iframe 或 worker 的索引。它们可以通过构造 <a href=\"/zh-CN/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a> 来简单地“订阅”特定频道，并在它们之间进行全双工（双向）通信。</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/Broadcast_Channel_API/broadcastchannel.png\" alt=\"The principle of the Broadcast Channel API\" width=\"784\" height=\"448\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"broadcast_channel_接口","title":"Broadcast Channel 接口","isH3":false,"content":""}},{"type":"prose","value":{"id":"创建或加入某个频道","title":"创建或加入某个频道","isH3":true,"content":"<p><code>BroadcastChannel</code> 接口非常简单。通过创建一个 <a href=\"/zh-CN/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a> 对象，一个客户端就加入了某个指定的频道。只需要向 <a href=\"/zh-CN/docs/Web/API/BroadcastChannel/BroadcastChannel\">构造函数</a> 传入一个参数：频道名称。如果这是首次连接到该广播频道，相应资源会自动被创建。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 连接到广播频道</span>\n<span class=\"token keyword\">var</span> bc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BroadcastChannel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test_channel'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"发送消息","title":"发送消息","isH3":true,"content":"<p>现在发送消息就很简单了，只需要调用 BroadcastChannel 对象上的<a href=\"/zh-CN/docs/Web/API/BroadcastChannel/postMessage\" title=\"postMessage()\"><code>postMessage()</code></a> 方法即可。该方法的参数可以是任意对象。最简单的例子就是发送 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 文本消息：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 发送简单消息的示例</span>\nbc<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is a test message.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>不只是 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>，任意类型的对象都可以被发送。此 API 不会将消息与任何的语义相关联，因此通道的参与者有必要知道预期的消息类型和消息的消费方式。</p>"}},{"type":"prose","value":{"id":"接收消息","title":"接收消息","isH3":true,"content":"<p>当消息被发送之后，所有连接到该频道的 <a href=\"/zh-CN/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a> 对象上都会触发 <code><a href=\"/zh-CN/docs/Web/Reference/Events/message\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">message</a></code> 事件。该事件没有默认的行为，但是可以使用 <a href=\"/zh-CN/docs/Web/API/BroadcastChannel/message_event\" title=\"onmessage\"><code>onmessage</code></a> 事件处理程序来定义一个函数来处理消息。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 简单示例，用于将事件打印到控制台</span>\nbc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"与频道断开连接","title":"与频道断开连接","isH3":true,"content":"<p>通过调用 BroadcastChannel 对象的 <a href=\"/zh-CN/docs/Web/API/BroadcastChannel/close\" title=\"close()\"><code>close()</code></a> 方法，可以离开频道。这将断开该对象和其关联的频道之间的联系，并允许它被垃圾回收。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 断开频道连接</span>\nbc<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"总结","title":"总结","isH3":false,"content":"<p>Broadcast Channel API 是一个非常简单的 API，内部包含了跨上下文通讯的接口。它可用于检测同源网站环境中其他浏览器选项卡下的用户操作，例如当用户登录到帐户时。没有定义消息传输协议，故不同上下文中的不同文档需要自己实现它：规范没有对此提出协议或要求。</p>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/web-messaging.html#broadcasting-to-other-browsing-contexts","title":"HTML Standard"}],"query":"api.BroadcastChannel"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.BroadcastChannel","dataURL":"/zh-CN/docs/Web/API/Broadcast_Channel_API/bcd.json"}},{"type":"prose","value":{"id":"另见","title":"另见","isH3":false,"content":"<ul>\n  <li>接口实现：<a href=\"/zh-CN/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a>。</li>\n</ul>"}}],"toc":[{"text":"Broadcast Channel 接口","id":"broadcast_channel_接口"},{"text":"总结","id":"总结"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"另见","id":"另见"}],"summary":"Broadcast Channel API 可以实现同 源 下浏览器不同窗口，Tab 页，frame 或者 iframe 下的 浏览器上下文 (通常是同一个网站下不同的页面) 之间的简单通讯。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Broadcast Channel API","locale":"en-US","native":"English (US)"},{"title":"Broadcast Channel API","locale":"fr","native":"Français"},{"title":"Broadcast Channel API","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/broadcast_channel_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/broadcast_channel_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Broadcast_Channel_API","title":"Broadcast Channel API"}],"pageTitle":"Broadcast Channel API - Web API 接口参考 | MDN","noIndexing":false}}