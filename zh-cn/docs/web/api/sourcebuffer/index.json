{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"SourceBuffer","mdn_url":"/zh-CN/docs/Web/API/SourceBuffer","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Media_Source_Extensions_API\">Media Source Extensions API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/appendWindowEnd\"><code>appendWindowEnd</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/appendWindowStart\"><code>appendWindowStart</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/audioTracks\"><code>audioTracks</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/SourceBuffer/buffered\"><code>buffered</code></a></li><li><a href=\"/zh-CN/docs/Web/API/SourceBuffer/mode\"><code>mode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/textTracks\"><code>textTracks</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/SourceBuffer/timestampOffset\"><code>timestampOffset</code></a></li><li><a href=\"/zh-CN/docs/Web/API/SourceBuffer/updating\"><code>updating</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/videoTracks\"><code>videoTracks</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/abort\"><code>abort()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/SourceBuffer/appendBuffer\"><code>appendBuffer()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/appendBufferAsync\"><code>appendBufferAsync()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/appendStream\"><code>appendStream()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/changeType\"><code>changeType()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/SourceBuffer/remove\"><code>remove()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/removeAsync\"><code>removeAsync()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Media Source Extensions 的相关页面</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality\"><code>HTMLVideoElement.getVideoPlaybackQuality()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaSource\"><code>MediaSource</code></a></li><li><a href=\"/zh-CN/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code></a></li><li><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>TextTrack.sourceBuffer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VideoTrack/sourceBuffer\"><code>VideoTrack.sourceBuffer</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>SourceBuffer</code></strong> 接口表示通过 <a href=\"/zh-CN/docs/Web/API/MediaSource\"><code>MediaSource</code></a> 对象传递到 <a href=\"/zh-CN/docs/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> 并播放的媒体分块。它可以由一个或者多个媒体片段组成。</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/zh-CN/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/zh-CN/docs/Web/API/SourceBuffer\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"96\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"166\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      SourceBuffer\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<dl>\n  <dt id=\"sourcebuffer.appendwindowend_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/appendWindowEnd\"><code>SourceBuffer.appendWindowEnd</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>控制 append window 结束的时间戳。</p>\n  </dd>\n  <dt id=\"sourcebuffer.appendwindowstart_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/appendWindowStart\"><code>SourceBuffer.appendWindowStart</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>控制 <a href=\"https://w3c.github.io/media-source/#append-window\" class=\"external\" rel=\" noopener\">append window</a> 开始的时间戳。这是一个时间戳范围，可以用于过滤附加到 <code>SourceBuffer</code> 的媒体数据。此时间戳范围的编码媒体帧将被附加，而超出此范围的将被忽略。</p>\n  </dd>\n  <dt id=\"sourcebuffer.audiotracks_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/audioTracks\"><code>SourceBuffer.audioTracks</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>当前包含在 <code>SourceBuffer</code> 中的音轨列表。</p>\n  </dd>\n  <dt id=\"sourcebuffer.buffered\"><a href=\"/zh-CN/docs/Web/API/SourceBuffer/buffered\"><code>SourceBuffer.buffered</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回当前在 <code>SourceBuffer</code> 中缓冲的时间范围。</p>\n  </dd>\n  <dt id=\"sourcebuffer.mode\"><a href=\"/zh-CN/docs/Web/API/SourceBuffer/mode\"><code>SourceBuffer.mode</code></a></dt>\n  <dd>\n    <p>控制如何处理 <code>SourceBuffer</code> 中媒体片段的顺序，即它们是否可以按任何顺序被加载，或者他们必须保持一个严格的顺序。</p>\n  </dd>\n  <dt id=\"sourcebuffer.texttracks_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/textTracks\"><code>SourceBuffer.textTracks</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>当前包含在 <code>SourceBuffer</code> 中的文本轨列表。</p>\n  </dd>\n  <dt id=\"sourcebuffer.timestampoffset\"><a href=\"/zh-CN/docs/Web/API/SourceBuffer/timestampOffset\"><code>SourceBuffer.timestampOffset</code></a></dt>\n  <dd>\n    <p>控制应用于随后附加到 <code>SourceBuffer</code> 的媒体片段内的时间戳偏移量。</p>\n  </dd>\n  <dt id=\"sourcebuffer.updating\"><a href=\"/zh-CN/docs/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>一个布尔值，表示 <code>SourceBuffer</code> 当前是否正在更新——即当前是否正在进行 <a href=\"/zh-CN/docs/Web/API/SourceBuffer/appendBuffer\"><code>SourceBuffer.appendBuffer()</code></a>、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/appendStream\"><code>SourceBuffer.appendStream()</code> <small>(en-US)</small></a> 或 <a href=\"/zh-CN/docs/Web/API/SourceBuffer/remove\"><code>SourceBuffer.remove()</code></a> 操作。</p>\n  </dd>\n  <dt id=\"sourcebuffer.videotracks_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/videoTracks\"><code>SourceBuffer.videoTracks</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>当前包含在 <code>SourceBuffer</code> 中的视频轨列表。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<p><em>从它的父接口 <a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a> 继承方法。</em></p>\n<dl>\n  <dt id=\"sourcebuffer.abort_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/abort\"><code>SourceBuffer.abort()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>中止当前片段并且重置片段解析器。</p>\n  </dd>\n  <dt id=\"sourcebuffer.appendbuffer\"><a href=\"/zh-CN/docs/Web/API/SourceBuffer/appendBuffer\"><code>SourceBuffer.appendBuffer()</code></a></dt>\n  <dd>\n    <p>将来自 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>、<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>TypedArray</code></a> 或 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a> 对象的媒体片段数据附加到 <code>SourceBuffer</code>。</p>\n  </dd>\n  <dt id=\"sourcebuffer.appendbufferasync_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/appendBufferAsync\"><code>SourceBuffer.appendBufferAsync()</code> <small>(en-US)</small></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>启动异步进程，将指定缓冲数据附加到 <code>SourceBuffer</code>。返回一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>，一旦添加了缓冲数据，该 promise 将会兑现。</p>\n  </dd>\n  <dt id=\"sourcebuffer.appendstream_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/appendStream\"><code>SourceBuffer.appendStream()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>将来自 <code>ReadableStream</code> 对象的媒体片段数据附加到 <code>SourceBuffer</code>。</p>\n  </dd>\n  <dt id=\"sourcebuffer.changetype_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/changeType\"><code>SourceBuffer.changeType()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>更改 <a href=\"/zh-CN/docs/Glossary/MIME_type\">MIME 类型</a>，使其符合将来调用 <a href=\"/zh-CN/docs/Web/API/SourceBuffer/appendBuffer\" title=\"appendBuffer()\"><code>appendBuffer()</code></a> 附加的新数据的类型。</p>\n  </dd>\n  <dt id=\"sourcebuffer.remove\"><a href=\"/zh-CN/docs/Web/API/SourceBuffer/remove\"><code>SourceBuffer.remove()</code></a></dt>\n  <dd>\n    <p>从 <code>SourceBuffer</code> 移除指定时间范围内的媒体片段。</p>\n  </dd>\n  <dt id=\"sourcebuffer.removeasync_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/removeAsync\"><code>SourceBuffer.removeAsync()</code> <small>(en-US)</small></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>启动异步进程，从 <code>SourceBuffer</code> 移除指定时间范围的媒体片段。返回一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>，一旦所有匹配的片段被删除，该 promise 将会兑现。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"事件","title":"事件","isH3":false,"content":"<dl>\n  <dt id=\"abort\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>abort</code></a></dt>\n  <dd>\n    <p>当 <a href=\"/zh-CN/docs/Web/API/SourceBuffer/appendBuffer\"><code>SourceBuffer.appendBuffer()</code></a> 或 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/appendStream\"><code>SourceBuffer.appendStream()</code> <small>(en-US)</small></a> 结束时通过调用 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/abort\"><code>SourceBuffer.abort()</code> <small>(en-US)</small></a> 触发。<a href=\"/zh-CN/docs/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a> 从 <code>true</code> 改变为 <code>false</code>。</p>\n  </dd>\n  <dt id=\"error\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>error</code></a></dt>\n  <dd>\n    <p>在 <a href=\"/zh-CN/docs/Web/API/SourceBuffer/appendBuffer\"><code>SourceBuffer.appendBuffer()</code></a> 或 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer/appendStream\"><code>SourceBuffer.appendStream()</code> <small>(en-US)</small></a> 期间发生错误时触发。<a href=\"/zh-CN/docs/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a> 从 <code>true</code> 改变为 <code>false</code>。</p>\n  </dd>\n  <dt id=\"update\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>update</code></a></dt>\n  <dd>\n    <p>在 <a href=\"/zh-CN/docs/Web/API/SourceBuffer/appendBuffer\"><code>SourceBuffer.appendBuffer()</code></a> 或 <a href=\"/zh-CN/docs/Web/API/SourceBuffer/remove\"><code>SourceBuffer.remove()</code></a> 完成时触发。<a href=\"/zh-CN/docs/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a> 从 <code>true</code> 改变为 <code>false</code>。这个事件在 <code>updateend</code> 之前触发。</p>\n  </dd>\n  <dt id=\"updateend\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>updateend</code></a></dt>\n  <dd>\n    <p>在 <a href=\"/zh-CN/docs/Web/API/SourceBuffer/appendBuffer\"><code>SourceBuffer.appendBuffer()</code></a> 或 <a href=\"/zh-CN/docs/Web/API/SourceBuffer/remove\"><code>SourceBuffer.remove()</code></a> 结束后触发。这个事件在 <code>update</code> 后触发。</p>\n  </dd>\n  <dt id=\"updatestart\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>updatestart</code></a></dt>\n  <dd>\n    <p>当 <a href=\"/zh-CN/docs/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a> 从 <code>false</code> 改变为 <code>true</code> 时触发。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>这个例子尽可能快地逐块加载视频，并在加载好后立刻播放。以下片段基于 Nick Desaulniers 编写的一个简单示例（<a href=\"https://nickdesaulniers.github.io/netfix/demo/bufferAll.html\" class=\"external\" rel=\" noopener\">查看完整的在线演示</a>，或者<a href=\"https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html\" class=\"external\" rel=\" noopener\">下载源代码</a>进行进一步研究）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> video <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'video'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> assetURL <span class=\"token operator\">=</span> <span class=\"token string\">'frag_bunny.mp4'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Need to be specific for Blink regarding codecs</span>\n<span class=\"token comment\">// ./mp4info frag_bunny.mp4 | grep Codec</span>\n<span class=\"token keyword\">const</span> mimeCodec <span class=\"token operator\">=</span> <span class=\"token string\">'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'MediaSource'</span> <span class=\"token keyword\">in</span> window <span class=\"token operator\">&amp;&amp;</span> MediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">isTypeSupported</span><span class=\"token punctuation\">(</span>mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> mediaSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//console.log(mediaSource.readyState); // closed</span>\n  video<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>mediaSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sourceopen'</span><span class=\"token punctuation\">,</span> sourceOpen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unsupported MIME type or codec: '</span><span class=\"token punctuation\">,</span> mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sourceOpen</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//console.log(this.readyState); // open</span>\n  <span class=\"token keyword\">const</span> mediaSource <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> sourceBuffer <span class=\"token operator\">=</span> mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">addSourceBuffer</span><span class=\"token punctuation\">(</span>mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">fetchAB</span><span class=\"token punctuation\">(</span>assetURL<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">buf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    sourceBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateend'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">endOfStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      video<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//console.log(mediaSource.readyState); // ended</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sourceBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">appendBuffer</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fetchAB</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">;</span>\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  xhr<span class=\"token punctuation\">.</span>responseType <span class=\"token operator\">=</span> <span class=\"token string\">'arraybuffer'</span><span class=\"token punctuation\">;</span>\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/media-source/#sourcebuffer","title":"Media Source Extensions™"}],"query":"api.SourceBuffer"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.SourceBuffer","dataURL":"/zh-CN/docs/Web/API/SourceBuffer/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/MediaSource\"><code>MediaSource</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code></a></li>\n</ul>"}}],"toc":[{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"事件","id":"事件"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"SourceBuffer 接口表示通过 MediaSource 对象传递到 HTMLMediaElement 并播放的媒体分块。它可以由一个或者多个媒体片段组成。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"SourceBuffer","locale":"en-US","native":"English (US)"},{"title":"SourceBuffer","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/sourcebuffer","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/sourcebuffer/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/SourceBuffer","title":"SourceBuffer"}],"pageTitle":"SourceBuffer - Web API 接口参考 | MDN","noIndexing":false}}