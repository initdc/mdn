{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"AudioParam","mdn_url":"/zh-CN/docs/Web/API/AudioParam","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/AudioParam\"><code>AudioParam</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/defaultValue\"><code>defaultValue</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/maxValue\"><code>maxValue</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/minValue\"><code>minValue</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/value\"><code>value</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/cancelAndHoldAtTime\"><code>cancelAndHoldAtTime()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/cancelScheduledValues\"><code>cancelScheduledValues()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/exponentialRampToValueAtTime\"><code>exponentialRampToValueAtTime()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/linearRampToValueAtTime\"><code>linearRampToValueAtTime()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/setTargetAtTime\"><code>setTargetAtTime()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/setValueAtTime\"><code>setValueAtTime()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/setValueCurveAtTime\"><code>setValueCurveAtTime()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Web Audio API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/zh-CN/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/zh-CN/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>AudioParam</code> 接口代表音频相关的参数，通常是一个 <a href=\"/zh-CN/docs/Web/API/AudioNode\"><code>AudioNode</code></a> (例如 <a href=\"/zh-CN/docs/Web/API/GainNode/gain\"><code>GainNode.gain</code></a>) 的参数。一个 <code>AudioParam</code> 可以被设置为一个具体的值或者数值的改变，可以被安排在在一个具体的时刻并且遵循一个特定的模式发生。</p>\n<p>下面有两种类型的 <code>AudioParam</code>, <em>a-rate</em> 和 <em>k-rate</em> 参数：</p>\n<ul>\n  <li>一个 <em>a-rate</em> <code>AudioParam</code> 获取音频信号的每个<a href=\"/zh-CN/docs/Web/API/Web_Audio_API/Basic_concepts_behind_Web_Audio_API#audio_buffers.3a_frames.2c_samples_and_channels\">采样帧</a>的当前音频参数值。</li>\n  <li>一个 <em>k-rate</em> <code>AudioParam</code> 对于待处理的整个块使用相同的初始音频参数值，即 128 个采样帧。</li>\n</ul>\n<p>每个 <a href=\"/zh-CN/docs/Web/API/AudioNode\"><code>AudioNode</code></a> 定义了其规格中哪一个参数是 <em>a-rate</em> 或 <em>k-rate</em>。</p>\n<p>每个 <code>AudioParam</code> 有一个事件的列表，初始化时列表为空。该列表定义了什么时候数值怎么改变。当这个列表不是空的时候，使用 <code>AudioParam.value</code> 属性的改变会被忽略。事件的列表允许我们去有计划地进行必须在非常精确的时间发生的更改，使用任意的基于时间轴的自动化曲线。被使用的时间在<a href=\"/zh-CN/docs/Web/API/BaseAudioContext/currentTime\"><code>AudioContext.currentTime</code></a> 中被定义。</p>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<p><code>AudioParam</code> <em>继承的属性来自于它的父类，</em> <code>AudioNode</code>。</p>\n<dl>\n  <dt id=\"audioparam.defaultvalue_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/defaultValue\"><code>AudioParam.defaultValue</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>代表被具体的<a href=\"/zh-CN/docs/Web/API/AudioNode\"><code>AudioNode</code></a> 创建的 <code>AudioParam</code> 的属性的初始的音量。</p>\n  </dd>\n  <dt id=\"audioparam.maxvalue_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/maxValue\"><code>AudioParam.maxValue</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>代表参数有效范围的最大可能值。</p>\n  </dd>\n  <dt id=\"audioparam.minvalue_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/minValue\"><code>AudioParam.minValue</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>代表参数有效范围的最小可能值。</p>\n  </dd>\n  <dt id=\"audioparam.value_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/value\"><code>AudioParam.value</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>代表参数的浮点数音量值；初始化设定为 <code>AudioParam.defaultValue 的值。虽然它可以被设置，但是任何发生在自动化事件（事件被计划用于 AudioParam）的修改会被忽略，</code>没有任何例外。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<p>AudioParam <em>初始化的方法来自它的父类，</em><code>AudioNode</code>.</p>\n<dl>\n  <dt id=\"audioparam.setvalueattime_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/setValueAtTime\"><code>AudioParam.setValueAtTime()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>在一个确切的时间，即时更改 <code>AudioParam</code> 的值，按照<a href=\"/zh-CN/docs/Web/API/BaseAudioContext/currentTime\"><code>AudioContext.currentTime</code></a> 的时间。新的值会被传递到 <code>value</code> 参数。</p>\n  </dd>\n  <dt id=\"audioparam.linearramptovalueattime_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/linearRampToValueAtTime\"><code>AudioParam.linearRampToValueAtTime()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>调整 <code>AudioParam</code> 的值，使其逐渐按线性变化。这个改变会从上一个事件指定的事件开始，跟随一个线性“斜坡”到参数给的新值，并在 <code>endTime</code> 参数给定的时间到达新值。</p>\n  </dd>\n  <dt id=\"audioparam.exponentialramptovalueattime_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/exponentialRampToValueAtTime\"><code>AudioParam.exponentialRampToValueAtTime()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>调整 <code>AudioParam</code> 的值，使其逐渐按指数变化。这个改变会从上一个事件指定的事件开始，跟随一个指数“斜坡”到参数给的新值，并在 <code>endTime</code> 参数给定的时间到达新值。</p>\n  </dd>\n  <dt id=\"audioparam.settargetattime_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/setTargetAtTime\"><code>AudioParam.setTargetAtTime()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>将开始计划改变 <code>AudioParam</code> 的值。这个改变将从 <code>startTime</code> 指定的时间开始，并且以指定的方式向目标参数给定的值改变。指数衰减速率由 <code>timeConstant</code> 参数定义，<code>time</code> 参数使以秒作为测量单位的时间。</p>\n  </dd>\n  <dt id=\"audioparam.setvaluecurveattime_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/setValueCurveAtTime\"><code>AudioParam.setValueCurveAtTime()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>调整 <code>AudioParam</code> 的值以跟随一组定义为 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code> <small>(en-US)</small></a> 的值，数值会缩放到适应给定的间隔，从 <code>startTime</code> 时间开始并具有特定的持续时间（duration）。</p>\n  </dd>\n  <dt id=\"audioparam.cancelscheduledvalues_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/cancelScheduledValues\"><code>AudioParam.cancelScheduledValues()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>取消全部在 <code>AudioParam</code> 中的未来计划发生的改变。</p>\n  </dd>\n  <dt id=\"audioparam.cancelandholdattime_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioParam/cancelAndHoldAtTime\"><code>AudioParam.cancelAndHoldAtTime()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>取消全部计划将来对 <code>AudioParam</code> 的改变，但是保持给定时间的值，直到将来的使用其他方法产生改变。新的值会被赋予到 <code>value</code> 属性中。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":"<p>首先，一个基础的例子展示了 <a href=\"/zh-CN/docs/Web/API/GainNode\"><code>GainNode</code></a> 拥有的 <code>gain</code> 一些值合。<code>gain</code> 是一个 a-rate AudioParam 的例子，因为该值可以针对音频的每个样本帧进行不同的设置。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> AudioContext <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> gainNode <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createGain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngainNode<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>另外，一个例子展示了 <a href=\"/zh-CN/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a> 拥有的一些值。这是一个 k-rate AudioParam 的例子，因为一次为整个音频块设置的值。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> AudioContext <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> biquadFilter <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createBiquadFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbiquadFilter<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"lowshelf\"</span><span class=\"token punctuation\">;</span>\nbiquadFilter<span class=\"token punctuation\">.</span>frequency<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\nbiquadFilter<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"标准","id":"标准","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#AudioParam","title":"Web Audio API"}],"query":"api.AudioParam"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.AudioParam","dataURL":"/zh-CN/docs/Web/API/AudioParam/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using the Web Audio API (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"例子","id":"例子"},{"text":"标准","id":"标准"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"See also","id":"see_also"}],"summary":"AudioParam 接口代表音频相关的参数，通常是一个 AudioNode (例如 GainNode.gain) 的参数。一个 AudioParam 可以被设置为一个具体的值或者数值的改变，可以被安排在在一个具体的时刻并且遵循一个特定的模式发生。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"AudioParam","locale":"en-US","native":"English (US)"},{"title":"AudioParam","locale":"fr","native":"Français"},{"title":"AudioParam","locale":"ja","native":"日本語"},{"title":"AudioParam","locale":"ko","native":"한국어"},{"title":"AudioParam","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/audioparam","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/audioparam/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/AudioParam","title":"AudioParam"}],"pageTitle":"AudioParam - Web API 接口参考 | MDN","noIndexing":false}}