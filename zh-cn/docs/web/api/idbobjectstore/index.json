{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"IDBObjectStore","mdn_url":"/zh-CN/docs/Web/API/IDBObjectStore","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/IndexedDB_API\">IndexedDB API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/IDBObjectStore/autoIncrement\"><code>autoIncrement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/IDBObjectStore/indexNames\"><code>indexNames</code></a></li><li><a href=\"/zh-CN/docs/Web/API/IDBObjectStore/keyPath\"><code>keyPath</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore/name\"><code>name</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore/transaction\"><code>transaction</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/IDBObjectStore/add\"><code>add()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore/clear\"><code>clear()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore/count\"><code>count()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore/createIndex\"><code>createIndex()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore/delete\"><code>delete()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore/deleteIndex\"><code>deleteIndex()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/IDBObjectStore/get\"><code>get()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore/getAll\"><code>getAll()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore/getAllKeys\"><code>getAllKeys()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore/getKey\"><code>getKey()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore/index\"><code>index()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/IDBObjectStore/openCursor\"><code>openCursor()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore/openKeyCursor\"><code>openKeyCursor()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/IDBObjectStore/put\"><code>put()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>IndexedDB 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li><li><a href=\"/zh-CN/docs/Web/API/IDBFactory\"><code>IDBFactory</code></a></li><li><a href=\"/zh-CN/docs/Web/API/IDBIndex\"><code>IDBIndex</code></a></li><li><a href=\"/zh-CN/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li><li><a href=\"/zh-CN/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a></li><li><a href=\"/zh-CN/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a></li><li><a href=\"/zh-CN/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/zh-CN/docs/Web/API/IndexedDB_API\">IndexedDB API</a> 的 <strong><code>IDBObjectStore</code></strong> 接口表示数据库中的 一个 <a href=\"/zh-CN/IndexedDB#gloss_object_store\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">对象库 (object store)</a> 。对象库中的记录根据其键值进行排序。这种排序可以实现快速插入，查找和有序检索。</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 此特性在 <a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Worker</a> 中可用</p>\n</div>\n<p>注：为了方便理解，可以把“对象存储空间”想象成关系数据库的“表”结构，下文也会把对象存储空间称为表。</p>"}},{"type":"prose","value":{"id":"方法预览","title":"方法预览","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th><code>IDBRequest add (in any value, in optional any key) raises (DOMException);</code></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>IDBRequest clear() raises (DOMException);</code></td>\n    </tr>\n    <tr>\n      <td><code>IDBRequest count (in optional any key) raises (DOMException);</code></td>\n    </tr>\n    <tr>\n      <td><code>IDBIndex createIndex (in DOMString name, in DOMString keyPath, in optional boolean unique) raises (DOMException);</code></td>\n    </tr>\n    <tr>\n      <td><code>IDBRequest delete (in any key) raises (DOMException);</code></td>\n    </tr>\n    <tr>\n      <td>`void deleteIndex (in any DOMString indexName) raises (DOMException);</td>\n    </tr>\n    <tr>\n      <td><code>IDBRequest get (in any key) raises (DOMException);</code></td>\n    </tr>\n    <tr>\n      <td><code>IDBIndex index (in DOMString name) raises (DOMException);</code></td>\n    </tr>\n    <tr>\n      <td><code>IDBRequest openCursor (in optional IDBKeyRange range, in optional unsigned short direction) raises(DOMException);</code></td>\n    </tr>\n    <tr>\n      <td><code>IDBRequest put (in any value, in optional any key) raises (DOMException);</code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Attribute</th>\n      <th>Type</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>indexNames</code></td>\n      <td><code>readonly DOMStringList</code></td>\n      <td>表中对象的<a href=\"/zh-CN/IndexedDB#gloss_index\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">索引</a>名列表。</td>\n    </tr>\n    <tr>\n      <td><code>keyPath</code></td>\n      <td><code>readonly</code> <a href=\"/en-US/DOM/DOMString\"><code>DOMString</code></a></td>\n      <td>表中的<a href=\"/zh-CN/IndexedDB#gloss_key_path\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">键路径</a>，如果该属性为 null，每次操作表时必须提供一个键名。</td>\n    </tr>\n    <tr>\n      <td><code>name</code></td>\n      <td><code>readonly</code> <a href=\"/en-US/DOM/DOMString\"><code>DOMString</code></a></td>\n      <td>表名</td>\n    </tr>\n    <tr>\n      <td><code>transaction</code></td>\n      <td><code>readonly IDBTransaction</code></td>\n      <td>事务的名称，该表属于此事务。</td>\n    </tr>\n    <tr>\n      <td><code>autoIncrement</code></td>\n      <td><code>readonly boolean</code></td>\n      <td>表中自增字段的值</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":""}},{"type":"prose","value":{"id":"add","title":"add()","isH3":true,"content":"<p>返回一个 IDBRequest 对象，并且在新线程中克隆一个值，该值存储在表中。</p>\n<p>想知道是否成功添加数据，可以在事务的 complete 事件中进行监听，而不是 success，因为事务在 success 事件之后还有可能失败。</p>\n<p>add 方法只能插入数据。如果以 key 参数作为某记录的关键字，并且该条记录已存在，则其所返回的请求对象会产生 ConstrainError 错误。</p>\n<pre class=\"notranslate\">IDBRequest add (in any value, in optional any key) raises (DOMException);\n</pre>\n<h5 id=\"参数\">参数</h5>\n<dl>\n  <dt id=\"value\">value</dt>\n  <dd>\n    <p>被存储的值。</p>\n  </dd>\n  <dt id=\"key\">key</dt>\n  <dd>\n    <p>标识某条记录的键，如果不指定，它会被设为 null。</p>\n  </dd>\n</dl>\n<h5 id=\"返回\">返回</h5>\n<dl>\n  <dt id=\"idbrequest\"><a href=\"/zh-CN/IndexedDB/IDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBRequest</a></dt>\n  <dd>\n    <p>一个请求对象，可以在其中绑定事件。</p>\n  </dd>\n</dl>\n<h5 id=\"异常\">异常</h5>\n<p>该方法会抛出 DOMError 类型的 DOMException 异常。</p>\n<table class=\"standard-table\" style=\"font-size: 14px\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Exception</th>\n      <th scope=\"col\">Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>ReadOnlyError</td>\n      <td>\n        The transaction associated with this operation is in read-only\n        <a href=\"/en-US/docs/Web/API/IDBTransaction#mode_constants\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">mode (en-US)</a>.\n      </td>\n    </tr>\n    <tr>\n      <td>TransactionInactiveError</td>\n      <td>This IDBObjectStore's transaction is inactive.</td>\n    </tr>\n    <tr>\n      <td>DataError</td>\n      <td>\n        <p>Any of the following conditions apply:</p>\n        <ul>\n          <li>\n            The object store uses in-line keys or has a key generator, and a key\n            parameter was provided.\n          </li>\n          <li>\n            The object store uses out-of-line keys and has no key generator, and\n            no key parameter was provided.\n          </li>\n          <li>\n            The object store uses in-line keys but no key generator, and the\n            object store's key path does not yield a valid key.\n          </li>\n          <li>The key parameter was provided but does not contain a valid key.</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td><code>InvalidStateError</code></td>\n      <td>The IDBObjectStore has been deleted or removed.</td>\n    </tr>\n    <tr>\n      <td><code>DataCloneError</code></td>\n      <td>\n        The data being stored could not be cloned by the internal structured\n        cloning algorithm.\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"clear","title":"clear()","isH3":true,"content":"<p>创建并立即返回一个 <a href=\"/zh-CN/IndexedDB/IDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBRequest</a> 对象，并且在一个单独的线程中清除这个对象存储。清除对象存储包括从对象存储中删除所有的记录，并删除对象存储引用的索引中的所有记录。</p>\n<pre class=\"notranslate\">IDBRequest clear () raises (DOMException);\n</pre>\n<h5 id=\"returns\">Returns</h5>\n<dl>\n  <dt id=\"idbrequest_2\"><a href=\"/zh-CN/IndexedDB/IDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBRequest</a></dt>\n  <dd>\n    <p>返回一个 request 对象，在其上触发与操作相关的事件。</p>\n  </dd>\n</dl>\n<h5 id=\"exceptions\">Exceptions</h5>\n<p>此方法可能会引发 domException，其中 domError 的类型如下：</p>\n<table>\n  <thead>\n    <tr>\n      <th>Exception</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>ReadOnlyError</td>\n      <td>The transaction associated with this operation is in read-only <a href=\"/en-US/docs/Web/API/IDBTransaction#mode_constants\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">mode (en-US)</a>.</td>\n    </tr>\n    <tr>\n      <td>TransactionInactiveError</td>\n      <td>This IDBObjectStore's transaction is inactive.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"count","title":"count()","isH3":true,"content":"<p>立即返回一个 <a href=\"/zh-CN/IndexedDB/IDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBRequest</a> 对象，并在新线程中计算符合条件的对象的数量，该方法的参数可以是键，或键范围（key range）。在 <a href=\"/zh-CN/IndexedDB/IDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBRequest</a> 对象中，source 属性就是 IDBObjectStore 对象，result 属性持有计算后的数量值。如果参数非法将会抛出异常。</p>\n<pre class=\"notranslate\">IDBRequest count (in optional any key) raises(DOMException);\n</pre>\n<h5 id=\"参数_2\">参数</h5>\n<dl>\n  <dt id=\"key_2\">key</dt>\n  <dd>\n    <p>计算被该键或键范围（key range）所标识的记录数。</p>\n  </dd>\n</dl>\n<h5 id=\"returns_2\">Returns</h5>\n<dl>\n  <dt id=\"idbrequest_3\"><a href=\"/zh-CN/IndexedDB/IDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBRequest</a></dt>\n  <dd>\n    <p>一个请求对象，可绑定事件。</p>\n  </dd>\n</dl>\n<h5 id=\"异常_2\">异常</h5>\n<p>该方法会引发如下异常：</p>\n<table>\n  <thead>\n    <tr>\n      <th>Exception</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>TransactionInactiveError</td>\n      <td>事务已闲置</td>\n    </tr>\n    <tr>\n      <td>DataError</td>\n      <td>key 参数非法</td>\n    </tr>\n    <tr>\n      <td><code>InvalidStateError</code></td>\n      <td>IDBObjectStore 对象已被删除</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"createindex","title":"createIndex()","isH3":true,"content":"<p>创建并返回新的 IDBIndex 对象，该方法只能从 versionchange 事务模式的回调方法中被调用。</p>\n<pre class=\"notranslate\">IDBIndex createIndex  (in DOMString name, in DOMString keyPath, in optional boolean unique) raises (DOMException);\n</pre>\n<h5 id=\"parameters\">Parameters</h5>\n<dl>\n  <dt id=\"name\">name</dt>\n  <dd>\n    <p>The name of the index to create.</p>\n  </dd>\n  <dt id=\"keypath\">keyPath</dt>\n  <dd>\n    <p>The key path for the index to use.</p>\n  </dd>\n  <dt id=\"optionalparameters\">optionalParameters</dt>\n  <dd>\n    <p>The IDBIndexParameters object whose attributes are optional parameters to the method. It includes the following properties:</p>\n    <table>\n      <thead>\n        <tr>\n          <th>Attribute</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><code>unique</code></td>\n          <td>If true, the index will not allow duplicate values for a single key.</td>\n        </tr>\n        <tr>\n          <td><code>multiEntry</code></td>\n          <td>If true, the index will add an entry in the index for each array element when the <em>keypath</em> resolves to an Array. If false, it will add one single entry containing the Array.</td>\n        </tr>\n      </tbody>\n    </table>\n  </dd>\n</dl>\n<h5 id=\"returns_3\">Returns</h5>\n<dl>\n  <dt id=\"idbindex\"><a href=\"/zh-CN/IndexedDB/IDBIndex\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBIndex</a></dt>\n  <dd>\n    <p>The newly created index.</p>\n  </dd>\n</dl>\n<h5 id=\"exceptions_2\">Exceptions</h5>\n<p>This method may raise a <a href=\"/en-US/docs/Web/API/DOMException\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMException (en-US)</a> with a <a href=\"/en-US/docs/Web/API/DOMError\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMError (en-US)</a> of the following types:</p>\n<table>\n  <thead>\n    <tr>\n      <th>Exception</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>InvalidStateError</code></td>\n      <td>The IDBObjectStore has been deleted or removed or the method was not called from a <a href=\"/en-US/docs/Web/API/IDBTransaction#version_change\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">versionchange (en-US)</a> transaction mode callback.</td>\n    </tr>\n    <tr>\n      <td><code>ConstraintError</code></td>\n      <td>An index with the same name (case-sensitive) already exists in the database.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"delete","title":"delete()","isH3":true,"content":"<p>Immediately returns an <a href=\"/zh-CN/IndexedDB/IDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>IDBRequest</code></a> object, and removes the records specified by the given key or key range from this object store, and any indexes that reference it, in a separate thread.</p>\n<pre class=\"notranslate\">IDBRequest delete (in any key) raises (DOMException);\n</pre>\n<h5 id=\"parameters_2\">Parameters</h5>\n<dl>\n  <dt id=\"key_3\">key</dt>\n  <dd>\n    <p>The key or key range that identifies the records.</p>\n  </dd>\n</dl>\n<h5 id=\"returns_4\">Returns</h5>\n<dl>\n  <dt id=\"idbrequest_4\"><a href=\"/zh-CN/IndexedDB/IDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBRequest</a></dt>\n  <dd>\n    <p>A request object on which subsequent events related to this operation are fired. As <a href=\"https://www.w3.org/TR/IndexedDB/#object-store-deletion-operation\" class=\"external\" rel=\" noopener\">per spec</a> the result of the Object Store Deletion Operation algorithm is <code>undefined</code>, so it's not possible to know if some records were actually deleted by looking at the request result.</p>\n  </dd>\n</dl>\n<h5 id=\"exceptions_3\">Exceptions</h5>\n<p>This method may raise a <a href=\"/en-US/docs/Web/API/DOMException\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMException (en-US)</a> with a <a href=\"/en-US/docs/Web/API/DOMError\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMError (en-US)</a> of the following types:</p>\n<table>\n  <thead>\n    <tr>\n      <th>Exception</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>TransactionInactiveError</td>\n      <td>This IDBObjectStore's transaction is inactive.</td>\n    </tr>\n    <tr>\n      <td>ReadOnlyError</td>\n      <td>The transaction associated with this operation is in read-only <a href=\"/en-US/docs/Web/API/IDBTransaction#mode_constants\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">mode (en-US)</a>.</td>\n    </tr>\n    <tr>\n      <td><code>DataError</code></td>\n      <td>The key or key range provided contains an invalid key.</td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> If the key that identifies the record is a Number, the key passed to the delete method must be a Number too, and not a String. So for example you might need to do the following:</p>\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> key_val <span class=\"token operator\">=</span> <span class=\"token string\">'42'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> key <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>key_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobjectstore<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</div>"}},{"type":"prose","value":{"id":"deleteindex","title":"deleteIndex()","isH3":true,"content":"<p>Destroys the index with the specified name in the connected database. Note that this method must be called only from a <a href=\"/zh-CN/IndexedDB/IDBTransaction#VERSION_CHANGE\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>VersionChange</code></a> transaction mode callback. Note that this method synchronously modifies the <a href=\"#attr_indexnames\">indexNames</a> property.</p>\n<pre class=\"notranslate\">void deleteIndex (in any DOMString indexName) raises (DOMException);\n</pre>\n<h5 id=\"parameters_3\">Parameters</h5>\n<dl>\n  <dt id=\"indexname\">indexName</dt>\n  <dd>\n    <p>The name of the existing index to remove.</p>\n  </dd>\n  <dt id=\"returns_5\">Returns</dt>\n  <dd>\n    <p>Void</p>\n  </dd>\n</dl>\n<h5 id=\"exceptions_4\">Exceptions</h5>\n<p>This method may raise a <a href=\"/en-US/docs/Web/API/DOMException\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMException (en-US)</a> with a <a href=\"/en-US/docs/Web/API/DOMError\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMError (en-US)</a> of the following types:</p>\n<table>\n  <thead>\n    <tr>\n      <th>Exception</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>InvalidStateError</code></td>\n      <td>The method was not called from a <a href=\"/en-US/docs/Web/API/IDBTransaction#version_change\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">versionchange (en-US)</a> transaction mode callback.</td>\n    </tr>\n    <tr>\n      <td><code>NotFoundError</code></td>\n      <td>There is no index with the given name (case-sensitive) in the database.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"get","title":"get()","isH3":true,"content":"<p>Immediately returns an <a href=\"/zh-CN/IndexedDB/IDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBRequest</a> object, and retrieves the requested record from the object store in a separate thread. If the operation is successful, then a success event is fired on the returned object, with its <a href=\"/zh-CN/IndexedDB/IDBSuccessEvent#attr_result\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>result</code></a> set to the retrieved value, and <a href=\"/zh-CN/IndexedDB/IDBTransactionEvent#attr_transaction\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>transaction</code></a> set to the transaction in which this object store is opened.</p>\n<pre class=\"notranslate\">IDBRequest get (in any key) raises (DOMException);\n</pre>\n<blockquote>\n  <p>**备注：**This function produces the same result if no record with the given key exists in the database as when a record exists, but with an <code>undefined</code> value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and no cursor if it does not.</p>\n</blockquote>\n<h5 id=\"parameters_4\">Parameters</h5>\n<dl>\n  <dt id=\"key_4\">key</dt>\n  <dd>\n    <p>The key or key range identifying the record to retrieve. In the case of a key range, the record returned is the first record associated with the first key in the range.</p>\n  </dd>\n</dl>\n<h5 id=\"returns_6\">Returns</h5>\n<dl>\n  <dt id=\"idbrequest_5\"><a href=\"/zh-CN/IndexedDB/IDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>IDBRequest</code></a></dt>\n  <dd>\n    <p>A request object on which subsequent events related to this operation are fired.</p>\n  </dd>\n</dl>\n<h5 id=\"exceptions_5\">Exceptions</h5>\n<p>This method may raise a <a href=\"/en-US/docs/Web/API/DOMException\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMException (en-US)</a> with a <a href=\"/en-US/docs/Web/API/DOMError\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMError (en-US)</a> of the following types:</p>\n<table>\n  <thead>\n    <tr>\n      <th>Exception</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>TransactionInactiveError</td>\n      <td>This IDBObjectStore's transaction is inactive.</td>\n    </tr>\n    <tr>\n      <td>DataError</td>\n      <td>The key or key range provided contains and invalid key.</td>\n    </tr>\n    <tr>\n      <td><code>InvalidStateError</code></td>\n      <td>The IDBObjectStore has been deleted or removed.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"index","title":"index()","isH3":true,"content":"<p>Opens the named index in this object store.</p>\n<pre class=\"notranslate\">IDBIndex index (in DOMString name) raises (DOMException);\n</pre>\n<h5 id=\"parameters_5\">Parameters</h5>\n<dl>\n  <dt id=\"name_2\">name</dt>\n  <dd>\n    <p>The name of the index to open.</p>\n  </dd>\n</dl>\n<h5 id=\"returns_7\">Returns</h5>\n<dl>\n  <dt id=\"idbindex_2\"><a href=\"/zh-CN/IndexedDB/IDBIndex\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>IDBIndex</code></a></dt>\n  <dd>\n    <p>An object for accessing the index.</p>\n  </dd>\n</dl>\n<h5 id=\"exceptions_6\">Exceptions</h5>\n<p>This method may raise a <a href=\"/en-US/docs/Web/API/DOMException\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMException (en-US)</a> with a <a href=\"/en-US/docs/Web/API/DOMError\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMError (en-US)</a> of the following types:</p>\n<table>\n  <thead>\n    <tr>\n      <th>Exception</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>InvalidStateError</code></td>\n      <td>The source object store has been deleted, or the transaction for the object store has finished.</td>\n    </tr>\n    <tr>\n      <td><code>NotFoundError</code></td>\n      <td>There is no index with the given name (case-sensitive) in the database.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"opencursor","title":"openCursor()","isH3":true,"content":"<p>Immediately returns an <a href=\"/zh-CN/IndexedDB/IDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBRequest</a> object, and creates a <a href=\"/en-US/docs/Web/API/IDBCursor\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">cursor (en-US)</a> over the records in this object store, in a separate thread. If there is even a single record that matches the <a href=\"/zh-CN/IndexedDB#gloss_key_range\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">key range</a>, then a success event is fired on the returned object, with its <a href=\"/zh-CN/IndexedDB/IDBSuccessEvent#attr_result\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>result</code></a> set to the <a href=\"/zh-CN/IndexedDB/IDBCursor\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBCursor</a> object for the new cursor. If no records match the key range, then a success event is fired on the returned object, with its <a href=\"/zh-CN/IndexedDB/IDBSuccessEvent#attr_result\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>result</code></a> set to null.</p>\n<pre class=\"notranslate\">IDBRequest openCursor (in optional IDBKeyRange range, in optional unsigned short direction) raises(DOMException);\n</pre>\n<h5 id=\"parameters_6\">Parameters</h5>\n<dl>\n  <dt id=\"range\">range</dt>\n  <dd>\n    <p>The key range to use as the cursor's range. If this parameter is unspecified or null, then the range includes all the records in the object store.</p>\n  </dd>\n  <dt id=\"direction\">direction</dt>\n  <dd>\n    <p>The cursor's <a href=\"/en-US/docs/Web/API/IDBCursor\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">direction (en-US)</a>.</p>\n  </dd>\n</dl>\n<h5 id=\"returns_8\">Returns</h5>\n<dl>\n  <dt id=\"idbrequest_6\"><a href=\"/zh-CN/IndexedDB/IDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>IDBRequest</code></a></dt>\n  <dd>\n    <p>A request object on which subsequent events related to this operation are fired.</p>\n  </dd>\n</dl>\n<h5 id=\"exceptions_7\">Exceptions</h5>\n<p>This method may raise a <a href=\"/en-US/docs/Web/API/DOMException\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMException (en-US)</a> with a <a href=\"/en-US/docs/Web/API/DOMError\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMError (en-US)</a> of the following types:</p>\n<table>\n  <thead>\n    <tr>\n      <th>Exception</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>TransactionInactiveError</td>\n      <td>This IDBObjectStore's transaction is inactive.</td>\n    </tr>\n    <tr>\n      <td>DataError</td>\n      <td>The key or key range provided contains and invalid key.</td>\n    </tr>\n    <tr>\n      <td><code>InvalidStateError</code></td>\n      <td>The IDBObjectStore has been deleted or removed.</td>\n    </tr>\n    <tr>\n      <td><code>TypeError</code></td>\n      <td>The value of the <code>direction</code> parameter is invalid.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"put","title":"put()","isH3":true,"content":"<p>Returns an <a href=\"/zh-CN/IndexedDB/IDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBRequest</a> object, and, in a separate thread, creates a <a href=\"https://www.whatwg.org/specs/web-apps/current-work/multipage/common-dom-interfaces.html#structured-clone\" class=\"external\" rel=\" noopener\">structured clone</a> of the <code>value</code>, and stores the cloned value in the object store. If the record is successfully stored, then a success event is fired on the returned request object with the <a href=\"/en-US/docs/Web/API/IDBRequest\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">result (en-US)</a> set to the key for the stored record, and <a href=\"/en-US/docs/Web/API/IDBRequest\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">transaction (en-US)</a> set to the transaction in which this object store is opened.</p>\n<p>The put method is an <em>update or insert</em> method. See also the <a href=\"#add\">add()</a> method.</p>\n<pre class=\"notranslate\">IDBRequest put (in any value, in optional any key) raises (DOMException);\n</pre>\n<h5 id=\"parameters_7\">Parameters</h5>\n<dl>\n  <dt id=\"value_2\">value</dt>\n  <dd>\n    <p>The value to be stored.</p>\n  </dd>\n  <dt id=\"key_5\">key</dt>\n  <dd>\n    <p>The key to use to identify the record. If unspecified, it results to null.</p>\n  </dd>\n</dl>\n<h5 id=\"returns_9\">Returns</h5>\n<dl>\n  <dt id=\"idbrequest_7\">IDBRequest</dt>\n  <dd>\n    <p>A request object on which subsequent events related to this operation are fired.</p>\n  </dd>\n</dl>\n<h5 id=\"exceptions_8\">Exceptions</h5>\n<p>This method may raise a <a href=\"/en-US/docs/Web/API/DOMException\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMException (en-US)</a> with a <a href=\"/en-US/docs/Web/API/DOMError\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DOMError (en-US)</a> of the following types:</p>\n<table class=\"standard-table\" style=\"font-size: 14px\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Exception</th>\n      <th scope=\"col\">Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>ReadOnlyError</td>\n      <td>\n        The transaction associated with this operation is in read-only\n        <a href=\"/en-US/docs/Web/API/IDBTransaction#mode_constants\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">mode (en-US)</a>.\n      </td>\n    </tr>\n    <tr>\n      <td>TransactionInactiveError</td>\n      <td>This IDBObjectStore's transaction is inactive.</td>\n    </tr>\n    <tr>\n      <td>DataError</td>\n      <td>\n        <p>Any of the following conditions apply:</p>\n        <ul>\n          <li>\n            The object store uses in-line keys or has a key generator, and a key\n            parameter was provided.\n          </li>\n          <li>\n            The object store uses out-of-line keys and has no key generator, and\n            no key parameter was provided.\n          </li>\n          <li>\n            The object store uses in-line keys but no key generator, and the\n            object store's key path does not yield a valid key.\n          </li>\n          <li>The key parameter was provided but does not contain a valid key.</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td><code style=\"font-size: 14px\">InvalidStateError</code></td>\n      <td>The IDBObjectStore has been deleted or removed.</td>\n    </tr>\n    <tr>\n      <td><code style=\"font-size: 14px\">DataCloneError</code></td>\n      <td>\n        The data being stored could not be cloned by the internal structured\n        cloning algorithm.\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>This example shows a variety of different uses of object stores, from updating the data structure with <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore/createIndex\"><code>IDBObjectStore.createIndex</code> <small>(en-US)</small></a> inside an <code>onupgradeneeded</code>function, to adding a new item to our object store with <a href=\"/zh-CN/docs/Web/API/IDBObjectStore/add\"><code>IDBObjectStore.add</code></a>. For a full working example, see our <a href=\"https://github.com/mdn/to-do-notifications/\" class=\"external\" rel=\" noopener\">To-do Notifications</a> app (<a href=\"https://mdn.github.io/to-do-notifications/\" class=\"external\" rel=\" noopener\">view example live</a>.)</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Let us open our database</span>\n<span class=\"token keyword\">var</span> DBOpenRequest <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nDBOpenRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Database initialised.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// store the result of opening the database in db.</span>\n  db <span class=\"token operator\">=</span> DBOpenRequest<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// This event handles the event whereby a new version of</span>\n<span class=\"token comment\">// the database needs to be created Either one has not</span>\n<span class=\"token comment\">// been created before, or a new version number has been</span>\n<span class=\"token comment\">// submitted via the window.indexedDB.open line above</span>\nDBOpenRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onupgradeneeded</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n  db<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Error loading database.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create an objectStore for this database</span>\n\n  <span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">createObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">keyPath</span><span class=\"token operator\">:</span> <span class=\"token string\">\"taskTitle\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// define what data items the objectStore will contain</span>\n\n  objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hours\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hours\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"minutes\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"minutes\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"month\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"month\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"year\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"year\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"notified\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"notified\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Object store created.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create a new item to add in to the object store</span>\n<span class=\"token keyword\">var</span> newItem <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">taskTitle</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Walk dog\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">hours</span><span class=\"token operator\">:</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">minutes</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">day</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">month</span><span class=\"token operator\">:</span> <span class=\"token string\">'December'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">year</span><span class=\"token operator\">:</span> <span class=\"token number\">2013</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">notified</span><span class=\"token operator\">:</span> <span class=\"token string\">\"no\"</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// open a read/write db transaction, ready for adding the data</span>\n<span class=\"token keyword\">var</span> transaction <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// report on the success of the transaction completing, when everything is done</span>\ntransaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oncomplete</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Transaction completed.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ntransaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Transaction not opened due to error. Duplicate items not allowed.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create an object store on the transaction</span>\n<span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// make a request to add our newItem object to the object store</span>\n<span class=\"token keyword\">var</span> objectStoreRequest <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newItem<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nobjectStoreRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Request successful .&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/IndexedDB/#object-store-interface","title":"Indexed Database API 3.0"}],"query":"api.IDBObjectStore"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.IDBObjectStore","dataURL":"/zh-CN/docs/Web/API/IDBObjectStore/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The compatibility table on this page is generated from structured data. If you'd like to contribute to the data, please check out <a href=\"https://github.com/mdn/browser-compat-data\" class=\"external\" rel=\" noopener\">https://github.com/mdn/browser-compat-data</a>and send us a pull request.</p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/IndexedDB_API/Using_IndexedDB\">Using IndexedDB</a></li>\n  <li>Starting transactions: <a href=\"/zh-CN/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li>\n  <li>Using transactions: <a href=\"/zh-CN/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li>\n  <li>Setting a range of keys: <a href=\"/zh-CN/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li>\n  <li>Retrieving and making changes to your data: <a href=\"/zh-CN/docs/Web/API/IDBObjectStore\" aria-current=\"page\"><code>IDBObjectStore</code></a></li>\n  <li>Using cursors: <a href=\"/zh-CN/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li>\n  <li>Reference example: <a href=\"https://github.com/mdn/to-do-notifications/tree/gh-pages\" class=\"external\" rel=\" noopener\">To-do Notifications</a> (<a href=\"https://mdn.github.io/to-do-notifications/\" class=\"external\" rel=\" noopener\">view example live</a>.)</li>\n</ul>"}}],"toc":[{"text":"方法预览","id":"方法预览"},{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"IndexedDB API 的 IDBObjectStore 接口表示数据库中的 一个 对象库 (object store) 。对象库中的记录根据其键值进行排序。这种排序可以实现快速插入，查找和有序检索。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"IDBObjectStore","locale":"en-US","native":"English (US)"},{"title":"IDBObjectStore","locale":"es","native":"Español"},{"title":"IDBObjectStore","locale":"fr","native":"Français"}],"source":{"folder":"zh-cn/web/api/idbobjectstore","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/idbobjectstore/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/IDBObjectStore","title":"IDBObjectStore"}],"pageTitle":"IDBObjectStore - Web API 接口参考 | MDN","noIndexing":false}}