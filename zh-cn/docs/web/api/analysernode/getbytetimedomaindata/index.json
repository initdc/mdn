{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"AnalyserNode.getByteTimeDomainData()","mdn_url":"/zh-CN/docs/Web/API/AnalyserNode/getByteTimeDomainData","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AnalyserNode/AnalyserNode\"><code>AnalyserNode()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AnalyserNode/fftSize\"><code>fftSize</code></a></li><li><a href=\"/zh-CN/docs/Web/API/AnalyserNode/frequencyBinCount\"><code>frequencyBinCount</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AnalyserNode/maxDecibels\"><code>maxDecibels</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AnalyserNode/minDecibels\"><code>minDecibels</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/AnalyserNode/smoothingTimeConstant\"><code>smoothingTimeConstant</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AnalyserNode/getByteFrequencyData\"><code>getByteFrequencyData()</code></a></li><li><em><code>getByteTimeDomainData()</code></em></li><li><a href=\"/zh-CN/docs/Web/API/AnalyserNode/getFloatFrequencyData\"><code>getFloatFrequencyData()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AnalyserNode/getFloatTimeDomainData\"><code>getFloatTimeDomainData()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/zh-CN/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a> 接口的 <strong><code>getByteTimeDomainData()</code></strong> 方法复制当前波形或时域数据到传递给它的 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code> <small>(en-US)</small></a> (无符号字节数组) 中。</p>\n<p>如果该数组的元素少于 <a href=\"/zh-CN/docs/Web/API/AnalyserNode/fftSize\"><code>AnalyserNode.fftSize</code></a>, 多余的元素会被丢弃。如果它有多于所需的元素，则忽略多余的元素。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> analyser <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createAnalyser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> dataArray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>analyser<span class=\"token punctuation\">.</span>fftSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Uint8Array should be the same length as the fftSize</span>\nanalyser<span class=\"token punctuation\">.</span><span class=\"token function\">getByteTimeDomainData</span><span class=\"token punctuation\">(</span>dataArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// fill the Uint8Array with data returned from getByteTimeDomainData()</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"array\"><code>array</code></dt>\n  <dd>\n    <p>\n      时域数据将被复制到的 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code> <small>(en-US)</small></a> 。\n      如果数组中的元素少于 <a href=\"/zh-CN/docs/Web/API/AnalyserNode/frequencyBinCount\"><code>AnalyserNode.frequencyBinCount</code></a>, 则会删除多余的元素。如果它包含的元素多于需要的元素，则忽略多余的元素。\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p><strong><code>void</code></strong> | None</p>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":"<p>以下的例子展示了 <a href=\"/zh-CN/docs/Web/API/AudioContext\"><code>AudioContext</code></a> 生成一个 <code>AnalyserNode</code> 基础用法，然后通过 <a href=\"/zh-CN/docs/Web/API/Window/requestAnimationFrame\" title=\"requestAnimationFrame\"><code>requestAnimationFrame</code></a> 和 <a href=\"/zh-CN/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 重复的收集和绘制一个当前音频输入的“示波器样式”输出。有关更完整的应用实例/信息，请查看我们的 <a href=\"https://mdn.github.io/voice-change-o-matic/\" class=\"external\" rel=\" noopener\">Voice-change-O-matic</a> demo (有关代码请参阅 <a href=\"https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205\" class=\"external\" rel=\" noopener\">app.js lines 128–205</a>)。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> analyser <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createAnalyser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token operator\">...</span>\n\nanalyser<span class=\"token punctuation\">.</span>fftSize <span class=\"token operator\">=</span> <span class=\"token number\">2048</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bufferLength <span class=\"token operator\">=</span> analyser<span class=\"token punctuation\">.</span>frequencyBinCount<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> dataArray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>bufferLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nanalyser<span class=\"token punctuation\">.</span><span class=\"token function\">getByteTimeDomainData</span><span class=\"token punctuation\">(</span>dataArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// draw an oscilloscope of the current audio source</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n      drawVisual <span class=\"token operator\">=</span> <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      analyser<span class=\"token punctuation\">.</span><span class=\"token function\">getByteTimeDomainData</span><span class=\"token punctuation\">(</span>dataArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      canvasCtx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgb(200, 200, 200)'</span><span class=\"token punctuation\">;</span>\n      canvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">WIDTH</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">HEIGHT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      canvasCtx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n      canvasCtx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgb(0, 0, 0)'</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">var</span> sliceWidth <span class=\"token operator\">=</span> <span class=\"token constant\">WIDTH</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> bufferLength<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> bufferLength<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> v <span class=\"token operator\">=</span> dataArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">128.0</span><span class=\"token punctuation\">,</span>\n            y <span class=\"token operator\">=</span> v <span class=\"token operator\">*</span> <span class=\"token constant\">HEIGHT</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n          canvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>\n          canvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        x <span class=\"token operator\">+=</span> sliceWidth<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      canvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      canvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规格","id":"规格","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-analysernode-getbytetimedomaindata","title":"Web Audio API"}],"query":"api.AnalyserNode.getByteTimeDomainData"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.AnalyserNode.getByteTimeDomainData","dataURL":"/zh-CN/docs/Web/API/AnalyserNode/getByteTimeDomainData/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using the Web Audio API (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"例子","id":"例子"},{"text":"规格","id":"规格"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"See also","id":"see_also"}],"summary":"AnalyserNode 接口的 getByteTimeDomainData() 方法复制当前波形或时域数据到传递给它的 Uint8Array (en-US) (无符号字节数组) 中。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"AnalyserNode.getByteTimeDomainData()","locale":"en-US","native":"English (US)"},{"title":"AnalyserNode.getByteTimeDomainData()","locale":"fr","native":"Français"},{"title":"AnalyserNode.getByteTimeDomainData()","locale":"ko","native":"한국어"}],"source":{"folder":"zh-cn/web/api/analysernode/getbytetimedomaindata","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/analysernode/getbytetimedomaindata/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/AnalyserNode","title":"AnalyserNode"},{"uri":"/zh-CN/docs/Web/API/AnalyserNode/getByteTimeDomainData","title":"AnalyserNode.getByteTimeDomainData()"}],"pageTitle":"AnalyserNode.getByteTimeDomainData() - Web API 接口参考 | MDN","noIndexing":false}}