{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"NodeList.values()","mdn_url":"/zh-CN/docs/Web/API/NodeList/values","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>该方法返回一个 iterator 迭代器，可以利用迭代器遍历所有 value。</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<pre class=\"notranslate\">nodeList.values();\n</pre>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>Returns an <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>.</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> kid1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> kid2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hey\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> kid3 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nnode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>kid1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nnode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>kid2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nnode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>kid3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Using for..of</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> value <span class=\"token keyword\">of</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>The result is:</p>\n<pre class=\"notranslate\">&lt;p&gt;\n#text \"hey\"\n&lt;span&gt;\n</pre>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.NodeList.values","dataURL":"/zh-CN/docs/Web/API/NodeList/values/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Node\"><code>Node</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/NodeList\"><code>NodeList</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Example","id":"example"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"该方法返回一个 iterator 迭代器，可以利用迭代器遍历所有 value。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"NodeList.values()","locale":"en-US","native":"English (US)"},{"title":"NodeList.values()","locale":"fr","native":"Français"},{"title":"NodeList.values()","locale":"ko","native":"한국어"}],"source":{"folder":"zh-cn/web/api/nodelist/values","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/nodelist/values/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/NodeList","title":"NodeList"},{"uri":"/zh-CN/docs/Web/API/NodeList/values","title":"NodeList.values()"}],"pageTitle":"NodeList.values() - Web API 接口参考 | MDN","noIndexing":false}}