{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"FileList","mdn_url":"/zh-CN/docs/Web/API/FileList","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/File_API\">File API <small>(en-US)</small></a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/FileList\"><code>FileList</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/FileList/length\"><code>length</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/FileList/item\"><code>item()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>File API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a></li><li><a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FileReader\"><code>FileReader</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FileReaderSync\"><code>FileReaderSync</code></a></li><li><a href=\"/zh-CN/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/URL/revokeObjectURL\"><code>URL.revokeObjectURL()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>一个 FileList 对象通常来自于一个 HTML <a href=\"/zh-CN/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a> 元素的 <code>files</code> 属性，你可以通过这个对象访问到用户所选择的文件。该类型的对象还有可能来自用户的拖放操作，查看 <a href=\"/en-US/docs/Web/API/DataTransfer\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">DataTransfer (en-US)</a> 对象了解详情。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 在 Gecko 1.9.2 之前，通过 <code>input</code> 元素，每次只能选择一个文件，这意味着该 <code>input</code> 元素的 <code>files</code> 属性上的 FileList 对象无论如何都只能包含一个文件。从 Gecko 1.9.2 开始，如果一个 <code>input</code> 元素拥有 <code>multiple</code> 属性，则可以用它来选择多个文件。</p>\n</div>"}},{"type":"prose","value":{"id":"使用_filelist","title":"使用 FileList","isH3":false,"content":"<p>所有 type 属性 (attribute) 为 file 的 <code>&lt;input&gt;</code> 元素都有一个 files 属性 (property),用来存储用户所选择的文件。例如：</p>\n<pre class=\"notranslate\">&lt;input id=\"fileItem\" type=\"file\"&gt;\n</pre>\n<p>下面的一行代码演示如何获取到一个 FileList 对象中的第一个文件 (<a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a> 对象):</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> file <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fileItem'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"方法概述","title":"方法概述","isH3":false,"content":"<pre class=\"notranslate\">File item(index);\n</pre>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>属性名</th>\n      <th>类型</th>\n      <th>描述</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>length</code></td>\n      <td><code>integer</code></td>\n      <td>一个只读的整数值，用来返回列表中的文件数量。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":""}},{"type":"prose","value":{"id":"item","title":"<code>item()</code>","isH3":true,"content":"<p>根据给定的索引值，返回 FileList 对象中对应的 <a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a> 对象。</p>\n<pre class=\"notranslate\"> File item(\n   index\n );\n</pre>\n<h6 id=\"参数\">参数</h6>\n<dl>\n  <dt id=\"index\"><code>index</code></dt>\n  <dd>\n    <p>File 对象在 FileList 对象中的索引值，从 0 开始。</p>\n  </dd>\n</dl>\n<h6 id=\"返回值\">返回值</h6>\n<p>所请求的<a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a>对象。</p>","titleAsText":"item()"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>这个例子迭代了用户通过一个 <code>input</code> 元素选择的多个文件：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// fileInput 是一个 HTML input 元素：&lt;input type=\"file\" id=\"myfileinput\" multiple&gt;</span>\n<span class=\"token keyword\">var</span> fileInput <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myfileinput\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// files 是一个 FileList 对象 (类似于 NodeList 对象)</span>\n<span class=\"token keyword\">var</span> files <span class=\"token operator\">=</span> fileInput<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> file<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 遍历所有文件</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 取得一个文件</span>\n    file <span class=\"token operator\">=</span> files<span class=\"token punctuation\">.</span><span class=\"token function\">item</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 这样也行</span>\n    file <span class=\"token operator\">=</span> files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 取得文件名</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>下面是一个更完整的例子。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">HTML</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- multiple 属性允许用户选择多个文件 --&gt;</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myfiles<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">multiple</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">pullfiles</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// love the query selector</span>\n    <span class=\"token keyword\">var</span> fileInput <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myfiles\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> files <span class=\"token operator\">=</span> fileInput<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 获取所选文件数量</span>\n    <span class=\"token keyword\">var</span> fl <span class=\"token operator\">=</span> files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">&lt;</span> fl<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// localize file var in the loop</span>\n        <span class=\"token keyword\">var</span> file <span class=\"token operator\">=</span> files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 设置 change 事件处理函数</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myfiles\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>onchange<span class=\"token operator\">=</span>pullfiles<span class=\"token punctuation\">;</span>\n\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/FileAPI/#filelist-section","title":"File API"},{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/input.html#dom-input-files-dev","title":"HTML Standard"}],"query":"api.FileList"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.FileList","dataURL":"/zh-CN/docs/Web/API/FileList/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/File_API/Using_files_from_web_applications\">如何在 Web 应用程序中使用文件</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/FileReader\"><code>FileReader</code></a></li>\n</ul>"}}],"toc":[{"text":"使用 FileList","id":"使用_filelist"},{"text":"方法概述","id":"方法概述"},{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"一个 FileList 对象通常来自于一个 HTML <input> 元素的 files 属性，你可以通过这个对象访问到用户所选择的文件。该类型的对象还有可能来自用户的拖放操作，查看 DataTransfer (en-US) 对象了解详情。","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"FileList","locale":"en-US","native":"English (US)"},{"title":"FileList","locale":"fr","native":"Français"},{"title":"FileList","locale":"ja","native":"日本語"},{"title":"FileList","locale":"ko","native":"한국어"},{"title":"FileList","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"FileList","locale":"ru","native":"Русский"},{"title":"FileList","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/filelist","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/filelist/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/FileList","title":"FileList"}],"pageTitle":"FileList - Web API 接口参考 | MDN","noIndexing":false}}