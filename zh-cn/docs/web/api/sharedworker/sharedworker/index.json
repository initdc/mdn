{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"SharedWorker()","mdn_url":"/zh-CN/docs/Web/API/SharedWorker/SharedWorker","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Workers API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><em><code>SharedWorker()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker/port\"><code>port</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker/error_event\"><code>SharedWorker: error event</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Web Workers API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Worker\"><code>Worker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerLocation\"><code>WorkerLocation</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>SharedWorker()</code></strong> 构造函数实例化的 <a href=\"/zh-CN/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a> 对象可以执行指定的 URL 的脚本。所执行的脚本必须遵守 <a href=\"/zh-CN/docs/Web/Security/Same-origin_policy\">同源策略</a>。</p>\n<p>如果 URL 的语法无效或者违反了同源策略会抛出 <code>SECURITY_ERR</code> 类型的 <a href=\"/zh-CN/docs/Web/API/DOMException\"><code>DOMException</code></a> 异常。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 浏览器开发者对于 data URI 是否同源产生分歧。尽管 Gecko 10.0 (Firefox 10.0 / Thunderbird 10.0 / SeaMonkey 2.7) 及之后版本支持 data URIs，其他浏览器并不能支持。</p>\n</div>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myWorker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SharedWorker</span><span class=\"token punctuation\">(</span>aURL<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> myWorker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SharedWorker</span><span class=\"token punctuation\">(</span>aURL<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"url_参数\"><em>URL 参数</em></dt>\n  <dd>\n    <p>一个代表了 worker 将执行的脚本 URL 的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>，它必须遵守同源策略。</p>\n  </dd>\n  <dt id=\"name\">name <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>一个指定表示 worker 范围的<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code> <small>(en-US)</small></a>的标识名称的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>，主要用于调试。</p>\n  </dd>\n  <dt id=\"options\"><em>options</em> <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>创建实例时设定的包含了可选属性的对象。可用的属性包括：</p>\n    <ul>\n      <li><code>type</code>: 一个制定所创建 worker 类型的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>。可设定的值为 <code>classic</code> 或者 <code>module</code>. 若不指定，默认值为 <code>classic</code>.</li>\n      <li><code>credentials</code>: 一个指定要用于工作程序的凭据类型的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>。可设定的值为* <code>omit、</code>*<code>same-origin</code> 或 *<code>include</code>. *若不指定，<em>或者 type 设定为 <code>classic</code>, <em>默认值为</em> <code>omit</code> （无需凭据）。</em></li>\n      <li>*<code>name</code>: *一个指定表示 worker 范围的<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code> <small>(en-US)</small></a>的标识名称的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>，主要用于调试。</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>创建的 worker</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<ul>\n  <li><code>SecurityError</code> 当文档不能正常启动 workers 时抛出</li>\n  <li><code>NetworkError</code> 如果其中一个脚本的 MIME 类型是 text / csv，image / *，video / *或 audio / * 时抛出。类型只应该为 <code>text/javascript</code>。</li>\n  <li><code>SyntaxError</code> 当 <em>URL</em> 不能被解析时抛出</li>\n</ul>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>以下代码段显示了使用 <code>SharedWorker()</code> 构造函数创建 <a href=\"/zh-CN/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a> 对象以及对象的后续用法：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myWorker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SharedWorker</span><span class=\"token punctuation\">(</span><span class=\"token string\">'worker.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmyWorker<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfirst<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onchange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myWorker<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>second<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message posted to worker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nsecond<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onchange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myWorker<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>second<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message posted to worker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmyWorker<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  result1<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message received from worker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>看完整示例，请见 <a href=\"https://github.com/mdn/simple-shared-worker\" class=\"external\" rel=\" noopener\">Basic shared worker example</a> (<a href=\"https://mdn.github.io/simple-shared-worker/\" class=\"external\" rel=\" noopener\">run shared worker</a>.)</p>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/workers.html#dom-sharedworker-dev","title":"HTML Standard"}],"query":"api.SharedWorker.SharedWorker"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.SharedWorker.SharedWorker","dataURL":"/zh-CN/docs/Web/API/SharedWorker/SharedWorker/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The <a href=\"/zh-CN/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a> interface it belongs to.</li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"See also","id":"see_also"}],"summary":"SharedWorker() 构造函数实例化的 SharedWorker 对象可以执行指定的 URL 的脚本。所执行的脚本必须遵守 同源策略。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"SharedWorker()","locale":"en-US","native":"English (US)"},{"title":"SharedWorker()","locale":"fr","native":"Français"}],"source":{"folder":"zh-cn/web/api/sharedworker/sharedworker","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/sharedworker/sharedworker/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/SharedWorker","title":"SharedWorker"},{"uri":"/zh-CN/docs/Web/API/SharedWorker/SharedWorker","title":"SharedWorker()"}],"pageTitle":"SharedWorker() - Web API 接口参考 | MDN","noIndexing":false}}