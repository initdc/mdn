{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Web audio 空间化基础","mdn_url":"/zh-CN/docs/Web/API/Web_Audio_API/Web_audio_spatialization_basics","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>正如大量的各种声音处理（或者其他）选择是不够的，WebAduioAPI 也包含了一些工具，可以让你模仿听众在声源周围移动时的声音差异，例如当你在 3D 游戏声源中移动时声音的平移。官方名词称为 <strong>空间化</strong>，这篇文章将会介绍如何实现这样一个系统的基础知识。</p>"}},{"type":"prose","value":{"id":"空间化的基础知识","title":"空间化的基础知识","isH3":false,"content":"<p>在 Web Audio 中，复杂的 3D 空间化是使用 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a> 创建的，用外行人的话来说就是一个使音频出现在 3D 空间中的很酷的数学。想象一下声音从你头上飞过，爬到你身后，在你面前移动。诸如此类的事情。</p>\n<p>它对 WebXR 和游戏非常有用。在 3D 空间中，它是实现逼真的音频效果的唯一方式。像 <a href=\"https://threejs.org/\" class=\"external\" rel=\" noopener\">three.js</a> 和 <a href=\"https://aframe.io/\" class=\"external\" rel=\" noopener\">A-frame</a> 这样的库在处理声音时就利用了它的潜力。值得注意的是，你不必在完整的 3D 空间中移动声音 - 你可以只使用 2D 平面，因此如果你计划实现一个 2D 游戏，这依然是你要寻找的节点。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 还有一个设计用于处理创建简单的左右立体声平移效果的 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code> <small>(en-US)</small></a> 。这使用起来更简单，但显然无处可用。如果你只想要一个简单的立体声平移效果，我们的 <a href=\"https://mdn.github.io/webaudio-examples/stereo-panner-node/\" class=\"external\" rel=\" noopener\">StereoPannerNode 示例</a>（<a href=\"https://github.com/mdn/webaudio-examples/tree/master/stereo-panner-node\" class=\"external\" rel=\" noopener\">请参阅源码</a>）应该可以为你提供所需的一切。</p>\n</div>"}},{"type":"prose","value":{"id":"3d_boombox_演示","title":"3D boombox 演示","isH3":false,"content":"<p>为了演示 3D 空间化，我们在 <a href=\"/zh-CN/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Using the Web Audio API</a> 指南中的 boombox 演示的基础上创建一个修改版本。参见 <a href=\"https://mdn.github.io/webaudio-examples/spatialization/\" class=\"external\" rel=\" noopener\">3D spatialization demo live</a> （同时也可以看 <a href=\"https://github.com/mdn/webaudio-examples/tree/master/spatialization\" class=\"external\" rel=\" noopener\">source code</a>）</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/Web_Audio_API/Web_audio_spatialization_basics/web-audio-spatialization.png\" alt=\"A simple UI with a rotated boombox and controls to move it left and right and in and out, and rotate it.\" width=\"949\" height=\"724\" loading=\"lazy\">\n</p>\n<p>音箱放置于房间中（由浏览器视区边缘定义），在本 demo 中我们可以通过提供的控件移动和旋转它。当我们移动音箱时，它产生的声音会相应的改变，当它在移动到房间的左侧或右侧时声音平移，或当它远离用户时变得安静，或旋转使得扬声器背离它们等。这是通过给 <code>PannerNode</code> 对象实例设置不同的与该运动有关的属性来实现模拟空间化。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 如果你使用耳机或者其他某种环绕声系统连接计算机，体验会更好。</p>\n</div>"}},{"type":"prose","value":{"id":"创建_audio_收听者","title":"创建 audio 收听者","isH3":false,"content":"<p>让我们开始！ <a href=\"/zh-CN/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a>（ <a href=\"/zh-CN/docs/Web/API/AudioContext\"><code>AudioContext</code></a> 扩展自该接口）有一个 listener 属性，返回一个 <a href=\"/zh-CN/docs/Web/API/AudioListener\"><code>AudioListener</code></a> 对象。这代表着场景收听者，通常是使用者（用户）。你可以定义他 (她) 们在空间中的位置和他 (她) 们面向的方向。他 (她) 们保持静止。 <code>pannerNode</code> 可以计算出声音相对于收听者位置的位置。</p>\n<p>让我们创建我们的上下文和监听器，并设置收听者的位置来模拟一个看向（探索）我们房间的人：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> AudioContext <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> listener <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> posX <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> posY <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> posZ <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span>\n\nlistener<span class=\"token punctuation\">.</span>positionX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> posX<span class=\"token punctuation\">;</span>\nlistener<span class=\"token punctuation\">.</span>positionY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> posY<span class=\"token punctuation\">;</span>\nlistener<span class=\"token punctuation\">.</span>positionZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> posZ<span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>我们可以使用 <code>positionX</code> 将收听者向左/右移动，使用 <code>positionY</code> 向上/下移动，或使用 <code>positionZ</code> 移出/入房间。在这里，我们将收听者设置在视口中间同时稍微位于音箱的前方。我们还可以设置收听者面对的方向。这些默认值工作良好：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>listener<span class=\"token punctuation\">.</span>forwardX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nlistener<span class=\"token punctuation\">.</span>forwardY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nlistener<span class=\"token punctuation\">.</span>forwardZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nlistener<span class=\"token punctuation\">.</span>upX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nlistener<span class=\"token punctuation\">.</span>upY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nlistener<span class=\"token punctuation\">.</span>upZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>这些 forward 属性代表了收听者前进方向的 3D 坐标位置（例如他/她们面向的方向），而 up 属性表示了收听者头顶的 3D 坐标位置。这两种属性值可以很好的设定方位。</p>"}},{"type":"prose","value":{"id":"创建_panner_节点","title":"创建 panner 节点","isH3":false,"content":"<p>让我们创建 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a>节点，这有很多与之相关的属性。让我们来一一看看：</p>\n<p>首先我们可以设置 <a href=\"/en-US/docs/Web/API/PannerNode/panningModel\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">panningModel (en-US)</a>。这是用于在 3D 空间中定位音频的空间化算法。我们可以将其设置为：</p>\n<p><code>equalpower</code> — 计算出默认和一般方式的平移。</p>\n<p><code>HRTF</code> — 这代表 'Head-related transfer function' ，在弄清楚声音的位置时，会考虑人脑（对声音的处理）。</p>\n<p>非常聪明的东西，让我们使用 <code>HRTF</code> 模型！</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> pannerModel <span class=\"token operator\">=</span> <span class=\"token string\">'HRTF'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>属性 <a href=\"/en-US/docs/Web/API/PannerNode/coneInnerAngle\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">coneInnerAngle (en-US)</a> 和 <a href=\"/en-US/docs/Web/API/PannerNode/coneOuterAngle\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">coneOuterAngle (en-US)</a> 指定音量发出的位置。默认情况下，两者都是 360 度。我们可以定义音箱扬声器拥有较小的锥体。内锥是总是模拟增益（音量）最大值的地方，外锥是增益开始下降的地方。</p>\n<p>增益通过 <a href=\"/en-US/docs/Web/API/PannerNode/coneOuterGain\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">coneOuterGain (en-US)</a> 值来减少。让我们创建之后将会用于这些参数的常量：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> innerCone <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> outerCone <span class=\"token operator\">=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> outerGain <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  下一个参数是 <a href=\"/en-US/docs/Web/API/PannerNode/distanceModel\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">distanceModel (en-US)</a> — 这只能设置为 <code>linear</code>, <code>inverse</code>, 或者 <code>exponential</code>。这些是不同的算法，用于在音频源远离收听者时减小音频源的音量。\n  我们将使用<code>linear</code>，因为它很简单：\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> distanceModel <span class=\"token operator\">=</span> <span class=\"token string\">'linear'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>我们可以设置源和收听者之间的最大距离 (<a href=\"/en-US/docs/Web/API/PannerNode/maxDistance\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">maxDistance (en-US)</a>) — 如果源距离此点更远，则音量将不再减小。这可能很有用，因为你可能会发现你想要模拟距离，但是音量会下降，而实际上并不是你想要的。默认情况下，它是 10,000（无单位的相对值）。我们可以像这样保持它：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> maxDistance <span class=\"token operator\">=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>还有一个参考距离 (<a href=\"/en-US/docs/Web/API/PannerNode/refDistance\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">refDistance (en-US)</a>)，由距离模型使用。我们也可以将其保持为默认值 <code>1</code>：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> refDistance <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>然后就是 roll-off 因子 (<a href=\"/en-US/docs/Web/API/PannerNode/rolloffFactor\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">rolloffFactor (en-US)</a>) — 描述随着 panner 远离收听者，音量减小的速度有多快。默认值为 1；让我们使其大一些以放大我们的动作。</p>\n<pre class=\"notranslate\">const rollOff = 10;\n</pre>\n<p>\n  现在我们可以开始设置我们 boombox 的位置和方向。这与我们如何设置收听者很像。\n  这些也是我们在使用界面上的控件时要改变的参数。\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> positionX <span class=\"token operator\">=</span> posX<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> positionY <span class=\"token operator\">=</span> posY<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> positionZ <span class=\"token operator\">=</span> posZ<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> orientationX <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> orientationY <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> orientationZ <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  注意 z 方向的负值 - 这会将 boombox 设置为面向我们。正值会使声源背离我们。\n  让我们使用相关的构造函数来创建我们的 panner 节点，并传入我们在上面设置的所有参数：\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> panner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PannerNode</span><span class=\"token punctuation\">(</span>audioCtx<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">panningModel</span><span class=\"token operator\">:</span> pannerModel<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">distanceModel</span><span class=\"token operator\">:</span> distanceModel<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">positionX</span><span class=\"token operator\">:</span> positionX<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">positionY</span><span class=\"token operator\">:</span> positionY<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">positionZ</span><span class=\"token operator\">:</span> positionZ<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">orientationX</span><span class=\"token operator\">:</span> orientationX<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">orientationY</span><span class=\"token operator\">:</span> orientationY<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">orientationZ</span><span class=\"token operator\">:</span> orientationZ<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">refDistance</span><span class=\"token operator\">:</span> refDistance<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">maxDistance</span><span class=\"token operator\">:</span> maxDistance<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">rolloffFactor</span><span class=\"token operator\">:</span> rollOff<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">coneInnerAngle</span><span class=\"token operator\">:</span> innerCone<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">coneOuterAngle</span><span class=\"token operator\">:</span> outerCone<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">coneOuterGain</span><span class=\"token operator\">:</span> outerGain\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"移动_boombox","title":"移动 boombox","isH3":false,"content":"<p>\n  现在我们将在我们的“房间”中四处移动 boombox。我们已经设置了一些控件来执行此操作。我们可以左右移动，上下移动，来回移动；我们也可以旋转它。声音方向来自前面的 boombox 的扬声器，因此当我们旋转它时，我们可以改变声音的方向 - 即当音箱旋转 180 度并背向我们时，使其向后投射。\n  我们需要为界面设置一些东西。首先，我们将获得我们想要移动的元素的引用，然后存储我们在设置 <a href=\"/zh-CN/docs/Web/CSS/CSS_Transforms\">CSS transforms</a> 来实际执行移动时将要更改的值的引用。\n  最后，我们将设置一些边界值，以便我们的 boombox 在任何方向上都不会走得太远：\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> moveControls <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#move-controls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> boombox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.boombox-body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// the values for our css transforms</span>\n<span class=\"token keyword\">let</span> transform <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">xAxis</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">yAxis</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">zAxis</span><span class=\"token operator\">:</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">rotateX</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">rotateY</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// set our bounds</span>\n<span class=\"token keyword\">const</span> topBound <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>posY<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bottomBound <span class=\"token operator\">=</span> posY<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rightBound <span class=\"token operator\">=</span> posX<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> leftBound <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>posX<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> innerBound <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> outerBound <span class=\"token operator\">=</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  让我们创建一个函数，将我们想要移动的方向作为参数，并且修改 CSS 变换及更新我们的 panner 节点的位置和方向属性值以适当地更改声音。\n  首先让我们看看左，右，上，下值，因为这些非常简单。我们将沿着这些轴移动 boombox，并更新合适的位置。\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">moveBoombox</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">direction</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'left'</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>xAxis <span class=\"token operator\">&gt;</span> leftBound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                transform<span class=\"token punctuation\">.</span>xAxis <span class=\"token operator\">-=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n                panner<span class=\"token punctuation\">.</span>positionX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'up'</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>yAxis <span class=\"token operator\">&gt;</span> topBound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                transform<span class=\"token punctuation\">.</span>yAxis <span class=\"token operator\">-=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n                panner<span class=\"token punctuation\">.</span>positionY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'right'</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>xAxis <span class=\"token operator\">&lt;</span> rightBound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                transform<span class=\"token punctuation\">.</span>xAxis <span class=\"token operator\">+=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n                panner<span class=\"token punctuation\">.</span>positionX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'down'</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>yAxis <span class=\"token operator\">&lt;</span> bottomBound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                transform<span class=\"token punctuation\">.</span>yAxis <span class=\"token operator\">+=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n                panner<span class=\"token punctuation\">.</span>positionY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>移入和移出也是类似的故事：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">case</span> <span class=\"token string\">'back'</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>zAxis <span class=\"token operator\">&gt;</span> innerBound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        transform<span class=\"token punctuation\">.</span>zAxis <span class=\"token operator\">-=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n        panner<span class=\"token punctuation\">.</span>positionZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">case</span> <span class=\"token string\">'forward'</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>zAxis <span class=\"token operator\">&lt;</span> outerBound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        transform<span class=\"token punctuation\">.</span>zAxis <span class=\"token operator\">+=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n        panner<span class=\"token punctuation\">.</span>positionZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  然而，我们的旋转值稍为复杂，因为我们需要在周围移动声音。我们不仅需要更新两个轴值（例如，如果围绕 x 轴旋转对象，则更新该对象的 y 和 z 坐标），还需要为此进行更多的数学运算。旋转是一个圆圈，我们需要 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\"><code>Math.sin</code></a> 和 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/cos\"><code>Math.cos</code></a> 来帮助我们绘制这个圆圈。\n  让我们设置一个旋转速率，我们将会将它转换为弧度范围的值，以便稍后在 <code>Math.sin</code> 和 <code>Math.cos</code> 中使用，当我们在旋转我们的 boombox ，需要计算出新的坐标时：\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// set up rotation constants</span>\n<span class=\"token keyword\">const</span> rotationRate <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// bigger number equals slower sound rotation</span>\n\n<span class=\"token keyword\">const</span> q <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span>rotationRate<span class=\"token punctuation\">;</span> <span class=\"token comment\">//rotation increment in radians</span>\n</code></pre></div>\n<p>我们也可以使用它来计算旋转度，这将有助于我们即将必须创建的 CSS 变换（注意我们需要用于 CSS 变换的 x 和 y 轴）：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// get degrees for css</span>\n<span class=\"token keyword\">const</span> degreesX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>q <span class=\"token operator\">*</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> degreesY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>q <span class=\"token operator\">*</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>我们以左旋转为例看一看。我们需要更改 panner x 方向和 z 方向的坐标，以围绕 y 轴移动进行左旋转：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">case</span> <span class=\"token string\">'rotate-left'</span><span class=\"token operator\">:</span>\n  transform<span class=\"token punctuation\">.</span>rotateY <span class=\"token operator\">-=</span> degreesY<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 'left' is rotation about y-axis with negative angle increment</span>\n  z <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  x <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  y <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n  panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n  panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n  panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  这有点令人困惑，但我们正在做的是使用 sin 和 cos 来帮助我们计算出旋转 boombox 所需的圆周运动的坐标。\n  我们可以为所有轴做到这一点。只需要选择正确的方向进行更新，以及我们是想要正增量还是负增量。\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">case</span> <span class=\"token string\">'rotate-right'</span><span class=\"token operator\">:</span>\n  transform<span class=\"token punctuation\">.</span>rotateY <span class=\"token operator\">+=</span> degreesY<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 'right' is rotation about y-axis with positive angle increment</span>\n  z <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  x <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  y <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n  panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n  panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">case</span> <span class=\"token string\">'rotate-up'</span><span class=\"token operator\">:</span>\n  transform<span class=\"token punctuation\">.</span>rotateX <span class=\"token operator\">+=</span> degreesX<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 'up' is rotation about x-axis with negative angle increment</span>\n  z <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  y <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  x <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n  panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n  panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">case</span> <span class=\"token string\">'rotate-down'</span><span class=\"token operator\">:</span>\n  transform<span class=\"token punctuation\">.</span>rotateX <span class=\"token operator\">-=</span> degreesX<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 'down' is rotation about x-axis with positive angle increment</span>\n  z <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  y <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  x <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n  panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n  panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  最后一件事 - 我们需要更新 CSS 并保留鼠标事件最后一步的引用。\n  这是最终的 <code>moveBoombox</code> 函数。\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">moveBoombox</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">direction<span class=\"token punctuation\">,</span> prevMove</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'left'</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>xAxis <span class=\"token operator\">&gt;</span> leftBound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                transform<span class=\"token punctuation\">.</span>xAxis <span class=\"token operator\">-=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n                panner<span class=\"token punctuation\">.</span>positionX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'up'</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>yAxis <span class=\"token operator\">&gt;</span> topBound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                transform<span class=\"token punctuation\">.</span>yAxis <span class=\"token operator\">-=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n                panner<span class=\"token punctuation\">.</span>positionY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'right'</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>xAxis <span class=\"token operator\">&lt;</span> rightBound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                transform<span class=\"token punctuation\">.</span>xAxis <span class=\"token operator\">+=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n                panner<span class=\"token punctuation\">.</span>positionX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'down'</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>yAxis <span class=\"token operator\">&lt;</span> bottomBound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                transform<span class=\"token punctuation\">.</span>yAxis <span class=\"token operator\">+=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n                panner<span class=\"token punctuation\">.</span>positionY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'back'</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>zAxis <span class=\"token operator\">&gt;</span> innerBound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                transform<span class=\"token punctuation\">.</span>zAxis <span class=\"token operator\">-=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n                panner<span class=\"token punctuation\">.</span>positionZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'forward'</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>zAxis <span class=\"token operator\">&lt;</span> outerBound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                transform<span class=\"token punctuation\">.</span>zAxis <span class=\"token operator\">+=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n                panner<span class=\"token punctuation\">.</span>positionZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'rotate-left'</span><span class=\"token operator\">:</span>\n            transform<span class=\"token punctuation\">.</span>rotateY <span class=\"token operator\">-=</span> degreesY<span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 'left' is rotation about y-axis with negative angle increment</span>\n            z <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            x <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            y <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n            panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n            panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n            panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'rotate-right'</span><span class=\"token operator\">:</span>\n            transform<span class=\"token punctuation\">.</span>rotateY <span class=\"token operator\">+=</span> degreesY<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 'right' is rotation about y-axis with positive angle increment</span>\n            z <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            x <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            y <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n            panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n            panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n            panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'rotate-up'</span><span class=\"token operator\">:</span>\n            transform<span class=\"token punctuation\">.</span>rotateX <span class=\"token operator\">+=</span> degreesX<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 'up' is rotation about x-axis with negative angle increment</span>\n            z <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            y <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            x <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n            panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n            panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n            panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'rotate-down'</span><span class=\"token operator\">:</span>\n            transform<span class=\"token punctuation\">.</span>rotateX <span class=\"token operator\">-=</span> degreesX<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 'down' is rotation about x-axis with positive angle increment</span>\n            z <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            y <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            x <span class=\"token operator\">=</span> panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n            panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n            panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n            panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n  boombox<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span> <span class=\"token string\">'translateX('</span><span class=\"token operator\">+</span>transform<span class=\"token punctuation\">.</span>xAxis<span class=\"token operator\">+</span><span class=\"token string\">'px) translateY('</span><span class=\"token operator\">+</span>transform<span class=\"token punctuation\">.</span>yAxis<span class=\"token operator\">+</span><span class=\"token string\">'px) scale('</span><span class=\"token operator\">+</span>transform<span class=\"token punctuation\">.</span>zAxis<span class=\"token operator\">+</span><span class=\"token string\">') rotateY('</span><span class=\"token operator\">+</span>transform<span class=\"token punctuation\">.</span>rotateY<span class=\"token operator\">+</span><span class=\"token string\">'deg) rotateX('</span><span class=\"token operator\">+</span>transform<span class=\"token punctuation\">.</span>rotateX<span class=\"token operator\">+</span><span class=\"token string\">'deg)'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> move <span class=\"token operator\">=</span> prevMove <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  move<span class=\"token punctuation\">.</span>frameId <span class=\"token operator\">=</span> <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">moveBoombox</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">,</span> move<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> move<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"连接我们的控件","title":"连接我们的控件","isH3":false,"content":"<p>连接控制按钮相对简单 - 现在我们可以在控件上监听鼠标事件并运行此方法，并在释放鼠标时停止它：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// for each of our controls, move the boombox and change the position values</span>\nmoveControls<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">let</span> moving<span class=\"token punctuation\">;</span>\n    el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousedown'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">let</span> direction <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>control<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>moving <span class=\"token operator\">&amp;&amp;</span> moving<span class=\"token punctuation\">.</span>frameId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            window<span class=\"token punctuation\">.</span><span class=\"token function\">cancelAnimationFrame</span><span class=\"token punctuation\">(</span>moving<span class=\"token punctuation\">.</span>frameId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        moving <span class=\"token operator\">=</span> <span class=\"token function\">moveBoombox</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseup'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>moving <span class=\"token operator\">&amp;&amp;</span> moving<span class=\"token punctuation\">.</span>frameId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            window<span class=\"token punctuation\">.</span><span class=\"token function\">cancelAnimationFrame</span><span class=\"token punctuation\">(</span>moving<span class=\"token punctuation\">.</span>frameId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"概述","title":"概述","isH3":false,"content":"<p>希望本文能让你深入了解 Web Audio 空间化的工作原理，以及每个<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a> 属性的作用（其中有很多属性）。这些值有时难以操作，根据你的使用情况，可能需要一些时间才能使它们正确。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 音频空间化在不同浏览器中的听起来略有不同。 panner 节点在底层做了一些非常复杂的数学运算；这里有 <a href=\"https://wpt.fyi/results/webaudio/the-audio-api/the-pannernode-interface?label=stable&amp;aligned=true\" class=\"external\" rel=\" noopener\">许多测试</a>，因此你可以跟踪不同平台上此节点的内部工作状态。</p>\n</div>\n<p>再次，您可以在 <a href=\"https://mdn.github.io/webaudio-examples/spatialization/\" class=\"external\" rel=\" noopener\">这里查看最终的演示</a>，同时<a href=\"https://github.com/mdn/webaudio-examples/tree/master/spatialization\" class=\"external\" rel=\" noopener\">最终的源代码在这里</a>。还有一个 <a href=\"https://codepen.io/Rumyra/pen/MqayoK?editors=0100\" class=\"external\" rel=\" noopener\">Codepen 的演示</a>。</p>\n<p>如果你正在使用 3D 游戏和/或 WebXR，最好利用 3D 库来创建此类功能，而不是尝试从最初的规则完成所有这些操作。我们在本文中提出了自己的想法，让你了解它是如何工作的，但是通过利用别人在你之前所做的工作，你将节省大量时间。</p>"}}],"toc":[{"text":"空间化的基础知识","id":"空间化的基础知识"},{"text":"3D boombox 演示","id":"3d_boombox_演示"},{"text":"创建 audio 收听者","id":"创建_audio_收听者"},{"text":"创建 panner 节点","id":"创建_panner_节点"},{"text":"移动 boombox","id":"移动_boombox"},{"text":"连接我们的控件","id":"连接我们的控件"},{"text":"概述","id":"概述"}],"summary":"正如大量的各种声音处理（或者其他）选择是不够的，WebAduioAPI 也包含了一些工具，可以让你模仿听众在声源周围移动时的声音差异，例如当你在 3D 游戏声源中移动时声音的平移。官方名词称为 空间化，这篇文章将会介绍如何实现这样一个系统的基础知识。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Web audio spatialization basics","locale":"en-US","native":"English (US)"},{"title":"Web audio spatialization basics","locale":"fr","native":"Français"},{"title":"Web audio 공간화 기초","locale":"ko","native":"한국어"}],"source":{"folder":"zh-cn/web/api/web_audio_api/web_audio_spatialization_basics","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/web_audio_api/web_audio_spatialization_basics/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Web_Audio_API","title":"Web Audio API"},{"uri":"/zh-CN/docs/Web/API/Web_Audio_API/Web_audio_spatialization_basics","title":"Web audio 空间化基础"}],"pageTitle":"Web audio 空间化基础 - Web API 接口参考 | MDN","noIndexing":false}}