{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"PerformanceEntry.toJSON()","mdn_url":"/zh-CN/docs/Web/API/PerformanceEntry/toJSON","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Performance_Timeline\">Performance Timeline</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/PerformanceEntry/duration\"><code>duration</code></a></li><li><a href=\"/zh-CN/docs/Web/API/PerformanceEntry/entryType\"><code>entryType</code></a></li><li><a href=\"/zh-CN/docs/Web/API/PerformanceEntry/name\"><code>name</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PerformanceEntry/startTime\"><code>startTime</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><em><code>toJSON()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Performance Timeline API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Performance\"><code>Performance</code></a></li><li><a href=\"/zh-CN/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a href=\"/zh-CN/docs/Web/API/performance_property\"><code>performance_property</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>toJSON()</code></strong> 方法是一个串行器 ( <em>serializer</em> ); 它返回<a href=\"/zh-CN/docs/Web/API/PerformanceEntry\" title=\"performance entry\"><code>performance entry</code></a>对象的一个 JSON 表示形式。</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<pre class=\"notranslate\">const json = perfEntry.toJSON();\n</pre>"}},{"type":"prose","value":{"id":"arguments","title":"Arguments","isH3":true,"content":"<p>无</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<dl>\n  <dt id=\"json\">json</dt>\n  <dd>\n    <p>A JSON object that is the serialization of the <a href=\"/zh-CN/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>The following example shows the use of the <code>toJSON()</code> method.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">run_PerformanceEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PerformanceEntry support ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>performance<span class=\"token punctuation\">.</span>mark <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... performance.mark Not supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Create some performance entries via the mark() method</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Begin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">do_work</span><span class=\"token punctuation\">(</span><span class=\"token number\">50000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"End\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Use getEntries() to iterate through the each entry</span>\n  <span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> p<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Entry[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">check_PerformanceEntry</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">check_PerformanceEntry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> properties <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"entryType\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"startTime\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"duration\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> methods <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"toJSON\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> properties<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// check each property</span>\n    <span class=\"token keyword\">var</span> supported <span class=\"token operator\">=</span> properties<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>supported<span class=\"token punctuation\">)</span>\n      <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...\"</span> <span class=\"token operator\">+</span> properties<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" = \"</span> <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">[</span>properties<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n      <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...\"</span> <span class=\"token operator\">+</span> properties<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" = Not supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> methods<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// check each method</span>\n    <span class=\"token keyword\">var</span> supported <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> obj<span class=\"token punctuation\">[</span>methods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>supported<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> js <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>methods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...\"</span> <span class=\"token operator\">+</span> methods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"() = \"</span> <span class=\"token operator\">+</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>js<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...\"</span> <span class=\"token operator\">+</span> methods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" = Not supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/performance-timeline/#dom-performanceentry-tojson","title":"Performance Timeline"}],"query":"api.PerformanceEntry.toJSON"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PerformanceEntry.toJSON","dataURL":"/zh-CN/docs/Web/API/PerformanceEntry/toJSON/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"toJSON() 方法是一个串行器 ( serializer ); 它返回performance entry对象的一个 JSON 表示形式。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"PerformanceEntry.toJSON()","locale":"en-US","native":"English (US)"},{"title":"PerformanceEntry.toJSON()","locale":"fr","native":"Français"},{"title":"PerformanceEntry.toJSON()","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/performanceentry/tojson","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/performanceentry/tojson/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/PerformanceEntry","title":"PerformanceEntry"},{"uri":"/zh-CN/docs/Web/API/PerformanceEntry/toJSON","title":"PerformanceEntry.toJSON()"}],"pageTitle":"PerformanceEntry.toJSON() - Web API 接口参考 | MDN","noIndexing":false}}