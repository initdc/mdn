{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Worker: messageerror event","mdn_url":"/zh-CN/docs/Web/API/Worker/messageerror_event","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Worker\"><code>Worker</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Worker/Worker\"><code>Worker()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Worker/postMessage\"><code>postMessage()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Worker/terminate\"><code>terminate()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker/error_event\"><code>error</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Worker/message_event\"><code>message</code></a></li><li><em><code>messageerror</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>当 <a href=\"/zh-CN/docs/Web/API/Worker\"><code>Worker</code></a> 对象接收到一条无法被反序列化的消息时， <code>messageerror</code> 事件将在该对象上被触发。</p>\n<table class=\"properties\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">是否冒泡</th>\n      <td>否</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">是否可取消</th>\n      <td>否</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">接口</th>\n      <td><a href=\"/zh-CN/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">对应事件处理属性</th>\n      <td><code><a href=\"/zh-CN/docs/Web/API/Worker/messageerror_event\">onmessageerror</a></code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":"<p>创建一个 worker ，使用 <a href=\"/zh-CN/docs/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a> 监听 <code>message</code> 和 <code>messageerror</code> 事件：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// inside main.js</span>\n\n<span class=\"token keyword\">const</span> worker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"static/scripts/worker.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nworker<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Received message from worker: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nworker<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"messageerror\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Error receiving message from worker: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>同样，可以使用 <a href=\"/zh-CN/docs/Web/API/Window/messageerror_event\"><code>onmessageerror</code></a> 事件处理属性监听事件：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// inside main.js</span>\n\n<span class=\"token keyword\">const</span> worker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"static/scripts/worker.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nworker<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Received message from worker: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nworker<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessageerror</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Error receiving message from worker: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/indices.html#event-messageerror","title":"HTML Standard"}],"query":"api.Worker.messageerror_event"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Worker.messageerror_event","dataURL":"/zh-CN/docs/Web/API/Worker/messageerror_event/bcd.json"}},{"type":"prose","value":{"id":"另请参阅","title":"另请参阅","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Worker/postMessage\"><code>Worker.postMessage()</code></a></li>\n  <li>相关事件：<a href=\"/zh-CN/docs/Web/API/Worker/message_event\"><code>message</code></a>.</li>\n</ul>"}}],"toc":[{"text":"例子","id":"例子"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"另请参阅","id":"另请参阅"}],"summary":"当 Worker 对象接收到一条无法被反序列化的消息时， messageerror 事件将在该对象上被触发。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Worker: messageerror event","locale":"en-US","native":"English (US)"},{"title":"Worker: messageerror イベント","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/worker/messageerror_event","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/worker/messageerror_event/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Worker","title":"Worker"},{"uri":"/zh-CN/docs/Web/API/Worker/messageerror_event","title":"Worker: messageerror event"}],"pageTitle":"Worker: messageerror event - Web API 接口参考 | MDN","noIndexing":false}}