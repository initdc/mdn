{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Worker()","mdn_url":"/zh-CN/docs/Web/API/Worker/Worker","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Workers API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/Worker\"><code>Worker</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><em><code>Worker()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Worker/postMessage\"><code>postMessage()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Worker/terminate\"><code>terminate()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker/error_event\"><code>error</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/Worker/message_event\"><code>message</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Worker/messageerror_event\"><code>messageerror</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Web Workers API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerLocation\"><code>WorkerLocation</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Worker()</code></strong> 构造函数创建一个 <a href=\"/zh-CN/docs/Web/API/Worker\"><code>Worker</code></a> 对象，该对象执行指定的 URL 脚本。这个脚本必须遵守 <a href=\"/zh-CN/Same_origin_policy_for_JavaScript\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">同源策略</a> 。</p>\n<p>如果 此 URL 有一个无效的语句，或者违反同源策略，一个 <code>SECURITY_ERR</code> 类型的<a href=\"/zh-CN/docs/Web/API/DOMException\"><code>DOMException</code></a>被抛出。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 浏览器厂商对于 data URI 是否同源存在分歧。尽管 Gecko 10.0 (Firefox 10.0 / Thunderbird 10.0 / SeaMonkey 2.7) 和之后的版本接受 data URIs，但在所有其他浏览器中并非如此。</p>\n</div>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myWorker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span>aURL<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<ul>\n  <li>如果文档不允许启动 worker，则会引发 SecurityError</li>\n  <li>如果脚本之一的 MIME 类型为 <code>text/csv</code>, <code>image/*</code>, <code>video/*</code>,或 <code>audio/*</code>, 则会引发 NetworkError。它应该始终是 text/javascript。</li>\n  <li>如果 aURL 无法解析，则引发 SyntaxError。</li>\n  <li><em>aURL</em>\n    <ul>\n      <li>: 是一个<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 表示 <strong>worker</strong> 将执行的脚本的 URL。它必须遵守同源策略。</li>\n    </ul>\n  </li>\n  <li><em>options</em> <span class=\"badge inline optional\">可选</span>\n    <ul>\n      <li>: 包含可在创建对象实例时设置的选项属性的对象。可用属性如下：\n        <ul>\n          <li><code>type</code>：用以指定 worker 类型的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 值。该值可以是 <code>classic</code> 或 <code>module</code>. 如果未指定，将使用默认值 <code>classic.</code></li>\n          <li><code>credentials</code>：用以指定 worker 凭证的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 值。该值可以是* <code>omit</code>*, <code>same-origin</code>，或 <em><code>include</code>.。如果未指定，或者 type 是 <code>classic</code>，将使用默认值 <code>omit</code> (不要求凭证)。</em></li>\n          <li>*<code>name</code>：*在 <a href=\"/zh-CN/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a> 的情况下，用来表示 worker 的 scope 的一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 值，主要用于调试目的。</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>创建的 worker。</p>"}},{"type":"prose","value":{"id":"异常","title":"异常","isH3":true,"content":"<ul>\n  <li>当 document 不被允许启动 worker 的时候，将抛出一个 SecurityError 异常。例如：如果提供的 aURL 有语法错误，或者与同源策略相冲突（跨域访问）。</li>\n  <li>如果 worker 的 MIME 类型不正确，将抛出一个 NetworkError 异常。worker 的 MIME 类型必须是 text/javascript 。</li>\n  <li>如果 aURL 无法被解析（格式错误），将抛出一个 SyntaxError 异常。</li>\n</ul>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":"<p>下面的代码片段展示了通过 Worker() 创建 <a href=\"/zh-CN/docs/Web/API/Worker\"><code>Worker</code></a> 对象的过程， 以及随后的使用方法：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myWorker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"worker.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfirst<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onchange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myWorker<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>second<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message posted to worker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>完整的例子请看 <a href=\"https://github.com/mdn/simple-web-worker\" class=\"external\" rel=\" noopener\">Basic dedicated worker example</a> (<a href=\"https://mdn.github.io/simple-web-worker/\" class=\"external\" rel=\" noopener\">run dedicated worker</a>).</p>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/workers.html#dom-worker-dev","title":"HTML Standard"}],"query":"api.Worker.Worker"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Worker.Worker","dataURL":"/zh-CN/docs/Web/API/Worker/Worker/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 浏览器可以被标记为对<code>Worker()</code>的完全支持尽管他并不支持一个以 modules 类型编写的脚本。截至 2019 年 8 月 1 日，暂无浏览器支持以模块类型编写的脚本。如果没有这种支持，moduleds 类型的脚本必须使用编译器翻译成无 module 代码才能在浏览器上运行。</p>\n</div>\n<p>另请参阅</p>\n<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Worker\"><code>Worker</code></a> 它所属的接口。</li>\n  <li><a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Workers API</a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"例子","id":"例子"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"Worker() 构造函数创建一个 Worker 对象，该对象执行指定的 URL 脚本。这个脚本必须遵守 同源策略 。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Worker()","locale":"en-US","native":"English (US)"},{"title":"Worker()","locale":"fr","native":"Français"},{"title":"Worker()","locale":"ja","native":"日本語"},{"title":"Worker()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/worker/worker","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/worker/worker/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Worker","title":"Worker"},{"uri":"/zh-CN/docs/Web/API/Worker/Worker","title":"Worker()"}],"pageTitle":"Worker() - Web API 接口参考 | MDN","noIndexing":false}}