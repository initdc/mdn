{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"File","mdn_url":"/zh-CN/docs/Web/API/File","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/File\"><code>File</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>构造函数</summary><ol><li><a href=\"/zh-CN/docs/Web/API/File/File\"><code>File()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/File/lastModified\"><code>lastModified</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/File/lastModifiedDate\"><code>lastModifiedDate</code></a></li><li><a href=\"/zh-CN/docs/Web/API/File/name\"><code>name</code></a></li><li><a href=\"/zh-CN/docs/Web/API/File/type\"><code>type</code></a></li><li><a href=\"/zh-CN/docs/Web/API/File/webkitRelativePath\"><code>webkitRelativePath</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>文件（<strong><code>File</code></strong>）接口提供有关文件的信息，并允许网页中的 JavaScript 访问其内容。</p>\n<p>通常情况下， <code>File</code> 对象是来自用户在一个 <a href=\"/zh-CN/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a> 元素上选择文件后返回的 <a href=\"/zh-CN/docs/Web/API/FileList\"><code>FileList</code></a> 对象，也可以是来自由拖放操作生成的 <a href=\"/zh-CN/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> 对象，或者来自 <a href=\"/zh-CN/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> 上的 <code>mozGetAsFile</code>() API。在 Gecko 中，特权代码可以创建代表任何本地文件的 File 对象，而无需用户交互（有关详细信息，请参阅<a href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\">注意事项</a>。</p>\n<p><code>File</code> 对象是特殊类型的 <a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a>，且可以用在任意的 Blob 类型的 context 中。比如说， <a href=\"/zh-CN/docs/Web/API/FileReader\"><code>FileReader</code></a>, <a href=\"/zh-CN/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/createImageBitmap\"><code>createImageBitmap()</code> <small>(en-US)</small></a>, 及 <a href=\"/zh-CN/docs/Web/API/XMLHttpRequest#send()\"><code>XMLHttpRequest.send()</code></a> 都能处理 <code>Blob</code> 和 <code>File</code>。</p>\n<p>参考 <a href=\"/zh-CN/docs/Web/API/File_API/Using_files_from_web_applications\">从 Web 应用程序使用文件</a> 了解更多信息和例子。</p>"}},{"type":"prose","value":{"id":"构造函数","title":"构造函数","isH3":false,"content":"<dl>\n  <dt id=\"file\"><a href=\"/zh-CN/docs/Web/API/File/File\" title=\"File()\"><code>File()</code></a></dt>\n  <dd>\n    <p>返回一个新构建的文件对象（<code>File</code>）。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<p><code>File</code> 接口也继承了 <a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a> 接口的属性：</p>\n<dl>\n  <dt id=\"file.lastmodified\"><a href=\"/zh-CN/docs/Web/API/File/lastModified\"><code>File.lastModified</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回当前 <code>File</code> 对象所引用文件最后修改时间，自 UNIX 时间起始值（1970 年 1 月 1 日 00:00:00 UTC）以来的毫秒数。</p>\n  </dd>\n  <dt id=\"file.lastmodifieddate\"><a href=\"/zh-CN/docs/Web/API/File/lastModifiedDate\"><code>File.lastModifiedDate</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>返回当前 <code>File</code> 对象所引用文件最后修改时间的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> 对象。</p>\n  </dd>\n  <dt id=\"file.name\"><a href=\"/zh-CN/docs/Web/API/File/name\"><code>File.name</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回当前 <code>File</code> 对象所引用文件的名字。</p>\n  </dd>\n  <dt id=\"file.size\"><a href=\"/zh-CN/docs/Web/API/Blob/size\"><code>File.size</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回文件的大小。</p>\n  </dd>\n  <dt id=\"file.webkitrelativepath\"><a href=\"/zh-CN/docs/Web/API/File/webkitRelativePath\"><code>File.webkitRelativePath</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>返回 <a href=\"/zh-CN/docs/Web/API/File\" aria-current=\"page\"><code>File</code></a> 相关的 path 或 URL。</p>\n  </dd>\n  <dt id=\"file.type\"><a href=\"/zh-CN/docs/Web/API/File/type\"><code>File.type</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回文件的 <a href=\"/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types\">多用途互联网邮件扩展类型（MIME Type）</a></p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<p><em><code>File</code> 接口没有定义任何方法，但是它从 <a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a> 接口继承了以下方法：</em></p>\n<dl>\n  <dt id=\"blob.slicestart_end_contenttype\"><a href=\"/zh-CN/docs/Web/API/Blob/slice\" title=\"Blob.slice([start[, end[, contentType]]])\"><code>Blob.slice([start[, end[, contentType]]])</code></a></dt>\n  <dd>\n    <p>返回一个新的 <code>Blob</code> 对象，它包含有源 <code>Blob</code> 对象中指定范围内的数据。</p>\n  </dd>\n</dl>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/FileAPI/#file-section","title":"File API"}],"query":"api.File"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.File","dataURL":"/zh-CN/docs/Web/API/File/bcd.json"}},{"type":"prose","value":{"id":"注意事项","title":"注意事项","isH3":true,"content":"<ul>\n  <li>在 Gecko 中，你可以从 Chrome 代码中使用这个 API。详细内容参见 <a href=\"/zh-CN/docs/Extensions/Using_the_DOM_File_API_in_chrome_code\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Using the DOM File API in chrome code</a>。若要从 chrome 代码，JSM 和引导范围中使用它，你必须使用 <code>Cu.importGlobalProperties(['File']);</code> 来导入它。</li>\n  <li>从 Gecko 6.0 (Firefox 6.0 / Thunderbird 6.0 / SeaMonkey 2.3) 开始，在特权代码（比如扩展中的代码）中，可以将一个 <code>nsIFile</code> 对象传入 <code>File</code> 构造函数，从而生成一个 File 对象。</li>\n  <li>从 Gecko 8.0 (Firefox 8.0 / Thunderbird 8.0 / SeaMonkey 2.5) 开始，在 XPCOM 组件代码中，你可以直接使用 <code>new File</code> 来创建一个 <code>File</code> 对象，而不需要像以前那样必须实例化一个 <code>nsIDOMFile</code> 对象。<code>File</code> 对象和 <a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a> 相反，使用第二个参数作为文件名。文件名可以是任意的字符串。\n    <div class=\"code-example\"><pre class=\"brush: plain notranslate\">new File( Array parts, String filename, BlobPropertyBag properties);\n</pre></div>\n  </li>\n  <li>下列非标准属性及方法在 Gecko 7 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4) 中就被移除了： <a href=\"/zh-CN/docs/Web/API/File/name\"><code>File.fileName</code></a>、<a href=\"/zh-CN/docs/Web/API/Blob/size\"><code>File.fileSize</code></a>、<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>File.getAsBinary()</code></a>、<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>File.getAsDataURL()</code></a>、<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>File.getAsText(string encoding)</code></a> (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=661876\" class=\"external\" rel=\" noopener\">bug&nbsp;661876</a>)。应当使用 <a href=\"/zh-CN/docs/Web/API/File/name\"><code>File.name</code></a>、<a href=\"/zh-CN/docs/Web/API/Blob/size\"><code>Blob.size</code></a>，和 <a href=\"/zh-CN/docs/Web/API/FileReader\"><code>FileReader</code></a> 的方法来代替。</li>\n</ul>"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/File_API/Using_files_from_web_applications\">如何在 Web 应用程序中使用文件</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/FileReader\"><code>FileReader</code></a></li>\n  <li><a href=\"/zh-CN/docs/Extensions/Using_the_DOM_File_API_in_chrome_code\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">在 chrome 代码中使用 DOM File API 读取文件</a>（适用于被授权在 Gecko 中运行的代码，例如 Firefox 拓展的代码）</li>\n</ul>"}}],"toc":[{"text":"构造函数","id":"构造函数"},{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"文件（File）接口提供有关文件的信息，并允许网页中的 JavaScript 访问其内容。","popularity":0.0027,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"File","locale":"en-US","native":"English (US)"},{"title":"File","locale":"es","native":"Español"},{"title":"File","locale":"fr","native":"Français"},{"title":"File","locale":"ja","native":"日本語"},{"title":"File","locale":"ko","native":"한국어"},{"title":"File","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"File","locale":"ru","native":"Русский"},{"title":"File","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/file","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/file/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/File","title":"File"}],"pageTitle":"File - Web API 接口参考 | MDN","noIndexing":false}}