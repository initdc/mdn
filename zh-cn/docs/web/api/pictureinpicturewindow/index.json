{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"PictureInPictureWindow","mdn_url":"/zh-CN/docs/Web/API/PictureInPictureWindow","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Picture-in-Picture_API\">Picture-in-Picture API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/PictureInPictureWindow\"><code>PictureInPictureWindow</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PictureInPictureWindow/resize_event\"><code>resize</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Picture-in-Picture API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Document/exitPictureInPicture\"><code>Document.exitPictureInPicture()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Document/pictureInPictureElement\"><code>Document.pictureInPictureElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Document/pictureInPictureEnabled\"><code>Document.pictureInPictureEnabled</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLVideoElement/autoPictureInPicture\"><code>HTMLVideoElement.autoPictureInPicture</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLVideoElement/disablePictureInPicture\"><code>HTMLVideoElement.disablePictureInPicture</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLVideoElement/requestPictureInPicture\"><code>HTMLVideoElement.requestPictureInPicture()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>**<code>PictureInPictureWindow</code>**接口是一个对象，它可以通过编程的方式获得浮动视频窗口的宽度和高度，并调整浮动视频窗口的大小。</p>\n<p>使用<a href=\"/zh-CN/docs/Web/API/HTMLVideoElement/requestPictureInPicture\"><code>HTMLVideoElement.requestPictureInPicture()</code></a>返回一个具有此接口的 promise 值</p>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<p><em><code>PictureInPictureWindow</code> 接口不继承任何属性。</em></p>\n<dl>\n  <dt id=\"pictureinpicturewindow.width_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PictureInPictureWindow/width\"><code>PictureInPictureWindow.width</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>获取浮动视频窗宽度。</p>\n  </dd>\n  <dt id=\"pictureinpicturewindow.height_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PictureInPictureWindow/height\"><code>PictureInPictureWindow.height</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>获取浮动视频窗高度。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p><em>The <code>PictureInPictureWindow</code> interface doesn't inherit any methods.</em></p>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":false,"content":"<p><strong>The <code>PictureInPictureWindow</code> interface doesn't inherit any events.</strong></p>\n<dl>\n  <dt id=\"pictureinpicturewindow.resize_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PictureInPictureWindow/resize_event\"><code>PictureInPictureWindow.resize</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Sent to a <a href=\"/zh-CN/docs/Web/API/PictureInPictureWindow\" aria-current=\"page\"><code>PictureInPictureWindow</code></a> when the floating video window is resized. The associated event handler is <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PictureInPictureWindow/resize_event\"><code>PictureInPictureWindow.onresize</code> <small>(en-US)</small></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Given a <code>&lt;button&gt;</code> and a <code>&lt;video&gt;</code>, clicking the button will make the video enter the picture-in-picture mode; we then attach an event to print the floating video window dimensions to the console.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> video <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">printPipWindowDimensions</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> pipWindow <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The floating window dimensions are: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pipWindow<span class=\"token punctuation\">.</span>width<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">x</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pipWindow<span class=\"token punctuation\">.</span>height<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// will print:</span>\n  <span class=\"token comment\">// The floating window dimensions are: 640x360px</span>\n<span class=\"token punctuation\">}</span>\n\nbutton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  video<span class=\"token punctuation\">.</span><span class=\"token function\">requestPictureInPicture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pictureInPictureWindow</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    pictureInPictureWindow<span class=\"token punctuation\">.</span>onresize <span class=\"token operator\">=</span> printPipWindowDimensions<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/picture-in-picture/#interface-picture-in-picture-window","title":"Picture-in-Picture"}],"query":"api.PictureInPictureWindow"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PictureInPictureWindow","dataURL":"/zh-CN/docs/Web/API/PictureInPictureWindow/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Picture-in-Picture_API\"><code>Picture-in-Picture_API</code></a></li>\n</ul>"}}],"toc":[{"text":"属性","id":"属性"},{"text":"Methods","id":"methods"},{"text":"Events","id":"events"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"**PictureInPictureWindow**接口是一个对象，它可以通过编程的方式获得浮动视频窗口的宽度和高度，并调整浮动视频窗口的大小。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"PictureInPictureWindow","locale":"en-US","native":"English (US)"}],"source":{"folder":"zh-cn/web/api/pictureinpicturewindow","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/pictureinpicturewindow/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/PictureInPictureWindow","title":"PictureInPictureWindow"}],"pageTitle":"PictureInPictureWindow - Web API 接口参考 | MDN","noIndexing":false}}