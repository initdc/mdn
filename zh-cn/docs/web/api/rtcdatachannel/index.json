{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"RTCDataChannel","mdn_url":"/zh-CN/docs/Web/API/RTCDataChannel","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/binaryType\"><code>binaryType</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/bufferedAmount\"><code>bufferedAmount</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/bufferedAmountLowThreshold\"><code>bufferedAmountLowThreshold</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/id\"><code>id</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/label\"><code>label</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/maxPacketLifeTime\"><code>maxPacketLifeTime</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/maxRetransmits\"><code>maxRetransmits</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/negotiated\"><code>negotiated</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/ordered\"><code>ordered</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/protocol\"><code>protocol</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/readyState\"><code>readyState</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/reliable\"><code>reliable</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/close\"><code>close()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/send\"><code>send()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/bufferedamountlow_event\"><code>bufferedamountlow</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/close_event\"><code>close</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/closing_event\"><code>closing</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/error_event\"><code>error</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/message_event\"><code>message</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/open_event\"><code>open</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>WebRTC 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/zh-CN/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p>RTCDataChannel 接口代表在两者之间建立了一个双向数据通道的连接。</p>\n<p>可以用<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCDataChannel.createDataChannel()</code></a>或者在现有的 <a href=\"/zh-CN/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>上用 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code> <small>(en-US)</small></a>类型的 <code><a href=\"/zh-CN/docs/Web/Reference/Events/datachannel\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">datachannel</a></code> 事件接收，创建出 RTCDataChannel 类型的对象。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 这个 API 在 Gecko 中被称作 DataChannel 而不是标准的'RTCDataChannel'。</p>\n</div>"}},{"type":"prose","value":{"id":"属性","title":"属性","isH3":false,"content":"<dl>\n  <dt id=\"rtcdatachannel.label_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/label\"><code>RTCDataChannel.label</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个包含有描述数据通道名字的<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>。这个字段没有唯一性要求。</p>\n  </dd>\n  <dt id=\"rtcdatachannel.ordered_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/ordered\"><code>RTCDataChannel.ordered</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a>对象，表示传递信息的顺序是否有保证。</p>\n  </dd>\n  <dt id=\"rtcdatachannel.protocol_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/protocol\"><code>RTCDataChannel.protocol</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个包含有正在使用的子协议的名称的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>，如果没有这样的子协议，返回\"\"</p>\n  </dd>\n  <dt id=\"rtcdatachannel.id_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/id\"><code>RTCDataChannel.id</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>当<a href=\"/zh-CN/docs/Web/API/RTCDataChannel\" aria-current=\"page\"><code>RTCDataChannel</code></a>对象被创建出来的时候，返回一个无符号 short 类型的数据，作为通道的标识 id。</p>\n  </dd>\n  <dt id=\"rtcdatachannel.readystate_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/readyState\"><code>RTCDataChannel.readyState</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回枚举类型的 RTCDataChannelState，表示数据连接的状态，有以下几种类型：</p>\n    <ul>\n      <li><code>\"connecting\"</code> 该状态表示底层链路还未建立和激活，该状态还是由<a href=\"/zh-CN/docs/Web/API/RTCPeerConnection/createDataChannel\"><code>RTCPeerConnection.createDataChannel()</code></a>生成的 datachannel 初始状态。</li>\n      <li><code>\"open\"</code> 该状态表示底层链路已经连接成功并且运行。这个状态还是由<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code> <small>(en-US)</small></a>分发的 datachannel 的初始状态。</li>\n      <li><code>\"closing\"</code> 该状态表示底层链路已经在关闭的过程中。该状态下将不会接受新的发送任务，但是缓冲队列中的消息还是会被继续发送或者接收。</li>\n      <li><code>\"closed\"</code> 该状态表示底层链路已经完全被关闭（或者无法处于 established 状态）。</li>\n    </ul>\n  </dd>\n  <dt id=\"rtcdatachannel.bufferedamount_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/bufferedAmount\"><code>RTCDataChannel.bufferedAmount</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>返回一个<code>unsigned long</code>，表示缓冲队列中等待发送的字节数。这些数据是通过<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/send\"><code>RTCDataChannel.send()</code> <small>(en-US)</small></a>添加进缓冲队列但还未被发送的数据请求。注意：就算 channel 处于<code>closed</code>状态，队列中的缓存还会保持。</p>\n  </dd>\n  <dt id=\"rtcdatachannel.binarytype_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/binaryType\"><code>RTCDataChannel.binaryType</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>是一个<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 类型，表示由链路发送的二进制数据的类型。该项的值应该为<code>\"blob\"</code>或者<code>\"arraybuffer\"</code>，默认值为<code>\"blob\"</code>。当值为<code>\"blob\"</code>的时候，使用<a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a>对象，当值为<code>\"arraybuffer\"</code>时，使用<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>对象</p>\n  </dd>\n  <dt id=\"rtcdatachannel.maxpacketlifetype\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>RTCDataChannel.maxPacketLifeType</code></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>是一个<code>unsigned short</code>类型，表示不可靠模式下的消息发送允许时间长度，单位为毫秒。</p>\n  </dd>\n  <dt id=\"rtcdatachannel.maxretransmits_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/maxRetransmits\"><code>RTCDataChannel.maxRetransmits</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>是一个<code>unsigned short</code>类型，表示不可靠模式下消息允许尝试重发的最大次数。</p>\n  </dd>\n  <dt id=\"rtcdatachannel.negotiated_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/negotiated\"><code>RTCDataChannel.negotiated</code> <small>(en-US)</small></a> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>是一个<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a>类型，表示这个 channel 是否已经通过应用协商。</p>\n  </dd>\n  <dt id=\"datachannel.reliable\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>DataChannel.reliable</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>是一个<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a>类型，表示这个链接能不能以非可靠模式发送消息。已经废弃的 api。</p>\n  </dd>\n  <dt id=\"datachannel.stream\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>DataChannel.stream</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <span title=\"该属性的值无法更改\" class=\"badge inline readonly\">只读 </span></dt>\n  <dd>\n    <p>和<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/id\"><code>RTCDataChannel.id</code> <small>(en-US)</small></a>等效，已经废弃的 api。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"事件处理器","title":"事件处理器","isH3":true,"content":"<dl>\n  <dt id=\"rtcdatachannel.onopen_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/open_event\"><code>RTCDataChannel.onopen</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>当接收到<code><a href=\"/zh-CN/docs/Web/Reference/Events/open\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">open</a></code> 事件时的事件处理器，当底层链路数据传输成功，端口状态处于 established 的时候会触发该事件。</p>\n  </dd>\n  <dt id=\"rtcdatachannel.onmessage_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/message_event\"><code>RTCDataChannel.onmessage</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>当接收到<code><a href=\"/zh-CN/docs/Web/Reference/Events/message\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">message</a></code>事件时的事件处理器。当有数据被接收的时候会触发该事件。</p>\n  </dd>\n  <dt id=\"rtcdatachannel.onclose_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/close_event\"><code>RTCDataChannel.onclose</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>当接收到<code><a href=\"/zh-CN/docs/Web/Reference/Events/close\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">close</a></code>事件时候的事件处理器。当底层链路被关闭的时候会触发该事件。</p>\n  </dd>\n  <dt id=\"rtcdatachannel.onerror_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/error_event\"><code>RTCDataChannel.onerror</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>当接收到<code><a href=\"/en-US/docs/Web/API/Element/error_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">error (en-US)</a></code> 事件时候的事件处理器。当遇到错误的时候会触发该事件。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"rtcdatachannel.close_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/close\"><code>RTCDataChannel.close()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>关闭 channel 的方法。这个关闭动作不是直接生效的。这个方法会将 channel 的<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/readyState\"><code>state</code> <small>(en-US)</small></a> 属性设置为<code>\"closing\"</code>状态，在消息队列中的消息全部发送完毕之后，channel 才会被关闭。</p>\n  </dd>\n  <dt id=\"rtcdatachannel.send_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel/send\"><code>RTCDataChannel.send()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>将参数中的数据通过 channel 发送。这个数据可以是<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a>, <a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a>, <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>或者是 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>ArrayBufferView</code></a>类型。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> pc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RTCPeerConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> dc <span class=\"token operator\">=</span> pc<span class=\"token punctuation\">.</span><span class=\"token function\">createDataChannel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my channel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"received: \"</span> <span class=\"token operator\">+</span> event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ndc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onopen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"datachannel open\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ndc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"datachannel close\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-pc/#rtcdatachannel","title":"WebRTC 1.0: Real-Time Communication Between Browsers"}],"query":"api.RTCDataChannel"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCDataChannel","dataURL":"/zh-CN/docs/Web/API/RTCDataChannel/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">WebRTC (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"属性","id":"属性"},{"text":"方法","id":"方法"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"RTCDataChannel 接口代表在两者之间建立了一个双向数据通道的连接。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"RTCDataChannel","locale":"en-US","native":"English (US)"},{"title":"RTCDataChannel","locale":"ja","native":"日本語"},{"title":"RTCDataChannel","locale":"pt-BR","native":"Português (do Brasil)"}],"source":{"folder":"zh-cn/web/api/rtcdatachannel","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/rtcdatachannel/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/RTCDataChannel","title":"RTCDataChannel"}],"pageTitle":"RTCDataChannel - Web API 接口参考 | MDN","noIndexing":false}}