{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"HTMLCanvasElement.toBlob()","mdn_url":"/zh-CN/docs/Web/API/HTMLCanvasElement/toBlob","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Canvas_API\">Canvas API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/HTMLCanvasElement/height\"><code>height</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/HTMLCanvasElement/mozOpaque\"><code>mozOpaque</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLCanvasElement/width\"><code>width</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/HTMLCanvasElement/captureStream\"><code>captureStream()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLCanvasElement/getContext\"><code>getContext()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLCanvasElement/mozFetchAsStream\"><code>mozFetchAsStream()</code> <small>(en-US)</small></a></li><li><em><code>toBlob()</code></em></li><li><a href=\"/zh-CN/docs/Web/API/HTMLCanvasElement/toDataURL\"><code>toDataURL()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/HTMLCanvasElement/transferControlToOffscreen\"><code>transferControlToOffscreen()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>事件</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLCanvasElement/contextlost_event\"><code>contextlost</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLCanvasElement/contextrestored_event\"><code>contextrestored</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/HTMLCanvasElement/webglcontextlost_event\"><code>webglcontextlost</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>继承</summary><ol><li><a href=\"/zh-CN/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/zh-CN/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Canvas API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ImageBitmapRenderingContext\"><code>ImageBitmapRenderingContext</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ImageData\"><code>ImageData</code></a></li><li><a href=\"/zh-CN/docs/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Path2D\"><code>Path2D</code></a></li><li><a href=\"/zh-CN/docs/Web/API/TextMetrics\"><code>TextMetrics</code></a></li><li><a href=\"/zh-CN/docs/Web/API/createImageBitmap\"><code>createImageBitmap</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>HTMLCanvasElement.toBlob()</code></strong> 方法创造 <a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a> 对象，用以展示 canvas 上的图片；这个图片文件可以被缓存或保存到本地（由用户代理自行决定）。</p>\n<p>可以在调用时指定所需的文件格式和图像质量，若未指定文件格式（或不支持指定的文件格式），则默认导出 <code>image/png</code> 类型。浏览器需要支持 <code>image/png</code>，大多数浏览器还支持额外的图片格式，包括 <code>image/jpg</code> 和 <code>image/webp</code>。</p>\n<p>对于支持以指定分辨率编码的图片格式，如不特别指明，图片的默认分辨率为 96dpi。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">toBlob</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> quality<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"callback\"><code>callback</code></dt>\n  <dd>\n    <p>回调函数，可获得一个单独的 <a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a> 对象参数。如果图像未被成功创建，可能会获得 <code>null</code> 值。</p>\n  </dd>\n  <dt id=\"type\"><code>type</code> <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 类型，指定图片格式，默认格式（未指定或不支持）为 <code>image/png</code>。</p>\n  </dd>\n  <dt id=\"quality\"><code>quality</code> <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> 类型，值在 0 与 1 之间，当请求图片格式为 <code>image/jpeg</code> 或者 <code>image/webp</code> 时用来指定图片展示质量。如果这个参数的值不在指定类型与范围之内，则使用默认值，其余参数将被忽略。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>无。</p>"}},{"type":"prose","value":{"id":"异常","title":"异常","isH3":true,"content":"<dl>\n  <dt id=\"securityerror\"><code>SecurityError</code></dt>\n  <dd>\n    <p>canvas“<a href=\"/zh-CN/docs/Web/HTML/CORS_enabled_image\">被污染</a>”的情况下不能使用此方法。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":""}},{"type":"prose","value":{"id":"将_canvas_图像转换为文件","title":"将 canvas 图像转换为文件","isH3":true,"content":"<p>当一个内容画到 canvas 上时，我们可以将它生成任何一个格式支持的图片文件。比如，下面的代码段获得了 id 为“canvas”的 <a href=\"/zh-CN/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 元素中的图像，复制成一个 PNG 图，在文档中加入一个新的 <a href=\"/zh-CN/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> 元素，这个 <a href=\"/zh-CN/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> 元素的源图就是使用 canvas 创建的那个图像。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">toBlob</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">blob</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> newImg <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      url <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  newImg<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// no longer need to read the blob so it's revoked</span>\n    <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">revokeObjectURL</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  newImg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>newImg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>注意，我们这里创建的是 PNG 图片；如果在 <code>toBlob()</code> 传入第二个参数，就可以指定图片格式。例如，生成 JPEG 格式的图片：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toBlob</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">blob</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"image/jpeg\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.95</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// JPEG at 95% quality</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"将_canvas_转换为_ico（仅限_mozilla）","title":"将 canvas 转换为 ico（仅限 Mozilla）","isH3":true,"content":"<p>使用 <code>-moz-parse</code> 来将 canvas 转换为 ico。Windows XP 不支持将 PNG 转为 ico，因此转为 bmp 作为代替。设置下载属性，生成下载链接。下载属性的值将被用来作为文件名。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\nctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">blobCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">iconName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    a<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"Download\"</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    a<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"block\"</span><span class=\"token punctuation\">;</span>\n    a<span class=\"token punctuation\">.</span>download <span class=\"token operator\">=</span> iconName <span class=\"token operator\">+</span> <span class=\"token string\">\".ico\"</span><span class=\"token punctuation\">;</span>\n    a<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">toBlob</span><span class=\"token punctuation\">(</span><span class=\"token function\">blobCallback</span><span class=\"token punctuation\">(</span><span class=\"token string\">'passThisString'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'image/vnd.microsoft.icon'</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'-moz-parse-options:format=bmp;bpp=32'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"使用_os.file_保存图像到本地（chromeadd-on_context_only）","title":"使用 OS.File 保存图像到本地（chrome/add-on context only）","isH3":true,"content":"<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 此方法可将 toBlob 生成的图片保存到本地，但仅在 Firefox、 Chrome 上下文或带有相关插件的情况下可用，因为 Web 并不存在 OS API。</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> d <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\nctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">blobCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">iconName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> r <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    r<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onloadend</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// r.result contains the ArrayBuffer.</span>\n    Cu<span class=\"token punctuation\">.</span><span class=\"token function\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resource://gre/modules/osfile.jsm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> writePath <span class=\"token operator\">=</span> <span class=\"token constant\">OS</span><span class=\"token punctuation\">.</span>Path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token constant\">OS</span><span class=\"token punctuation\">.</span>Constants<span class=\"token punctuation\">.</span>Path<span class=\"token punctuation\">.</span>desktopDir<span class=\"token punctuation\">,</span>\n                                 iconName <span class=\"token operator\">+</span> <span class=\"token string\">'.ico'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> <span class=\"token constant\">OS</span><span class=\"token punctuation\">.</span>File<span class=\"token punctuation\">.</span><span class=\"token function\">writeAtomic</span><span class=\"token punctuation\">(</span>writePath<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                      <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">tmpPath</span><span class=\"token operator\">:</span>writePath <span class=\"token operator\">+</span> <span class=\"token string\">'.tmp'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    promise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'successfully wrote file'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'failure writing file'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  r<span class=\"token punctuation\">.</span><span class=\"token function\">readAsArrayBuffer</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">toBlob</span><span class=\"token punctuation\">(</span><span class=\"token function\">blobCallback</span><span class=\"token punctuation\">(</span><span class=\"token string\">'passThisString'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'image/vnd.microsoft.icon'</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'-moz-parse-options:format=bmp;bpp=32'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/canvas.html#dom-canvas-toblob-dev","title":"HTML Standard"}],"query":"api.HTMLCanvasElement.toBlob"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.HTMLCanvasElement.toBlob","dataURL":"/zh-CN/docs/Web/API/HTMLCanvasElement/toBlob/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/Blob\"><code>Blob</code></a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"示例","id":"示例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"HTMLCanvasElement.toBlob() 方法创造 Blob 对象，用以展示 canvas 上的图片；这个图片文件可以被缓存或保存到本地（由用户代理自行决定）。","popularity":0.001,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"HTMLCanvasElement.toBlob()","locale":"en-US","native":"English (US)"},{"title":"HTMLCanvasElement.toBlob()","locale":"ja","native":"日本語"},{"title":"HTMLCanvasElement.toBlob()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/htmlcanvaselement/toblob","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/htmlcanvaselement/toblob/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/HTMLCanvasElement","title":"HTMLCanvasElement"},{"uri":"/zh-CN/docs/Web/API/HTMLCanvasElement/toBlob","title":"HTMLCanvasElement.toBlob()"}],"pageTitle":"HTMLCanvasElement.toBlob() - Web API 接口参考 | MDN","noIndexing":false}}