{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Console.assert()","mdn_url":"/zh-CN/docs/Web/API/Console/assert","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Console_API\">Console API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/Console\"><code>Console</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Console/assert\"><code>assert()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/clear\"><code>clear()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/count\"><code>count()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/countReset\"><code>countReset()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/debug\"><code>debug()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/dir\"><code>dir()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/dirxml\"><code>dirxml()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/error\"><code>error()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/group\"><code>group()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/groupCollapsed\"><code>groupCollapsed()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/groupEnd\"><code>groupEnd()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/info\"><code>info()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/log\"><code>log()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Console/profile\"><code>profile()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Console/profileEnd\"><code>profileEnd()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/table\"><code>table()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/time\"><code>time()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/timeEnd\"><code>timeEnd()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/timeLog\"><code>timeLog()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Console/timeStamp\"><code>timeStamp()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/trace\"><code>trace()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/warn\"><code>warn()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Console API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Window/console\"><code>Window.console</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerGlobalScope/console\"><code>WorkerGlobalScope.console</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>如果断言为 false，则将一个错误消息写入控制台。如果断言是 <code>true</code>，没有任何反应。</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 此特性在 <a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Worker</a> 中可用</p>\n</div>\n<p><code>console.assert()</code>方法在 Node.js 中的实现和浏览器中可用的<code>console.assert()</code>方法实现是不同的。在浏览器中当<code>console.assert()</code>方法接受到一个值为假断言的时候，会向控制台输出传入的内容，但是并不会中断代码的执行，而在 Node.js v10.0.0 之前，一个值为假的断言也将会导致一个<code>AssertionError</code>被抛出，使得代码执行被打断。v10.0.0 修复了此差异，所以现在<code>console.assert()</code>在 Node 和浏览器中执行行为相同。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>assertion<span class=\"token punctuation\">,</span> obj1 <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> obj2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> objN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>assertion<span class=\"token punctuation\">,</span> msg <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> subst1<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> substN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// c-like message formatting</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"assertion\"><code>assertion</code></dt>\n  <dd>\n    <p>一个布尔表达式。如果 assertion 为假，消息将会被输出到控制台之中。</p>\n  </dd>\n  <dt id=\"obj1\"><code>obj1</code> ... <code>objN</code></dt>\n  <dd>\n    <p>被用来输出的 Javascript 对象列表，最后输出的字符串是各个对象依次拼接的结果。</p>\n  </dd>\n  <dt id=\"msg\"><code>msg</code></dt>\n  <dd>\n    <p>一个包含零个或多个子串的 Javascript 字符串。</p>\n  </dd>\n  <dt id=\"subst1\"><code>subst1</code> ... <code>substN</code></dt>\n  <dd>\n    <p>各个消息作为字串的 Javascript 对象。这个参数可以让你能够控制输出的格式。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"案例","title":"案例","isH3":false,"content":"<p>下面的代码示例演示了 JavaScript 对象的使用：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> errorMsg <span class=\"token operator\">=</span> <span class=\"token string\">'the # is not even'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> number <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> number <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> number <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the # is '</span> <span class=\"token operator\">+</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>number <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">number</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">errorMsg</span><span class=\"token operator\">:</span> errorMsg<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 或者使用 ES2015 对象简写：</span>\n    <span class=\"token comment\">// console.assert(number % 2 === 0, {number, errorMsg});</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 输出：</span>\n<span class=\"token comment\">// the # is 2</span>\n<span class=\"token comment\">// the # is 3</span>\n<span class=\"token comment\">// Assertion failed: {number: 3, errorMsg: \"the # is not even\"}</span>\n<span class=\"token comment\">// the # is 4</span>\n<span class=\"token comment\">// the # is 5</span>\n<span class=\"token comment\">// Assertion failed: {number: 5, errorMsg: \"the # is not even\"}</span>\n</code></pre></div>\n<p>请注意，你可以在大多数浏览器中使用 console.log 进行格式化输出</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the word is %s try number %d'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 输出：the word is foo try number 123</span>\n</code></pre></div>\n<p><code>但是 console.assert</code> 在不同浏览器中可能获得不同的效果：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'the word is %s'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// correct output in Node (e.g. v8.10.0) and some browsers</span>\n<span class=\"token comment\">//     (e.g. Firefox v60.0.2):</span>\n<span class=\"token comment\">// Assertion failed: the word is foo</span>\n<span class=\"token comment\">// incorrect output in some browsers</span>\n<span class=\"token comment\">//     (e.g. Chrome v67.0.3396.87):</span>\n<span class=\"token comment\">// Assertion failed: the word is %s foo</span>\n</code></pre></div>\n<p>有关详细信息，请参阅 <a href=\"/zh-CN/docs/Web/API/Console\"><code>console</code></a> 文档中的 <a href=\"/zh-CN/docs/Web/API/Console#%E8%BE%93%E5%87%BA%E6%96%87%E6%9C%AC%E5%88%B0%E6%8E%A7%E5%88%B6%E5%8F%B0\">输出文本到控制台</a>。</p>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://console.spec.whatwg.org/#assert","title":"Console Standard"}],"query":"api.console.assert"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.console.assert","dataURL":"/zh-CN/docs/Web/API/Console/assert/bcd.json"}},{"type":"prose","value":{"id":"相关链接","title":"相关链接","isH3":false,"content":"<ul>\n  <li><a href=\"https://console.spec.whatwg.org/#assert-condition-data\" class=\"external\" rel=\" noopener\">WHATWG Console Standard: console.assert</a></li>\n  <li><a href=\"https://www.opera.com/dragonfly/documentation/console/\" class=\"external\" rel=\" noopener\">Opera Dragonfly documentation: Console</a></li>\n  <li><a href=\"http://msdn.microsoft.com/library/gg589530\" class=\"external\" rel=\" noopener\">MSDN: Using the F12 Tools Console to View Errors and Status</a></li>\n  <li><a href=\"https://developer.chrome.com/devtools/docs/console#assertions\" class=\"external\" rel=\" noopener\">Chrome Developer Tools: Using the Console</a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"案例","id":"案例"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"相关链接","id":"相关链接"}],"summary":"如果断言为 false，则将一个错误消息写入控制台。如果断言是 true，没有任何反应。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"console.assert()","locale":"en-US","native":"English (US)"},{"title":"Console.assert()","locale":"es","native":"Español"},{"title":"Console.assert()","locale":"fr","native":"Français"},{"title":"console.assert()","locale":"ja","native":"日本語"},{"title":"console.assert()","locale":"ko","native":"한국어"},{"title":"Console.assert()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"console.assert()","locale":"ru","native":"Русский"},{"title":"Console.assert()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/console/assert","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/console/assert/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Console","title":"Console"},{"uri":"/zh-CN/docs/Web/API/Console/assert","title":"Console.assert()"}],"pageTitle":"Console.assert() - Web API 接口参考 | MDN","noIndexing":false}}