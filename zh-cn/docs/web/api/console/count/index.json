{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Console.count()","mdn_url":"/zh-CN/docs/Web/API/Console/count","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Console_API\">Console API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/Console\"><code>Console</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Console/assert\"><code>assert()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/clear\"><code>clear()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/count\"><code>count()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/countReset\"><code>countReset()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/debug\"><code>debug()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/dir\"><code>dir()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/dirxml\"><code>dirxml()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/error\"><code>error()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/group\"><code>group()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/groupCollapsed\"><code>groupCollapsed()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/groupEnd\"><code>groupEnd()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/info\"><code>info()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/log\"><code>log()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Console/profile\"><code>profile()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Console/profileEnd\"><code>profileEnd()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/table\"><code>table()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/time\"><code>time()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/timeEnd\"><code>timeEnd()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/timeLog\"><code>timeLog()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Console/timeStamp\"><code>timeStamp()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/trace\"><code>trace()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/warn\"><code>warn()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Console API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Window/console\"><code>Window.console</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerGlobalScope/console\"><code>WorkerGlobalScope.console</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard warning\" id=\"sect1\"><p><strong>非标准:</strong> 该特性是非标准的，请尽量不要在生产环境中使用它！</p></div>\n<p>输出 count() 被调用的次数。此函数接受一个可选参数 <code>label</code>。</p><div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 此特性在 <a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Worker</a> 中可用</p>\n</div>\n<p>如果有 <code>label</code>，此函数输出为那个指定的 <code>label</code> 和 count() 被调用的次数。</p>\n<p>如果 <code>label</code> 被忽略，此函数输出 count() 在其所处位置上被调用的次数。</p>\n<p>例如，下面的代码：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> user <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"hi \"</span> <span class=\"token operator\">+</span> user<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nuser <span class=\"token operator\">=</span> <span class=\"token string\">\"bob\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser <span class=\"token operator\">=</span> <span class=\"token string\">\"alice\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Console 的输出如下：</p>\n<pre class=\"notranslate\">\"&lt;no label&gt;: 1\"\n\"&lt;no label&gt;: 2\"\n\"&lt;no label&gt;: 3\"\n\"&lt;no label&gt;: 1\"\n</pre>\n<p>注意最后一行的日志输出：在 11 行对 count() 的单独调用是被当作一个独立事件来处理的。</p>\n<p>如果把变量 <code>user</code> 当作 <code>label</code> 参数传给前面调用的 <code>count()</code>，把字符串 \"alice\" 传给后面调用的 <code>count()</code>：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> user <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"hi \"</span> <span class=\"token operator\">+</span> user<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nuser <span class=\"token operator\">=</span> <span class=\"token string\">\"bob\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser <span class=\"token operator\">=</span> <span class=\"token string\">\"alice\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alice\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>可以看到输出如下：</p>\n<pre class=\"notranslate\">\"bob: 1\"\n\"alice: 1\"\n\"alice: 2\"\n\"alice: 3\"\n</pre>\n<p>现在可以基于不同的 <code>label</code> 值维护不同的数值。由于 11 行的 <code>label</code> 匹配了两次 <code>user</code> 的值，因此它不会被当作独立的事件。</p>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<pre class=\"notranslate\">console.count([label]);\n</pre>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":false,"content":"<dl>\n  <dt id=\"label\"><code>label</code></dt>\n  <dd>\n    <p>字符串，如果有，count() 输出此给定的 <code>label</code> 及其被调用的次数。</p>\n  </dd>\n</dl>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://console.spec.whatwg.org/#count","title":"Console Standard"}],"query":"api.console.count"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.console.count","dataURL":"/zh-CN/docs/Web/API/Console/count/bcd.json"}}],"toc":[{"text":"语法","id":"语法"},{"text":"参数","id":"参数"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"}],"summary":"输出 count() 被调用的次数。此函数接受一个可选参数 label。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"console.count()","locale":"en-US","native":"English (US)"},{"title":"Console.count()","locale":"es","native":"Español"},{"title":"Console.count()","locale":"fr","native":"Français"},{"title":"console.count()","locale":"ja","native":"日本語"},{"title":"console.count()","locale":"ko","native":"한국어"},{"title":"Console.count()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Console.count()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/console/count","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/console/count/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Console","title":"Console"},{"uri":"/zh-CN/docs/Web/API/Console/count","title":"Console.count()"}],"pageTitle":"Console.count() - Web API 接口参考 | MDN","noIndexing":false}}