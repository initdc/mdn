{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Console","mdn_url":"/zh-CN/docs/Web/API/Console","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Console_API\">Console API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/Console\"><code>Console</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Console/assert\"><code>assert()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/clear\"><code>clear()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/count\"><code>count()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/countReset\"><code>countReset()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/debug\"><code>debug()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/dir\"><code>dir()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/dirxml\"><code>dirxml()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/error\"><code>error()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/group\"><code>group()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/groupCollapsed\"><code>groupCollapsed()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/groupEnd\"><code>groupEnd()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/info\"><code>info()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/log\"><code>log()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Console/profile\"><code>profile()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Console/profileEnd\"><code>profileEnd()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/table\"><code>table()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/time\"><code>time()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/timeEnd\"><code>timeEnd()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/timeLog\"><code>timeLog()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/zh-CN/docs/Web/API/Console/timeStamp\"><code>timeStamp()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/trace\"><code>trace()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Console/warn\"><code>warn()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Console API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Window/console\"><code>Window.console</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerGlobalScope/console\"><code>WorkerGlobalScope.console</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Console</code></strong> 对象提供了浏览器控制台调试的接口（如：Firefox 的 <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/web_console/index.html\" class=\"external\" rel=\" noopener\">Web Console</a>）。在不同浏览器上它的工作方式可能不一样，但通常都会提供一套共性的功能。</p>\n<p><code>Console</code> 对象可以从任何全局对象中访问到，如 浏览器作用域上的 <a href=\"/zh-CN/docs/Web/API/Window\"><code>Window</code></a>，以及通过属性控制台作为 workers 中的特定变体的 <a href=\"/zh-CN/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a>。可以通过 <a href=\"/zh-CN/docs/Web/API/Window/console\"><code>Window.console</code></a> 引用，也可以简单的通过 <code>console</code> 引用。例：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open the specified link\"</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>本页面记录了 <code>Console</code> 对象上的<a href=\"#%E6%96%B9%E6%B3%95\">方法</a>并给出了几个 <a href=\"#usage\">Usage</a> （用例）。</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 此特性在 <a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Worker</a> 中可用</p>\n</div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 实际的 <code>console</code> 接口被定义为全小写的形式（比如不是这种形式 <code>Console</code> ），这是历史原因导致的。</p>\n</div>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"console.assert\"><a href=\"/zh-CN/docs/Web/API/Console/assert\"><code>Console.assert()</code></a></dt>\n  <dd>\n    <p>如果第一个参数为 <code>false</code> ，则将消息和堆栈跟踪记录到控制台。</p>\n  </dd>\n  <dt id=\"console.clear\"><a href=\"/zh-CN/docs/Web/API/Console/clear\"><code>Console.clear()</code></a></dt>\n  <dd>\n    <p>清空控制台，并输出 <code>Console was cleared</code>。</p>\n  </dd>\n  <dt id=\"console.count\"><a href=\"/zh-CN/docs/Web/API/Console/count\"><code>Console.count()</code></a></dt>\n  <dd>\n    <p>以参数为标识记录调用的次数，调用时在控制台打印标识以及调用次数。</p>\n  </dd>\n  <dt id=\"console.countreset\"><a href=\"/zh-CN/docs/Web/API/Console/countReset\"><code>Console.countReset()</code></a></dt>\n  <dd>\n    <p>重置指定标签的计数器值。</p>\n  </dd>\n  <dt id=\"console.debug\"><a href=\"/zh-CN/docs/Web/API/Console/debug\"><code>Console.debug()</code></a></dt>\n  <dd>\n    <p>在控制台打印一条 <code>\"debug\"</code> 级别的消息。</p>\n  </dd>\n  <dt id=\"console.dir\"><a href=\"/zh-CN/docs/Web/API/Console/dir\"><code>Console.dir()</code></a></dt>\n  <dd>\n    <p>显示一个由特定的 Javascript 对象列表组成的可交互列表。这个列表可以使用三角形隐藏和显示来审查子对象的内容。.</p>\n  </dd>\n  <dt id=\"console.dirxml\"><a href=\"/zh-CN/docs/Web/API/Console/dirxml\"><code>Console.dirxml()</code></a></dt>\n  <dd>\n    <p>打印 XML/HTML 元素表示的指定对象，否则显示 JavaScript 对象视图。</p>\n  </dd>\n  <dt id=\"console.error\"><a href=\"/zh-CN/docs/Web/API/Console/error\"><code>Console.error()</code></a></dt>\n  <dd>\n    <p>打印一条错误信息，使用方法可以参考 <a href=\"/zh-CN/docs/Web/API/console#Using_string_substitutions\" aria-current=\"page\">string substitution</a>。</p>\n  </dd>\n  <dt id=\"console.exception\"><a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>Console.exception()</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p><code>error()</code> 方法的别称。</p>\n  </dd>\n  <dt id=\"console.group\"><a href=\"/zh-CN/docs/Web/API/Console/group\"><code>Console.group()</code></a></dt>\n  <dd>\n    <p>创建一个新的内联 <a href=\"/zh-CN/docs/Web/API/console#Using_groups_in_the_console\" aria-current=\"page\">group</a>, 后续所有打印内容将会以子层级的形式展示。调用 <code>groupEnd()</code>来闭合组。</p>\n  </dd>\n  <dt id=\"console.groupcollapsed\"><a href=\"/zh-CN/docs/Web/API/Console/groupCollapsed\"><code>Console.groupCollapsed()</code></a></dt>\n  <dd>\n    <p>创建一个新的内联 <a href=\"/zh-CN/docs/Web/API/console#Using_groups_in_the_console\" aria-current=\"page\">group</a>。使用方法和 <code>group()</code> 相同，不同的是，<code>groupCollapsed()</code> 方法打印出来的内容默认是折叠的。调用<code>groupEnd()</code>来闭合组。</p>\n  </dd>\n  <dt id=\"console.groupend\"><a href=\"/zh-CN/docs/Web/API/Console/groupEnd\"><code>Console.groupEnd()</code></a></dt>\n  <dd>\n    <p>闭合当前内联 <a href=\"/zh-CN/docs/Web/API/console#Using_groups_in_the_console\" aria-current=\"page\">group</a>。</p>\n  </dd>\n  <dt id=\"console.info\"><a href=\"/zh-CN/docs/Web/API/Console/info\"><code>Console.info()</code></a></dt>\n  <dd>\n    <p>打印资讯类说明信息，使用方法可以参考 <a href=\"/zh-CN/docs/Web/API/console#Using_string_substitutions\" aria-current=\"page\">string substitution</a>。</p>\n  </dd>\n  <dt id=\"console.log\"><a href=\"/zh-CN/docs/Web/API/Console/log\"><code>Console.log()</code></a></dt>\n  <dd>\n    <p>打印内容的通用方法，使用方法可以参考 <a href=\"/zh-CN/docs/Web/API/console#Using_string_substitutions\" aria-current=\"page\">string substitution</a>。</p>\n  </dd>\n  <dt id=\"console.profile\"><a href=\"/zh-CN/docs/Web/API/Console/profile\"><code>Console.profile()</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>Starts the browser's built-in profiler (for example, the <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/performance/index.html\" class=\"external\" rel=\" noopener\">Firefox performance tool</a>). You can specify an optional name for the profile.</p>\n  </dd>\n  <dt id=\"console.profileend\"><a href=\"/zh-CN/docs/Web/API/Console/profileEnd\"><code>Console.profileEnd()</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>Stops the profiler. You can see the resulting profile in the browser's performance tool (for example, the <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/performance/index.html\" class=\"external\" rel=\" noopener\">Firefox performance tool</a>).</p>\n  </dd>\n  <dt id=\"console.table\"><a href=\"/zh-CN/docs/Web/API/Console/table\"><code>Console.table()</code></a></dt>\n  <dd>\n    <p>将列表型的数据打印成表格。</p>\n  </dd>\n  <dt id=\"console.time\"><a href=\"/zh-CN/docs/Web/API/Console/time\"><code>Console.time()</code></a></dt>\n  <dd>\n    <p>启动一个以入参作为特定名称的<a href=\"/zh-CN/docs/Web/API/console#Timers\" aria-current=\"page\">计时器</a>，在显示页面中可同时运行的计时器上限为 10,000.</p>\n  </dd>\n  <dt id=\"console.timeend\"><a href=\"/zh-CN/docs/Web/API/Console/timeEnd\"><code>Console.timeEnd()</code></a></dt>\n  <dd>\n    <p>结束特定的 <a href=\"/zh-CN/docs/Web/API/console#Timers\" aria-current=\"page\">计时器</a> 并以毫秒打印其从开始到结束所用的时间。</p>\n  </dd>\n  <dt id=\"console.timelog\"><a href=\"/zh-CN/docs/Web/API/Console/timeLog\"><code>Console.timeLog()</code></a></dt>\n  <dd>\n    <p>打印特定 <a href=\"/zh-CN/docs/Web/API/console#Timers\" aria-current=\"page\">计时器</a> 所运行的时间。</p>\n  </dd>\n  <dt id=\"console.timestamp\"><a href=\"/zh-CN/docs/Web/API/Console/timeStamp\"><code>Console.timeStamp()</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>添加一个标记到浏览器的 <a href=\"https://developer.chrome.com/devtools/docs/timeline\" class=\"external\" rel=\" noopener\">Timeline</a> 或 <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/performance/waterfall/index.html\" class=\"external\" rel=\" noopener\">Waterfall</a> 工具。</p>\n  </dd>\n  <dt id=\"console.trace\"><a href=\"/zh-CN/docs/Web/API/Console/trace\"><code>Console.trace()</code></a></dt>\n  <dd>\n    <p>输出一个 <a href=\"/zh-CN/docs/Web/API/console#Stack_traces\" aria-current=\"page\">stack trace</a>。</p>\n  </dd>\n  <dt id=\"console.warn\"><a href=\"/zh-CN/docs/Web/API/Console/warn\"><code>Console.warn()</code></a></dt>\n  <dd>\n    <p>打印一个警告信息，可以使用 <a href=\"/zh-CN/docs/Web/API/console#Using_string_substitutions\" aria-current=\"page\">string substitution</a> 和额外的参数。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"用法","title":"用法","isH3":false,"content":""}},{"type":"prose","value":{"id":"输出文本到控制台","title":"输出文本到控制台","isH3":true,"content":"<p>console 对象中较多使用的主要有四个方法 <a href=\"/zh-CN/docs/Web/API/Console/log\"><code>console.log()</code></a>, <a href=\"/zh-CN/docs/Web/API/Console/info\"><code>console.info()</code></a>, <a href=\"/zh-CN/docs/Web/API/Console/warn\"><code>console.warn()</code></a>, 和<a href=\"/zh-CN/docs/Web/API/Console/error\"><code>console.error()</code></a>。每一个结果在日志中都有不同的样式，可以使用浏览器控制台的日志筛选功能筛选出感兴趣的日志信息。</p>\n<p>有两种途径使用这些方法，可以简单的传入一组对象，其中的字符串对象会被连接到一起，输出到控制台。或者可以传入包含零个或多个的替换的字符串，后面跟着被替换的对象列表。</p>\n<h4 id=\"打印单个对象\">打印单个对象</h4>\n<p>The simplest way to use the logging methods is to output a single object:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> someObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">str</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Some text\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>someObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>打印结果类似下面：</p>\n<pre class=\"notranslate\">[09:27:13.475] ({str:\"Some text\", id:5})\n</pre>\n<h4 id=\"打印多个对象\">打印多个对象</h4>\n<p>可以打印多个对象，就像下面一样：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> car <span class=\"token operator\">=</span> <span class=\"token string\">\"Dodge Charger\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> someObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">str</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Some text\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My first car was a\"</span><span class=\"token punctuation\">,</span> car<span class=\"token punctuation\">,</span> <span class=\"token string\">\". The object is:\"</span><span class=\"token punctuation\">,</span> someObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>打印结果类似下面：</p>\n<pre class=\"notranslate\">[09:28:22.711] My first car was a Dodge Charger . The object is: ({str:\"Some text\", id:5})\n</pre>\n<h4 id=\"使用字符串替换\">使用字符串替换</h4>\n<p>可以在传递给 console 的方法的时候使用下面的字符以期进行参数的替换。</p>\n<table>\n  <thead>\n    <tr>\n      <th>Substitution string</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%o</code> or <code>%O</code></td>\n      <td>打印 JavaScript 对象。在审阅器点击对象名字可展开更多对象的信息。</td>\n    </tr>\n    <tr>\n      <td><code>%d</code> or <code>%i</code></td>\n      <td>打印整数。支持数字格式化。例如，<code>console.log(\"Foo %.2d\", 1.1)</code> 会输出有先导 0 的两位有效数字：<code>Foo 01</code>。</td>\n    </tr>\n    <tr>\n      <td><code>%s</code></td>\n      <td>打印字符串。</td>\n    </tr>\n    <tr>\n      <td><code>%f</code></td>\n      <td>打印浮点数。支持格式化，比如 <code>console.log(\"Foo %.2f\", 1.1)</code> 会输出两位小数：<code>Foo 1.10</code></td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> Chrome 不支持精确格式化。</p>\n</div>\n<p>当要替换的参数类型和预期的打印类型不同时，参数会被转换成预期的打印类型。</p>\n<pre class=\"notranslate\">for (var i=0; i&lt;5; i++) {\n  console.log(\"Hello, %s. You've called me %d times.\", \"Bob\", i+1);\n}\n</pre>\n<p>输出样例如下所示：</p>\n<pre class=\"notranslate\">[13:14:13.481] Hello, Bob. You've called me 1 times.\n[13:14:13.483] Hello, Bob. You've called me 2 times.\n[13:14:13.485] Hello, Bob. You've called me 3 times.\n[13:14:13.487] Hello, Bob. You've called me 4 times.\n[13:14:13.488] Hello, Bob. You've called me 5 times.\n</pre>\n<h4 id=\"为控制台定义样式\">为控制台定义样式</h4>\n<p>可以使用 <code>%c</code> 为打印内容定义样式：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is %cMy stylish message\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"color: yellow; font-style: italic; background-color: blue;padding: 2px\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>指令前的文本不会受到影响，但指令后的文本将会使用参数中声明的 CSS 样式。\n  <img src=\"/en-US/docs/Web/API/Console/css-styling.png\" alt=\"\" width=\"198\" height=\"29\" loading=\"lazy\">\n</p>\n<p><code>%c</code> 语法可用的属性如下 (至少在 Firefox 中是这样，别的浏览器会有诸多不同）：</p>\n<ul>\n  <li><a href=\"/zh-CN/docs/Web/CSS/background\"><code>background</code></a> 与其全写版本。</li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/border\"><code>border</code></a> 与其全写版本。</li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/border-radius\"><code>border-radius</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/box-decoration-break\"><code>box-decoration-break</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/box-shadow\"><code>box-shadow</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/clear\"><code>clear</code></a> 和 <a href=\"/zh-CN/docs/Web/CSS/float\"><code>float</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/color\"><code>color</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/cursor\"><code>cursor</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/display\"><code>display</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/font\"><code>font</code></a> 与其全写版本。</li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/line-height\"><code>line-height</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/margin\"><code>margin</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/outline\"><code>outline</code></a> 与其全写版本。</li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/padding\"><code>padding</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/text-transform\"><code>text-transform</code></a> 这类 <code>text-*</code> 属性</li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/white-space\"><code>white-space</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/word-spacing\"><code>word-spacing</code></a> 和 <a href=\"/zh-CN/docs/Web/CSS/word-break\"><code>word-break</code></a></li>\n  <li><a href=\"/zh-CN/docs/Web/CSS/writing-mode\"><code>writing-mode</code></a></li>\n</ul>\n<p><strong>注意</strong>：控制台信息的默认行为与行内元素相似。为了应用 <code>padding</code>、<code>margin</code> 这类效果，你应当这样设置<code>display: inline-block</code>。</p>"}},{"type":"prose","value":{"id":"在_console_中使用编组","title":"在 console 中使用编组","isH3":true,"content":"<p>可以使用嵌套组来把视觉上相关的元素合并，以协助组织你的输出。使用<code>console.group()</code>创建新的嵌套块，或者用<code>console.groupCollapsed()</code> 创建默认折叠的块，这种块需要点击闭合按钮来展开才能读到。</p>\n<p>直接调用 <code>console.groupEnd()</code>.就可以退出当前组。比如下面的代码：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is the outer level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Level 2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Level 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"More of level 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">groupEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Back to level 2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">groupEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Back to the outer level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>执行结果：</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/Console/console_groups_demo.png\" alt=\"Demo of nested groups in Firefox console\" width=\"236\" height=\"169\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"定时器","title":"定时器","isH3":true,"content":"<p>你可以使用定时器来计算一段特定操作的周期。使用 <code>console.time()</code> 方法以创建一个计时器，其唯一的参数表示了计时器的名字。使用 <code>console.timeEnd()</code> 方法以关闭计时器，并获取经过的毫秒数，其同样以计时器的名字作为参数。一个页面最多同时只能有 10,000 个计数器运行。</p>\n<p>示例：:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"answer time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Click to continue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"answer time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Do a bunch of other stuff...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">timeEnd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"answer time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>这段代码将会打印需要用户关闭 alert box 的时间，打印时间到控制台上，等用户关闭第二个 alert 后，把结束时间打印到控制台。</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/Console/console-timelog.png\" alt=\"timerresult.png\" width=\"318\" height=\"102\" loading=\"lazy\">\n</p>\n<p>注意无论在开始还是结束的时候都会打印计时器的名字。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>备注：</strong> 如果使用计时器来记录网络时间请求的话下面的内容很重要。计时器将会报告传输过程的整个时间，而网络面板里显示的时间只计算了请求头部所需要的时间。如果启用了响应体日志记录，那么列出的响应头部和响应体组合的时间应该与在控制台输出中看到的时间相符。</p>\n</div>"}},{"type":"prose","value":{"id":"堆栈跟踪","title":"堆栈跟踪","isH3":true,"content":"<p>控制台也支持输出堆栈，其将会显示到调用 <a href=\"/zh-CN/docs/Web/API/Console/trace\"><code>console.trace()</code></a> 的点的调用路径。如下所示：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>控制台的输出：</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/Console/api-trace2.png\" alt=\"\" width=\"499\" height=\"123\" loading=\"lazy\">\n</p>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://console.spec.whatwg.org/#console-namespace","title":"Console Standard"}],"query":"api.console"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.console","dataURL":"/zh-CN/docs/Web/API/Console/bcd.json"}},{"type":"prose","value":{"id":"注意","title":"注意","isH3":false,"content":"<ul>\n  <li>在 Firefox 浏览器中，如果页面中自己定义了 <code>console</code> 对象，那么它会覆盖掉浏览器内置的 <code>console</code>对象，在其它浏览器可能也是。</li>\n</ul>"}},{"type":"prose","value":{"id":"相关文档","title":"相关文档","isH3":false,"content":"<ul>\n  <li><a href=\"https://firefox-source-docs.mozilla.org/devtools-user/index.html\" class=\"external\" rel=\" noopener\">Tools</a></li>\n  <li><a href=\"https://firefox-source-docs.mozilla.org/devtools-user/web_console/index.html\" class=\"external\" rel=\" noopener\">Web Console</a> - Firefox 浏览器控制台如何处理 console API 的调用</li>\n  <li><a href=\"https://firefox-source-docs.mozilla.org/devtools-user/remote_debugging/index.html\" class=\"external\" rel=\" noopener\">Remote debugging</a> - 如何在调试移动设备时查看控制台输出。</li>\n</ul>"}},{"type":"prose","value":{"id":"其他实现","title":"其他实现","isH3":true,"content":"<ul>\n  <li><a href=\"https://developers.google.com/chrome-developer-tools/docs/console-api\" class=\"external\" rel=\" noopener\">Google Chrome DevTools</a></li>\n  <li><a href=\"https://docs.microsoft.com/en-us/microsoft-edge/devtools-guide/console/console-api\" class=\"external\" rel=\" noopener\">Microsoft Edge DevTools</a></li>\n  <li><a href=\"https://developer.apple.com/library/safari/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/Console/Console.html\" class=\"external\" rel=\" noopener\">Safari Web Inspector</a></li>\n</ul>"}}],"toc":[{"text":"方法","id":"方法"},{"text":"用法","id":"用法"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"注意","id":"注意"},{"text":"相关文档","id":"相关文档"}],"summary":"Console 对象提供了浏览器控制台调试的接口（如：Firefox 的 Web Console）。在不同浏览器上它的工作方式可能不一样，但通常都会提供一套共性的功能。","popularity":0.0011,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"console","locale":"en-US","native":"English (US)"},{"title":"Consola","locale":"es","native":"Español"},{"title":"Console","locale":"fr","native":"Français"},{"title":"console","locale":"ja","native":"日本語"},{"title":"console","locale":"ko","native":"한국어"},{"title":"Console","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Console","locale":"ru","native":"Русский"},{"title":"Console","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/console","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/console/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Console","title":"Console"}],"pageTitle":"Console - Web API 接口参考 | MDN","noIndexing":false}}