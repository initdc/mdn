{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"CacheStorage","mdn_url":"/zh-CN/docs/Web/API/CacheStorage","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/CacheStorage/delete\"><code>delete()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CacheStorage/has\"><code>has()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CacheStorage/keys\"><code>keys()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CacheStorage/match\"><code>match()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CacheStorage/open\"><code>open()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p><strong><code>CacheStorage</code></strong> 接口表示 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 对象的存储。它提供了一个 <a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> 、其它类型 worker 或者 <a href=\"/zh-CN/docs/Web/API/Window\"><code>window</code></a> 范围内可以访问到的所有命名 cache 的主目录（它并不是一定要和 service workers 一起使用，即使它是在 service workers 规范中定义的），并维护一份字符串名称到相应 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 对象的映射。</p>\n<p><code>CacheStorage</code> 同样暴露了 <a href=\"/zh-CN/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open()</code></a> 和 <a href=\"/zh-CN/docs/Web/API/CacheStorage/match\"><code>CacheStorage.match()</code></a>方法。使用 <a href=\"/zh-CN/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open()</code></a> 获取 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 实例。使用 <a href=\"/zh-CN/docs/Web/API/CacheStorage/match\"><code>CacheStorage.match()</code></a> 检查给定的 <a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a> 是否是 <code>CacheStorage</code> 对象跟踪的任何 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 对象中的键。</p>\n<p>你可以通过 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/caches\"><code>caches</code> <small>(en-US)</small></a> 属性访问 <code>CacheStorage</code> .</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> CacheStorage 总是对不受信任的源（即那些不使用 HTTPS，尽管此定义将来很可能变得更加复杂。）使用 <code>SecurityError</code> reject. 测试时，你可以在 Firefox Devtools 选项/齿轮菜单中通过选中\"通过 HTTP 启用 Service Workers (当工具箱打开时)\" 选项来绕开这个限制。</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> <a href=\"/zh-CN/docs/Web/API/CacheStorage/match\"><code>CacheStorage.match()</code></a> 是一个便捷方法。匹配 cache 条目的同等功能可以通过执行 <a href=\"/zh-CN/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open()</code></a> 打开 cache，使用 <a href=\"/zh-CN/docs/Web/API/CacheStorage/keys\"><code>CacheStorage.keys()</code></a> 返回它包含的条目，并将你所需的条目与 <a href=\"/zh-CN/docs/Web/API/CacheStorage/match\"><code>CacheStorage.match()</code></a> 匹配。</p>\n</div>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"cachestorage.match\"><a href=\"/zh-CN/docs/Web/API/CacheStorage/match\"><code>CacheStorage.match()</code></a></dt>\n  <dd>\n    <p>检查给定的 <a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a> 是否是 <a href=\"/zh-CN/docs/Web/API/CacheStorage\" aria-current=\"page\"><code>CacheStorage</code></a> 对象跟踪的任何 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 对象的键，并返回一个 resolve 为该匹配的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> .</p>\n  </dd>\n  <dt id=\"cachestorage.has\"><a href=\"/zh-CN/docs/Web/API/CacheStorage/has\"><code>CacheStorage.has()</code></a></dt>\n  <dd>\n    <p>如果存在与 <code>cacheName</code> 匹配的 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 对象，则返回一个 resolve 为 true 的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> .</p>\n  </dd>\n  <dt id=\"cachestorage.open\"><a href=\"/zh-CN/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open()</code></a></dt>\n  <dd>\n    <p>返回一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> ，resolve 为匹配 <code>cacheName</code> （如果不存在则创建一个新的 cache）的 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 对象</p>\n  </dd>\n  <dt id=\"cachestorage.delete\"><a href=\"/zh-CN/docs/Web/API/CacheStorage/delete\"><code>CacheStorage.delete()</code></a></dt>\n  <dd>\n    <p>查找匹配 <code>cacheName</code> 的 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 对象，如果找到，则删除 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 对象并返回一个 resolve 为 true 的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> 。如果没有找到 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 对象，则返回 <code>false</code>.</p>\n  </dd>\n  <dt id=\"cachestorage.keys\"><a href=\"/zh-CN/docs/Web/API/CacheStorage/keys\"><code>CacheStorage.keys()</code></a></dt>\n  <dd>\n    <p>返回一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> ，它将使用一个包含与 <a href=\"/zh-CN/docs/Web/API/CacheStorage\" aria-current=\"page\"><code>CacheStorage</code></a> 追踪的所有命名 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 对象对应字符串的数组来 resolve. 使用该方法迭代所有 <a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a> 对象的列表。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>此代码片段来自于 MDN <a href=\"https://github.com/mdn/sw-test/\" class=\"external\" rel=\" noopener\">sw-test example</a> （请参阅<a href=\"https://mdn.github.io/sw-test/\" class=\"external\" rel=\" noopener\">sw-test running live</a>.）此 service worker 脚本等待 <a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a> 触发，然后运行 <a href=\"/zh-CN/docs/Web/API/ExtendableEvent/waitUntil\" title=\"waitUntil\"><code>waitUntil</code></a> 来处理应用程序的安装过程。这包括调用 <a href=\"/zh-CN/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open</code></a> 创建一个新的 cache，然后使用 <a href=\"/zh-CN/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code></a> 向其添加一系列资源。</p>\n<p>在第二个代码块，我们等待 <a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a> 触发。我们构建自定义相应，像这样：</p>\n<ol>\n  <li>检查 CacheStorage 中是否找到了匹配请求的内容。如果是，使用匹配内容。</li>\n  <li>如果没有，从网络获取请求，然后同样打开第一个代码块中创建的 cache，并使用 <a href=\"/zh-CN/docs/Web/API/Cache/put\"><code>Cache.put</code></a> (<code>cache.put(event.request, response.clone())</code>.) 将请求的 clone 副本添加到它。</li>\n  <li>如果此操作失败（例如，因为网络关闭），返回备用相应。</li>\n</ol>\n<p>最后，使用 <a href=\"/zh-CN/docs/Web/API/FetchEvent/respondWith\"><code>FetchEvent.respondWith</code></a> 返回自定义响应最终等于的内容。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'install'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span>\n    caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'/sw-test/'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/index.html'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/style.css'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/app.js'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/image-list.js'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/star-wars-logo.jpg'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/gallery/bountyHunters.jpg'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/gallery/myLittleVader.jpg'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/gallery/snowTroopers.jpg'</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> response<span class=\"token punctuation\">;</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span>caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    response <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span>\n    caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/sw-test/gallery/myLittleVader.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"说明","id":"说明","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#cachestorage-interface","title":"Service Workers 1"}],"query":"api.CacheStorage"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容","id":"浏览器兼容","isH3":false,"query":"api.CacheStorage","dataURL":"/zh-CN/docs/Web/API/CacheStorage/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using Service Workers (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/caches\"><code>WorkerGlobalScope.caches</code> <small>(en-US)</small></a></li>\n</ul>"}}],"toc":[{"text":"方法","id":"方法"},{"text":"示例","id":"示例"},{"text":"说明","id":"说明"},{"text":"浏览器兼容","id":"浏览器兼容"},{"text":"参见","id":"参见"}],"summary":"CacheStorage 接口表示 Cache 对象的存储。它提供了一个 ServiceWorker 、其它类型 worker 或者 window 范围内可以访问到的所有命名 cache 的主目录（它并不是一定要和 service workers 一起使用，即使它是在 service workers 规范中定义的），并维护一份字符串名称到相应 Cache 对象的映射。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"CacheStorage","locale":"en-US","native":"English (US)"},{"title":"CacheStorage","locale":"es","native":"Español"},{"title":"CacheStorage","locale":"fr","native":"Français"},{"title":"CacheStorage","locale":"ja","native":"日本語"},{"title":"CacheStorage","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/cachestorage","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/cachestorage/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/CacheStorage","title":"CacheStorage"}],"pageTitle":"CacheStorage - Web API 接口参考 | MDN","noIndexing":false}}