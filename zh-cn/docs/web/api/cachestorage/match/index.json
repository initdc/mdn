{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"CacheStorage.match()","mdn_url":"/zh-CN/docs/Web/API/CacheStorage/match","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/CacheStorage/delete\"><code>delete()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CacheStorage/has\"><code>has()</code></a></li><li><a href=\"/zh-CN/docs/Web/API/CacheStorage/keys\"><code>keys()</code></a></li><li><em><code>match()</code></em></li><li><a href=\"/zh-CN/docs/Web/API/CacheStorage/open\"><code>open()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/zh-CN/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/zh-CN/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/zh-CN/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p><a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a> 接口 (可适用于全局性<code>caches</code>) 的 <strong><code>match()</code></strong> 方法检查给定的<a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a> 对象或 url 字符串是否是一个已存储的 <a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a> 对象的 key. 这个方法针对 <a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a> 返回一个 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> ，如果没有匹配则返回 <code>undefined</code> 。</p>\n<p>cache 对象按创建顺序查询。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> <a href=\"/zh-CN/docs/Web/API/CacheStorage/match\" title=\"caches.match()\" aria-current=\"page\"><code>caches.match()</code></a> 是一个便捷方法。其作用等同于在每个缓存上调用 <a href=\"/zh-CN/docs/Web/API/Cache/match\"><code>cache.match()</code></a> 方法（按照<a href=\"/zh-CN/docs/Web/API/CacheStorage/keys\" title=\"caches.keys()\"><code>caches.keys()</code></a>返回的顺序) 直到返回<a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a> 对象。</p>\n</div>"}},{"type":"prose","value":{"id":"语法","title":"语法","isH3":false,"content":"<pre class=\"notranslate\">caches.match(request, options).then(function(response) {\n  // Do something with the response\n});\n</pre>"}},{"type":"prose","value":{"id":"参数","title":"参数","isH3":true,"content":"<dl>\n  <dt id=\"request\">request</dt>\n  <dd>\n    <p>想要匹配的 <a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a>。这个参数可以是 <a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a> 对象或 URL 字符串。</p>\n  </dd>\n  <dt id=\"options\">options <span class=\"badge inline optional\">可选</span></dt>\n  <dd>\n    <p>这个对象中的属性控制在匹配操作中如何进行匹配选择。可选择参数如下：</p>\n    <ul>\n      <li><code>ignoreSearch</code>: <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a>值，指定匹配过程是否应该忽略 url 中查询参数。举个例子，如果该参数设置为<code>true</code>, 那么 <code>?value=bar</code> 作为 <code>http://foo.com/?value=bar</code> 中的查询参数将会在匹配过程中被忽略。该参数默认 <code>false</code>。</li>\n      <li><code>ignoreMethod</code>: <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a> 值，当被设置为 <code>true</code> 时，将会阻止在匹配操作中对 <a href=\"/zh-CN/docs/Web/API/Request\"><code>Request</code></a>请求的 <code>http</code> 方式的验证 (通常只允许 <code>GET</code> 和 <code>HEAD</code> 两种请求方式)。该参数默认为 <code>false</code>.</li>\n      <li><code>ignoreVary</code>: <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a> 值，当该字段被设置为 <code>true</code>, 告知在匹配操作中忽略对<code>VARY</code>头信息的匹配。换句话说，当请求 URL 匹配上，你将获取匹配的 <a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a> 对象，无论请求的 <code>VARY</code> 头存在或者没有。该参数默认为 <code>false</code>.</li>\n      <li><code>cacheName</code>: <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> 值，表示所要搜索的缓存名称。</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返回值","title":"返回值","isH3":true,"content":"<p>返回 resolve 为匹配 <a href=\"/zh-CN/docs/Web/API/Response\"><code>Response</code></a> 的 <a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> 对象。如果没有与指定 request 相匹配 response，promise 将使用 <code>undefined</code> resolve.</p>"}},{"type":"prose","value":{"id":"例子","title":"例子","isH3":false,"content":"<p>此示例来自于 MDN <a href=\"https://github.com/mdn/sw-test/\" class=\"external\" rel=\" noopener\">sw-test example</a> （请参阅 <a href=\"https://mdn.github.io/sw-test/\" class=\"external\" rel=\" noopener\">sw-test running live</a>）。这里，等待 <a href=\"/zh-CN/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a> 事件触发。我们构建自定义响应，像这样：</p>\n<ol>\n  <li>使用 <a href=\"/zh-CN/docs/Web/API/CacheStorage/match\" title=\"CacheStorage.match()\" aria-current=\"page\"><code>CacheStorage.match()</code></a> 检查 <a href=\"/zh-CN/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a> 中是否存在匹配请求，如果存在，则使用它。</li>\n  <li>如果没有，使用 <code>open()</code> 打开 <code>v1</code> cache，使用 <a href=\"/zh-CN/docs/Web/API/Cache/put\" title=\"Cache.put()\"><code>Cache.put()</code></a> 将默认网络请求放入 cache 中，并只用 <code>return response.clone()</code> 返回默认网络请求的克隆副本。最后一个是必须的，因为 <code>put()</code> 使用响应主体。</li>\n  <li>如果此操作失败（例如，因为网络已关闭），则返回备用响应。</li>\n</ol>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> response <span class=\"token operator\">||</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/sw-test/gallery/myLittleVader.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"规范","id":"规范","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#cache-storage-match","title":"Service Workers 1"}],"query":"api.CacheStorage.match"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.CacheStorage.match","dataURL":"/zh-CN/docs/Web/API/CacheStorage/match/bcd.json"}},{"type":"prose","value":{"id":"亦可参考","title":"亦可参考","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using Service Workers (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Cache\"><code>Cache</code></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/caches\"><code>self.caches</code> <small>(en-US)</small></a></li>\n</ul>"}}],"toc":[{"text":"语法","id":"语法"},{"text":"例子","id":"例子"},{"text":"规范","id":"规范"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"亦可参考","id":"亦可参考"}],"summary":"CacheStorage 接口 (可适用于全局性caches) 的 match() 方法检查给定的Request 对象或 url 字符串是否是一个已存储的 Response 对象的 key. 这个方法针对 Response 返回一个 Promise ，如果没有匹配则返回 undefined 。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"CacheStorage.match()","locale":"en-US","native":"English (US)"},{"title":"CacheStorage.match()","locale":"fr","native":"Français"},{"title":"CacheStorage.match()","locale":"ja","native":"日本語"},{"title":"CacheStorage.match()","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/cachestorage/match","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/cachestorage/match/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/CacheStorage","title":"CacheStorage"},{"uri":"/zh-CN/docs/Web/API/CacheStorage/match","title":"CacheStorage.match()"}],"pageTitle":"CacheStorage.match() - Web API 接口参考 | MDN","noIndexing":false}}