{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Lighting in WebGL","mdn_url":"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Lighting_in_WebGL","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n <ol>\n  <li><a href=\"/zh-CN/docs/Web/API/WebGL_API\"><strong>WebGL API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>WebGL tutorial</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Getting_started_with_WebGL\">Getting started with WebGL</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Adding_2D_content_to_a_WebGL_context\">Adding 2D content to a WebGL context</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Using_shaders_to_apply_color_in_WebGL\">Using shaders to apply color in WebGL</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Animating_objects_with_WebGL\">Animating objects with WebGL</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL\">Creating 3D objects using WebGL</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\">Using textures in WebGL</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Lighting_in_WebGL\">Lighting in WebGL</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Animating_textures_in_WebGL\">Animating textures in WebGL</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Examples and articles</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Matrix_math_for_the_web\">Matrix math for the web</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/WebGL_model_view_projection\">WebGL model view projection</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/WebGL_best_practices\">WebGL best practices</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Using_Extensions\">Using WebGL extensions</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Basic_2D_animation_example\">A basic 2D WebGL animation example</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/By_example\">WebGL by example</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Interfaces</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLActiveInfo\"><code>WebGLActiveInfo</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLContextEvent\"><code>WebGLContextEvent</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLProgram\"><code>WebGLProgram</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLQuery\"><code>WebGLQuery</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLSampler\"><code>WebGLSampler</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLShader\"><code>WebGLShader</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLShaderPrecisionFormat\"><code>WebGLShaderPrecisionFormat</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLSync\"><code>WebGLSync</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLTexture\"><code>WebGLTexture</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code></a></li>\n      </ol>\n    </details>\n  </li>\n\n  <li><strong><a href=\"/zh-CN/docs/MDN\">Documentation:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Contribute</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/MDN\">The MDN project</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\">« 上一页</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Animating_textures_in_WebGL\">下一页  »</a></li>\n</ul>\n<p>在使用灯光之前，首先我们需要了解，与定义更广泛的 OpenGL 不同，WebGL 并没有继承 OpenGL 中灯光的支持。所以你只能由自己完全得控制灯光。幸运得是，这也并不是很难，本文接下来就会介绍完成灯光的基础。</p>"}},{"type":"prose","value":{"id":"在_3d_空间中模拟现实灯光","title":"在 3D 空间中模拟现实灯光","isH3":false,"content":"<p>在 3D 空间中模拟现实世界的灯光的具体原理和细节绝非本篇文章能够描述清楚的，但是对灯光模型有一定的了解对我们的学习还是很有帮助的。虽然这里没办法深入讲解，但是维基百科中的<a href=\"https://zh.wikipedia.org/wiki/Phong%E8%91%97%E8%89%B2%E6%B3%95\" class=\"external\" rel=\" noopener\">Phong 着色法</a>给出了一个不错的概要介绍，其中包含了最常用的几种光照模型。</p>\n<p>光源类型可以概括成如下三种：</p>\n<p><strong>环境光</strong> 是一种可以渗透到场景的每一个角落的光。它是非方向光并且会均匀地照射物体的每一个面，无论这个面是朝向哪个方向的。</p>\n<p><strong>方向光</strong> 是一束从一个固定的方向照射过来的光。这种光的特点可以理解为好像是从一个很遥远的地方照射过来的，然后光线中的每一个光子与其它光子都是平行运动的。举个例子来说，阳光就可以认为是方向光。</p>\n<p><strong>点光源光</strong> 是指光线是从一个点发射出来的，是向着四面八方发射的。这种光在我们的现实生活中是最常被用到的。举个例子来说，电灯泡就是向各个方向发射光线的。</p>\n<p>以我们的需要来看，我们会简化光照模型，只考虑简单的方向光和环境光，不会考虑任何镜面反射和点光源。这样的话，我们只需要在我们使用的环境光上加上照射到旋转立方体的方向光就可以了。在这里可以看到之前的<a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\">旋转立方体的例子</a>。</p>\n<p>虽然可以抛开了点光源和镜面反射，但是关于方向光还是有两点需要注意一下：</p>\n<ol>\n  <li>需要在每个顶点信息中加入面的<strong>朝向法线</strong>。这个法线是一个垂直于这个顶点所在平面的向量。</li>\n  <li>需要明确方向光的传播方向，可以使用一个<strong>方向向量</strong>来定义。</li>\n</ol>\n<p>接着，我们会更新顶点着色器，考虑到环境光，再考虑到方向光（方向光的作用会因为光线方向与面的夹角关系而不同），计算每一个顶点的颜色。实现这一目标的代码如下。</p>"}},{"type":"prose","value":{"id":"建立顶点法线","title":"建立顶点法线","isH3":false,"content":"<p>首先我们需要做的是建立一个数组来存放立方体所有顶点的法线。由于立方体是一个很简单的物体，所以很容易实现；显然如果是对复杂物体，则法线的计算方法需要更深入的研究。(注：译者调试后发现此处 new WebGLFloatArray(...) 可能应该使用 new Float32Array())</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>cubeVerticesNormalBuffer <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">createBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">bindBuffer</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">ARRAY_BUFFER</span><span class=\"token punctuation\">,</span> cubeVerticesNormalBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> vertexNormals <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// Front</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Back</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Top</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Bottom</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Right</span>\n   <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Left</span>\n  <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">bufferData</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">ARRAY_BUFFER</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLFloatArray</span><span class=\"token punctuation\">(</span>vertexNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">STATIC_DRAW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>现在我们应该对此非常熟悉了；创建新的 buffer，将它和 gl.ARRAR_BUFFER 绑定在一起，然后通过调用 bufferData() 把我们的顶点法线数组一起传入。</p>\n<p>然后我们在 drawScene() 中添加代码，将法线数组和着色器的 attribute 绑定起来以便着色器能够获取到法线数组的信息。</p>\n<p>（此处变量 vertexNormalAttribute 应该在 initShader() 函数中声明， 并赋值： vertexNormalAttribute = gl.getAttribLocation(shaderProgram, \"aVertexNormal\"）; gl.enableVertexAttribArray(vertexNormalAttribute);)</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>gl<span class=\"token punctuation\">.</span><span class=\"token function\">bindBuffer</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">ARRAY_BUFFER</span><span class=\"token punctuation\">,</span> cubeVerticesNormalBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">vertexAttribPointer</span><span class=\"token punctuation\">(</span>vertexNormalAttribute<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">FLOAT</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>最后，我们（为了读者便于理解， 此处代码应该在 setMatrixUniforms() 函数中添加）需要更新下代码，在着色器中建立和传递法线向量矩阵，用这个矩阵来处理当前立方体相对于光源位置法线向量的转换 (注：译者调试后发现此处 new WebGLFloatArray(...) 应该使用 new Float32Array())：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> normalMatrix <span class=\"token operator\">=</span> mvMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nnormalMatrix <span class=\"token operator\">=</span> normalMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">transpose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> nUniform <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">getUniformLocation</span><span class=\"token punctuation\">(</span>shaderProgram<span class=\"token punctuation\">,</span> <span class=\"token string\">\"uNormalMatrix\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">uniformMatrix4fv</span><span class=\"token punctuation\">(</span>nUniform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLFloatArray</span><span class=\"token punctuation\">(</span>normalMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"更新着色器","title":"更新着色器","isH3":false,"content":"<p>现在着色器需要的所有数据已经全部可以获取到了（或者说全部准备好了），我们需要更新下着色器本身的代码。</p>"}},{"type":"prose","value":{"id":"顶点着色器","title":"顶点着色器","isH3":true,"content":"<p>首先更新顶点着色器，让它给每一个基于环境光和方向光的顶点一个着色器值。让我们看下代码：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>shader-vs<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>x-shader/x-vertex<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  attribute highp vec3 aVertexNormal<span class=\"token punctuation\">;</span>\n  attribute highp vec3 aVertexPosition<span class=\"token punctuation\">;</span>\n  attribute highp vec2 aTextureCoord<span class=\"token punctuation\">;</span>\n\n  uniform highp mat4 uNormalMatrix<span class=\"token punctuation\">;</span>\n  uniform highp mat4 uMVMatrix<span class=\"token punctuation\">;</span>\n  uniform highp mat4 uPMatrix<span class=\"token punctuation\">;</span>\n\n  varying highp vec2 vTextureCoord<span class=\"token punctuation\">;</span>\n  varying highp vec3 vLighting<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">void</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gl_Position <span class=\"token operator\">=</span> uPMatrix <span class=\"token operator\">*</span> uMVMatrix <span class=\"token operator\">*</span> <span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>aVertexPosition<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    vTextureCoord <span class=\"token operator\">=</span> aTextureCoord<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Apply lighting effect</span>\n\n    highp vec3 ambientLight <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    highp vec3 directionalLightColor <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    highp vec3 directionalVector <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    highp vec4 transformedNormal <span class=\"token operator\">=</span> uNormalMatrix <span class=\"token operator\">*</span> <span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>aVertexNormal<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    highp float directional <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>transformedNormal<span class=\"token punctuation\">.</span>xyz<span class=\"token punctuation\">,</span> directionalVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    vLighting <span class=\"token operator\">=</span> ambientLight <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>directionalLightColor <span class=\"token operator\">*</span> directional<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>一旦顶点位置计算完毕，我们就可以获得纹理对应于顶点的坐标，从而计算出顶点的阴影。</p>\n<p>我们先根据立方体位置和朝向，通过顶点法线乘以法线矩阵来转换法线。接着我们可以通过计算转换过后的法线与方向向量（即，光来自的方向）的点积来计算得出顶点反射方向光的量。如果计算出的这个值小于 0，则我们把值固定设为 0，因为你不会有小于 0 的光。</p>\n<p>当方向光的量计算完，我们可以通过获取环境光并且添加方向光的颜色和要提供的定向光的量来生成光照值（lighting value）。最终结果我们会得到一个 RGB 值，用于片段着色器调整我们渲染的每一个像素的颜色。</p>"}},{"type":"prose","value":{"id":"片段着色器","title":"片段着色器","isH3":true,"content":"<p>片段着色器现在需要根据顶点着色器计算出的光照值来更新：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">&lt;</span>script id<span class=\"token operator\">=</span><span class=\"token string\">\"shader-fs\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"x-shader/x-fragment\"</span><span class=\"token operator\">&gt;</span>\n  varying highp vec2 vTextureCoord<span class=\"token punctuation\">;</span>\n  varying highp vec3 vLighting<span class=\"token punctuation\">;</span>\n\n  uniform sampler2D uSampler<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">void</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    mediump vec4 texelColor <span class=\"token operator\">=</span> <span class=\"token function\">texture2D</span><span class=\"token punctuation\">(</span>uSampler<span class=\"token punctuation\">,</span> <span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span>vTextureCoord<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">,</span> vTextureCoord<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    gl_FragColor <span class=\"token operator\">=</span> <span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>texelColor<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*</span> vLighting<span class=\"token punctuation\">,</span> texelColor<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre></div>\n<p>和先前我们做的例子一样，我们获取纹理的颜色（原文“color of the texel”? 此处个人觉得应该就是指纹理的颜色），不同的是在设置片段颜色之前，我们将纹理的颜色乘以光照值来调整纹理以达到我们光源的效果。</p>\n<p>效果就是这样！</p><iframe width=\"670\" height=\"510\" src=\"https://mdn.github.io/webgl-examples/tutorial/sample7/index.html\" loading=\"lazy\"></iframe>\n<p><a href=\"https://github.com/mdn/webgl-examples/tree/gh-pages/tutorial/sample7\" class=\"external\" rel=\" noopener\">View the complete code</a> | <a href=\"https://mdn.github.io/webgl-examples/tutorial/sample7/\" class=\"external\" rel=\" noopener\">Open this demo on a new page</a></p>"}},{"type":"prose","value":{"id":"读者练习","title":"读者练习","isH3":false,"content":"<p>显然这是一个很简单的例子，实现了基本的每个顶点的照明。对于更高级的图形，你将可能需要实现每个像素（或者说更多像素）的照明，但这会帮助你朝着正确的方向前行。</p>\n<p>你也可以尝试光源方向颜色等等。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\">« 上一页</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Animating_textures_in_WebGL\">下一页  »</a></li>\n</ul>"}}],"toc":[{"text":"在 3D 空间中模拟现实灯光","id":"在_3d_空间中模拟现实灯光"},{"text":"建立顶点法线","id":"建立顶点法线"},{"text":"更新着色器","id":"更新着色器"},{"text":"读者练习","id":"读者练习"}],"summary":"在使用灯光之前，首先我们需要了解，与定义更广泛的 OpenGL 不同，WebGL 并没有继承 OpenGL 中灯光的支持。所以你只能由自己完全得控制灯光。幸运得是，这也并不是很难，本文接下来就会介绍完成灯光的基础。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Lighting in WebGL","locale":"en-US","native":"English (US)"},{"title":"Éclairage en WebGL","locale":"fr","native":"Français"},{"title":"WebGL でのライティング","locale":"ja","native":"日本語"},{"title":"WebGL에서 조명 효과 적용하기","locale":"ko","native":"한국어"},{"title":"Lighting in WebGL","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/api/webgl_api/tutorial/lighting_in_webgl","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/webgl_api/tutorial/lighting_in_webgl/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/WebGL_API","title":"WebGL"},{"uri":"/zh-CN/docs/Web/API/WebGL_API/Tutorial","title":"WebGL 教程"},{"uri":"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Lighting_in_WebGL","title":"Lighting in WebGL"}],"pageTitle":"Lighting in WebGL - Web API 接口参考 | MDN","noIndexing":false}}