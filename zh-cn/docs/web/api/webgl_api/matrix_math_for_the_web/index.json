{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Matrix math for the web","mdn_url":"/zh-CN/docs/Web/API/WebGL_API/Matrix_math_for_the_web","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n <ol>\n  <li><a href=\"/zh-CN/docs/Web/API/WebGL_API\"><strong>WebGL API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>WebGL tutorial</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Getting_started_with_WebGL\">Getting started with WebGL</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Adding_2D_content_to_a_WebGL_context\">Adding 2D content to a WebGL context</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Using_shaders_to_apply_color_in_WebGL\">Using shaders to apply color in WebGL</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Animating_objects_with_WebGL\">Animating objects with WebGL</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL\">Creating 3D objects using WebGL</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\">Using textures in WebGL</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Lighting_in_WebGL\">Lighting in WebGL</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Tutorial/Animating_textures_in_WebGL\">Animating textures in WebGL</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Examples and articles</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Matrix_math_for_the_web\">Matrix math for the web</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/WebGL_model_view_projection\">WebGL model view projection</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/WebGL_best_practices\">WebGL best practices</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Using_Extensions\">Using WebGL extensions</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/Basic_2D_animation_example\">A basic 2D WebGL animation example</a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL_API/By_example\">WebGL by example</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Interfaces</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLActiveInfo\"><code>WebGLActiveInfo</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLContextEvent\"><code>WebGLContextEvent</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLProgram\"><code>WebGLProgram</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLQuery\"><code>WebGLQuery</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLSampler\"><code>WebGLSampler</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLShader\"><code>WebGLShader</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLShaderPrecisionFormat\"><code>WebGLShaderPrecisionFormat</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLSync\"><code>WebGLSync</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLTexture\"><code>WebGLTexture</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code></a></li>\n        <li><a href=\"/zh-CN/docs/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code></a></li>\n      </ol>\n    </details>\n  </li>\n\n  <li><strong><a href=\"/zh-CN/docs/MDN\">Documentation:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Contribute</summary>\n      <ol>\n        <li><a href=\"/zh-CN/docs/MDN\">The MDN project</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>矩阵可以用于表示空间中的对象的变换，并且是 Web 页面可视化的重要工具。本文探索如何创建并配合<a href=\"/zh-CN/docs/Web/CSS/CSS_Transforms/Using_CSS_transforms\">CSS3 变换</a>和 matrix3d 变换类型使用矩阵。</p>\n<p>虽然本文为了便于解释而使用了 CSS3， 矩阵却是许多技术中的核心概念， 包括 WebGL 和着色器。本文也是<a href=\"https://github.com/TatumCreative/mdn-matrix-math\" class=\"external\" rel=\" noopener\">MDN content kit</a>的一部分。示例使用了一组全局对象 MDN 下的<a href=\"https://github.com/TatumCreative/mdn-webgl\" class=\"external\" rel=\" noopener\">工具函数</a>。</p>"}},{"type":"prose","value":{"id":"什么是变换矩阵？","title":"什么是变换矩阵？","isH3":false,"content":"<p>虽然存在许多类型的矩阵，但我们感兴趣的是三维变换矩阵。这种矩阵由一个 4x4 方阵，共 16 个值组成。在 JavaScript 中，可以很方便的用数组表示矩阵。比如典型的单位矩阵。单位阵乘上一个点或者矩阵， 其结果保持不变。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> identityMatrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>说到乘法，这种运算用于矩阵是什么样的呢？最简单的例子是矩阵乘一个点。你可能注意到，三维空间中的点和一个 4x4 矩阵并不匹配，为此我们加上了额外的第四维 W。一般来说，把 W 设为 1 就可以了。W 维度还有一些额外的用途超出本文的讨论范围。查看<a href=\"/zh-CN/docs/Web/API/WebGL_API/WebGL_model_view_projection\">WebGL model view projection</a>看它有哪些用途。</p>\n<p>注意矩阵和点的对齐方式：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"定义相乘函数","title":"定义相乘函数","isH3":true,"content":"<p>我们在示例代码中定义了一个乘法函数 — <code>multiplyMatrixAndPoint()</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">multiplyMatrixAndPoint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">matrix<span class=\"token punctuation\">,</span> point</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// 给矩阵的每一部分一个简单的变量名，列数（c）与行数（r）</span>\n  <span class=\"token keyword\">var</span> c0r0 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c1r0 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c2r0 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c3r0 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> c0r1 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c1r1 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c2r1 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c3r1 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> c0r2 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c1r2 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c2r2 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c3r2 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> c0r3 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c1r3 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c2r3 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c3r3 <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 定义点坐标</span>\n  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> point<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> point<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> z <span class=\"token operator\">=</span> point<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> w <span class=\"token operator\">=</span> point<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 点坐标和第一列对应相乘，再求和</span>\n  <span class=\"token keyword\">var</span> resultX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> c0r0<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">*</span> c0r1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>z <span class=\"token operator\">*</span> c0r2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>w <span class=\"token operator\">*</span> c0r3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 点坐标和第二列对应相乘，再求和</span>\n  <span class=\"token keyword\">var</span> resultY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> c1r0<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">*</span> c1r1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>z <span class=\"token operator\">*</span> c1r2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>w <span class=\"token operator\">*</span> c1r3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 点坐标和第三列对应相乘，再求和</span>\n  <span class=\"token keyword\">var</span> resultZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> c2r0<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">*</span> c2r1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>z <span class=\"token operator\">*</span> c2r2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>w <span class=\"token operator\">*</span> c2r3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 点坐标和第四列对应相乘，再求和</span>\n  <span class=\"token keyword\">var</span> resultW <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> c3r0<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">*</span> c3r1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>z <span class=\"token operator\">*</span> c3r2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>w <span class=\"token operator\">*</span> c3r3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>resultX<span class=\"token punctuation\">,</span> resultY<span class=\"token punctuation\">,</span> resultZ<span class=\"token punctuation\">,</span> resultW<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>现在我们可以使用上面的函数将一个点乘上一个矩阵。乘以单位阵将会返回原值：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// identityResult 等于 [4,3,2,1]</span>\n<span class=\"token keyword\">var</span> identityResult <span class=\"token operator\">=</span> <span class=\"token function\">multiplyMatrixAndPoint</span><span class=\"token punctuation\">(</span>identityMatrix<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>返回同一个点并没有什么用处， 但还有一些其它的矩阵可以作用于点，返回有用的结果。接下来我们将演示其中一些矩阵。</p>"}},{"type":"prose","value":{"id":"两个矩阵相乘","title":"两个矩阵相乘","isH3":true,"content":"<p>除了把矩阵和点相乘，你也可以把两个矩阵相乘。之前的函数可以帮助我们简化这个过程：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">multiplyMatrices</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">matrixA<span class=\"token punctuation\">,</span> matrixB</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// 将第二个矩阵按列切片</span>\n  <span class=\"token keyword\">var</span> column0 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> column1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> column2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> column3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> matrixB<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 将每列分别和矩阵相乘</span>\n  <span class=\"token keyword\">var</span> result0 <span class=\"token operator\">=</span> <span class=\"token function\">multiplyMatrixAndPoint</span><span class=\"token punctuation\">(</span> matrixA<span class=\"token punctuation\">,</span> column0 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> result1 <span class=\"token operator\">=</span> <span class=\"token function\">multiplyMatrixAndPoint</span><span class=\"token punctuation\">(</span> matrixA<span class=\"token punctuation\">,</span> column1 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> result2 <span class=\"token operator\">=</span> <span class=\"token function\">multiplyMatrixAndPoint</span><span class=\"token punctuation\">(</span> matrixA<span class=\"token punctuation\">,</span> column2 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> result3 <span class=\"token operator\">=</span> <span class=\"token function\">multiplyMatrixAndPoint</span><span class=\"token punctuation\">(</span> matrixA<span class=\"token punctuation\">,</span> column3 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 把结果重新组合成矩阵</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    result0<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result3<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    result0<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result2<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result3<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    result0<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result2<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result3<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    result0<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result2<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result3<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"用法","title":"用法","isH3":true,"content":"<p>让我们看一看实际使用：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> someMatrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">var</span> identityMatrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 返回 someMatrix 的数组表示</span>\n<span class=\"token keyword\">var</span> someMatrixResult <span class=\"token operator\">=</span> <span class=\"token function\">multiplyMatrices</span><span class=\"token punctuation\">(</span>identityMatrix<span class=\"token punctuation\">,</span> someMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>警告：</strong> 这些函数是为了解释的清晰而编写，而不是为了速度或者内存管理。这些函数新建了大量数组， 可能在实时运算时导致垃圾回收的巨大开销。在实际产品中最好使用优化过的函数。比如<a href=\"https://glmatrix.net/\" class=\"external\" rel=\" noopener\">glMatrix</a>就是一个注重速度和性能的库。</p>\n</div>"}},{"type":"prose","value":{"id":"平移矩阵","title":"平移矩阵","isH3":false,"content":"<p>平移矩阵基于单位矩阵。它将一个对象沿 x，y，z 其中一个方向进行移动。最简单的想象平移的方式是设想拿起一个咖啡杯。咖啡杯必须保持直立和朝向以免咖啡洒出来。它可以离开桌子在空间中移动。</p>\n<p>现在我们还喝不到这个杯子里的咖啡，因为在平移矩阵的单独作用下杯子并不能倾斜。在之后的部分，我们会讨论新的矩阵，来解决这个问题。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> z <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> translationMatrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    x<span class=\"token punctuation\">,</span>    y<span class=\"token punctuation\">,</span>    z<span class=\"token punctuation\">,</span>   <span class=\"token number\">1</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"用矩阵操作_dom","title":"用矩阵操作 DOM","isH3":false,"content":"<p>一个非常简单的开始使用矩阵的方法是使用 CSS3 里的<code>matrix3d变换。首先，</code> 我们新建一个简单的<a href=\"/zh-CN/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a>并加上一些内容。这里样式没有展示出来，但我们将其设置成了页面居中且固定宽度与高度。我们同样为变换设定了动画以便清晰的观察发生的变化。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>move-me<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>transformable<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>Move me with a matrix<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipisicing elit...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>最后，我们会为每一个例子生成一个 4x4 矩阵，然后更新&lt;div&gt;的样式，对其应用一个 matrix3d 变换。要记住即使矩阵有四行四列，也要将其写成单行 16 个值。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 从矩阵数组创建 matrix3d 样式属性</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">matrixArrayToCssMatrix</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"matrix3d(\"</span> <span class=\"token operator\">+</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 获取 DOM 元素</span>\n<span class=\"token keyword\">var</span> moveMe <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'move-me'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 返回结果如：\"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 50, 100, 0, 1);\"</span>\n<span class=\"token keyword\">var</span> matrix3dRule <span class=\"token operator\">=</span> <span class=\"token function\">matrixArrayToCssMatrix</span><span class=\"token punctuation\">(</span> translationMatrix <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 设置变换</span>\nmoveMe<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span> matrix3dRule<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><a href=\"https://jsfiddle.net/g24mgw6y\" class=\"external\" rel=\" noopener\">在 JSFiddle 中查看</a></p>\n<p>\n  <img src=\"/en-US/docs/Web/API/WebGL_API/Matrix_math_for_the_web/matrix-translation.jpg\" alt=\"An example of matrix translation\" width=\"339\" height=\"385\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"缩放矩阵","title":"缩放矩阵","isH3":false,"content":"<p>缩放矩阵使对象的高度、宽度和深度三个维度的其中之一变大或变小。在典型（笛卡尔）坐标系中， 这将使得 x，y，z 坐标拉伸或收缩。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> w <span class=\"token operator\">=</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// width  (x)</span>\n<span class=\"token keyword\">var</span> h <span class=\"token operator\">=</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// height (y)</span>\n<span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// depth  (z)</span>\n\n<span class=\"token keyword\">var</span> scaleMatrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    w<span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    h<span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    d<span class=\"token punctuation\">,</span>   <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">1</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><a href=\"https://jsfiddle.net/fndd6e1b\" class=\"external\" rel=\" noopener\">在 JSFiddle 中查看</a></p>\n<p>\n  <img src=\"/en-US/docs/Web/API/WebGL_API/Matrix_math_for_the_web/matrix-scale.jpg\" alt=\"An example of matrix scaling\" width=\"398\" height=\"291\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"旋转矩阵","title":"旋转矩阵","isH3":false,"content":"<p>旋转矩阵比平移和缩放矩阵要稍复杂一些。其中用到了三角函数来完成旋转。尽管这部分不会把步骤讲得过于详细，但是下例有简单的说明。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 不借助矩阵将点绕原点旋转</span>\n<span class=\"token keyword\">var</span> point <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 计算到原点的距离</span>\n<span class=\"token keyword\">var</span> distance <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> point<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> point<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> point<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 60 度</span>\n<span class=\"token keyword\">var</span> rotationInRadians <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> transformedPoint <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span> rotationInRadians <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> distance<span class=\"token punctuation\">,</span>\n  Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span> rotationInRadians <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> distance\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>我们可以将上述步骤表示为一个矩阵，并且单独应用到 x， y，和 z 坐标。下面是绕 Z 轴旋转的表示：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> sin <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> cos <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// NOTE: There is no perspective in these transformations, so a rotation</span>\n<span class=\"token comment\">//       at this point will only appear to only shrink the div</span>\n\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 转角</span>\n\n<span class=\"token comment\">// 绕 Z 轴旋转</span>\n<span class=\"token keyword\">var</span> rotateZMatrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">1</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><a href=\"https://jsfiddle.net/9vr2dorz\" class=\"external\" rel=\" noopener\">在 JSFiddle 中查看</a></p>\n<p>\n  <img src=\"/en-US/docs/Web/API/WebGL_API/Matrix_math_for_the_web/matrix-rotation.jpg\" alt=\"\" width=\"417\" height=\"363\" loading=\"lazy\">\n</p>\n<p>这里是一组返回旋转矩阵的函数。要注意的是由于没有加入透视，所以旋转看起来没有那么 3D。这就好像摄像机在极近距离拍摄一个物体——透视的感觉消失了。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">rotateAroundXAxis</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n       <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>     <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token operator\">-</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>   <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>     <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">rotateAroundYAxis</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n     <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>      <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">-</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>      <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">rotateAroundZAxis</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n         <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><a href=\"https://jsfiddle.net/tk072doc\" class=\"external\" rel=\" noopener\">在 JSFiddle 中查看</a></p>"}},{"type":"prose","value":{"id":"矩阵组合","title":"矩阵组合","isH3":false,"content":"<p>矩阵的真正厉害之处在于矩阵的组合。当一组特定类型的矩阵连乘起来，它们保留了变换的经过并且是可逆的。这意味着如果平移、旋转和缩放矩阵组合在一起，当我们使用逆变换并颠倒应用的顺序，可以得到原来的点。</p>\n<p>矩阵相乘的结果与顺序有关。两个数相乘时，a * b = c，和 b * a = c 都是正确的。例如，3 * 4 = 12，和 4 * 3 = 12。在数学上这些数被称为<strong>可交换</strong>。矩阵不能保证交换顺序后的运算结果，所以矩阵是<strong>不可交换</strong>的。</p>\n<p>另一个需要记住的点是在 WebGL 和 CSS3 中的矩阵相乘需要和变换发生的顺序相反。例如，缩放对象到 80%，向下移动 200 像素，然后绕原点旋转 90 度在伪代码中应该像下面这样。</p>\n<pre class=\"notranslate\">  transformation = rotate * translate * scale\n</pre>"}},{"type":"prose","value":{"id":"组合多种变换","title":"组合多种变换","isH3":true,"content":"<p>我们将使用的函数是<a href=\"https://github.com/TatumCreative/mdn-webgl\" class=\"external\" rel=\" noopener\">工具函数</a>的一部分。其接受矩阵的数组并把它们乘起来。在 WebGL 着色器代码里，这内建在语言里，并且我们可以使用 * 运算符。除此之外，本例使用了一个缩放函数，一个平移函数，它们返回之前定义的矩阵。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> transformMatrix <span class=\"token operator\">=</span> <span class=\"token constant\">MDN</span><span class=\"token punctuation\">.</span><span class=\"token function\">multiplyArrayOfMatrices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token function\">rotateAroundZAxis</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 第 3 步：旋转 90 度</span>\n  <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>                <span class=\"token comment\">// 第 2 步：下移 100 像素</span>\n  <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>                <span class=\"token comment\">// 第 1 步：缩小</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><a href=\"https://jsfiddle.net/qxxg3yvc\" class=\"external\" rel=\" noopener\">在 JSFiddle 中查看</a></p>\n<p>\n  <img src=\"/en-US/docs/Web/API/WebGL_API/Matrix_math_for_the_web/matrix-composition.jpg\" alt=\"An example of matrix composition\" width=\"488\" height=\"292\" loading=\"lazy\">\n</p>\n<p>最后是展示矩阵用途的有趣的一步，看看怎样颠倒这些步骤并得到最开始的单位矩阵。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> transformMatrix <span class=\"token operator\">=</span> <span class=\"token constant\">MDN</span><span class=\"token punctuation\">.</span><span class=\"token function\">multiplyArrayOfMatrices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>             <span class=\"token comment\">// 第 6 步：放大</span>\n  <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>               <span class=\"token comment\">// 第 5 步：上移</span>\n  <span class=\"token function\">rotateAroundZAxis</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 第 4 步：倒转</span>\n  <span class=\"token function\">rotateAroundZAxis</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 第 3 步：旋转 90 度</span>\n  <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>                <span class=\"token comment\">// 第 2 步：下移 100 像素</span>\n  <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>                <span class=\"token comment\">// 第 1 步：缩小</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"为什么矩阵这么重要？","title":"为什么矩阵这么重要？","isH3":false,"content":"<p>矩阵之所以重要，是因为它可以用少量的数字描述大量的空间中的变换，并且能轻易地在程序间共享。矩阵可以不同的坐标空间，甚至一些矩阵乘法可以将一组数据从一个坐标空间映射到另一个坐标空间。矩阵能够高效率地保存生成它们的每一步变换。</p>\n<p>对于在 WebGL 中使用，显卡尤其擅长大量的点乘矩阵运算。各种各样的运算，如点定位、光线运算、动态角色，都依赖这个基础工具。</p>"}}],"toc":[{"text":"什么是变换矩阵？","id":"什么是变换矩阵？"},{"text":"平移矩阵","id":"平移矩阵"},{"text":"用矩阵操作 DOM","id":"用矩阵操作_dom"},{"text":"缩放矩阵","id":"缩放矩阵"},{"text":"旋转矩阵","id":"旋转矩阵"},{"text":"矩阵组合","id":"矩阵组合"},{"text":"为什么矩阵这么重要？","id":"为什么矩阵这么重要？"}],"summary":"矩阵可以用于表示空间中的对象的变换，并且是 Web 页面可视化的重要工具。本文探索如何创建并配合CSS3 变换和 matrix3d 变换类型使用矩阵。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Matrix math for the web","locale":"en-US","native":"English (US)"},{"title":"ウェブの行列計算","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/web/api/webgl_api/matrix_math_for_the_web","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/webgl_api/matrix_math_for_the_web/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/WebGL_API","title":"WebGL"},{"uri":"/zh-CN/docs/Web/API/WebGL_API/Matrix_math_for_the_web","title":"Matrix math for the web"}],"pageTitle":"Matrix math for the web - Web API 接口参考 | MDN","noIndexing":false}}