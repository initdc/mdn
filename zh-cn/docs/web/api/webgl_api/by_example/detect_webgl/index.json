{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"检测 WebGL","mdn_url":"/zh-CN/docs/Web/API/WebGL_API/By_example/Detect_WebGL","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/API/WebGL_API/By_example\">« 上一页</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/API/WebGL_API/By_example/Clearing_with_colors\">下一页  »</a></li>\n</ul>\n<p>这个例子演示了如何通过渲染上下文来检测<a href=\"/zh-CN/docs/Glossary/WebGL\">WebGL</a>，并将结果报告给用户。</p><iframe class=\"sample-code-frame\" title=\"detect-webgl-source sample\" id=\"frame_detect-webgl-source\" width=\"660\" height=\"150\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-CN/docs/Web/API/WebGL_API/By_example/Detect_WebGL/_sample_.detect-webgl-source.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"webgl_特性检测","title":"WebGL 特性检测","isH3":true,"content":"<p>在第一个例子中，我们将检查浏览器是否支持<a href=\"/zh-CN/docs/Glossary/WebGL\">WebGL</a>。为此，我们将尝试从<a href=\"/zh-CN/docs/Web/API/HTMLCanvasElement\" title=\"canvas\"><code>canvas</code></a>元素获取<a href=\"/zh-CN/docs/Web/API/WebGLRenderingContext\" title=\"WebGL 渲染的上下文\">WebGL 渲染的上下文</a> 。<a href=\"/zh-CN/docs/Web/API/WebGLRenderingContext\" title=\"WebGL 渲染的上下文\">WebGL 渲染的上下文</a>是一个接口，通过它你可以设置和查询绘图器的状态，发送数据到 WebGL，执行绘制命令。</p>\n<p>在单个上下文接口中保存绘图器的状态并不是<a href=\"/zh-CN/docs/Glossary/WebGL\">WebGL</a>独有的。这在其他绘图技术里也是存在的<a href=\"/zh-CN/docs/Glossary/API\">API</a>,比如<a href=\"/zh-CN/docs/Web/API/CanvasRenderingContext2D\" title=\"2D 渲染上下文的 canvas\">2D 渲染上下文的 canvas</a>。然而，您可以调整的属性和变量对于每个<a href=\"/zh-CN/docs/Glossary/API\">API</a>来说都是不同的。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>[ Here would go the result of WebGL feature detection ]<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">&gt;</span></span>Press here to detect WebGLRenderingContext<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">text-align</span> <span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span> <span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span> <span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span> <span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span> <span class=\"token punctuation\">:</span> 0.6em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Run everything inside window load event handler, to make sure</span>\n<span class=\"token comment\">// DOM is fully loaded and styled before trying to manipulate it.</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> paragraph <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Adding click event handler to button.</span>\n  button<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> detectWebGLContext<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">detectWebGLContext</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create canvas element. The canvas is not added to the</span>\n    <span class=\"token comment\">// document itself, so it is never displayed in the</span>\n    <span class=\"token comment\">// browser window.</span>\n    <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Get WebGLRenderingContext from canvas element.</span>\n    <span class=\"token keyword\">var</span> gl <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webgl\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">||</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"experimental-webgl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Report the result.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gl <span class=\"token operator\">&amp;&amp;</span> gl <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">WebGLRenderingContext</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      paragraph<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span>\n        <span class=\"token string\">\"Congratulations! Your browser supports WebGL.\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      paragraph<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"Failed to get WebGL context. \"</span>\n        <span class=\"token operator\">+</span> <span class=\"token string\">\"Your browser or device may not support WebGL.\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>这个例子的源代码可以在<a href=\"https://github.com/idofilin/webgl-by-example/tree/master/detect-webgl\" class=\"external\" rel=\" noopener\">GitHub</a>上获取。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/API/WebGL_API/By_example\">« 上一页</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/API/WebGL_API/By_example/Clearing_with_colors\">下一页  »</a></li>\n</ul>"}}],"toc":[],"summary":"这个例子演示了如何通过渲染上下文来检测WebGL，并将结果报告给用户。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Detect WebGL","locale":"en-US","native":"English (US)"},{"title":"Détecter WebGL","locale":"fr","native":"Français"},{"title":"WebGL 찾기","locale":"ko","native":"한국어"}],"source":{"folder":"zh-cn/web/api/webgl_api/by_example/detect_webgl","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/webgl_api/by_example/detect_webgl/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/WebGL_API","title":"WebGL"},{"uri":"/zh-CN/docs/Web/API/WebGL_API/By_example","title":"WebGL 的例子"},{"uri":"/zh-CN/docs/Web/API/WebGL_API/By_example/Detect_WebGL","title":"检测 WebGL"}],"pageTitle":"检测 WebGL - Web API 接口参考 | MDN","noIndexing":false}}