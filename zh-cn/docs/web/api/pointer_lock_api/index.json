{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Pointer Lock API","mdn_url":"/zh-CN/docs/Web/API/Pointer_Lock_API","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>这是一个实验中的功能</strong><br>此功能某些浏览器尚在开发中，请参考<a href=\"#browser_compatibility\">浏览器兼容性表格</a>以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。</p></div>\n<p><strong>指针锁定</strong>(以前叫做鼠标锁定) 提供了一种输入方法，这种方法是基于鼠标随着时间推移的运动的（也就是，deltas），而不仅是鼠标光标的绝对位置。通过它可以访问原始的鼠标运动，把鼠标事件的目标锁定到一个单独的元素，这就消除了鼠标在一个单独的方向上到底可以移动多远这方面的限制，并从视图中删去光标。</p>\n<p>这个 API 对于需要大量的鼠标输入来控制运动，旋转物体，以及更改项目的应用程序来说非常有用。对高度视觉化的应用程序尤其重要，例如那些使用第一人称视角的应用程序，以及 3D 视图和建模。</p>\n<p>举例来说，你可以创建让你的用户简单地通过移动鼠标而不需要点击任何按钮就可以控制视角的应用。那么这些按钮就可以被用作其他动作。这类鼠标输入对于查看地图，卫星图像，或者第一人称场景（例如在一个游戏中或者一个全景视频中）是非常方便使用的。</p>\n<p>即使在光标移到浏览器或者屏幕区域之外，指针锁定也能够让你访问鼠标事件。例如，你的用户可以通过不断地移动鼠标来持续旋转或操纵一个 3D 模型。如果没有指针锁定的话，这些旋转或操纵会在指针到达浏览器或者屏幕边缘的那一刻停止。尤其是游戏玩家将会因为此功能而兴奋不已，因为他们可以疯狂地点击按钮，来回地滑动鼠标光标，而不必担心离开了游戏区域，进而不小心误点到另外一个应用程序上，结果将鼠标焦点移离了游戏。杯具了！</p>"}},{"type":"prose","value":{"id":"基本概念","title":"基本概念","isH3":false,"content":"<p>指针锁定和<a href=\"/zh-CN/docs/Web/API/Element/setCapture\">鼠标捕获</a>有关。鼠标捕获在一个鼠标被拖曳时可以向一个目标元素持续传递有关事件，但是当鼠标按钮被放开时就会停止。指针锁定和鼠标捕获在以下方面有所不同：</p>\n<ul>\n  <li>它是持久性的。指针锁定不释放鼠标，直到作出一个显式的 API 调用或是用户使用一个专门的释放手势。</li>\n  <li>它不局限于浏览器或者屏幕边界。</li>\n  <li>它持续发送事件，而不管鼠标按钮状态如何。</li>\n  <li>它隐藏光标。</li>\n</ul>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<p>下面是一个如何在你的网页中设置指针锁定的示例。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">&lt;</span>button onclick<span class=\"token operator\">=</span><span class=\"token string\">\"lockPointer();\"</span><span class=\"token operator\">&gt;</span>锁住它！<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"pointer-lock-element\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token comment\">// 注意：截止本文撰写时，仅有 Mozilla 和 WebKit 支持指针锁定。</span>\n\n<span class=\"token comment\">// 我们将要使之全屏并指针锁定的元素。</span>\n<span class=\"token keyword\">var</span> elem<span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousemove\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> movementX <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>movementX       <span class=\"token operator\">||</span>\n                  e<span class=\"token punctuation\">.</span>mozMovementX    <span class=\"token operator\">||</span>\n                  e<span class=\"token punctuation\">.</span>webkitMovementX <span class=\"token operator\">||</span>\n                  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      movementY <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>movementY       <span class=\"token operator\">||</span>\n                  e<span class=\"token punctuation\">.</span>mozMovementY    <span class=\"token operator\">||</span>\n                  e<span class=\"token punctuation\">.</span>webkitMovementY <span class=\"token operator\">||</span>\n                  <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 打印鼠标移动的增量值。</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"movementX=\"</span> <span class=\"token operator\">+</span> movementX<span class=\"token punctuation\">,</span> <span class=\"token string\">\"movementY=\"</span> <span class=\"token operator\">+</span> movementY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fullscreenChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>webkitFullscreenElement <span class=\"token operator\">===</span> elem <span class=\"token operator\">||</span>\n      document<span class=\"token punctuation\">.</span>mozFullscreenElement <span class=\"token operator\">===</span> elem <span class=\"token operator\">||</span>\n      document<span class=\"token punctuation\">.</span>mozFullScreenElement <span class=\"token operator\">===</span> elem<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 较旧的 API 大写 'S'.</span>\n    <span class=\"token comment\">// 元素进入全屏模式了，现在我们可以请求指针锁定。</span>\n    elem<span class=\"token punctuation\">.</span>requestPointerLock <span class=\"token operator\">=</span> elem<span class=\"token punctuation\">.</span>requestPointerLock    <span class=\"token operator\">||</span>\n                              elem<span class=\"token punctuation\">.</span>mozRequestPointerLock <span class=\"token operator\">||</span>\n                              elem<span class=\"token punctuation\">.</span>webkitRequestPointerLock<span class=\"token punctuation\">;</span>\n    elem<span class=\"token punctuation\">.</span><span class=\"token function\">requestPointerLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fullscreenchange'</span><span class=\"token punctuation\">,</span> fullscreenChange<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mozfullscreenchange'</span><span class=\"token punctuation\">,</span> fullscreenChange<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webkitfullscreenchange'</span><span class=\"token punctuation\">,</span> fullscreenChange<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">pointerLockChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>mozPointerLockElement <span class=\"token operator\">===</span> elem <span class=\"token operator\">||</span>\n      document<span class=\"token punctuation\">.</span>webkitPointerLockElement <span class=\"token operator\">===</span> elem<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"指针锁定成功了。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"指针锁定已丢失。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pointerlockchange'</span><span class=\"token punctuation\">,</span> pointerLockChange<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mozpointerlockchange'</span><span class=\"token punctuation\">,</span> pointerLockChange<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webkitpointerlockchange'</span><span class=\"token punctuation\">,</span> pointerLockChange<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">pointerLockError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"锁定指针时出错。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pointerlockerror'</span><span class=\"token punctuation\">,</span> pointerLockError<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mozpointerlockerror'</span><span class=\"token punctuation\">,</span> pointerLockError<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webkitpointerlockerror'</span><span class=\"token punctuation\">,</span> pointerLockError<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">lockPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointer-lock-element\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 开始于使元素进入全屏模式。目前的实现</span>\n  <span class=\"token comment\">// 要求元素在请求指针锁定前要处于全屏模式下</span>\n  <span class=\"token comment\">// -- 这在以后可能会发生改变。</span>\n  elem<span class=\"token punctuation\">.</span>requestFullscreen <span class=\"token operator\">=</span> elem<span class=\"token punctuation\">.</span>requestFullscreen    <span class=\"token operator\">||</span>\n                           elem<span class=\"token punctuation\">.</span>mozRequestFullscreen <span class=\"token operator\">||</span>\n                           elem<span class=\"token punctuation\">.</span>mozRequestFullScreen <span class=\"token operator\">||</span> <span class=\"token comment\">// 较旧的 API 把 ‘S’ 大写</span>\n                           elem<span class=\"token punctuation\">.</span>webkitRequestFullscreen<span class=\"token punctuation\">;</span>\n  elem<span class=\"token punctuation\">.</span><span class=\"token function\">requestFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"方法属性_概述","title":"方法/属性 概述","isH3":false,"content":"<p>Pointer lock API，和 Fullscreen API 类似，通过添加新方法来扩展 DOM 元素，<code>requestPointerLock</code>, 目前还是厂商前缀。按下面这样来写：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">webkitRequestPointerLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Chrome</span>\n\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">mozRequestPointerLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Firefox</span>\n</code></pre></div>\n<p>目前 <code>requestPointerLock</code> 的实现还是和 <code>requestFullScreen</code> 以及 Fullscreen API 紧紧地绑在一起的。一个元素在能够被指针锁定之前，必须首先进入全屏模式。就像上面演示的那样，锁定指针的过程是异步的，使用 (<code>pointerlockchange</code>, <code>pointerlockerror</code>) 事件来表明请求是成功还是失败了。这和 Fullscreen API 的工作方式是一致的，它使用 <code>requestFullScreen</code> 方法，以及 <code>fullscreenchange</code> 和 <code>fullscreenerror</code> 事件。</p>\n<p>Pointer lock API 还扩展了 <code>document</code> 接口，添加了一个新的属性和一个新的方法。新的属性被用于访问当前被锁定的元素（如果有的话），并被命名为 <code>pointerLockElement</code>，目前也使用厂商前缀。 <code>document</code> 添加的新方法是 <code>exitPointerLock</code> ，顾名思义，它是用来退出指针锁定的。</p>\n<p><code>pointerLockElement</code> 属性适用于确定当前是否有被指针锁定的元素（例如，用来做一个布尔检查），以及当有元素被锁定时获取该元素的一个引用。下面是这两种用法的一个例子：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span>pointerLockElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>pointerLockElement    <span class=\"token operator\">||</span>\n                              document<span class=\"token punctuation\">.</span>mozPointerLockElement <span class=\"token operator\">||</span>\n                              document<span class=\"token punctuation\">.</span>webkitPointerLockElement<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 1) 用于布尔检查 -- 我们被指针锁定了吗？</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">.</span>pointerLockElement<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 指针被锁定</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 指针未被锁定</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 2) 用于访问指针锁定的元素</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>pointerLockElement <span class=\"token operator\">===</span> someElement<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// someElement 当前被指针锁定</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><code>document</code> 的 <code>exitPointerLock</code> 方法被用来退出指针锁定，而且和 requestPointerLock 一样，使用 <code>pointerlockchange</code> 和 <code>pointerlockerror</code>事件以异步方式工作：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span>exitPointerLock <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>exitPointerLock    <span class=\"token operator\">||</span>\n                           document<span class=\"token punctuation\">.</span>mozExitPointerLock <span class=\"token operator\">||</span>\n                           document<span class=\"token punctuation\">.</span>webkitExitPointerLock<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">pointerLockChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span>pointerLockElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>pointerLockElement    <span class=\"token operator\">||</span>\n                                document<span class=\"token punctuation\">.</span>mozPointerLockElement <span class=\"token operator\">||</span>\n                                document<span class=\"token punctuation\">.</span>webkitPointerLockElement<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">.</span>pointerLockElement<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"目前还是被锁定。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"已经退出锁定。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pointerlockchange'</span><span class=\"token punctuation\">,</span> pointerLockChange<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mozpointerlockchange'</span><span class=\"token punctuation\">,</span> pointerLockChange<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webkitpointerlockchange'</span><span class=\"token punctuation\">,</span> pointerLockChange<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 试图解除锁定</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">exitPointerLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"pointerlockchange_事件","title":"pointerlockchange 事件","isH3":false,"content":"<p>当指针锁定状态改变时 - 例如，当调用 <code>requestPointerLock</code>, <code>exitPointerLock</code>，用户按下 ESC 键，等等。— <code>pointerlockchange</code> 事件被分发到 <code>document</code>。 这是一个简单事件所以不包含任何的额外数据。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 该事件目前在 Firefox 中使用前缀的格式是 <code>mozpointerlockchange</code> ，在 Chrome 中是 <code>webkitpointerlockchange</code>。</p>\n</div>"}},{"type":"prose","value":{"id":"pointerlockerror_事件","title":"pointerlockerror 事件","isH3":false,"content":"<p>当调用 <code>requestPointerLock</code> 或 <code>exitPointerLock</code>而引发错误时， <code>pointerlockerror</code> 事件被分发到 <code>document</code>。这是一个简单事件所以不包含任何的额外数据。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 该事件目前在 Firefox 中被加上前缀为 <code>mozpointerlockerror</code> ，在 Chrome 中为 <code>webkitpointerlockerror</code>。</p>\n</div>"}},{"type":"prose","value":{"id":"鼠标事件扩展","title":"鼠标事件扩展","isH3":false,"content":"<p>Pointer lock API 使用 movement 属性扩展了标准的 <code>MouseEvent</code>。</p>\n<div class=\"code-example\"><pre class=\"brush: idl notranslate\">partial interface MouseEvent {\n    readonly attribute long movementX;\n    readonly attribute long movementY;\n};\n</pre></div>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>备注：</strong> movement 属性目前在 Firefox 中被加上前缀为 <code>.mozMovementX</code> 和 <code>.mozMovementY</code> , 在 Chrome 中为<code>.webkitMovementX</code> 和 <code>.webkitMovementY</code>。</p>\n</div>\n<p>鼠标事件的两个新参数—<code>movementX</code> 和 <code>movementY</code>—提供了鼠标位置的变化情况。这两个参数的值，等于两个<a href=\"/zh-CN/docs/DOM/MouseEvent\"><code>MouseEvent</code></a> 属性（ <code>screenX</code> 和 <code>screenY）</code>之间值的变化程度，这些 MouseEvent 属性被存储在两个连续的鼠标移动事件（ <code>eNow</code> 和 <code>ePrevious</code>）中。换言之，指针锁定参数 <code>movementX = eNow.screenX - ePrevious.screenX</code>。（译注：不存在名为 eNow 或 ePrevious 的事件或属性，eNow 代指当前的鼠标移动事件，ePrevious 代指前一个鼠标移动事件）</p>"}},{"type":"prose","value":{"id":"锁定状态","title":"锁定状态","isH3":true,"content":"<p>当指针锁定被启动之后，正常的 <code>MouseEvent</code> 属性 <code>clientX</code>, <code>clientY</code>, <code>screenX</code>, 和 <code>screenY</code> ，保持不变，就像鼠标没有在移动一样。 <code>movementX</code> 和 <code>movementY</code> 属性持续提供鼠标的位置变化。如果鼠标在一个方向上持续移动，<code>movementX</code> 和 <code>movementY</code>的值是没有限制的。不存在鼠标光标的概念，而且光标无法移到窗口之外，而且也不会被屏幕边缘所固定。</p>"}},{"type":"prose","value":{"id":"未锁定状态","title":"未锁定状态","isH3":true,"content":"<p>无论鼠标锁定状态是怎样的， <code>movementX</code> 和 <code>movementY</code> 参数一直有效，并且为了方便起见，甚至在未锁定状态也是有效的。</p>\n<p>当鼠标被解除锁定，系统光标可以退出并重新进入浏览器窗口。如果发生这种情况，<code>movementX</code> 和 <code>movementY</code> 可能会被设置成 0。</p>"}},{"type":"prose","value":{"id":"iframe_的限制","title":"iframe 的限制","isH3":false,"content":"<p>指针锁定一次只能锁定一个 iframe。如果你锁定了一个 iframe，你不能试图锁定另外一个 iframe 然后把目标转移到这个 iframe 上；指针锁定将会出错。为了避免这一问题，首先解锁那个锁定的 iframe，然后再锁定另外一个。</p>\n<p>在 iframe 默认的情况下， \"sandboxed\" iframes 会阻止指针锁定。避免这种限制的能力，即以属性/值 <code>&lt;iframe sandbox=\"allow-pointer-lock\"&gt;</code> 组合的形式 , 有望很快在 Chrome 中出现。</p>"}},{"type":"browser_compatibility","value":{"title":"浏览器兼容性","id":"浏览器兼容性","isH3":false,"query":"api.Element.requestPointerLock","dataURL":"/zh-CN/docs/Web/API/Pointer_Lock_API/bcd.json"}},{"type":"prose","value":{"id":"参见","title":"参见","isH3":false,"content":"<p><a href=\"https://dvcs.w3.org/hg/pointerlock/raw-file/default/index.html\" class=\"external\" rel=\" noopener\">W3C Pointer Lock API Specification</a></p>\n<p><a href=\"/zh-CN/docs/DOM/MouseEvent\">MouseEvent</a></p>"}}],"toc":[{"text":"基本概念","id":"基本概念"},{"text":"示例","id":"示例"},{"text":"方法/属性 概述","id":"方法属性_概述"},{"text":"pointerlockchange 事件","id":"pointerlockchange_事件"},{"text":"pointerlockerror 事件","id":"pointerlockerror_事件"},{"text":"鼠标事件扩展","id":"鼠标事件扩展"},{"text":"iframe 的限制","id":"iframe_的限制"},{"text":"浏览器兼容性","id":"浏览器兼容性"},{"text":"参见","id":"参见"}],"summary":"指针锁定(以前叫做鼠标锁定) 提供了一种输入方法，这种方法是基于鼠标随着时间推移的运动的（也就是，deltas），而不仅是鼠标光标的绝对位置。通过它可以访问原始的鼠标运动，把鼠标事件的目标锁定到一个单独的元素，这就消除了鼠标在一个单独的方向上到底可以移动多远这方面的限制，并从视图中删去光标。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Pointer Lock API","locale":"en-US","native":"English (US)"},{"title":"API Pointer Lock","locale":"es","native":"Español"},{"title":"Pointer Lock API","locale":"fr","native":"Français"},{"title":"Pointer Lock API","locale":"ja","native":"日本語"},{"title":"Pointer Lock API","locale":"ru","native":"Русский"},{"title":"Pointer Lock API","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"zh-cn/web/api/pointer_lock_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/pointer_lock_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/Pointer_Lock_API","title":"Pointer Lock API"}],"pageTitle":"Pointer Lock API - Web API 接口参考 | MDN","noIndexing":false}}