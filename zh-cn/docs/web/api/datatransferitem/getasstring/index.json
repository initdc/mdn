{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"DataTransferItem.getAsString()","mdn_url":"/zh-CN/docs/Web/API/DataTransferItem/getAsString","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"<ol><li><strong><a href=\"/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API\">HTML Drag and Drop API</a></strong></li><li><strong><a href=\"/zh-CN/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>属性</summary><ol><li><a href=\"/zh-CN/docs/Web/API/DataTransferItem/kind\"><code>kind</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DataTransferItem/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>方法</summary><ol><li><a href=\"/zh-CN/docs/Web/API/DataTransferItem/getAsFile\"><code>getAsFile()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DataTransferItem/getAsFileSystemHandle\"><code>getAsFileSystemHandle()</code> <small>(en-US)</small></a></li><li><em><code>getAsString()</code></em></li><li><a href=\"/zh-CN/docs/Web/API/DataTransferItem/webkitGetAsEntry\"><code>webkitGetAsEntry()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>HTML Drag and Drop API 的相关页面</summary><ol><li><a href=\"/zh-CN/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a></li><li><a href=\"/zh-CN/docs/Web/API/DragEvent\"><code>DragEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>DataTransferItem.getAsString()</code></strong> 当 DataTransferItem 对象的 kind 属性是一个普通 Unicode 字符串时，该方法会用 DataTransferItem 对象的 kind 属性作为入参来执行传入的回调函数 (i.e. <code>kind</code> is <code>string</code>).</p>"}},{"type":"prose","value":{"id":"示例","title":"示例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">dataTransferItem.getAsString(callback);\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"callback\"><code>callback</code></dt>\n  <dd>\n    <p>A callback function that has access to the <a href=\"/zh-CN/docs/Web/API/DataTransferItem\" title=\"data transfer item's\"><code>data transfer item's</code></a> string data. See <a href=\"#callback\">Callback</a> below for details.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>"}},{"type":"prose","value":{"id":"callback_2","title":"Callback","isH3":false,"content":"<p>The callback parameter is a callback function which accepts one parameter:</p>\n<dl>\n  <dt id=\"domstring\"><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a></dt>\n  <dd>\n    <p>The drag data item's string data.</p>\n  </dd>\n</dl>\n<p>The callback return value is <code>undefined</code>.</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>This example shows the use of the <code>getAsString()</code> method as an <em>inline function</em> in a <code><a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">drop (en-US)</a></code> event handler.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drop_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Drop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n ev<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>kind <span class=\"token operator\">==</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n       <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'^text/plain'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token comment\">// This item is the target node</span>\n     data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAsString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>kind <span class=\"token operator\">==</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n              <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'^text/html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token comment\">// Drag data item is HTML</span>\n     console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Drop: HTML\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>kind <span class=\"token operator\">==</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n              <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'^text/uri-list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token comment\">// Drag data item is URI</span>\n     console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Drop: URI\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>kind <span class=\"token operator\">==</span> <span class=\"token string\">'file'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n              <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'^image/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token comment\">// Drag data item is an image file</span>\n     <span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAsFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Drop: File \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/dnd.html#dom-datatransferitem-getasstring-dev","title":"HTML Standard"}],"query":"api.DataTransferItem.getAsString"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.DataTransferItem.getAsString","dataURL":"/zh-CN/docs/Web/API/DataTransferItem/getAsString/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/API/DataTransfer/getData\"><code>DataTransfer.getData()</code></a></li>\n</ul>"}}],"toc":[{"text":"示例","id":"示例"},{"text":"Callback","id":"callback_2"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"DataTransferItem.getAsString() 当 DataTransferItem 对象的 kind 属性是一个普通 Unicode 字符串时，该方法会用 DataTransferItem 对象的 kind 属性作为入参来执行传入的回调函数 (i.e. kind is string).","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"DataTransferItem.getAsString()","locale":"en-US","native":"English (US)"}],"source":{"folder":"zh-cn/web/api/datatransferitem/getasstring","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/api/datatransferitem/getasstring/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/API","title":"Web API 接口参考"},{"uri":"/zh-CN/docs/Web/API/DataTransferItem","title":"DataTransferItem"},{"uri":"/zh-CN/docs/Web/API/DataTransferItem/getAsString","title":"DataTransferItem.getAsString()"}],"pageTitle":"DataTransferItem.getAsString() - Web API 接口参考 | MDN","noIndexing":false}}