{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"基础变形","mdn_url":"/zh-CN/docs/Web/SVG/Tutorial/Basic_Transformations","locale":"zh-CN","native":"中文 (简体)","hasMathML":true,"sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/SVG/Tutorial/Texts\">« 上一页</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/SVG/Tutorial/Clipping_and_masking\">下一页  »</a></li>\n</ul>\n<p>现在我们准备好开始扭曲我们美丽的图像了。但是首先，让我们正式地介绍<a href=\"/zh-CN/docs/Web/SVG/Element/g\"><code>&lt;g&gt;</code></a>元素。利用这个助手，你可以把属性赋给一整个元素集合。实际上，这是它唯一的目的。一个示例：</p>\n<div class=\"code-example\"><pre class=\"brush: xml notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g</span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rect</span> <span class=\"token attr-name\">x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">y</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rect</span> <span class=\"token attr-name\">x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">y</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>输出两个红色矩形。</p>\n<p>所有接下来的变形都会用一个元素的<code>transform</code>属性总结。变形可以连缀，只要把它们连接起来就行，用空格隔开。</p>"}},{"type":"prose","value":{"id":"平移","title":"平移","isH3":false,"content":"<p>你能把元素移动一段距离，甚至你可以根据相应的属性定位它。<code>translate()</code>变形方法专门效力于这个目的。</p>\n<div class=\"code-example\"><pre class=\"brush: xml notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rect</span> <span class=\"token attr-name\">x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">y</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate(30,40)<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre></div>\n<p>该示例将呈现一个矩形，移到点 (30,40)，而不是出现在点 (0,0)。</p>\n<p>如果没有指定第二个值，它默认被赋值<em>0</em>。</p>"}},{"type":"prose","value":{"id":"旋转","title":"旋转","isH3":false,"content":"<p>旋转一个元素是相当常见的任务。使用<code>rotate() 变形就可以了：</code></p>\n<div class=\"code-example\"><pre class=\"brush: xml notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rect</span> <span class=\"token attr-name\">x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">y</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rotate(45)<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre></div>\n<p>该示例显示了一个方形，旋转了 45 度。<code>rotate()</code>的值是用角度数指定的。</p>"}},{"type":"prose","value":{"id":"斜切","title":"斜切","isH3":false,"content":"<p>利用一个矩形制作一个斜菱形。可用<code>skewX()</code>变形和<code>skewY()</code>变形。每个需要一角度以确定元素斜切到多远。</p>"}},{"type":"prose","value":{"id":"缩放","title":"缩放","isH3":false,"content":"<p><code>scale() 变形</code>改变了元素的尺寸。它需要两个数字，作为比率计算如何缩放。0.5 表示收缩到 50%。<em>如果第二个数字被忽略了，它默认等于第一个值。</em></p>"}},{"type":"prose","value":{"id":"用matrix_实现复杂变形","title":"用<code>matrix() 实现复杂变形</code>","isH3":false,"content":"<p>所有上面的变形可以表达为一个 2x3 的变形矩阵。组合一些变形，可以直接用<code>matrix(a, b, c, d, e, f) 变形</code>设置结果矩阵，利用下面的矩阵，它把来自上一个坐标系统的坐标映射到新的坐标系统：</p>\n<p>\n  <math display=\"block\">\n    <semantics>\n      <mrow>\n        <mo>{</mo>\n        <mtable rowspacing=\"0.5ex\">\n          <mtr>\n            <mtd>\n              <msub>\n                <mi>x</mi>\n                <mstyle mathvariant=\"normal\">\n                  <mrow>\n                    <mi>new</mi>\n                    <mi></mi>\n                    <mi>C</mi>\n                    <mi>o</mi>\n                    <mi>o</mi>\n                    <mi>r</mi>\n                    <mi>d</mi>\n                    <mi>S</mi>\n                    <mi>y</mi>\n                    <mi>s</mi>\n                  </mrow>\n                </mstyle>\n              </msub>\n              <mo>=</mo>\n              <mi>a</mi>\n              <msub>\n                <mi>x</mi>\n                <mstyle mathvariant=\"normal\">\n                  <mrow>\n                    <mi>prev</mi>\n                    <mi>C</mi>\n                    <mi>o</mi>\n                    <mi>o</mi>\n                    <mi>r</mi>\n                    <mi>d</mi>\n                    <mi>S</mi>\n                    <mi>y</mi>\n                    <mi>s</mi>\n                  </mrow>\n                </mstyle>\n              </msub>\n              <mo>+</mo>\n              <mi>c</mi>\n              <msub>\n                <mi>y</mi>\n                <mstyle mathvariant=\"normal\">\n                  <mrow>\n                    <mi>prev</mi>\n                    <mi></mi>\n                    <mi>C</mi>\n                    <mi>o</mi>\n                    <mi>o</mi>\n                    <mi>r</mi>\n                    <mi>d</mi>\n                    <mi>S</mi>\n                    <mi>y</mi>\n                    <mi>s</mi>\n                  </mrow>\n                </mstyle>\n              </msub>\n              <mo>+</mo>\n              <mi>e</mi>\n            </mtd>\n          </mtr>\n          <mtr>\n            <mtd>\n              <msub>\n                <mi>y</mi>\n                <mstyle mathvariant=\"normal\">\n                  <mrow>\n                    <mi>new</mi>\n                    <mi></mi>\n                    <mi>C</mi>\n                    <mi>o</mi>\n                    <mi>o</mi>\n                    <mi>r</mi>\n                    <mi>d</mi>\n                    <mi>S</mi>\n                    <mi>y</mi>\n                    <mi>s</mi>\n                  </mrow>\n                </mstyle>\n              </msub>\n              <mo>=</mo>\n              <mi>b</mi>\n              <msub>\n                <mi>x</mi>\n                <mstyle mathvariant=\"normal\">\n                  <mrow>\n                    <mi>prev</mi>\n                    <mi></mi>\n                    <mi>C</mi>\n                    <mi>o</mi>\n                    <mi>o</mi>\n                    <mi>r</mi>\n                    <mi>d</mi>\n                    <mi>S</mi>\n                    <mi>y</mi>\n                    <mi>s</mi>\n                  </mrow>\n                </mstyle>\n              </msub>\n              <mo>+</mo>\n              <mi>d</mi>\n              <msub>\n                <mi>y</mi>\n                <mstyle mathvariant=\"normal\">\n                  <mrow>\n                    <mi>prev</mi>\n                    <mi>C</mi>\n                    <mi>o</mi>\n                    <mi>o</mi>\n                    <mi>r</mi>\n                    <mi>d</mi>\n                    <mi>S</mi>\n                    <mi>y</mi>\n                    <mi>s</mi>\n                  </mrow>\n                </mstyle>\n              </msub>\n              <mo>+</mo>\n              <mi>f</mi>\n            </mtd>\n          </mtr>\n        </mtable>\n      </mrow>\n      <annotation encoding=\"TeX\">\\left{ \\begin{matrix} x*{\\mathrm{prevCoordSys}} = a x*{\\mathrm{newCoordSys}} + c y*{\\mathrm{newCoordSys}} + e \\ y*{\\mathrm{prevCoordSys}} = b x*{\\mathrm{newCoordSys}} + d y*{\\mathrm{newCoordSys}} + f \\end{matrix} \\right.</annotation>\n    </semantics>\n  </math>\n</p>\n<p>请看<a href=\"/zh-CN/docs/Web/SVG/Attribute/transform#general_transformation\">关于 SVG 变形文档的具体实例</a>。关于该属性的详细信息可以在<a href=\"https://www.w3.org/TR/SVG/coords.html#TransformMatrixDefined\" class=\"external\" rel=\" noopener\">SVG 推荐标准</a>上找到。</p>","titleAsText":"用matrix() 实现复杂变形"}},{"type":"prose","value":{"id":"坐标系统上的效果","title":"坐标系统上的效果","isH3":false,"content":"<p>如果使用了变形，你会在元素内部建立了一个新的坐标系统，应用了这些变形，你为该元素和它的子元素指定的单位可能不是 1:1 像素映射。但是依然会根据这个变形进行歪曲、斜切、转换、缩放操作。</p>\n<div class=\"code-example\"><pre class=\"brush: xml notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g</span> <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>scale(2)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rect</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>上面示例中的结果矩形将是 100x100px，如果你使用了比如说 userSpaceOnUse 等属性，将出现更吸引人的效果。</p>"}},{"type":"prose","value":{"id":"svg_嵌在_svg_内部","title":"SVG 嵌在 SVG 内部","isH3":false,"content":"<p>比之 HTML，SVG 允许你无缝嵌入别的 svg 元素。因此你可以利用内部<code>svg</code>元素的属性<code>viewBox</code>、属性<code>width</code>和属性<code>height</code>简单创建一个新的坐标系统。</p>\n<div class=\"code-example\"><pre class=\"brush: xml notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 50 50<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rect</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>以上示例基本上跟它上面的示例有同样的效果，也就是矩形将是指定的两倍大。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/SVG/Tutorial/Texts\">« 上一页</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/SVG/Tutorial/Clipping_and_masking\">下一页  »</a></li>\n</ul>"}}],"toc":[{"text":"平移","id":"平移"},{"text":"旋转","id":"旋转"},{"text":"斜切","id":"斜切"},{"text":"缩放","id":"缩放"},{"text":"用<code>matrix() 实现复杂变形</code>","id":"用matrix_实现复杂变形"},{"text":"坐标系统上的效果","id":"坐标系统上的效果"},{"text":"SVG 嵌在 SVG 内部","id":"svg_嵌在_svg_内部"}],"summary":"现在我们准备好开始扭曲我们美丽的图像了。但是首先，让我们正式地介绍<g>元素。利用这个助手，你可以把属性赋给一整个元素集合。实际上，这是它唯一的目的。一个示例：","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Basic Transformations","locale":"en-US","native":"English (US)"},{"title":"Transformations de base","locale":"fr","native":"Français"},{"title":"基本的な座標変換","locale":"ja","native":"日本語"},{"title":"Базовые трансформации","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/svg/tutorial/basic_transformations","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/svg/tutorial/basic_transformations/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/SVG","title":"SVG：可缩放矢量图形"},{"uri":"/zh-CN/docs/Web/SVG/Tutorial","title":"SVG 教程"},{"uri":"/zh-CN/docs/Web/SVG/Tutorial/Basic_Transformations","title":"基础变形"}],"pageTitle":"基础变形 - SVG：可缩放矢量图形 | MDN","noIndexing":false}}