{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"SVG 字体","mdn_url":"/zh-CN/docs/Web/SVG/Tutorial/SVG_fonts","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/SVG/Tutorial/Filter_effects\">« 上一页</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/SVG/Tutorial/SVG_Image_Tag\">下一页  »</a></li>\n</ul>\n<p>当规定 SVG 时，在浏览器支持 web 字体并不流行。因为访问正确的字体文件对于正确呈现字体是有确定性的，SVG 中添加了一个字体描述技术，以提供这个能力。它并不是为了和别的格式比如说 PostScript 或 OTF 兼容，而是为了将字形信息嵌入 SVG 呈现的一个简单的方法。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>备注：</strong> <strong>SVG 字体当前只在 Safari 和 Android 浏览器中受支持。</strong>\n    Internet Explorer <a href=\"https://blogs.msdn.com/b/ie/archive/2010/08/04/html5-modernized-fourth-ie9-platform-preview-available-for-developers.aspx\" class=\"external\" rel=\" noopener\">还没有考虑实现它</a>，Chrome 38（和 Opera25）<a href=\"https://www.chromestatus.com/feature/5930075908210688\" class=\"external\" rel=\" noopener\">移除了这个功能</a>，Firefox 已经<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=119490\" class=\"external\" rel=\" noopener\">无限期推迟实施它</a>以专心实现<a href=\"/zh-CN/WOFF\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">WOFF</a>。别的工具比如说<a href=\"https://www.adobe.com/svg/viewer/install/\" class=\"external\" rel=\" noopener\">Adobe SVG Viewer</a>插件、Batik 和部分 Inkscape 支持 SVG 字体嵌入。\n  </p>\n</div>\n<p>定义一个 SVG 字体的基础是<a href=\"/zh-CN/docs/Web/SVG/Element/font\"><code>&lt;font&gt;</code></a>元素。</p>"}},{"type":"prose","value":{"id":"定义一个字体","title":"定义一个字体","isH3":false,"content":"<p>在 SVG 中嵌入一个字体，有一些原料要求。让我们用一个示例演示它（来自<a href=\"https://www.w3.org/TR/SVG/fonts.html#FontElement\" class=\"external\" rel=\" noopener\">规范文档</a>的示例），并详细解释。</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">&lt;font id=\"Font1\" horiz-adv-x=\"1000\"&gt;\n  &lt;font-face font-family=\"Super Sans\" font-weight=\"bold\" font-style=\"normal\"\n      units-per-em=\"1000\" cap-height=\"600\" x-height=\"400\"\n      ascent=\"700\" descent=\"300\"\n      alphabetic=\"0\" mathematical=\"350\" ideographic=\"400\" hanging=\"500\"&gt;\n    &lt;font-face-src&gt;\n      &lt;font-face-name name=\"Super Sans Bold\"/&gt;\n    &lt;/font-face-src&gt;\n  &lt;/font-face&gt;\n  &lt;missing-glyph&gt;&lt;path d=\"M0,0h200v200h-200z\"/&gt;&lt;/missing-glyph&gt;\n  &lt;glyph unicode=\"!\" horiz-adv-x=\"300\"&gt;&lt;!-- Outline of exclam. pt. glyph --&gt;&lt;/glyph&gt;\n  &lt;glyph unicode=\"@\"&gt;&lt;!-- Outline of @ glyph --&gt;&lt;/glyph&gt;\n  &lt;!-- more glyphs --&gt;\n&lt;/font&gt;\n</pre></div>\n<p>我们从<a href=\"/zh-CN/docs/Web/SVG/Element/font\"><code>&lt;font&gt;</code></a>元素开始。这个携带了一个 ID 属性，使它能够通过一个<code>URI</code>被引用（如下所示）。属性<code>horiz-adv-x</code>定义了相比之单一字形的路径定义，一个字符的平均宽度。值<code>1000</code>设置了一个起作用的合理值。有一些陪同的属性，帮助进一步定义基本的字形盒布局。</p>\n<p><a href=\"/zh-CN/docs/Web/SVG/Element/font-face\"><code>&lt;font-face&gt;</code></a>元素在 SVG 中等同于 CSS 的 <a href=\"/zh-CN/docs/Web/CSS/@font-face\"><code>@font-face</code></a> 声明。它定义了最终字体的基本属性，比如说 weight、style，等等。在上面这个示例中，最重要的是定义<code>font-family</code>，后面的 CSS 和 SVG <code>font-family</code>属性可以引用它的值。属性<code>font-weight</code>和<code>font-style</code>跟 CSS 中的描述符有同样的目的。所有后面的属性都是字体布局引擎的呈现指令，举个例子，字形的全部高度可以<a href=\"http://en.wikipedia.org/wiki/Ascender_%28typography%29\" class=\"external\" rel=\" noopener\">提升</a>多少。</p>\n<p>它的子元素，<a href=\"/zh-CN/docs/Web/SVG/Element/font-face-src\"><code>&lt;font-face-src&gt;</code></a>元素，相对于 CSS 的<code>@font-face</code>描述符中的<code>src</code>描述符。你可以利用它的子元素 <a href=\"/zh-CN/docs/Web/SVG/Element/font-face-name\"><code>&lt;font-face-name&gt;</code></a>和<a href=\"/zh-CN/docs/Web/SVG/Element/font-face-uri\"><code>&lt;font-face-uri&gt;</code></a>把字体声明指向外源。以上示例表达了如果渲染器有一个名为“Super Sans Bold”的本地字体可用，它将使用这个本地字体。</p>\n<p>紧跟着<a href=\"/zh-CN/docs/Web/SVG/Element/font-face-src\"><code>&lt;font-face-src&gt;</code></a>元素的是一个<a href=\"/zh-CN/docs/Web/SVG/Element/missing-glyph\"><code>&lt;missing-glyph&gt;</code></a>元素。它定义了如果一个特定的字形在字体中找不到，而且也没有回调机制的话，该如何显示。它同时还显示了如何创建字形：在里面简单添加任一个图形化 SVG 内容。你可以在这里使用任何其它的 SVG 元素，甚至是 <a href=\"/zh-CN/docs/Web/SVG/Element/filter\"><code>&lt;filter&gt;</code></a>元素、<a href=\"/zh-CN/docs/Web/SVG/Element/a\"><code>&lt;a&gt;</code></a>元素或者 <a href=\"/zh-CN/docs/Web/SVG/Element/script\"><code>&lt;script&gt;</code></a>元素。然而，为了简化字形，你可以简单添加一个属性<code>d</code>——它精确定义了字形的形状，就像标准 SVG 路径所做的那样。</p>\n<p>真正的字形是用<a href=\"/zh-CN/docs/Web/SVG/Element/glyph\"><code>&lt;glyph&gt;</code></a>元素定义的。它最重要的属性是<code>unicode</code>。它定义了表达这个字形的 unicode 代码点。如果你还在一个字形上指定了<a href=\"/zh-CN/docs/Web/HTML/Global_attributes#attr-lang\"><code>lang</code></a>属性，你可以更进一步专门限定它为特定的语言（由目标上的<code>xml:lang</code>属性表达）。而且，你可以使用任意的 SVG 来定义这个字形，它允许用户代理所支持的很多效果。</p>\n<p>有两个进一步的元素，可以定义在<code>font</code>元素里面：<a href=\"/zh-CN/docs/Web/SVG/Element/hkern\"><code>&lt;hkern&gt;</code></a>元素和<a href=\"/zh-CN/docs/Web/SVG/Element/vkern\"><code>&lt;vkern&gt;</code></a>元素。这两个元素每个引用到至少两个字符（属性 u1 和属性 u2）以及一个属性 k。属性 k 决定了那些字符之间的距离应该减少多少。下面的示例指示用户代理把“A”和“V”字符放得比标准的字符间距更靠近一些。</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">&lt;hkern u1=\"A\" u2=\"V\" k=\"20\" /&gt;\n</pre></div>"}},{"type":"prose","value":{"id":"引用一个字体","title":"引用一个字体","isH3":false,"content":"<p>如果你已经把你的字体声明如上放在一起，你可以使用一个单一的<code>font-family</code>属性以实现在 SVG 文本上应用字体：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">&lt;font&gt;\n  &lt;font-face font-family=\"Super Sans\" /&gt;\n  &lt;!-- and so on --&gt;\n&lt;/font&gt;\n\n&lt;text font-family=\"Super Sans\"&gt;My text uses Super Sans&lt;/text&gt;\n</pre></div>\n<p>然而，你可以自由组合一些方法，在如何定义字体方面有极大的自由度。</p>"}},{"type":"prose","value":{"id":"选项：使用_css_font-face","title":"选项：使用 CSS @font-face","isH3":true,"content":"<p>你可以使用<code>@font-face</code>以引用远程（或者非远程）字体：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">&lt;font id=\"Super_Sans\"&gt;\n  &lt;!-- and so on --&gt;\n&lt;/font&gt;\n\n&lt;style type=\"text/css\"&gt;\n@font-face {\n  font-family: \"Super Sans\";\n  src: url(#Super_Sans);\n}\n&lt;/style&gt;\n\n&lt;text font-family=\"Super Sans\"&gt;My text uses Super Sans&lt;/text&gt;\n</pre></div>"}},{"type":"prose","value":{"id":"选项：引用一个远程字体","title":"选项：引用一个远程字体","isH3":true,"content":"<p>上面提到的 font-face-uri 元素允许你引用一个外来字体，因此可以有很大的可重用性：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">&lt;font&gt;\n  &lt;font-face font-family=\"Super Sans\"&gt;\n    &lt;font-face-src&gt;\n      &lt;font-face-uri xlink:href=\"fonts.svg#Super_Sans\" /&gt;\n    &lt;/font-face-src&gt;\n  &lt;/font-face&gt;\n&lt;/font&gt;\n</pre></div><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/SVG/Tutorial/Filter_effects\">« 上一页</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/SVG/Tutorial/SVG_Image_Tag\">下一页  »</a></li>\n</ul>"}}],"toc":[{"text":"定义一个字体","id":"定义一个字体"},{"text":"引用一个字体","id":"引用一个字体"}],"summary":"当规定 SVG 时，在浏览器支持 web 字体并不流行。因为访问正确的字体文件对于正确呈现字体是有确定性的，SVG 中添加了一个字体描述技术，以提供这个能力。它并不是为了和别的格式比如说 PostScript 或 OTF 兼容，而是为了将字形信息嵌入 SVG 呈现的一个简单的方法。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"SVG fonts","locale":"en-US","native":"English (US)"},{"title":"Polices SVG","locale":"fr","native":"Français"},{"title":"SVG フォント","locale":"ja","native":"日本語"},{"title":"SVG шрифты","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/svg/tutorial/svg_fonts","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/svg/tutorial/svg_fonts/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/SVG","title":"SVG：可缩放矢量图形"},{"uri":"/zh-CN/docs/Web/SVG/Tutorial","title":"SVG 教程"},{"uri":"/zh-CN/docs/Web/SVG/Tutorial/SVG_fonts","title":"SVG 字体"}],"pageTitle":"SVG 字体 - SVG：可缩放矢量图形 | MDN","noIndexing":false}}