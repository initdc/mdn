{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Content type","mdn_url":"/zh-CN/docs/Web/SVG/Content_type","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>SVG 中使用了许多数据类型。本文列出了这些数据类型以及它们的语法和用途的描述。</p>"}},{"type":"prose","value":{"id":"角度","title":"角度","isH3":false,"content":"<dl>\n  <dt id=\"angle\">&lt;angle&gt;</dt>\n  <dd>\n    <p>可以用两种办法指定角度。如果用在样式表的属性的值中，<code>&lt;angle&gt;</code> 可以用如下方法定义：<code>plain angle ::= number (~\"deg\" | ~\"grad\" | ~\"rad\")?</code> 在这里 deg 标识了度数，grad 标识了斜率，rad 标识了弧度。对于定义在 CSS2 中的属性，必须提供一个角度单位标识符。对于在 SVG 特有的属性和它们对应的外观属性中的角度值，角度单位标识符是可选的。如果没有提供，角度值会被潜在分配一个度数单位。在所有元素的外观属性中，无论是在 SVG1.1 中定义的，还是在 CSS2 中定义的，如果指定了角度标识符，角度标识符必须是小写的。如果角度用在一个 SVG 属性中，<code>&lt;angle&gt;</code>可以用以下方式定义：</p>\n    <div class=\"code-example\"><pre class=\"brush: plain notranslate\">angle ::= number (\"deg\" | \"grad\" | \"rad\")?\n</pre></div>\n    <p>在这个 &lt;angle&gt; 值中，单位标识符必须是小写的。在 SVG DOM 中，&lt;angle&gt; 值使用<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGAngle\"><code>SVGAngle</code> <small>(en-US)</small></a>或<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>SVGAnimatedAngle objects</code></a>表达。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"任意值","title":"任意值","isH3":false,"content":"<dl>\n  <dt id=\"anything\">&lt;anything&gt;</dt>\n  <dd>\n    <p>基本类型 &lt;anything&gt; 是一个零字符或多字符的序列。具体如下：</p>\n    <div class=\"code-example\"><pre class=\"brush: plain notranslate\">anything ::= Char\\*\n</pre></div>\n    <p>在这里，<a href=\"https://www.w3.org/TR/2008/REC-xml-20081126/#NT-Char\" class=\"external\" rel=\" noopener\">Char</a> 表示一个字符，XML 1.0 第 2.2 节中定义了它。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"时钟值","title":"时钟值","isH3":false,"content":"<dl>\n  <dt id=\"clock-value\">&lt;clock-value&gt;</dt>\n  <dd>\n    <p>时钟值的句法与 <a href=\"https://www.w3.org/TR/2001/REC-smil-animation-20010904/\" class=\"external\" rel=\" noopener\">SMIL Animation</a> 规范中写的句法相同。在这里重放一下时钟值的语法：</p>\n    <pre class=\"notranslate\">Clock-val         ::= Full-clock-val | Partial-clock-val | Timecount-val\nFull-clock-val    ::= Hours \":\" Minutes \":\" Seconds (\".\" Fraction)?\nPartial-clock-val ::= Minutes \":\" Seconds (\".\" Fraction)?\nTimecount-val     ::= Timecount (\".\" Fraction)? (Metric)?\nMetric            ::= \"h\" | \"min\" | \"s\" | \"ms\"\nHours             ::= DIGIT+; any positive number\nMinutes           ::= 2DIGIT; range from 00 to 59\nSeconds           ::= 2DIGIT; range from 00 to 59\nFraction          ::= DIGIT+\nTimecount         ::= DIGIT+\n2DIGIT            ::= DIGIT DIGIT\nDIGIT             ::= [0-9]\n</pre>\n    <p>对于 <code>Timecount</code> 值，默认的公制前缀是“s”（秒）。在时钟值中不能嵌入空白，而且前导和末尾的空白字符会被忽略掉。下面是合法的时钟值的示例：</p>\n    <ul>\n      <li>完整时钟值：\n        <ul>\n          <li><code>02:30:03</code> &gt;= 2 小时 30 分钟又 3 秒</li>\n          <li><code>50:00:10.25</code> = 50 小时 10 秒又 250 毫秒</li>\n        </ul>\n      </li>\n      <li>部分时钟值：\n        <ul>\n          <li><code>02:33</code> &gt;= 2 分钟又 33 秒</li>\n          <li><code>00:10.5</code> = 10.5 秒 = 10 秒又 500 毫秒</li>\n        </ul>\n      </li>\n      <li>Timecount 值：\n        <ul>\n          <li><code>3.2h</code> &gt;= 3.2 小时 = 3 小时 12 分钟</li>\n          <li><code>45min</code> &gt;= 45 分钟</li>\n          <li><code>30s</code> &gt;= 30 秒</li>\n          <li><code>5ms</code> &gt;= 5 毫秒</li>\n          <li><code>12.467</code> &gt;= 12 秒又 467 毫秒</li>\n        </ul>\n      </li>\n      <li>小数值是基数为 10 的浮点数，秒的界定。因此：\n        <ul>\n          <li><code>00.5s</code> = 500 毫秒</li>\n          <li><code>00:00.005</code> = 5 毫秒</li>\n        </ul>\n      </li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"颜色","title":"颜色","isH3":false,"content":"<dl>\n  <dt id=\"color\">&lt;color&gt;</dt>\n  <dd>\n    <p>基本类型&lt;color&gt;是一个 CSS2 兼容的规范，针对 sRGB 颜色空间的颜色。&lt;color&gt; 应用在 SVG 的属性 <code><a href=\"/zh-CN/docs/Web/SVG/Attribute/color\">color</a></code> 上，也是属性<code><a href=\"/zh-CN/docs/Web/SVG/Attribute/fill\">fill</a></code>、属性<code><a href=\"/zh-CN/docs/Web/SVG/Attribute/stroke\">stroke</a></code>、属性<code><a href=\"/en-US/docs/Web/SVG/Attribute/stop-color\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">stop-color (en-US)</a></code>、属性 <code><a href=\"/en-US/docs/Web/SVG/Attribute/flood-color\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">flood-color (en-US)</a></code>和属性<code><a href=\"/en-US/docs/Web/SVG/Attribute/lighting-color\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">lighting-color (en-US)</a></code>的定义的组成部分，&lt;color&gt; 还提供了可选的基于 ICC 的颜色规范。</p>\n    <p>SVG 支持所有的定义在<a href=\"https://www.w3.org/TR/2008/REC-CSS2-20080411/syndata.html#value-def-color\" class=\"external\" rel=\" noopener\">CSS2 句法和基本数据类型</a>中的 &lt;color&gt; 供选择的句法，而且还支持<a href=\"https://www.w3.org/TR/css3-color/\" class=\"external\" rel=\" noopener\">CSS Color Module Level 3</a>中的 &lt;color&gt; 句法（取决于编译器）。</p>\n    <p>一个 &lt;color&gt; 可以是一个关键词，或者一个数字化的 RGB 规范。除了这些颜色关键词，用户可以利用用户环境中的对象指定对应于颜色的关键词。这些关键词的规范定义可以在<a href=\"https://www.w3.org/TR/2008/REC-CSS2-20080411/ui.html#system-colors\" class=\"external\" rel=\" noopener\">用户对颜色的引用</a>（CSS2 规范第 18.2 节）中找到。</p>\n    <p>一个 16 进制记号法的 RGB 值的格式是一个“#”后面紧跟着 3 个或者 6 个 16 进制字符。三数字 RGB 记号法（#rgb）可以转换成六数字 RGB 格式（#rrggbb），只需要复制数字，而不是添加 0。举个例子，#fb0 扩展为 #ffbb00。这样确保白色（#ffffff）可以用缩写记法 #fff 指定，去掉任何对显示器的色深的依赖。一个函数记号法的 RGB 值的格式是一个 RGB 开头函数后面跟着一个逗号分隔的三数值数列（可以是三个数字或者三个百分数）后面跟着一个右括号“)”。一个 RGB 开头函数是一个大小写不敏感的字符串“rgb(”，举个例子，“RGB(”或者“rGb(”。为了兼容性，建议使用全小写形式“rgb(”。整型值 255 对应于 100%，也对应于 16 进制计号法中的 F 或 FF：<code>rgb(255,255,255)</code> = <code>rgb(100%,100%,100%)</code> = <code>#FFF</code>。数字值周围允许存在空白字符。所有的 RGB 值都指定在 sRGB 颜色空间里。使用 sRGB 提供了一个清楚的、客观的、可测量的颜色定义，可以关联到国际标准。</p>\n    <div class=\"code-example\"><pre class=\"brush: plain notranslate\">color ::= \"#\" hexdigit hexdigit hexdigit (hexdigit hexdigit hexdigit)?\n          | \"rgb(\"integer, integer, integer\")\"\n          | \"rgb(\"integer \"%\", integer \"%\", integer \"%)\"\n          | color-keyword\nhexdigit ::= [0-9A-Fa-f]\n</pre></div>\n    <p>在这里，color-keyword 要于匹配列于 <a href=\"https://www.w3.org/TR/css3-color/\" class=\"external\" rel=\" noopener\">CSS Color Module Level 3</a> 中的颜色关键词（大小写不敏感）中的一个，要么匹配列于<a href=\"https://www.w3.org/TR/2008/REC-CSS2-20080411/ui.html#system-colors\" class=\"external\" rel=\" noopener\">对颜色的用户参考</a>中的一个。SVG DOM 对 &lt;color&gt; 的定义，CSS 中也做了同样的定义。SVG 对颜色的扩展，包括指定基于 ICC 的颜色的能力，可以使用 DOM 接口<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>SVGColor</code></a>来表现。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"坐标","title":"坐标","isH3":false,"content":"<dl>\n  <dt id=\"coordinate\">&lt;coordinate&gt;</dt>\n  <dd>\n    <p>一个&lt;coordinate&gt; 是一个用户坐标系统中的长度，是从用户坐标系统的原点沿着相关轴走出给定的距离（X 轴针对 X 坐标，Y 轴针对 Y 坐标）。它的句法与<a href=\"/en-US/docs/Web/SVG/Content_type#length\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">&lt;length&gt; (en-US)</a>相同。在 SVG DOM 内部，一个 &lt;coordinate&gt; 代表了一个<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGLength\"><code>SVGLength</code> <small>(en-US)</small></a> 或者一个<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGAnimatedLength\"><code>SVGAnimatedLength</code> <small>(en-US)</small></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"频率","title":"频率","isH3":false,"content":"<dl>\n  <dt id=\"frequency\">&lt;frequency&gt;</dt>\n  <dd>\n    <p>频率值用在可听到的属性上。就如 CSS2 中所定义的，一个频率值是一个 <a href=\"/en-US/docs/Web/SVG/Content_type#number\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">&lt;number&gt; (en-US)</a> 后面跟着一个频率单位标识符。频率单位标识符可以是：</p>\n    <ul>\n      <li><code>Hz</code>：赫兹</li>\n      <li><code>kHz</code>：千赫</li>\n    </ul>\n    <p>频率值不能是负数。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"funciri","title":"FuncIRI","isH3":false,"content":"<dl>\n  <dt id=\"funciri_2\">&lt;FuncIRI&gt;</dt>\n  <dd>\n    <p>用于引用的功能记号法，该引用的句法与<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/CSS/url\"><code>css uri</code> <small>(en-US)</small></a>相同。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"icc_颜色","title":"ICC 颜色","isH3":false,"content":"<dl>\n  <dt id=\"icccolor\">&lt;icccolor&gt;</dt>\n  <dd>\n    <p>&lt;icccolor&gt; 一份 ICC 颜色规范。在 SVG 1.1，一份 ICC 颜色规范，顾名思义，是一个参考了一个<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>&lt;color-profile&gt;</code></a> 元素，以及一个或更多颜色成分值。语法如下所示：</p>\n    <div class=\"code-example\"><pre class=\"brush: plain notranslate\">icccolor ::= \"icc-color(\" name (, number)+ \")\"\n</pre></div>\n    <p>&lt;icccolor&gt; 对应的 SVG DOM 接口是<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>SVGICCColor</code></a>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"整型数","title":"整型数","isH3":false,"content":"<dl>\n  <dt id=\"integer\">&lt;integer&gt;</dt>\n  <dd>\n    <p>用一个可选的正负符号（“+”或“-”）后面跟着一个或多个 0 到 9 的数字可以指定一个&lt;integer&gt;：</p>\n    <div class=\"code-example\"><pre class=\"brush: plain notranslate\">integer ::= [+-]? [0-9]+\n</pre></div>\n    <p>如果正负符号不出现，则这个数字是非负的。除非是另有声明为特殊的属性，&lt;integer&gt; 的范围是 -2147483648 到 2147483647 之间。在 SVG DOM 内部，一个 &lt;integer&gt; 代表了一个数字或者一个<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGAnimatedInteger\"><code>SVGAnimatedInteger</code> <small>(en-US)</small></a>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"iri","title":"IRI","isH3":false,"content":"<dl>\n  <dt id=\"iri_2\">&lt;IRI&gt;</dt>\n  <dd>\n    <p>一个国际化资源标识符。在因特网上，资源是用 <em>IRI</em>（一个国际化资源标识符）标识的。举个例子，一个 SVG 文档调用了位于 <code>http://example.com</code> 上的 <code>someDrawing.svg</code>，可以使用下面的 <em>IRI</em>：</p>\n    <pre class=\"notranslate\">http://example.com/someDrawing.svg\n</pre>\n    <p>一个 <em>IRI</em> 中包含一个 <em>IRI</em> 片段标识符，就可以定位一个 XML 文档内部的特定的元素。一个包含有 <em>IRI</em> 片段标识符的 <em>IRI</em>，由一个可选的基础 <em>IRI</em> 后面跟着一个“#”号，再跟着一个 <em>IRI</em> 片段标识符组成。举个例子，下面的 IRI 可以用来指定文件 someDrawing.svg 中的 ID 为“Lamppost”的元素：</p>\n    <pre class=\"notranslate\">http://example.com/someDrawing.svg#Lamppost\n</pre>\n    <p><em>IRI</em> 用在 <code><a href=\"/en-US/docs/Web/SVG/Attribute/xlink:href\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">xlink:href (en-US)</a></code> 属性中。有些属性既允许 <em>IRI</em> 作为内容，也允许文本字符串。为了消除歧意，避免一个文本字符串被当作 IRI，可以使用功能记号法 &lt;FuncIRI&gt;。这只是简单用功能记号法分隔一个 IRI。注意：出于历史原因，为了与 CSS 规范兼容，分隔符是“url(”和“)”。该 <em>FuncIRI</em> 格式用在外观属性中。</p>\n    <p>SVG 广泛地使用了 <em>IRI</em> 引用，引用对象既可以是绝对引用也可以是引对引用。举个例子，要用线性渐变填充一个矩形，你可以先定义一个 <a href=\"/zh-CN/docs/Web/SVG/Element/linearGradient\"><code>&lt;linearGradient&gt;</code></a> 元素，然后给它一个 ID，如下：</p>\n    <div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>linearGradient</span> <span class=\"token attr-name\"><span class=\"token namespace\">xml:</span>id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MyGradient<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>linearGradient</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n    <p>然后你再引用这个线性渐变，作为矩形的属性 <code><a href=\"/zh-CN/docs/Web/SVG/Attribute/fill\">fill</a></code> 的值，如下：</p>\n    <div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rect</span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url(#MyGradient)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n</code></pre></div>\n    <p>SVG 支持两种类型的 <em>IRI</em> 引用：</p>\n    <ul>\n      <li>本地 <em>IRI</em> 引用，在这里 IRI 引用不能包含一个 <code>&lt;absoluteIRI&gt;</code> 或 <code>&lt;relativeIRI&gt;</code>，因此只能包含一个片段标识符（例如：<code>&lt;elementID&gt;</code> 或者 <code>#xpointer(id&lt;elementID&gt;)</code>）。</li>\n      <li>非本地 <em>IRI</em> 引用，在这里 <em>IRI</em> 引用必须包含一个 <code>&lt;absoluteIRI&gt;</code> 或 <code>&lt;relativeIRI&gt;</code>。</li>\n    </ul>\n    <p>欲了解完整的 SVG 中的 IRI 引用的规范请阅读 <a href=\"https://www.w3.org/TR/SVG/linking.html#IRIReference\" class=\"external\" rel=\" noopener\">SVG 1.1 (2nd Edition): IRI references</a>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"长度","title":"长度","isH3":false,"content":"<dl>\n  <dt id=\"length\">&lt;length&gt;</dt>\n  <dd>\n    <p>一个长度是一个可度量的距离，给定一个数字以及一个单位。长度可以用两种方法指定。如果在样式表中使用它，可以如下定义&lt;length&gt;：</p>\n    <pre class=\"notranslate\">length ::= number (~\"em\" | ~\"ex\" | ~\"px\" | ~\"in\" | ~\"cm\" | ~\"mm\" | ~\"pt\" | ~\"pc\")?\n</pre>\n    <p>请阅读 <a href=\"https://www.w3.org/TR/2008/REC-CSS2-20080411/syndata.html#length-units\" class=\"external\" rel=\" noopener\">CSS2 规范</a> 以了解单位标识符的意义。</p>\n    <p>在 CSS2 中定义的长度属性，必须提供单位标识符。而 SVG 专用属性的长度值以及它们对应的外观属性，长度单位标识符是可选的。如果没有提供单位标识符，长度值代表当前用户坐标系统中的一段距离。对于外观属性，无论是定义在 SVG1.1 还是定义在 CSS2 中，长度单位标识符必须是小写的。</p>\n    <p>如果是在 SVG 属性中使用长度，&lt;length&gt;需定义如下：</p>\n    <pre class=\"notranslate\">length ::= number (\"em\" | \"ex\" | \"px\" | \"in\" | \"cm\" | \"mm\" | \"pt\" | \"pc\" | \"%\")?\n</pre>\n    <p>在这样的 &lt;length&gt; 值中，单位标识符必须是小写的。</p>\n    <p>注意，非属性 &lt;length&gt; 定义同样允许百分比单位标识符。这意味着一个百分比长度值依赖于被指定百分比长度值的属性。分两种情况：</p>\n    <ul>\n      <li>百分比长度值表达了一个视口宽度或高度的百分比；</li>\n      <li>百分比长度值表达了一个给定对象上的边界盒的宽度或高度的百分比。</li>\n    </ul>\n    <p>在 SVG DOM 中，&lt;length&gt;值可以用<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGLength\"><code>SVGLength</code> <small>(en-US)</small></a>对象或<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGAnimatedLength\"><code>SVGAnimatedLength</code> <small>(en-US)</small></a>对象来表达。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"t值数列","title":"<em>T</em>值数列","isH3":false,"content":"<dl>\n  <dt id=\"list-of-_t_s\">&lt;list-of-_T_s&gt;</dt>\n  <dd>\n    <p>（在这里<em>T</em> 某些类型。）由一系列分开的值构成的数列。除非另有说明，SVG 的 XML 属性内的数列既可以是逗号分隔的，也可以是空格分隔的。用逗号作分隔符，逗号前面或后面可有带空格。数列中的空白被定义为一个或多个下列连续字符：“空格”（U+0020）、“制表符”（U+0009）、 “换行符”（U+000A）、 “回车符”（U+000D）以及“换页符”(U+000C)。下面是一个 EBNF 语法的模板，用来描述&lt;list-of-_T_s&gt;句法：</p>\n    <div class=\"code-example\"><pre class=\"brush: plain notranslate\">list-of-Ts ::= T | T, list-of-Ts\n</pre></div>\n    <p>在 SVG DOM 内部，&lt;list-of-_T_s&gt;类型的值可以用一个限特定类型 <em>T</em> 的接口来表达。举个例子，SVG DOM 中的&lt;list-of-lengths&gt;使用一个 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGLengthList\"><code>SVGLengthList</code> <small>(en-US)</small></a> 对象或者 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGAnimatedLengthList\"><code>SVGAnimatedLengthList</code> <small>(en-US)</small></a> 对象来表达。</p>\n  </dd>\n</dl>","titleAsText":"T值数列"}},{"type":"prose","value":{"id":"命名","title":"命名","isH3":false,"content":"<dl>\n  <dt id=\"name\">&lt;name&gt;</dt>\n  <dd>\n    <p>一个命名，是一个字符串，是不符合句法意义的少量的字符。</p>\n    <div class=\"code-example\"><pre class=\"brush: plain notranslate\">name ::= [^,()#x20#x9#xd#xa] /* 除了 \",\", \"(\", \")\" 或 wsp 之外的任何字符 */\n</pre></div>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"数字","title":"数字","isH3":false,"content":"<dl>\n  <dt id=\"number\">&lt;number&gt;</dt>\n  <dd>\n    <p>真实数字可以用两种方法指定。如果用在样式表中，一个 &lt;number&gt; 可以如下定义：<code>plain number ::= integer | [+-]? [0-9]* \".\" [0-9]+</code> 该句法与 CSS（CSS2 第 4.3.1 章节）中的定义一样。如果用在一个 SVG 属性中，一个 &lt;number&gt; 可以用别的方法定义，允许一个数字后面跟着大数指数，以指定得更精确：</p>\n    <div class=\"code-example\"><pre class=\"brush: plain notranslate\">number ::= integer ([Ee] integer)?| [+-]? [0-9]\\* \".\" [0-9]+ ([Ee] integer)?\n</pre></div>\n    <p>在 SVG DOM 内部，一个 &lt;number&gt; 可以用浮点数、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGNumber\"><code>SVGNumber</code> <small>(en-US)</small></a> 对象或者 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGAnimatedNumber\"><code>SVGAnimatedNumber</code> <small>(en-US)</small></a> 对象来表达。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"带可取舍的后缀数字的数字","title":"带可取舍的后缀数字的数字","isH3":false,"content":"<dl>\n  <dt id=\"number-optional-number\">&lt;number-optional-number&gt;</dt>\n  <dd>\n    <p>一对&lt;number&gt;，其中第二个 &lt;number&gt; 是可视情况取舍的。</p>\n    <div class=\"code-example\"><pre class=\"brush: plain notranslate\">number-optional-number ::= number | number, number\n</pre></div>\n    <p>在 SVG DOM 中，一个 &lt;number-optional-number&gt; 可以用一对 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGAnimatedInteger\"><code>SVGAnimatedInteger</code> <small>(en-US)</small></a> 对象或者一对 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGAnimatedNumber\"><code>SVGAnimatedNumber</code> <small>(en-US)</small></a> 对象来表达。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"不透明度值","title":"不透明度值","isH3":false,"content":"<dl>\n  <dt id=\"opacity-value\">&lt;opacity-value&gt;</dt>\n  <dd>\n    <p>颜色不透明度或者当前对象填充的内容的不透明度，它是一个<a href=\"/en-US/docs/Web/SVG/Content_type#number\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">&lt;number&gt; (en-US)</a>。任何超出 0.0 到 1.0 范围的值将被压制回这个范围。0.0 表示完全透明，1.0 表示完全不透明。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"涂色","title":"涂色","isH3":false,"content":"<dl>\n  <dt id=\"paint\">&lt;paint&gt;</dt>\n  <dd>\n    <p>属性<code><a href=\"/zh-CN/docs/Web/SVG/Attribute/fill\">fill</a></code>和属性<code><a href=\"/zh-CN/docs/Web/SVG/Attribute/stroke\">stroke</a></code>的值，是涂色类型的规范，用在要对一个给定元素填充或描边的时候。SVG 规范的<a href=\"https://www.w3.org/TR/SVG/painting.html#SpecifyingPaint\" class=\"external\" rel=\" noopener\">Specifying paint</a>章节中描述了&lt;paint&gt;可用的选项以及句法。在 SVG DOM 内部，&lt;paint&gt; 值用<a class=\"page-not-created\" title=\"此文档尚未被撰写，期待你的贡献!\"><code>SVGPaint</code></a>对象表达。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"百分数","title":"百分数","isH3":false,"content":"<dl>\n  <dt id=\"percentage\">&lt;percentage&gt;</dt>\n  <dd>\n    <p>一个数字后面跟着一个百分号“%”就可以指定一个百分数。</p>\n    <div class=\"code-example\"><pre class=\"brush: plain notranslate\">percentage ::= number \"%\"\n</pre></div>\n    <p>注意 &lt;number&gt; 的意义取决于百分数是在一个样式表中指定的，还是在一个 SVG 属性非外观属性中指定的。百分数值总是关联到另一个值。举个例子，每种允许百分比的属性同时定义了引用了给百分比数参考的距离测量。在 SVG DOM 内部，&lt;percentage&gt; 用 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGNumber\"><code>SVGNumber</code> <small>(en-US)</small></a> 对象或 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGAnimatedNumber\"><code>SVGAnimatedNumber</code> <small>(en-US)</small></a> 对象表达。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"时间","title":"时间","isH3":false,"content":"<ul>\n  <li>&lt;time&gt;\n    <ul>\n      <li>:一个时间值是一个 &lt;number&gt; 后面紧跟着时间单位标识符。时间单位标识符可以是：\n        <ul>\n          <li>ms：毫秒</li>\n          <li>s：秒</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"平移数列","title":"平移数列","isH3":false,"content":"<dl>\n  <dt id=\"transform-list\">&lt;transform-list&gt;</dt>\n  <dd>\n    <p>一个&lt;transform-list&gt; 是用来指定一个坐标系统转换数列。属性<code><a href=\"/zh-CN/docs/Web/SVG/Attribute/transform\">transform</a></code>的定义中给出了 &lt;transform-list&gt; 的可用值的详细描述。在 SVG DOM 内部，一个 &lt;transform-list&gt; 值是用了一个<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGTransformList\"><code>SVGTransformList</code> <small>(en-US)</small></a>对象或者<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGAnimatedTransformList\"><code>SVGAnimatedTransformList</code> <small>(en-US)</small></a>对象来表达的。</p>\n  </dd>\n</dl>"}}],"toc":[{"text":"角度","id":"角度"},{"text":"任意值","id":"任意值"},{"text":"时钟值","id":"时钟值"},{"text":"颜色","id":"颜色"},{"text":"坐标","id":"坐标"},{"text":"频率","id":"频率"},{"text":"FuncIRI","id":"funciri"},{"text":"ICC 颜色","id":"icc_颜色"},{"text":"整型数","id":"整型数"},{"text":"IRI","id":"iri"},{"text":"长度","id":"长度"},{"text":"<em>T</em>值数列","id":"t值数列"},{"text":"命名","id":"命名"},{"text":"数字","id":"数字"},{"text":"带可取舍的后缀数字的数字","id":"带可取舍的后缀数字的数字"},{"text":"不透明度值","id":"不透明度值"},{"text":"涂色","id":"涂色"},{"text":"百分数","id":"百分数"},{"text":"时间","id":"时间"},{"text":"平移数列","id":"平移数列"}],"summary":"SVG 中使用了许多数据类型。本文列出了这些数据类型以及它们的语法和用途的描述。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Content type","locale":"en-US","native":"English (US)"},{"title":"Content type","locale":"ja","native":"日本語"},{"title":"Content type","locale":"pt-BR","native":"Português (do Brasil)"}],"source":{"folder":"zh-cn/web/svg/content_type","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/svg/content_type/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/SVG","title":"SVG：可缩放矢量图形"},{"uri":"/zh-CN/docs/Web/SVG/Content_type","title":"Content type"}],"pageTitle":"Content type - SVG：可缩放矢量图形 | MDN","noIndexing":false}}