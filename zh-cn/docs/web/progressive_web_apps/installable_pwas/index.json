{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"让 PWA 易于安装","mdn_url":"/zh-CN/docs/Web/Progressive_web_apps/Installable_PWAs","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n<ol><li><a href=\"/zh-CN/docs/Web/Progressive_web_apps/App_structure\">PWA 结构</a></li><li><a href=\"/zh-CN/docs/Web/Progressive_web_apps/Add_to_home_screen\">添加到主屏幕</a></li><li><a href=\"/zh-CN/docs/Web/Progressive_web_apps/Introduction\">渐进式 Web 应用介绍</a></li><li><a href=\"/zh-CN/docs/Web/Progressive_web_apps/Loading\">渐进式加载</a></li><li><a href=\"/zh-CN/docs/Web/Progressive_web_apps/Installable_PWAs\">让 PWA 易于安装</a></li><li><a href=\"/zh-CN/docs/Web/Progressive_web_apps/Offline_Service_workers\">通过 Service workers 让 PWA 离线工作</a></li><li><a href=\"/zh-CN/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\">通过通知推送让 PWA 可重用</a></li></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/Progressive_web_apps/Offline_Service_workers\"> 上一页 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/Progressive_web_apps\"> Overview: Progressive web apps</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\"> 下一页  </a></li>\n</ul>\n<p>在上一篇文章，我们了解了如何通过 <a href=\"/zh-CN/docs/Web/API/Service_Worker_API\">Service Worker</a> 让 <a href=\"https://mdn.github.io/pwa-examples/js13kpwa/\" class=\"external\" rel=\" noopener\">js13kPWA</a> 离线工作。我们还可以更进一步，让用户如同本地应用一样在支持的移动浏览器上安装 web 应用。这篇文章讲述如何通过网页清单和添加到主屏特性来做到这一点。</p>\n<p>这些技术允许应用从设备主屏直接启动，而不需启动浏览器键入 URL。你的 Web 应用可以作为一等公民和原生应用肩并肩。这样可以使应用更易于访问，你还可以指定应用全屏运行，没有浏览器界面，这样看起来更像一个原生应用。</p>"}},{"type":"prose","value":{"id":"要求","title":"要求","isH3":false,"content":"<p>可安装网站需要满足以下条件：</p>\n<ul>\n  <li>一份网页清单，填好<a href=\"/zh-CN/docs/Web/Apps/Progressive/Add_to_home_screen#manifest\">正确的字段</a></li>\n  <li>网站的协议必须是安全的（即使用 HTTPS 协议）</li>\n  <li>一个在设备上代表应用的图标</li>\n  <li>一个注册好的 Service Worker，可以让应用离线工作（这仅对于安卓设备上的 Chrome 浏览器是必需的）</li>\n</ul>"}},{"type":"prose","value":{"id":"清单文件_manifest","title":"清单文件 (Manifest)","isH3":true,"content":"<p>离线访问的关键在于一份网页清单，它通过 JSON 形式列举了网站的所有信息。</p>\n<p>它通常位于网页应用的根目录，包含一些有用的信息，比如应用的标题、在移动设备操作系统上显示的代表该应用的不同大小的图标（例如主屏图标）的路径，和用于加载页或启动画面的背景颜色。浏览器需要这些信息来安装 web 应用并使其在主屏上显示。</p>\n<p><a href=\"https://mdn.github.io/pwa-examples/js13kpwa/\" class=\"external\" rel=\" noopener\">js13kPWA</a> 的 <code>js13kpwa.webmanifest</code> 文件包含在 <code>index.html</code> 文件的 <a href=\"/zh-CN/docs/Web/HTML/Element/head\"><code>&lt;head&gt;</code></a> 段，如下行所示：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>manifest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>js13kpwa.webmanifest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 这类清单文件有一些曾经常被使用的扩展名：<code>manifest.webapp</code> 在 Firefox OS 应用清单中很流行，而许多人使用 <code>manifest.json</code> 作为网页清单（因为内容是 JSON 格式的）。但是，<code>.webmanifest</code> 扩展名是在<a href=\"https://w3c.github.io/manifest/\" class=\"external\" rel=\" noopener\">W3C 清单规范</a>中显式指定的，所以这里我们使用这个扩展名。</p>\n</div>\n<p>文件的内容是这个样子的：</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"js13kGames Progressive Web App\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"short_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"js13kPWA\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Progressive Web App that lists games submitted to the A-Frame category in the js13kGames 2017 competition.\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"icons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"icons/icon-32.png\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"32x32\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// ...</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"icons/icon-512.png\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"512x512\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"start_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/pwa-examples/js13kpwa/index.html\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"display\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fullscreen\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"theme_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#B12A34\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"background_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#B12A34\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>大部分字段无需解释，但是我们还是详细解释一下为妙：</p>\n<ul>\n  <li><code>name</code>: 网站应用的全名。</li>\n  <li><code>short_name</code>: 显示在主屏上的短名字。</li>\n  <li><code>description</code>: 一两句话解释你的应用的用途。</li>\n  <li><code>icons</code>: 一串图标信息：源 URL，大小和类型。多包含几个图标，这样就能选中一个最适合用户设备的。</li>\n  <li><code>start_url</code>: 启动应用时打开的主页。</li>\n  <li><code>display</code>: 应用的显示方式；可以是 <code>fullscreen</code>、<code>standalone</code>、<code>minimal-ui</code> 或者 <code>browser</code>。</li>\n  <li><code>theme_color</code>: UI 主颜色，由操作系统使用。</li>\n  <li><code>background_color</code>: 背景色，用于安装和显示启动画面时。</li>\n</ul>\n<p>一份网页清单最少需要 <code>name</code> 和一个图标 (带有 <code>src</code>, <code>size</code> 和 <code>type</code>)。最好也要提供 <code>description</code>、<code>short_name</code>、和 <code>start_url</code>。除了上述字段，还有一些其它的字段供您使用，请查看<a href=\"/zh-CN/docs/Web/Manifest\">网页应用清单参考</a>获取详细信息。</p>"}},{"type":"prose","value":{"id":"添加到主屏","title":"添加到主屏","isH3":false,"content":"<p>\"添加到主屏\" (或者英语短语 A2HS (Add to Home Screen)) 是移动浏览器实现的一个特性，它利用网页清单中的信息来在设备主屏上显示应用图标和文字。只有应用满足上述必备条件，这个功能才可以正常运作。</p>\n<p>当用户使用支持的移动浏览器访问 PWA 时，浏览器会显示一条横幅信息表示可以安装这个应用。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Installable_PWAs/js13kpwa-icon.png\" alt=\"Add to Home screen popup of js13kPWA.\" width=\"360\" height=\"640\" loading=\"lazy\">\n</p>\n<p>在用户单击这个横幅后，安装横幅信息会显示出来。它是浏览器基于网页清单信息创建的，名字和图标可以在提示中看到。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Installable_PWAs/js13kpwa-banner.png\" alt=\"Install banner of js13kPWA.\" width=\"360\" height=\"640\" loading=\"lazy\">\n</p>\n<p>如果用户单击安装到主屏按钮，会显示应用图标的样子，让用户确认是否安装这个应用。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Installable_PWAs/js13kpwa-add.png\" alt=\"Add to Home screen popup of js13kPWA.\" width=\"360\" height=\"640\" loading=\"lazy\">\n</p>\n<p>确认之后，应用就安装到主屏上了。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Installable_PWAs/js13kpwa-installed.png\" alt=\"\" width=\"360\" height=\"640\" loading=\"lazy\">\n</p>\n<p>之后，用户可以立刻启动并使用应用。注意，在某些浏览器/移动操作系统中，PWA 会在图标右下角显示浏览器图标，告诉用户这是一个网页应用。</p>"}},{"type":"prose","value":{"id":"启动画面","title":"启动画面","isH3":true,"content":"<p>在一些浏览器中，可以通过清单信息产生一个启动画面，当 PWA 启动时显示。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Installable_PWAs/js13kpwa-splash.png\" alt=\"\" width=\"360\" height=\"640\" loading=\"lazy\">\n</p>\n<p>这个启动画面由给定的图标、主题和背景色生成。</p>"}},{"type":"prose","value":{"id":"总结","title":"总结","isH3":false,"content":"<p>在本文中，我们学习了如何使用网页清单和安装到主屏特性让 PWA 可安装。</p>\n<p>为了获得添加到主屏的更多信息，请阅读<a href=\"/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">添加到主屏指南 (en-US)</a>。浏览器支持当前限于 Android 平台上的 Firefox 58+、Mobile Chrome、Android Webview 31+ 以及 Android Opera 32+, 但是将来这些限制的影响会逐渐减小。</p>\n<p>现在让我们将目光转移到 PWA 的最后一个难点：通过推送通知再次启动（re-engagement）。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/Progressive_web_apps/Offline_Service_workers\"> 上一页 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/Progressive_web_apps\"> Overview: Progressive web apps</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-CN/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\"> 下一页  </a></li>\n</ul>"}}],"toc":[{"text":"要求","id":"要求"},{"text":"添加到主屏","id":"添加到主屏"},{"text":"总结","id":"总结"}],"summary":"在上一篇文章，我们了解了如何通过 Service Worker 让 js13kPWA 离线工作。我们还可以更进一步，让用户如同本地应用一样在支持的移动浏览器上安装 web 应用。这篇文章讲述如何通过网页清单和添加到主屏特性来做到这一点。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"How to make PWAs installable","locale":"en-US","native":"English (US)"},{"title":"Cómo hacer PWAs instalables","locale":"es","native":"Español"},{"title":"Comment rendre les PWAs installables","locale":"fr","native":"Français"},{"title":"PWA をインストール可能にするには","locale":"ja","native":"日本語"},{"title":"PWA를 설치가능하게 만드는 방법","locale":"ko","native":"한국어"},{"title":"Как сделать PWA устанавливаемым","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/progressive_web_apps/installable_pwas","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/progressive_web_apps/installable_pwas/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/Progressive_web_apps","title":"渐进式 Web 应用（PWA）"},{"uri":"/zh-CN/docs/Web/Progressive_web_apps/Installable_PWAs","title":"让 PWA 易于安装"}],"pageTitle":"让 PWA 易于安装 - 渐进式 Web 应用（PWA） | MDN","noIndexing":false}}