{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"添加到主屏幕","mdn_url":"/zh-CN/docs/Web/Progressive_web_apps/Add_to_home_screen","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n<ol></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>添加到主屏幕（Add to Home Screen，简称 A2HS）是现代智能手机浏览器中的一项功能，使开发人员可以轻松便捷地将自己喜欢的 Web 应用程序（或网站）的快捷方式添加到主屏幕中，以便用户随后可以通过单击访问它。本指南说明了 A2HS 的使用方式，以及作为开发人员为使用户能利用 A2HS 所需做的事情。</p>"}},{"type":"prose","value":{"id":"为什么选择_a2hs？","title":"为什么选择 A2HS？","isH3":false,"content":"<p>A2HS 被认为是渐进式 <a href=\"/zh-CN/docs/Web/Progressive_web_apps\">Web 应用程序</a>哲学的一部分——为 Web 应用程序提供与原生应用程序相同的用户体验优势，因此它们可以在当今的生态系统战争中竞争。这部分是通过访问主屏幕上的应用程序图标来访问应用程序，然后将其整齐地显示在自己的窗口中的简单手势。A2HS 使这成为可能。</p>"}},{"type":"prose","value":{"id":"哪些浏览器支持_a2hs？","title":"哪些浏览器支持 A2HS？","isH3":false,"content":"<p>Mobile Chrome / Android Webview 从 31 版开始支持 A2HS，Opera for Android 从 32 版开始支持，Firefox for Android 从 <a href=\"/en-US/docs/Mozilla/Firefox/Releases/58\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">58 版 (en-US)</a> 开始支持。</p>"}},{"type":"prose","value":{"id":"如何使用？","title":"如何使用？","isH3":false,"content":"<p>我们已经编写了一个非常简单的示例网站（<a href=\"https://mdn.github.io/pwa-examples/a2hs/\" class=\"external\" rel=\" noopener\">观看我们的在线演示</a>，并<a href=\"https://github.com/mdn/pwa-examples/tree/master/a2hs\" class=\"external\" rel=\" noopener\">查看源代码</a>），该网站虽然功能不多，但是实现 A2HS 所必须的代码都有包含，Service Worker 也使其可以脱机使用。这个示例展示了一系列的狐狸图片。</p>\n<p>如果您有适用于 Android 的 Firefox，使用它打开我们的示例：<code>https://mdn.github.io/pwa-examples/a2hs/</code>。你将会看到狐狸图片，但更重要的是，你将会看到一个带有加号（+）的“主页”图标——这是为具有必要功能的任何站点显示的“添加到主屏幕”图标。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen/add-to-home-screen-icon.png\" alt=\"地址栏的“添加到主屏幕”图标\" width=\"500\" height=\"64\" loading=\"lazy\">\n</p>\n<p>点击此按钮将显示一个确认横幅，按下大大的“添加到主屏幕”按钮即可将应用添加到主屏幕。（注意：在 Android 8 及更高版本中，将首先显示系统级的“添加到主屏幕”权限对话框。）</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/15772/fx-a2hs-banner.png\" alt=\"确认横幅\" loading=\"lazy\">\n</p>\n<p>使用 Mobile Chrome 的体验则略有不同；加载我们的网站后，您会看到一个弹出安装横幅，询问您是否要将此应用添加到主屏幕。</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/15771/chrome-a2hs-banner.png\" alt=\"Mobile Chrome 上的 A2HS 提示\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 您可以在“<a href=\"https://developers.google.com/web/fundamentals/app-install-banners/\" class=\"external\" rel=\" noopener\">Web App 安装横幅</a>”一文中找到有关 Chrome 安装横幅的更多信息。</p>\n</div>\n<p>如果您选择不将其添加到主屏幕，则可以稍后使用 Chrome 主菜单中的添加到主屏幕图标添加。</p>\n<p>无论使用哪种浏览器，当您选择将应用程序添加到主屏幕时，您都会看到它与短标题一起出现，就像原生应用程序一样。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen/a2hs-on-home-screen.png\" alt=\"桌面上的 PWA 图标\" width=\"400\" height=\"243\" loading=\"lazy\">\n</p>\n<p>点按此图标可以将其打开，但是作为全屏应用程序，您将不再看到其周围的浏览器用户界面。</p>"}},{"type":"prose","value":{"id":"如何使应用程序支持_a2hs？","title":"如何使应用程序支持 A2HS？","isH3":false,"content":"<p>要将您的应用添加到主屏幕，它需要满足以下条件：</p>\n<ul>\n  <li>应用通过 HTTPS 提供服务——Web 正朝着更加安全的方向发展，包括 A2HS 在内的许多现代 Web 技术都将仅工作在安全的环境中。</li>\n  <li>从 HTML 头链接具有正确字段的 manifest 文件。</li>\n  <li>有合适的图标可显示在主屏幕上。</li>\n  <li>Chrome 浏览器还要求该应用程序注册一个 Service Worker（这样在离线状态下就也可以运行）。</li>\n</ul>"}},{"type":"prose","value":{"id":"manifest","title":"Manifest","isH3":true,"content":"<p>Web manifest 以标准 JSON 格式编写，应放置在应用程序目录中的某个位置（最好是在根目录中），名称为 <code>somefilename.webmanifest</code>（这里我们将其命名为 <code>manifest.webmanifest</code>）。它包含多个字段，这些字段定义有关 Web 应用程序及其行为的某些信息。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> .webmanifest 扩展名是在规范的“<a href=\"https://w3c.github.io/manifest/#media-type-registration\" class=\"external\" rel=\" noopener\">媒体类型注册</a>”部分中指定的，但通常浏览器也支持带有其他适当扩展名的清单，例如 .json。</p>\n</div>\n<p>A2HS 所需的字段如下：</p>\n<ul>\n  <li><code>background_color</code>：指定在某些应用程序上下文中使用的背景色。与 A2HS 最相关的一个是在点击主屏幕上的应用程序图标并首次开始加载时显示的初始屏幕（目前仅在通过 Chrome 将应用添加到主屏幕时显示）。</li>\n  <li><code>display</code>：指定应如何显示应用。为了使它看起来像一个应用程序而非网页，这里应该填写像是 <code>fullscreen</code> （根本不显示任何 UI）或 <code>standalone</code>（与前者非常相似，但是状态栏这样的系统级 UI 元素可能是可见的）的值。</li>\n  <li><code>icons</code>：指定在不同位置（例如，在任务切换器上或更重要的是在主屏幕上）表示应用程序时浏览器使用的图标。我们的演示中仅包含一个。</li>\n  <li><code>name</code>/<code>short_name</code>：这些字段提供了在不同位置表示应用程序时要显示的应用程序名称。<code>name</code> 提供完整的应用名称。<code>short_name</code> 则是当没有足够的空间显示全名时，提供的缩写名称。如果您的应用程序名称特别长，建议您同时提供两者。</li>\n  <li><code>start_url</code>：提供启动添加到主屏幕应用程序时应加载的资源的路径。请注意，这必须是一个相对 manifest 指向网站主页的相对路径。另请注意，Chrome 需要这条字段才能显示安装标语，而 Firefox 即使没有这条字段也会显示用于添加到主屏的含加号的主页图标。</li>\n</ul>\n<p>我们的示例应用程序的 manifest 如下所示：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"background_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"purple\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Shows random fox pictures. Hey, at least it isn't cats.\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"display\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fullscreen\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"icons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"icon/fox-icon.png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"192x192\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Awesome fox pictures\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"short_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Foxes\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"start_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/pwa-examples/a2hs/index.html\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"合适的图标","title":"合适的图标","isH3":true,"content":"<p>如以上 manifest 所示，我们包括一个 192 x 192 像素的图标，供我们的应用使用。您可以根据需要添加更多尺寸；Android 将为每个不同的用例选择最合适的尺寸。您还可以决定添加不同类型的图标，以便设备可以使用他们能够使用的最佳图标（例如，Chrome 已经支持 WebP 格式）。</p>\n<p>请注意，每个图标对象中的 <code>type</code> 成员都指定了该图标的 MIME 类型，因此浏览器可以快速读取该图标的类型，并在不支持此类型时将其忽略并采用其他图标。</p>\n<p>在设计图标方面，您应该遵循与任何 Android 图标相同的最佳做法（请参阅 <a href=\"https://developer.android.com/guide/practices/ui_guidelines/icon_design.html\" class=\"external\" rel=\" noopener\">Android 图标设计指南</a>）。</p>"}},{"type":"prose","value":{"id":"将_html_链接到_manifest","title":"将 HTML 链接到 manifest","isH3":true,"content":"<p>要完成 manifest 的设置，您需要从应用程序主页的 HTML 中引用它：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>manifest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>manifest.webmanifest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>一旦有了 manifest 声明，支持 A2HS 的浏览器就会知道在哪里查找它。</p>"}},{"type":"prose","value":{"id":"a2hs_不提供什么？","title":"A2HS 不提供什么？","isH3":false,"content":"<p>请记住，将应用程序添加到主屏幕时，它只会使该应用程序易于访问，而不会将应用程序的资料和数据下载到您的设备上，也不会使该应用程序脱机使用或类似的操作。为了使应用离线运行，你必须使用 <a href=\"/zh-CN/docs/Web/API/Service_Worker_API\">Service Worker API</a> 来离线存储资源，如果需要，还可以使用 <a href=\"/zh-CN/docs/Web/API/Web_Storage_API\">Web Storage</a> 或 <a href=\"/zh-CN/docs/Web/API/IndexedDB_API\">IndexedDB</a> 来存储其数据。</p>\n<p>在示例应用程序中，我们仅使用了一个 service worker 来存储所有必需的文件。service worker 使用<a href=\"https://github.com/mdn/pwa-examples/blob/master/a2hs/index.js\" class=\"external\" rel=\" noopener\"><code>index.js</code></a> 文件中的最终的代码块在网站上注册。然后，我们使用 <a href=\"/zh-CN/docs/Web/API/Cache\">Cache API</a> 缓存网站的所有资产，并使用 <a href=\"https://github.com/mdn/pwa-examples/blob/master/a2hs/sw.js\" class=\"external\" rel=\" noopener\">sw.js</a> 文件中的代码从缓存而不是网络中为它们提供服务。</p>"}},{"type":"prose","value":{"id":"桌面上的_a2hs","title":"桌面上的_A2HS","isH3":false,"content":"<p>虽然 PWA 最初旨在改善移动操作系统上的用户体验，但也有人推进在桌面端安装 PWA 的进程。</p>\n<blockquote>\n  <p><strong>注意：</strong> 在撰写本文时，仅在较新版本的 Chrome 支持以下功能（在 Windows 上默认支持，在 macOS 则需开启 #enable-desktop-pwas 标志）。</p>\n</blockquote>"}},{"type":"prose","value":{"id":"添加安装按钮","title":"添加安装按钮","isH3":true,"content":"<p>为了使 PWA 可在桌面上安装，我们首先在文档中添加了一个按钮，以允许用户进行安装—桌面应用程序不会自动提供此按钮，并且需要通过用户手势来触发安装：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>add-button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Add to home screen<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>然后，我们给它一些简单的样式：</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.add-button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 1px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 1px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"用于处理安装的_javascript","title":"用于处理安装的_JavaScript","isH3":true,"content":"<p>在 <a href=\"https://github.com/mdn/pwa-examples/blob/master/a2hs/index.js\" class=\"external\" rel=\" noopener\"><code>index.js</code> 文件</a>的底部，我们添加了一些 JavaScript 代码来处理安装。首先，我们声明一个 <code>deferredPrompt</code> 变量（我们将在后面解释），获得对安装按钮的引用，并初始设置为 <code>display: none</code>：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> deferredPrompt<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> addBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.add-button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\naddBtn<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>我们最初隐藏该按钮是因为 PWA 必须满足 A2HS 标准才会安装。条件满足时，支持的浏览器将触发 <code>beforeinstallprompt</code> 事件。然后，我们可以使用以下处理程序来处理安装：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'beforeinstallprompt'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 防止 Chrome 67 及更早版本自动显示安装提示</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 稍后再触发此事件</span>\n  deferredPrompt <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 更新 UI 以提醒用户可以将 App 安装到桌面</span>\n  addBtn<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'block'</span><span class=\"token punctuation\">;</span>\n\n  addBtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 隐藏显示 A2HS 按钮的界面</span>\n    addBtn<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 显示安装提示</span>\n    deferredPrompt<span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 等待用户反馈</span>\n    deferredPrompt<span class=\"token punctuation\">.</span>userChoice<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">choiceResult</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>choiceResult<span class=\"token punctuation\">.</span>outcome <span class=\"token operator\">===</span> <span class=\"token string\">'accepted'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'User accepted the A2HS prompt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'User dismissed the A2HS prompt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        deferredPrompt <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>所以我们在这里：</p>\n<ul>\n  <li>调用 <a href=\"/zh-CN/docs/Web/API/Event/preventDefault\"><code>Event.preventDefault()</code></a> 以防止 Chrome 67 及更早版本自动调用安装提示（此行为在 Chrome 68 已更改）。</li>\n  <li>将事件对象存储在 <code>deferredPrompt</code> 变量中，以便以后可以用于执行实际安装。</li>\n  <li>将按钮设置为 <code>display: block</code>，以便它出现在 UI 中供用户点击。</li>\n  <li>设置按钮的 <code>click</code> 处理程序。</li>\n</ul>\n<p>点击处理程序包含以下步骤：</p>\n<ul>\n  <li>通过 <code>display: none</code> 再次隐藏按钮—安装应用程序后将不再需要它。</li>\n  <li>使用 <code>beforeinstallprompt</code> 事件对象（存储在 <code>deferredPrompt</code> 中）上可用的 <code>prompt()</code> 方法触发显示安装提示。</li>\n  <li>使用 <code>userChoice</code> 属性响应用户与提示的交互，该属性再次在 <code>beforeinstallprompt</code> 事件对象上可用。</li>\n  <li>将 <code>deferredPrompt</code> 设置为 null，因为不再需要它。</li>\n</ul>\n<p>于是，点击按钮后安装提示就会消失。</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/16281/chrome-desktop-a2hs-banner.png\" alt=\"应用安装提示\" loading=\"lazy\">\n</p>\n<p>如果用户选择安装，则将安装该应用程序（可作为独立的桌面应用程序使用），并且不再显示“安装”按钮（如果已经安装了该应用程序，则将不再触发 <code>onbeforeinstallprompt</code> 事件）。当您打开应用程序时，它将显示在其自己的窗口中：</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen/a2hs-installed-desktop.png\" alt=\"安装后的应用界面\" width=\"500\" height=\"296\" loading=\"lazy\">\n</p>\n<p>如果用户选择“取消”，则应用程序的状态将返回到单击按钮之前的状态。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>备注：</strong> 本部分的代码主要来自 Pete LaPage 的<a href=\"https://developers.google.com/web/fundamentals/app-install-banners/\" class=\"external\" rel=\" noopener\">应用安装横幅/添加到主屏幕</a>。</p>\n</div>"}},{"type":"prose","value":{"id":"其他","title":"其他","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-CN/docs/Web/Progressive_web_apps\">渐进式 Web 应用</a></li>\n  <li><a href=\"/zh-CN/docs/Web/API/Service_Worker_API\">Service Worker 接口</a></li>\n  <li><a href=\"/zh-CN/docs/Web/Manifest\">Web manifest 参考</a></li>\n  <li><a href=\"https://developers.google.com/web/fundamentals/app-install-banners/\" class=\"external\" rel=\" noopener\">应用安装横幅</a></li>\n</ul>"}}],"toc":[{"text":"为什么选择 A2HS？","id":"为什么选择_a2hs？"},{"text":"哪些浏览器支持 A2HS？","id":"哪些浏览器支持_a2hs？"},{"text":"如何使用？","id":"如何使用？"},{"text":"如何使应用程序支持 A2HS？","id":"如何使应用程序支持_a2hs？"},{"text":"A2HS 不提供什么？","id":"a2hs_不提供什么？"},{"text":"桌面上的_A2HS","id":"桌面上的_a2hs"},{"text":"其他","id":"其他"}],"summary":"添加到主屏幕（Add to Home Screen，简称 A2HS）是现代智能手机浏览器中的一项功能，使开发人员可以轻松便捷地将自己喜欢的 Web 应用程序（或网站）的快捷方式添加到主屏幕中，以便用户随后可以通过单击访问它。本指南说明了 A2HS 的使用方式，以及作为开发人员为使用户能利用 A2HS 所需做的事情。","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Add to Home screen","locale":"en-US","native":"English (US)"},{"title":"Ajouter à l'écran d'accueil","locale":"fr","native":"Français"},{"title":"ホーム画面に追加","locale":"ja","native":"日本語"},{"title":"Add to home screen","locale":"ko","native":"한국어"}],"source":{"folder":"zh-cn/web/progressive_web_apps/add_to_home_screen","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/progressive_web_apps/add_to_home_screen/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/Progressive_web_apps","title":"渐进式 Web 应用（PWA）"},{"uri":"/zh-CN/docs/Web/Progressive_web_apps/Add_to_home_screen","title":"添加到主屏幕"}],"pageTitle":"添加到主屏幕 - 渐进式 Web 应用（PWA） | MDN","noIndexing":false}}