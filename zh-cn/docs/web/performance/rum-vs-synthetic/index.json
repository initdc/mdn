{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Performance Monitoring: RUM vs synthetic monitoring","mdn_url":"/zh-CN/docs/Web/Performance/Rum-vs-Synthetic","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>综合监控</strong>和<strong>真实用户监控</strong> (RUM) 是两种监视和提供 Web 性能见解的方法。RUM and synthetic monitoring provide for different views of performance and have benefits, good use cases and shortfalls. RUM is generally best suited for understanding long-term trends whereas synthetic monitoring is very well suited to regression testing and mitigating shorter-term performance issues during development. In this article we define and compare these two performance monitoring approaches.</p>"}},{"type":"prose","value":{"id":"合成监控","title":"<strong>合成</strong>监控","isH3":false,"content":"<p>Synthetic monitoring involves monitoring the performance of a page in a 'laboratory' environment, typically with automation tooling in a consistent as possible environment. Synthetic Monitoring involves deploying scripts to simulate the path an end user might take through a web application, reporting back the performance the simulator experiences. The traffic measured is not of your actual users, but rather synthetically generated traffic collecting data on page performance.</p>\n<p>An example of synthetic monitoring is <a href=\"https://WebPageTest.org\" class=\"external\" rel=\" noopener\">WebPageTest.org</a>. It is done in a controlled environment where variable like geography, network, device, browser, and cached status are predetermined. It provides waterfall charts for every asset served by the host and <a href=\"/zh-CN/docs/Glossary/CDN\">CDN</a> as well as every third party asset and asset requests generated by all third party scripts, such as ads and analytic services.</p>\n<p>Controlling for environmental variables is helpful in understanding where performance bottlenecks have been occurring and identifying the source of any performance issues. For example, but it isn't reflective of the actual experience of users, especially the long tail.</p>\n<p>Synthetic monitoring can be an important component of regression testing and production site monitoring. Test the site at every stage of development and regularly in production. Changes from baseline performance as part of continuous integration should fail a push. If an issue arises in production, synthetic monitoring can provide insight, helping identify, isolate, and resolve problems before they negatively user experience.</p>","titleAsText":"合成监控"}},{"type":"prose","value":{"id":"真实用户监控","title":"真实用户监控","isH3":false,"content":"<p><strong>Real User Monitoring</strong> or RUM measures the performance of a page from real users' machines. Generally, a third party script injects a script on each page to measure and report back on page load data for every request made. This technique monitors an application’s actual user interactions. In real user monitoring, the browsers of real users report back performance metrics experienced. RUM helps identify how an application is being used, including the geographic distribution of users and the impact of that distribution on the end user experience.</p>\n<p>Unlike Synthetic monitoring, RUM captures the performance of actual users regardless of device, browser, network or geographic location. As users interact with an application, all performance timings are captured, regardless of what actions are taken or pages viewed. RUM monitors actual use cases, not the synthetic, assumed use cases predefined by an engineer, PM, or marketing team. This is particularly important for large sites or complex apps, where the functionality or content is constantly changing, and where the population accessing the application may differ greatly in life experiences from those creating it.</p>\n<p>By leveraging RUM, a business can better understand its users and identify the areas on its site that require the most attention. Moreover, RUM can help to understand the geographic or channel distribution trends of your users. Knowing your user trends helps you better define your business plan and, from a monitoring perspective, allows you to identify key areas to target for optimization and performance improvements.</p>"}},{"type":"prose","value":{"id":"rum_vs_synthetic","title":"RUM vs Synthetic","isH3":false,"content":"<p>Synthetic is well suited for catching regressions during development life cycles, especially with <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Network_throttling\">network throttling <small>(en-US)</small></a>. It is fairly easy, inexpensive, and great for spot-checking performance during development as an effective way to measure the effect of code changes, but it doesn’t reflect what real users are experiencing and provides only a narrow view of performance.</p>\n<p>RUM, on the other hand, provides real metrics from real users using the site or application. While this is more expensive and likely less convenient, it provides vital user experience data.</p>"}},{"type":"prose","value":{"id":"性能_apis","title":"性能 APIs","isH3":false,"content":"<p>There are many monitoring services. If you do want to roll your own monitoring system, take a look at the performance APIs, mainly <a href=\"/zh-CN/docs/Web/API/PerformanceNavigationTiming\"><code>PerformanceNavigationTiming</code></a> and <a href=\"/zh-CN/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a>, but also <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PerformanceMark\"><code>PerformanceMark</code> <small>(en-US)</small></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PerformanceMeasure\"><code>PerformanceMeasure</code> <small>(en-US)</small></a>, and <a href=\"/zh-CN/docs/Web/API/PerformancePaintTiming\"><code>PerformancePaintTiming</code></a>.</p>"}}],"toc":[{"text":"<strong>合成</strong>监控","id":"合成监控"},{"text":"真实用户监控","id":"真实用户监控"},{"text":"RUM vs Synthetic","id":"rum_vs_synthetic"},{"text":"性能 APIs","id":"性能_apis"}],"summary":"综合监控和真实用户监控 (RUM) 是两种监视和提供 Web 性能见解的方法。RUM and synthetic monitoring provide for different views of performance and have benefits, good use cases and shortfalls. RUM is generally best suited for understanding long-term trends whereas synthetic monitoring is very well suited to regression testing and mitigating shorter-term performance issues during development. In this article we define and compare these two performance monitoring approaches.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Performance Monitoring: RUM vs synthetic monitoring","locale":"en-US","native":"English (US)"},{"title":"Мониторинг производительности: реальные пользователи и их эмуляция","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/web/performance/rum-vs-synthetic","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/web/performance/rum-vs-synthetic/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Web","title":"Web 开发技术"},{"uri":"/zh-CN/docs/Web/Performance","title":"Web 性能"},{"uri":"/zh-CN/docs/Web/Performance/Rum-vs-Synthetic","title":"Performance Monitoring: RUM vs synthetic monitoring"}],"pageTitle":"Performance Monitoring: RUM vs synthetic monitoring - Web 性能 | MDN","noIndexing":false}}