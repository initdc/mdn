{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"3D 碰撞检测","mdn_url":"/zh-CN/docs/Games/Techniques/3D_collision_detection","locale":"zh-CN","native":"中文 (简体)","hasMathML":true,"sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introduction</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Introduction\">Introduction</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Anatomy\">Anatomy</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>APIs for game development</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/zh-CN/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/zh-CN/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/zh-CN/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Techniques</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Async_scripts\">Using async scripts for asm.js</a></li>\n              <li><a href=\"/zh-CN/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimizing startup performance</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/WebRTC_data_channels\">Using WebRTC peer-to-peer data channels</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Efficient_animation_for_web_games\">Efficient animation for web games</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Audio_for_Web_Games\">Audio for Web Games</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/2D_collision_detection\">2D collision detection</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Tilemaps\">Tiles and tilemaps overview</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>3D games on the Web</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web\">3D games on the Web overview</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Explaining basic 3D theory</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Building up a basic demo with PlayCanvas</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Building up a basic demo with Three.js</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_collision_detection\">3D collision detection</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Bounding volume collision detection with THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutorials</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">2D breakout game using pure JavaScript</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Tutorials/2D_breakout_game_Phaser\">2D breakout game using Phaser</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">2D maze_game with device orientation</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publishing games</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games\">Publishing games overview</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games/Game_distribution\">Game distribution</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games/Game_promotion\">Game promotion</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games/Game_monetization\">Game monetization</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>本文介绍了用于在 3D 环境中实现不同边界体积碰撞检测的技术。后续文章将讨论特定 3D 库中的实现。</p>"}},{"type":"prose","value":{"id":"axis-aligned_bounding_boxes（aabb_包围盒）","title":"Axis-aligned bounding boxes（<strong>AABB 包围盒</strong>）","isH3":false,"content":"<p>在游戏中，为了简化物体之间的碰撞检测运算，通常会对物体创建一个规则的几何外形将其包围。其中，AABB（axis-aligned bounding box）包围盒被称为轴对齐包围盒。</p>\n<p>与 2D 碰撞检测一样，轴对齐包围盒是判断两个物体是否重叠的最快算法，物体被包裹在一个非旋转的（因此轴对齐的）盒中，并检查这些盒在三维坐标空间中的位置，以确定它们是否重叠。</p>\n<p>\n  <img src=\"/en-US/docs/Games/Techniques/3D_collision_detection/screen_shot_2015-10-16_at_15.11.21.png\" alt=\"\" width=\"432\" height=\"275\" loading=\"lazy\">\n</p>\n<p>由于性能原因，轴对齐是有一些约束的。两个非旋转的盒子之间是否重叠可以通过逻辑比较进行检查，而旋转的盒子则需要三角运算，这会导致性能下降。如果你有旋转的物体，可以通过修改边框的尺寸，这样盒子仍可以包裹物体，或者选择使用另一种边界几何类型，比如球体 (球体旋转，形状不会变)。下图是一个 AABB 物体旋转，动态调节盒大小适应物体的例子。</p>\n<p>\n  <img src=\"/en-US/docs/Games/Techniques/3D_collision_detection/rotating_knot.gif\" alt=\"\" width=\"207\" height=\"192\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>备注：</strong> 参考<a href=\"/en-US/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">这里 (en-US)</a>，使用 Three.js 进行边界体积碰撞检测。</p>\n</div>","titleAsText":"Axis-aligned bounding boxes（AABB 包围盒）"}},{"type":"prose","value":{"id":"点与_aabb","title":"点与 AABB","isH3":true,"content":"<p>如果检测到一个点是否在 AABB 内部就非常简单了 — 我们只需要检查这个点的坐标是否在 AABB 内; 分别考虑到每种坐标轴。如果假设 <em>P<sub>x</sub></em>, <em>P<sub>y</sub> 和</em> <em>P<sub>z</sub></em> 是点的坐标，<em>B<sub>minX</sub></em>–<em>B<sub>maxX</sub></em>, <em>B<sub>minY</sub></em>–<em>B<sub>maxY</sub></em>, 和 <em>B<sub>minZ</sub></em>–<em>B<sub>maxZ</sub></em> 是 AABB 的每一个坐标轴的范围，我们可以使用以下公式计算两者之间的碰撞是否发生：</p>\n<p>\n  <math>\n    <semantics>\n      <mrow>\n        <mi>f</mi>\n        <mo stretchy=\"false\">(</mo>\n        <mi>P</mi>\n        <mo>,</mo>\n        <mi>B</mi>\n        <mo stretchy=\"false\">)</mo>\n        <mo>=</mo>\n        <mo stretchy=\"false\">(</mo>\n        <msub>\n          <mi>P</mi>\n          <mi>x</mi>\n        </msub>\n        <mo>&gt;=</mo>\n        <msub>\n          <mi>B</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>i</mi>\n            <mi>n</mi>\n            <mi>X</mi>\n          </mrow>\n        </msub>\n        <mo>∧</mo>\n        <msub>\n          <mi>P</mi>\n          <mi>x</mi>\n        </msub>\n        <mo>&lt;=</mo>\n        <msub>\n          <mi>B</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>a</mi>\n            <mi>x</mi>\n            <mi>X</mi>\n          </mrow>\n        </msub>\n        <mo stretchy=\"false\">)</mo>\n        <mo>∧</mo>\n        <mo stretchy=\"false\">(</mo>\n        <msub>\n          <mi>P</mi>\n          <mi>y</mi>\n        </msub>\n        <mo>&gt;=</mo>\n        <msub>\n          <mi>B</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>i</mi>\n            <mi>n</mi>\n            <mi>Y</mi>\n          </mrow>\n        </msub>\n        <mo>∧</mo>\n        <msub>\n          <mi>P</mi>\n          <mi>y</mi>\n        </msub>\n        <mo>&lt;=</mo>\n        <msub>\n          <mi>B</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>a</mi>\n            <mi>x</mi>\n            <mi>Y</mi>\n          </mrow>\n        </msub>\n        <mo stretchy=\"false\">)</mo>\n        <mo>∧</mo>\n        <mo stretchy=\"false\">(</mo>\n        <msub>\n          <mi>P</mi>\n          <mi>z</mi>\n        </msub>\n        <mo>&gt;=</mo>\n        <msub>\n          <mi>B</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>i</mi>\n            <mi>n</mi>\n            <mi>Z</mi>\n          </mrow>\n        </msub>\n        <mo>∧</mo>\n        <msub>\n          <mi>P</mi>\n          <mi>z</mi>\n        </msub>\n        <mo>&lt;=</mo>\n        <msub>\n          <mi>B</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>a</mi>\n            <mi>x</mi>\n            <mi>Z</mi>\n          </mrow>\n        </msub>\n        <mo stretchy=\"false\">)</mo>\n      </mrow>\n      <annotation encoding=\"TeX\">f(P,B)= (P</annotation></semantics></math><em>x &gt;= B</em>{minX} \\wedge P<em>x &lt;= B</em>{maxX}) \\wedge (P<em>y &gt;= B</em>{minY} \\wedge P<em>y &lt;= B</em>{maxY}) \\wedge (P<em>z &gt;= B</em>{minZ} \\wedge P<em>z &lt;= B</em>{maxZ})\n    \n  \n</p>\n<p>或者用 JavaScript:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">isPointInsideAABB</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">point<span class=\"token punctuation\">,</span> box</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&gt;=</span> box<span class=\"token punctuation\">.</span>minX <span class=\"token operator\">&amp;&amp;</span> point<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;=</span> box<span class=\"token punctuation\">.</span>maxX<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n         <span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&gt;=</span> box<span class=\"token punctuation\">.</span>minY <span class=\"token operator\">&amp;&amp;</span> point<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&lt;=</span> box<span class=\"token punctuation\">.</span>maxY<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n         <span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>z <span class=\"token operator\">&gt;=</span> box<span class=\"token punctuation\">.</span>minY <span class=\"token operator\">&amp;&amp;</span> point<span class=\"token punctuation\">.</span>z <span class=\"token operator\">&lt;=</span> box<span class=\"token punctuation\">.</span>maxZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"aabb_与_aabb","title":"AABB 与 AABB","isH3":true,"content":"<p>检查一个 AABB 是否和另一个 AABB 相交类似于检测两个点一样。我们只需要基于每一条坐标轴并利用盒子的边缘去检测。下图显示了我们基于 X 轴的检测 — 当然，<em>A<sub>minX</sub></em>–<em>A<sub>maxX</sub></em> 和 <em>B<sub>minX</sub></em>–<em>B<sub>maxX</sub></em> 会不会重叠？</p>\n<p>\n  <img src=\"/en-US/docs/Games/Techniques/3D_collision_detection/aabb_test.png\" alt=\"updated version\" width=\"461\" height=\"346\" loading=\"lazy\">\n</p>\n<p>在数学上的表示就像这样：</p>\n<p>\n  <math>\n    <semantics>\n      <mrow>\n        <mi>f</mi>\n        <mo stretchy=\"false\">(</mo>\n        <mi>A</mi>\n        <mo>,</mo>\n        <mi>B</mi>\n        <mo stretchy=\"false\">)</mo>\n        <mo>=</mo>\n        <mo stretchy=\"false\">(</mo>\n        <msub>\n          <mi>A</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>i</mi>\n            <mi>n</mi>\n            <mi>X</mi>\n          </mrow>\n        </msub>\n        <mo>&lt;=</mo>\n        <msub>\n          <mi>B</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>a</mi>\n            <mi>x</mi>\n            <mi>X</mi>\n          </mrow>\n        </msub>\n        <mo>∧</mo>\n        <msub>\n          <mi>A</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>a</mi>\n            <mi>x</mi>\n            <mi>X</mi>\n          </mrow>\n        </msub>\n        <mo>&gt;=</mo>\n        <msub>\n          <mi>B</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>i</mi>\n            <mi>n</mi>\n            <mi>X</mi>\n          </mrow>\n        </msub>\n        <mo stretchy=\"false\">)</mo>\n        <mo>∧</mo>\n        <mo stretchy=\"false\">(</mo>\n        <msub>\n          <mi>A</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>i</mi>\n            <mi>n</mi>\n            <mi>Y</mi>\n          </mrow>\n        </msub>\n        <mo>&lt;=</mo>\n        <msub>\n          <mi>B</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>a</mi>\n            <mi>x</mi>\n            <mi>Y</mi>\n          </mrow>\n        </msub>\n        <mo>∧</mo>\n        <msub>\n          <mi>A</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>a</mi>\n            <mi>x</mi>\n            <mi>Y</mi>\n          </mrow>\n        </msub>\n        <mo>&gt;=</mo>\n        <msub>\n          <mi>B</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>i</mi>\n            <mi>n</mi>\n            <mi>Y</mi>\n          </mrow>\n        </msub>\n        <mo stretchy=\"false\">)</mo>\n        <mo>∧</mo>\n        <mo stretchy=\"false\">(</mo>\n        <msub>\n          <mi>A</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>i</mi>\n            <mi>n</mi>\n            <mi>Z</mi>\n          </mrow>\n        </msub>\n        <mo>&lt;=</mo>\n        <msub>\n          <mi>B</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>a</mi>\n            <mi>x</mi>\n            <mi>Z</mi>\n          </mrow>\n        </msub>\n        <mo>∧</mo>\n        <msub>\n          <mi>A</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>a</mi>\n            <mi>x</mi>\n            <mi>Z</mi>\n          </mrow>\n        </msub>\n        <mo>&gt;=</mo>\n        <msub>\n          <mi>B</mi>\n          <mrow>\n            <mi>m</mi>\n            <mi>i</mi>\n            <mi>n</mi>\n            <mi>Z</mi>\n          </mrow>\n        </msub>\n        <mo stretchy=\"false\">)</mo>\n      </mrow>\n      <annotation encoding=\"TeX\">f(A,B) =</annotation>\n    </semantics>\n  </math>\n</p>\n<p>在 JavaScript 我们可以这样：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">intersect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>minX <span class=\"token operator\">&lt;=</span> b<span class=\"token punctuation\">.</span>maxX <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">.</span>maxX <span class=\"token operator\">&gt;=</span> b<span class=\"token punctuation\">.</span>minX<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n         <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>minY <span class=\"token operator\">&lt;=</span> b<span class=\"token punctuation\">.</span>maxY <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">.</span>maxY <span class=\"token operator\">&gt;=</span> b<span class=\"token punctuation\">.</span>minY<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n         <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>minZ <span class=\"token operator\">&lt;=</span> b<span class=\"token punctuation\">.</span>maxZ <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">.</span>maxZ <span class=\"token operator\">&gt;=</span> b<span class=\"token punctuation\">.</span>minZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"球体碰撞","title":"球体碰撞","isH3":false,"content":"<p>球体碰撞边缘检测比 AABB 盒子稍微复杂一点，但他的检测仍相当容易的。球体的主要优势是他们不变的旋转，如果包装实体旋转，边界领域仍将是相同的。他们的主要缺点是，除非他们包装的实体实际上是球形，包装的实体通常不是一个完美的球形 (比如用这样的球形包装一个人将导致一些错误，而 AABB 盒子将更合适)。</p>"}},{"type":"prose","value":{"id":"点与球","title":"点与球","isH3":true,"content":"<p>检查是否一个球体包含一个点，我们需要计算点和球体的中心之间的距离。如果这个距离小于或等于球的半径，这个点就在里面。</p>\n<p>\n  <img src=\"/en-US/docs/Games/Techniques/3D_collision_detection/point_vs_sphere.png\" alt=\"\" width=\"385\" height=\"262\" loading=\"lazy\">\n</p>\n<p>两个点 A 和 B 之间的欧氏距离是 \n  <math>\n    <semantics>\n      <msqrt>\n        <mrow>\n          <mo stretchy=\"false\">(</mo>\n          <msub>\n            <mi>A</mi>\n            <mi>x</mi>\n          </msub>\n          <mo>-</mo>\n          <msub>\n            <mi>B</mi>\n            <mi>x</mi>\n          </msub>\n          <msup>\n            <mo stretchy=\"false\">)</mo>\n            <mn>2</mn>\n          </msup>\n          <mo stretchy=\"false\">)</mo>\n          <mo>+</mo>\n          <mo stretchy=\"false\">(</mo>\n          <msub>\n            <mi>A</mi>\n            <mi>y</mi>\n          </msub>\n          <mo>-</mo>\n          <msub>\n            <mi>B</mi>\n            <mi>y</mi>\n          </msub>\n          <msup>\n            <mo stretchy=\"false\">)</mo>\n            <mn>2</mn>\n          </msup>\n          <mo>+</mo>\n          <mo stretchy=\"false\">(</mo>\n          <msub>\n            <mi>A</mi>\n            <mi>z</mi>\n          </msub>\n          <mo>-</mo>\n          <msub>\n            <mi>B</mi>\n            <mi>z</mi>\n          </msub>\n          <mo stretchy=\"false\">)</mo>\n        </mrow>\n      </msqrt>\n      <annotation encoding=\"TeX\">\\sqrt{(A_x - B_x) ^ 2) + (A_y - B_y)^2 + (A_z - B_z)}</annotation>\n    </semantics>\n  </math> ,我们的公式指出，球体碰撞检测是：\n</p>\n<p>\n  <math>\n    <semantics>\n      <mrow>\n        <mi>f</mi>\n        <mo stretchy=\"false\">(</mo>\n        <mi>P</mi>\n        <mo>,</mo>\n        <mi>S</mi>\n        <mo stretchy=\"false\">)</mo>\n        <mo>=</mo>\n        <msub>\n          <mi>S</mi>\n          <mrow>\n            <mi>r</mi>\n            <mi>a</mi>\n            <mi>d</mi>\n            <mi>i</mi>\n            <mi>u</mi>\n            <mi>s</mi>\n          </mrow>\n        </msub>\n        <mo>&gt;=</mo>\n        <msqrt>\n          <mrow>\n            <mo stretchy=\"false\">(</mo>\n            <msub>\n              <mi>P</mi>\n              <mi>x</mi>\n            </msub>\n            <mo>-</mo>\n            <msub>\n              <mi>S</mi>\n              <mi>x</mi>\n            </msub>\n            <msup>\n              <mo stretchy=\"false\">)</mo>\n              <mn>2</mn>\n            </msup>\n            <mo>+</mo>\n            <mo stretchy=\"false\">(</mo>\n            <msub>\n              <mi>P</mi>\n              <mi>y</mi>\n            </msub>\n            <mo>-</mo>\n            <msub>\n              <mi>S</mi>\n              <mi>y</mi>\n            </msub>\n            <msup>\n              <mo stretchy=\"false\">)</mo>\n              <mn>2</mn>\n            </msup>\n            <mo>+</mo>\n            <mo stretchy=\"false\">(</mo>\n            <msub>\n              <mi>P</mi>\n              <mi>z</mi>\n            </msub>\n            <mo>-</mo>\n            <msub>\n              <mi>S</mi>\n              <mi>z</mi>\n            </msub>\n            <msup>\n              <mo stretchy=\"false\">)</mo>\n              <mn>2</mn>\n            </msup>\n          </mrow>\n        </msqrt>\n      </mrow>\n      <annotation encoding=\"TeX\">f(P,S) = S_{radius} &gt;= \\sqrt{(P_x - S_x)^2 + (P_y - S_y)^2 + (P_z - S_z)^2}</annotation>\n    </semantics>\n  </math>\n</p>\n<p>或者用 JavaScript:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">isPointInsideSphere</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">point<span class=\"token punctuation\">,</span> sphere</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// we are using multiplications because is faster than calling Math.pow</span>\n  <span class=\"token keyword\">var</span> distance <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> sphere<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> sphere<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n                           <span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> sphere<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> sphere<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n                           <span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>z <span class=\"token operator\">-</span> sphere<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>z <span class=\"token operator\">-</span> sphere<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> distance <span class=\"token operator\">&lt;</span> sphere<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>备注：</strong> 上面的代码有一个平方根，是一个开销昂贵的计算。一个简单的优化，以避免它由半径平方，所以优化方程不涉及<code>distance &lt; sphere.radius * sphere.radius</code>.</p>\n</div>"}},{"type":"prose","value":{"id":"球体与球体","title":"球体与球体","isH3":true,"content":"<p>球体与球体的距离类似于点和球体。我们需要测试是球体的中心之间的距离小于或等于半径的总和。</p>\n<p>\n  <img src=\"/en-US/docs/Games/Techniques/3D_collision_detection/sphere_vs_sphere.png\" alt=\"\" width=\"414\" height=\"262\" loading=\"lazy\">\n</p>\n<p>在数学上，像这样：</p>\n<p>\n  <math>\n    <semantics>\n      <mrow>\n        <mi>f</mi>\n        <mo stretchy=\"false\">(</mo>\n        <mi>A</mi>\n        <mo>,</mo>\n        <mi>B</mi>\n        <mo stretchy=\"false\">)</mo>\n        <mo>=</mo>\n        <msqrt>\n          <mrow>\n            <mo stretchy=\"false\">(</mo>\n            <msub>\n              <mi>A</mi>\n              <mi>x</mi>\n            </msub>\n            <mo>-</mo>\n            <msub>\n              <mi>B</mi>\n              <mi>x</mi>\n            </msub>\n            <msup>\n              <mo stretchy=\"false\">)</mo>\n              <mn>2</mn>\n            </msup>\n            <mo>+</mo>\n            <mo stretchy=\"false\">(</mo>\n            <msub>\n              <mi>A</mi>\n              <mi>y</mi>\n            </msub>\n            <mo>-</mo>\n            <msub>\n              <mi>B</mi>\n              <mi>y</mi>\n            </msub>\n            <msup>\n              <mo stretchy=\"false\">)</mo>\n              <mn>2</mn>\n            </msup>\n            <mo>+</mo>\n            <mo stretchy=\"false\">(</mo>\n            <msub>\n              <mi>A</mi>\n              <mi>z</mi>\n            </msub>\n            <mo>-</mo>\n            <msub>\n              <mi>B</mi>\n              <mi>z</mi>\n            </msub>\n            <msup>\n              <mo stretchy=\"false\">)</mo>\n              <mn>2</mn>\n            </msup>\n          </mrow>\n        </msqrt>\n        <mo>&lt;=</mo>\n        <msub>\n          <mi>A</mi>\n          <mrow>\n            <mi>r</mi>\n            <mi>a</mi>\n            <mi>d</mi>\n            <mi>i</mi>\n            <mi>u</mi>\n            <mi>s</mi>\n          </mrow>\n        </msub>\n        <mo>+</mo>\n        <msub>\n          <mi>B</mi>\n          <mrow>\n            <mi>r</mi>\n            <mi>a</mi>\n            <mi>d</mi>\n            <mi>i</mi>\n            <mi>u</mi>\n            <mi>s</mi>\n          </mrow>\n        </msub>\n      </mrow>\n      <annotation encoding=\"TeX\">f(A,B) = \\sqrt{(A</annotation></semantics></math><em>x - B_x)^2 + (A_y - B_y)^2 + (A_z - B_z)^2} &lt;= A</em>{radius} + B_{radius}\n    \n  \n</p>\n<p>或者 JavaScript:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">intersect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sphere<span class=\"token punctuation\">,</span> other</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// we are using multiplications because it's faster than calling Math.pow</span>\n  <span class=\"token keyword\">var</span> distance <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> other<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> other<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n                           <span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> other<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> other<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n                           <span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">.</span>z <span class=\"token operator\">-</span> other<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">.</span>z <span class=\"token operator\">-</span> other<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> distance <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">+</span> other<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"球体与_aabb","title":"球体与 AABB","isH3":true,"content":"<p>测试一个球和一个 AABB 的碰撞是稍微复杂，但过程仍然简单和快速。一个合乎逻辑的方法是，检查 AABB 每个顶点，计算每一个点与球的距离。然而这是大材小用了，测试所有的顶点都是不必要的，因为我们可以侥幸计算 AABB 最近的点 (不一定是一个顶点) 和球体的中心之间的距离，看看它是小于或等于球体的半径。我们可以通过逼近球体的中心和 AABB 的距离得到这个值。</p>\n<p>\n  <img src=\"/en-US/docs/Games/Techniques/3D_collision_detection/sphere_vs_aabb.png\" alt=\"\" width=\"377\" height=\"282\" loading=\"lazy\">\n</p>\n<p>在 JavaScript, 我们可以像这样子做：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">intersect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sphere<span class=\"token punctuation\">,</span> box</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// get box closest point to sphere center by clamping</span>\n  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">.</span>minX<span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">.</span>maxX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">.</span>minY<span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">.</span>maxY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> z <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">.</span>minZ<span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">.</span>maxZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// this is the same as isPointInsideSphere</span>\n  <span class=\"token keyword\">var</span> distance <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> sphere<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> sphere<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n                           <span class=\"token punctuation\">(</span>y <span class=\"token operator\">-</span> sphere<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">-</span> sphere<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n                           <span class=\"token punctuation\">(</span>z <span class=\"token operator\">-</span> sphere<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>z <span class=\"token operator\">-</span> sphere<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> distance <span class=\"token operator\">&lt;</span> sphere<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"使用一个物理引擎","title":"使用一个物理引擎","isH3":false,"content":"<p><strong>3D physics engines</strong> provide collision detection algorithms, most of them based on bounding volumes as well. The way a physics engine works is by creating a <strong>physical body</strong>, usually attached to a visual representation of it. This body has properties such as velocity, position, rotation, torque, etc., and also a <strong>physical shape</strong>. This shape is the one that is considered in the collision detection calculations.</p>\n<p>We have prepared a <a href=\"http://mozdevs.github.io/gamedev-js-3d-aabb/physics.html\" class=\"external\" rel=\" noopener\">live collision detection demo</a> (with <a href=\"https://github.com/mozdevs/gamedev-js-3d-aabb\" class=\"external\" rel=\" noopener\">source code</a>) that you can take a look at to see such techniques in action — this uses the open-source 3D physics engine <a href=\"https://github.com/schteppe/cannon.js\" class=\"external\" rel=\" noopener\">cannon.js</a>.</p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<p>Related articles on MDN:</p>\n<ul>\n  <li><a href=\"/en-US/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Bounding volumes collision detection with Three.js (en-US)</a></li>\n  <li><a href=\"/zh-CN/docs/Games/Techniques/2D_collision_detection\">2D collision detection</a></li>\n</ul>\n<p>External resources:</p>\n<ul>\n  <li><a href=\"http://www.gamasutra.com/view/feature/3383/simple_intersection_tests_for_games.php\" class=\"external\" rel=\" noopener\">Simple intersection tests for games</a> on Gamasutra</li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Bounding_volume\" class=\"external\" rel=\" noopener\">Bounding volume</a> on Wikipedia</li>\n</ul>"}}],"toc":[{"text":"Axis-aligned bounding boxes（<strong>AABB 包围盒</strong>）","id":"axis-aligned_bounding_boxes（aabb_包围盒）"},{"text":"球体碰撞","id":"球体碰撞"},{"text":"使用一个物理引擎","id":"使用一个物理引擎"},{"text":"See also","id":"see_also"}],"summary":"本文介绍了用于在 3D 环境中实现不同边界体积碰撞检测的技术。后续文章将讨论特定 3D 库中的实现。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"3D collision detection","locale":"en-US","native":"English (US)"},{"title":"三次元の衝突検出","locale":"ja","native":"日本語"}],"source":{"folder":"zh-cn/games/techniques/3d_collision_detection","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/games/techniques/3d_collision_detection/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Games","title":"游戏开发环境"},{"uri":"/zh-CN/docs/Games/Techniques","title":"Techniques for game development"},{"uri":"/zh-CN/docs/Games/Techniques/3D_collision_detection","title":"3D 碰撞检测"}],"pageTitle":"3D 碰撞检测 - 游戏开发环境 | MDN","noIndexing":false}}