{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Player paddle and controls","mdn_url":"/zh-CN/docs/Games/Tutorials/2D_breakout_game_Phaser/Player_paddle_and_controls","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introduction</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Introduction\">Introduction</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Anatomy\">Anatomy</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>APIs for game development</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/zh-CN/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/zh-CN/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/zh-CN/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Techniques</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Async_scripts\">Using async scripts for asm.js</a></li>\n              <li><a href=\"/zh-CN/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimizing startup performance</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/WebRTC_data_channels\">Using WebRTC peer-to-peer data channels</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Efficient_animation_for_web_games\">Efficient animation for web games</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Audio_for_Web_Games\">Audio for Web Games</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/2D_collision_detection\">2D collision detection</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Tilemaps\">Tiles and tilemaps overview</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>3D games on the Web</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web\">3D games on the Web overview</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Explaining basic 3D theory</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Building up a basic demo with PlayCanvas</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Building up a basic demo with Three.js</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_collision_detection\">3D collision detection</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Bounding volume collision detection with THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutorials</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">2D breakout game using pure JavaScript</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Tutorials/2D_breakout_game_Phaser\">2D breakout game using Phaser</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">2D maze_game with device orientation</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publishing games</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games\">Publishing games overview</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games/Game_distribution\">Game distribution</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games/Game_promotion\">Game promotion</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games/Game_monetization\">Game monetization</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Bounce_off_the_walls\" title=\"Currently only available in English (US)\">« 上一页 (en-US)</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Game_over\" title=\"Currently only available in English (US)\">下一页  » (en-US)</a></li>\n</ul>\n<p>这是<a href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Gamedev Phaser 教程 (en-US)</a> 16 的<strong>第 7 步</strong>。您可以在<a href=\"https://github.com/end3r/Gamedev-Phaser-Content-Kit/blob/gh-pages/demos/lesson07.html\" class=\"external\" rel=\" noopener\">Gamedev-Phaser-Content-Kit / demos / lesson07.html</a>完成本课程后找到源代码。</p>\n<p>我们有球从墙上移动并弹跳，但它很快变得无聊 - 没有互动！我们需要一种介绍游戏的方法，所以在这篇文章中，我们将创建一个桨来移动并击中球。</p>"}},{"type":"prose","value":{"id":"渲染桨","title":"渲染桨","isH3":false,"content":"<p>从框架的角度看，桨非常类似于球 - 我们需要添加一个变量来表示它，加载相关的图像资源，然后做出魔法。</p>"}},{"type":"prose","value":{"id":"装载桨","title":"装载桨","isH3":true,"content":"<p>首先，添加<code>paddle</code>我们将在我们的游戏中使用的<code>ball</code>变量，就在变量之后：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> paddle<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>然后，在该<code>preload</code>功能中，<code>paddle</code>通过添加以下新<code>load.image()</code>调用来加载图像：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">preload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    game<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ball'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'img/ball.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    game<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span><span class=\"token string\">'paddle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'img/paddle.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"添加桨图形","title":"添加桨图形","isH3":true,"content":"<p>所以我们不要忘记，在这一点上，你应该从 Github 抓住这个<a href=\"https://github.com/end3r/Gamedev-Phaser-Content-Kit/blob/gh-pages/demos/img/paddle.png\" class=\"external\" rel=\" noopener\">图形</a>，并保存在你的<code>/img</code>文件夹中。</p>"}},{"type":"prose","value":{"id":"渲染桨用物理引擎","title":"渲染桨用物理引擎","isH3":true,"content":"<p>接下来，我们将通过<code>add.sprite()</code>在<code>create()</code>函数中添加以下调用来初始化我们的桨，将其添加到底部：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>paddle <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">sprite</span><span class=\"token punctuation\">(</span>game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'paddle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>我们可以使用<code>world.width</code>和<code>world.height</code>值来将桨定位到我们想要的位置：<code>game.world.width*0.5</code>将在屏幕中间。在我们这个例子中，世界和画布是一样的，但是对于其他类型的游戏，例如侧滚滚，这个世界会变大，你可以修改它来创造有趣的效果。</p>\n<p>你会注意到，如果你<code>index.html</code>在这一点上重新加载，那么桨是目前不完全在中间的。为什么？因为计算位置的锚总是从对象的左上角开始。我们可以改变它，使锚在桨的宽度的中间和它的高度的底部，所以更容易将其定位在底部边缘。添加以下新行以下的行：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>paddle<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>桨现在位于我们想要的地方。现在，为了使它与球碰撞，我们必须为桨提供物理效果。继续添加以下新行，再次在<code>create()</code>函数的底部：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span>paddle<span class=\"token punctuation\">,</span> Phaser<span class=\"token punctuation\">.</span>Physics<span class=\"token punctuation\">.</span><span class=\"token constant\">ARCADE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>现在，魔法可以开始发生 - 该框架可以在每个框架上检查碰撞检测。要启用桨和球之间的碰撞检测，请将<code>collide()</code>方法添加到如下<code>update()</code>功能中：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>arcade<span class=\"token punctuation\">.</span><span class=\"token function\">collide</span><span class=\"token punctuation\">(</span>ball<span class=\"token punctuation\">,</span> paddle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>第一个参数是我们感兴趣的对象之一 - 球 - 第二个是另一个，桨。这有效，但不如我们预期的那样 - 当球击中桨时，桨从屏幕上掉下来！我们想要的就是球从跳板上跳起来，而桨子停在同一个地方。我们可以将<code>body</code>桨设置成<code>immovable</code>球，所以当球击中它时不会移动。为此，请在<code>create()</code>函数底部添加以下行：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>paddle<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>immovable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>现在它按预期工作。</p>"}},{"type":"prose","value":{"id":"控制桨","title":"控制桨","isH3":false,"content":"<p>接下来的问题是我们不能移动桨。要做到这一点，我们可以使用系统的默认输入（鼠标或触摸，取决于平台），并将桨位置设置到位置的<code>input</code>位置。将以下新行添加到<code>update()</code>函数中，如下所示：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>arcade<span class=\"token punctuation\">.</span><span class=\"token function\">collide</span><span class=\"token punctuation\">(</span>ball<span class=\"token punctuation\">,</span> paddle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    paddle<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>现在在每个新的一帧上，桨的<code>x</code>位置将根据输入的<code>x</code>位置进行调整，但是当我们开始游戏时，桨的位置不在中间。这是因为输入位置尚未定义。要修复，我们可以将默认位置（如果输入位置尚未定义）设置为屏幕中间。更新上一行如下：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>paddle<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>x <span class=\"token operator\">||</span> game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>如果您还没有这样做，请重新加载<code>index.html</code>并尝试！</p>"}},{"type":"prose","value":{"id":"定位球","title":"定位球","isH3":false,"content":"<p>我们有桨按预期工作，所以我们把球放在上面。它非常类似于定位桨 - 我们需要将其放置在屏幕中间水平和垂直的底部，与底部有一点偏移。要按照我们想要的方式放置它，我们将把锚定位到球的正中间。找到现有的行，并将其替换为以下两行：<code>ball = game.add.sprite( ... )</code></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ball <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">sprite</span><span class=\"token punctuation\">(</span>game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ball'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nball<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>速度保持不变 - 我们只是将第二个参数的值从 150 改为 -150，所以球将通过向上移动而不是下降来开始游戏。查找现有<code>ball.body.velocity.set( ... )</code>行并将其更新为以下内容：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ball<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>现在球将从桨的中间开始。</p>"}},{"type":"prose","value":{"id":"比较你的代码","title":"比较你的代码","isH3":false,"content":"<p>您可以在下面的现场演示中查看本课程的完成代码，并使用它来更好地了解它的工作原理：</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"400\" src=\"https://jsfiddle.net/end3r/ogqza0ye/embedded/\" loading=\"lazy\"></iframe></p>"}},{"type":"prose","value":{"id":"下一步","title":"下一步","isH3":false,"content":"<p>我们可以移动桨，并将球反弹，但是如果球从屏幕的底部边缘反弹，那又有什么意义？我们来介绍丢失的可能性 - 也称为<a href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Game_over\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">游戏 (en-US)</a>逻辑。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Bounce_off_the_walls\" title=\"Currently only available in English (US)\">« 上一页 (en-US)</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Game_over\" title=\"Currently only available in English (US)\">下一页  » (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"渲染桨","id":"渲染桨"},{"text":"控制桨","id":"控制桨"},{"text":"定位球","id":"定位球"},{"text":"比较你的代码","id":"比较你的代码"},{"text":"下一步","id":"下一步"}],"summary":"这是Gamedev Phaser 教程 (en-US) 16 的第 7 步。您可以在Gamedev-Phaser-Content-Kit / demos / lesson07.html完成本课程后找到源代码。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Player paddle and controls","locale":"en-US","native":"English (US)"},{"title":"Платформа и управление","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/games/tutorials/2d_breakout_game_phaser/player_paddle_and_controls","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/games/tutorials/2d_breakout_game_phaser/player_paddle_and_controls/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Games","title":"游戏开发环境"},{"uri":"/zh-CN/docs/Games/Tutorials","title":"Tutorials"},{"uri":"/zh-CN/docs/Games/Tutorials/2D_breakout_game_Phaser","title":"使用 Phaser 开发 2D breakout game"},{"uri":"/zh-CN/docs/Games/Tutorials/2D_breakout_game_Phaser/Player_paddle_and_controls","title":"Player paddle and controls"}],"pageTitle":"Player paddle and controls - 游戏开发环境 | MDN","noIndexing":false}}