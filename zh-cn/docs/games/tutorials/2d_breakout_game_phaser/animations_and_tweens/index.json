{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Animations and tweens","mdn_url":"/zh-CN/docs/Games/Tutorials/2D_breakout_game_Phaser/Animations_and_tweens","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introduction</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Introduction\">Introduction</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Anatomy\">Anatomy</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>APIs for game development</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/zh-CN/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/zh-CN/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/zh-CN/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Techniques</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Async_scripts\">Using async scripts for asm.js</a></li>\n              <li><a href=\"/zh-CN/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimizing startup performance</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/WebRTC_data_channels\">Using WebRTC peer-to-peer data channels</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Efficient_animation_for_web_games\">Efficient animation for web games</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Audio_for_Web_Games\">Audio for Web Games</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/2D_collision_detection\">2D collision detection</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Tilemaps\">Tiles and tilemaps overview</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>3D games on the Web</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web\">3D games on the Web overview</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Explaining basic 3D theory</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Building up a basic demo with PlayCanvas</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Building up a basic demo with Three.js</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_collision_detection\">3D collision detection</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Bounding volume collision detection with THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutorials</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">2D breakout game using pure JavaScript</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Tutorials/2D_breakout_game_Phaser\">2D breakout game using Phaser</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">2D maze_game with device orientation</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publishing games</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games\">Publishing games overview</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games/Game_distribution\">Game distribution</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games/Game_promotion\">Game promotion</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games/Game_monetization\">Game monetization</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Extra_lives\" title=\"Currently only available in English (US)\">« 上一页 (en-US)</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Buttons\" title=\"Currently only available in English (US)\">下一页  » (en-US)</a></li>\n</ul>\n<p>这是<a href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Gamedev Phaser 教程 (en-US)</a> 16 的<strong>第 14 步</strong>。您可以在<a href=\"https://github.com/end3r/Gamedev-Phaser-Content-Kit/blob/gh-pages/demos/lesson14.html\" class=\"external\" rel=\" noopener\">Gamedev-Phaser-Content-Kit / demos / lesson14.html</a>完成本课程后找到源代码。</p>\n<p>为了使游戏看起来更加多汁和活泼，我们可以使用动画和补间。这将导致更好，更有趣的体验。让我们来探讨如何在游戏中实现 Phaser 动画和补间。</p>"}},{"type":"prose","value":{"id":"动画","title":"动画","isH3":false,"content":"<p>在 Phaser，动画中，涉及从外部来源获取 spritesheet 并依次显示 sprites。作为一个例子，当碰到一些东西时，我们会让球摇摆。</p>\n<p>首先，<a href=\"https://github.com/end3r/Gamedev-Phaser-Content-Kit/blob/gh-pages/demos/img/wobble.png\" class=\"external\" rel=\" noopener\">从 Github 抓取 spritesheet</a>并将其保存在您的<code>/img</code>目录中。</p>\n<p>接下来，我们将加载 spritesheet - 将以下行放在<code>preload()</code>函数的底部：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>game<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">spritesheet</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ball'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'img/wobble.png'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>而不是加载单个图像的球，我们可以加载整个 spritesheet - 不同图像的集合。我们将按顺序显示精灵，创造动画的幻觉。该<code>spritesheet()</code>方法的两个额外的表格确定给定 spritesheet 文件中每个单个框架的宽度和高度，指示程序如何切割以获取单个框架。</p>"}},{"type":"prose","value":{"id":"加载动画","title":"加载动画","isH3":false,"content":"<p>接下来，进入你的 create() 函数，找到加载球精灵的行，下面的调用<code>animations.add()</code>如下所示：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ball <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">sprite</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ball'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nball<span class=\"token punctuation\">.</span>animations<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wobble'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>要向对象添加动画，我们使用该<code>animations.add()</code>方法，其中包含以下参数</p>\n<ul>\n  <li>我们为动画选择的名称</li>\n  <li>一个数组，定义在动画过程中显示帧的顺序。如果您再次查看<code>wobble.png</code>图像，您会看到有三个框架。Phaser 提取它们并将它们存储在数组中 - 位置 0，1 和 2.上面的数组表示我们显示帧 0，然后是 1，然后是 0 等。</li>\n  <li>帧速率，以 fps 为单位。由于我们以 24fps 运行动画，有 9 帧，动画每秒将显示三次以下。</li>\n</ul>"}},{"type":"prose","value":{"id":"当球击中桨时应用动画","title":"当球击中桨时应用动画","isH3":false,"content":"<p>在<code>arcade.collide()</code>处理球和桨（第一行内部<code>update()</code>，见下文）之间的碰撞的方法调用中，我们可以添加一个额外的参数，该参数指定每次发生碰撞时执行的功能，与该<code>ballHitBrick()</code>功能相同。更新内部的第一行<code>update()</code>，如下所示：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>arcade<span class=\"token punctuation\">.</span><span class=\"token function\">collide</span><span class=\"token punctuation\">(</span>ball<span class=\"token punctuation\">,</span> paddle<span class=\"token punctuation\">,</span> ballHitPaddle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>arcade<span class=\"token punctuation\">.</span><span class=\"token function\">collide</span><span class=\"token punctuation\">(</span>ball<span class=\"token punctuation\">,</span> bricks<span class=\"token punctuation\">,</span> ballHitBrick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    paddle<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>x <span class=\"token operator\">||</span> game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>然后我们可以创建<code>ballHitPaddle()</code>函数（具有<code>ball</code>和<code>paddle</code>作为默认参数），在调用时播放摆动动画。在结束<code>&lt;/script&gt;</code>标签之前添加以下方法：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">ballHitPaddle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ball<span class=\"token punctuation\">,</span> paddle</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ball<span class=\"token punctuation\">.</span>animations<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wobble'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>每次球击中桨时都会播放动画。你也可以<code>animations.play()</code>在<code>ballHitBrick()</code>函数内添加调用，如果你觉得它会使游戏看起来更好。</p>"}},{"type":"prose","value":{"id":"补间","title":"补间","isH3":false,"content":"<p>而动画依次播放外部精灵，补间游戏中物体的属性平滑，如宽度或不透明度。</p>\n<p>让我们在游戏中增加一个补间，使砖块在被球击中时顺利消失。转到您的<code>ballhitBrick()</code>功能，找到您的<code>brick.kill();</code>行，并将其替换为以下内容：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> killTween <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">tween</span><span class=\"token punctuation\">(</span>brick<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nkillTween<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> Phaser<span class=\"token punctuation\">.</span>Easing<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nkillTween<span class=\"token punctuation\">.</span>onComplete<span class=\"token punctuation\">.</span><span class=\"token function\">addOnce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    brick<span class=\"token punctuation\">.</span><span class=\"token function\">kill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nkillTween<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>让我们来看看这里，看看这里发生了什么：</p>\n<ol>\n  <li>当定义一个新的补间时，你必须指定哪些属性将被补间 - 在我们的例子中，而不是在被球击中时立即隐藏砖块，我们将把它们的宽度和高度缩放到零，所以它们将很好地消失。最后，我们使用该<code>add.tween()</code>方法，指定<code>brick.scale</code>为参数，因为这是我们想要补间。</li>\n  <li>该<code>to()</code>方法定义补间结束时对象的状态。它需要一个包含所选参数的期望结束值的对象（比例取尺度值，1 为大小的 100％，0 为大小的 0％等），补间的时间（以毫秒为单位）以及使用的宽松类型补间。</li>\n  <li>我们还将添加可选的<code>onComplete</code>事件处理程序，该处理程序定义了在补间程序完成时要执行的函数。</li>\n  <li>最后一件事是立即开始补间<code>start()</code>。</li>\n</ol>\n<p>这是补间定义的扩展版本，但是我们也可以使用速记语法：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">tween</span><span class=\"token punctuation\">(</span>brick<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> Phaser<span class=\"token punctuation\">.</span>Easing<span class=\"token punctuation\">.</span>Elastic<span class=\"token punctuation\">.</span>Out<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>这个补间将使用弹性宽松在半秒内将砖的比例翻倍，将自动启动，延迟 100 毫秒。</p>"}},{"type":"prose","value":{"id":"比较你的代码","title":"比较你的代码","isH3":false,"content":"<p>您可以在下面的现场演示中查看本课程的完成代码，并使用它来更好地了解它的工作原理：</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"400\" src=\"https://jsfiddle.net/end3r/9o4pakrb/embedded/\" loading=\"lazy\"></iframe></p>"}},{"type":"prose","value":{"id":"下一步","title":"下一步","isH3":false,"content":"<p>动画和 tweens 看起来很不错，但我们可以添加更多的我们的游戏 - 在下一节我们将看看处理<a href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Buttons\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">按钮 (en-US)</a>输入。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Extra_lives\" title=\"Currently only available in English (US)\">« 上一页 (en-US)</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Buttons\" title=\"Currently only available in English (US)\">下一页  » (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"动画","id":"动画"},{"text":"加载动画","id":"加载动画"},{"text":"当球击中桨时应用动画","id":"当球击中桨时应用动画"},{"text":"补间","id":"补间"},{"text":"比较你的代码","id":"比较你的代码"},{"text":"下一步","id":"下一步"}],"summary":"这是Gamedev Phaser 教程 (en-US) 16 的第 14 步。您可以在Gamedev-Phaser-Content-Kit / demos / lesson14.html完成本课程后找到源代码。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Animations and tweens","locale":"en-US","native":"English (US)"},{"title":"Animaciones e interpolaciones","locale":"es","native":"Español"}],"source":{"folder":"zh-cn/games/tutorials/2d_breakout_game_phaser/animations_and_tweens","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/games/tutorials/2d_breakout_game_phaser/animations_and_tweens/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Games","title":"游戏开发环境"},{"uri":"/zh-CN/docs/Games/Tutorials","title":"Tutorials"},{"uri":"/zh-CN/docs/Games/Tutorials/2D_breakout_game_Phaser","title":"使用 Phaser 开发 2D breakout game"},{"uri":"/zh-CN/docs/Games/Tutorials/2D_breakout_game_Phaser/Animations_and_tweens","title":"Animations and tweens"}],"pageTitle":"Animations and tweens - 游戏开发环境 | MDN","noIndexing":false}}