{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Collision detection","mdn_url":"/zh-CN/docs/Games/Tutorials/2D_breakout_game_Phaser/Collision_detection","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introduction</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Introduction\">Introduction</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Anatomy\">Anatomy</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>APIs for game development</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/zh-CN/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/zh-CN/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/zh-CN/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/zh-CN/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Techniques</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Async_scripts\">Using async scripts for asm.js</a></li>\n              <li><a href=\"/zh-CN/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimizing startup performance</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/WebRTC_data_channels\">Using WebRTC peer-to-peer data channels</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Efficient_animation_for_web_games\">Efficient animation for web games</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Audio_for_Web_Games\">Audio for Web Games</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/2D_collision_detection\">2D collision detection</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Tilemaps\">Tiles and tilemaps overview</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>3D games on the Web</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web\">3D games on the Web overview</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Explaining basic 3D theory</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Building up a basic demo with PlayCanvas</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Building up a basic demo with Three.js</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_collision_detection\">3D collision detection</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Bounding volume collision detection with THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutorials</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">2D breakout game using pure JavaScript</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Tutorials/2D_breakout_game_Phaser\">2D breakout game using Phaser</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">2D maze_game with device orientation</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publishing games</summary>\n            <ol>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games\">Publishing games overview</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games/Game_distribution\">Game distribution</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games/Game_promotion\">Game promotion</a></li>\n              <li><a href=\"/zh-CN/docs/Games/Publishing_games/Game_monetization\">Game monetization</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Build_the_brick_field\" title=\"Currently only available in English (US)\">« 上一页 (en-US)</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/The_score\" title=\"Currently only available in English (US)\">下一页  » (en-US)</a></li>\n</ul>\n<p>这是<a href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Gamedev Phaser 教程 (en-US)</a> 16 的<strong>第 10 步</strong>。您可以在<a href=\"https://github.com/end3r/Gamedev-Phaser-Content-Kit/blob/gh-pages/demos/lesson10.html\" class=\"external\" rel=\" noopener\">Gamedev-Phaser-Content-Kit / demos / lesson10.html</a>完成本课程后找到源代码。</p>\n<p>现在接下来的挑战 - 球和砖块之间的碰撞检测。幸运的是，我们可以使用物理引擎来检查单个对象（如球和桨）之间的碰撞，也可以检测对象和组之间的碰撞。</p>"}},{"type":"prose","value":{"id":"砖球碰撞检测","title":"砖/球碰撞检测","isH3":false,"content":"<p>物理引擎使一切都变得更容易 - 我们只需要添加两个简单的代码。首先，在你的<code>update()</code>函数中添加一行，检查球和砖之间的碰撞检测，如下所示：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>arcade<span class=\"token punctuation\">.</span><span class=\"token function\">collide</span><span class=\"token punctuation\">(</span>ball<span class=\"token punctuation\">,</span> paddle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>arcade<span class=\"token punctuation\">.</span><span class=\"token function\">collide</span><span class=\"token punctuation\">(</span>ball<span class=\"token punctuation\">,</span> bricks<span class=\"token punctuation\">,</span> ballHitBrick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    paddle<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>x <span class=\"token operator\">||</span> game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>球的位置是根据组中所有砖的位置计算的。第三个可选参数是发生冲突时执行的功能<code>ballHitBrick()</code>。创建这个新功能作为代码的底部，就在结束<code>&lt;/script&gt;</code>标签之前，如下所示：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">ballHitBrick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ball<span class=\"token punctuation\">,</span> brick</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    brick<span class=\"token punctuation\">.</span><span class=\"token function\">kill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>就是这样！重新加载你的代码，你应该看到新的碰撞检测工作正常。</p>\n<p>感谢 Phaser，有两个参数传递给函数 - 第一个是球，我们在碰撞方法中明确定义，第二个是球碰撞的砖组中的单个砖。在功能内部，我们从屏幕上删除所讨论的砖块，只需运行其<code>kill()</code>上的方法即可。</p>\n<p>您将期望在使用<a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">纯 JavaScript (en-US)</a>时编写更多自己的计算机来实现碰撞检测。这是使用框架的好处 - 您可以为 Phaser 留下大量无聊的代码，并专注于制作游戏中最有趣和最有趣的部分。</p>"}},{"type":"prose","value":{"id":"比较你的代码","title":"比较你的代码","isH3":false,"content":"<p>您可以在下面的现场演示中查看本课程的完成代码，并使用它来更好地了解它的工作原理：</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"400\" src=\"https://jsfiddle.net/end3r/wwneakwf/embedded/\" loading=\"lazy\"></iframe></p>"}},{"type":"prose","value":{"id":"下一步","title":"下一步","isH3":false,"content":"<p>我们可以打砖块并删除它们，这已经是游戏的一个很好的补充。结果，更好地计算被毁砖增加<a href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/The_score\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">得分 (en-US)</a>。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Build_the_brick_field\" title=\"Currently only available in English (US)\">« 上一页 (en-US)</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/The_score\" title=\"Currently only available in English (US)\">下一页  » (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"砖/球碰撞检测","id":"砖球碰撞检测"},{"text":"比较你的代码","id":"比较你的代码"},{"text":"下一步","id":"下一步"}],"summary":"这是Gamedev Phaser 教程 (en-US) 16 的第 10 步。您可以在Gamedev-Phaser-Content-Kit / demos / lesson10.html完成本课程后找到源代码。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Collision detection","locale":"en-US","native":"English (US)"},{"title":"Collision detection","locale":"es","native":"Español"},{"title":"Обработка коллизий","locale":"ru","native":"Русский"}],"source":{"folder":"zh-cn/games/tutorials/2d_breakout_game_phaser/collision_detection","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-cn/games/tutorials/2d_breakout_game_phaser/collision_detection/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-CN/docs/Games","title":"游戏开发环境"},{"uri":"/zh-CN/docs/Games/Tutorials","title":"Tutorials"},{"uri":"/zh-CN/docs/Games/Tutorials/2D_breakout_game_Phaser","title":"使用 Phaser 开发 2D breakout game"},{"uri":"/zh-CN/docs/Games/Tutorials/2D_breakout_game_Phaser/Collision_detection","title":"Collision detection"}],"pageTitle":"Collision detection - 游戏开发环境 | MDN","noIndexing":false}}